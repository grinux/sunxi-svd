<?xml version="1.0" encoding="utf-8"?><device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.3" xsi:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>Allwinner</vendor>
  <vendorID>sunxi</vendorID>
  <name>H6</name>
  <series>H6</series>
  <version>0.1</version>
  <description>H6</description>
  <licenseText>questionable</licenseText>
  <cpu>
    <name>CA53</name>
    <revision>0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>0</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>64</width>
  <size>32</size>
  <access>read-write</access>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>CCU</name>
      <description>CCU</description>
      <groupName>generic</groupName>
      <baseAddress>0x3001000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AHB3_CFG_REG</name>
          <description>AHB3 Configuration Register</description>
          <addressOffset>0x51C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000303</resetMask>
          <fields>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: CCU_32K 
10: PSI 
11: PLL_PERI0(1X) AHB3 CLK = Clock Source/M/N. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCU_32K</name>
                  <description>CCU_32K</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PSI</name>
                  <description>PSI</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X) AHB3 CLK = Clock Source/M/N.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB1_CFG_REG</name>
          <description>APB1 Configuration Register</description>
          <addressOffset>0x520</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000303</resetMask>
          <fields>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: CCU_32K 
10: PSI 
11: PLL_PERI0(1X) APB1 CLK = Clock Source/M/N. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCU_32K</name>
                  <description>CCU_32K</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PSI</name>
                  <description>PSI</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X) APB1 CLK = Clock Source/M/N.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>APB2_CFG_REG</name>
          <description>APB2 Configuration Register</description>
          <addressOffset>0x524</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000303</resetMask>
          <fields>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: CCU_32K 
10: PSI 
11: PLL_PERI0(1X) APB2 CLK = Clock Source/M/N. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCU_32K</name>
                  <description>CCU_32K</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PSI</name>
                  <description>PSI</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X) APB2 CLK = Clock Source/M/N.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUDIO_HUB_BGR_REG</name>
          <description>AUDIO_HUB Bus Gating Reset Register</description>
          <addressOffset>0xA6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>AUDIO_HUB_RST</name>
              <description>AUDIO_HUB Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUDIO_HUB_GATING</name>
              <description>Gating Clock For AUDIO_HUB 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AUDIO_HUB_CLK_REG</name>
          <description>AUDIO_HUB_CLK_REG</description>
          <addressOffset>0xA60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000300</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_AUDIO 
01: PLL_AUDIO(2X) 
10: PLL_AUDIO(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CLK_REG</name>
          <description>AVS Clock Register</description>
          <addressOffset>0x740</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCU_SEC_SWITCH_REG</name>
          <description>CCU Security Switch Register</description>
          <addressOffset>0xF00</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>MBUS_SEC</name>
              <description>MBUS clock register security. 
0: Secure 
1: Non-secure </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_SEC</name>
              <description>Bus relevant registers' security. 
0: Secure 
1: Non-secure </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SEC</name>
              <description>PLL relevant registers' security. 
0: Secure 
1: Non-secure </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_BGR_REG</name>
          <description>CE Bus Gating Reset Register</description>
          <addressOffset>0x68C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>CE_RST</name>
              <description>CE Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_GATING</name>
              <description>Gating Clock For CE 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CLK_REG</name>
          <description>CE Clock Register</description>
          <addressOffset>0x680</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8100030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: OSC24M 
1: PLL_PERI0(2X) </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 16 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIRTX_BGR_REG</name>
          <description>CIRTX_BGR_REG</description>
          <addressOffset>0x9CC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>CIRTX_RST</name>
              <description>CIRTX Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIRTX_GATING</name>
              <description>Gating Clock For CIRTX 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIRTX_CLK_REG</name>
          <description>CIRTX_CLK_REG</description>
          <addressOffset>0x9C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8100030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: CCU_32K 
1: OSC24M </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CCU_32K</name>
                  <description>CCU_32K</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUX_AXI_CFG_REG</name>
          <description>CPUX_AXI Configuration Register</description>
          <addressOffset>0x500</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3000303</resetMask>
          <fields>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: CCU_32K 
10: RC16M 
11: PLL_CPUX CPUX Clock = Clock Source CPUX_AXI Clock = Clock Source/M CPUX _APB Clock = Clock Source/N </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCU_32K</name>
                  <description>CCU_32K</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RC16M</name>
                  <description>RC16M</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_CPUX</name>
                  <description>PLL_CPUX CPUX Clock = Clock Source CPUX_AXI Clock = Clock Source/M CPUX _APB Clock = Clock Source/N</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPUX</name>
              <description>_APB_FACTOR_N. Factor N.(N = FACTOR_N +1)  The range is from 1 to 4 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_MST_CLK_REG</name>
          <description>CSI0_MST_CLK_REG</description>
          <addressOffset>0xC08</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700001F</resetMask>
          <fields>
            <field>
              <name>MCLK0_GATING</name>
              <description>Gating CSI Master Clock0,this clock output to external device. 
0: Clock is OFF 
1: Clock is ON MCLK0 = Clock Source/M </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON MCLK0 = Clock Source/M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_VIDEO0(1X) 
010: PLL_PERI0(1X) 
011: PLL_PERI1(1X) Others:/ </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI1(1X) Others:/</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 31 </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_BGR_REG</name>
          <description>CSI Bus Gating Reset Register</description>
          <addressOffset>0xC2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>CSI_RST</name>
              <description>CSI Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_GATING</name>
              <description>Gating Clock For CSI 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_MISC_CLK_REG</name>
          <description>CSI MISC Clock Register</description>
          <addressOffset>0xC00</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CSI_CCI_CLK_GATING</name>
              <description>Gating CCI Special Clock,Clock source is OSC24M 
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_TOP_CLK_REG</name>
          <description>CSI TOP Clock Register</description>
          <addressOffset>0xC04</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 000:PLL_VIDEO0(1X) 001:/ 010:PLL_VE 011:PLL_PERI0(1X) Others:/ </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBGSYS_BGR_REG</name>
          <description>DBGSYS Bus Gating Reset Register</description>
          <addressOffset>0x78C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>DBGSYS_RST</name>
              <description>DBGSYS Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBGSYS_GATING</name>
              <description>Gating Clock For DBGSYS 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DE_BGR_REG</name>
          <description>DE Bus Gating Reset Register</description>
          <addressOffset>0x60C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>DE_RST</name>
              <description>DE Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DE_GATING</name>
              <description>Gating Clock For DE 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DE_CLK_REG</name>
          <description>DE Clock Register</description>
          <addressOffset>0x600</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8100000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: PLL_DE 
1: PLL_PERI0(2X) </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 16 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DISPLAY_IF_TOP_BGR_REG</name>
          <description>DISPLAY_IF_TOP Bus Gating Reset Register</description>
          <addressOffset>0xB5C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>DISPLAY_IF_TOP_RST</name>
              <description>DISPLAY_IF_TOP Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DISPLAY_IF_TOP_GATING</name>
              <description>Gating Clock For DISPLAY_IF_TOP 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DI_BGR_REG</name>
          <description>DI Bus Gating Reset Register</description>
          <addressOffset>0x62C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>DI_RST</name>
              <description>DI Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DI_GATING</name>
              <description>Gating Clock For DI 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DI_CLK_REG</name>
          <description>DI Clock Register</description>
          <addressOffset>0x620</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8100000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: PLL_PERI0(1X) 
1: PLL_PERI1(1X) </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI1(1X)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 16 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_BGR_REG</name>
          <description>DMA Bus Gating Reset Register</description>
          <addressOffset>0x70C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_GATING</name>
              <description>Gating Clock For DMA 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_BGR_REG</name>
          <description>DMIC Bus Gating Reset Register</description>
          <addressOffset>0xA4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>DMIC_RST</name>
              <description>DMIC Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_GATING</name>
              <description>Gating Clock For DMIC 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_CLK_REG</name>
          <description>DMIC Clock Register</description>
          <addressOffset>0xA40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000300</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_AUDIO 
01: PLL_AUDIO(2X) 
10: PLL_AUDIO(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_BGR_REG</name>
          <description>DRAM Bus Gating Reset Register</description>
          <addressOffset>0x80C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>DRAM_RST</name>
              <description>DRAM Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_GATING</name>
              <description>Gating Clock For DRAM 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_CLK_REG</name>
          <description>DRAM Clock Register</description>
          <addressOffset>0x800</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x4B000003</resetMask>
          <fields>
            <field>
              <name>MODULE_RST</name>
              <description>Module Reset 
0: Assert 
1: De-assert SCLK = Clock Source/M. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert SCLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRCLK_UPD</name>
              <description>SDRCLK Configuration 0 update.  0:Invalid 1:Valid Setting this bit will validate Configuration 0. It will be auto cleared after the Configuration 0 is valid. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_DDR0 Others: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0 Others: /</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_BGR_REG</name>
          <description>EMAC Bus Gating Reset Register</description>
          <addressOffset>0x97C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>EMAC_RST</name>
              <description>EMAC Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_GATING</name>
              <description>Gating Clock For EMAC 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_BGR_REG</name>
          <description>EMCE_BGR_REG</description>
          <addressOffset>0x6BC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>EMCE_RST</name>
              <description>EMCE Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_GATING</name>
              <description>Gating Clock For EMCE 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_CLK_REG</name>
          <description>EMCE Clock Register</description>
          <addressOffset>0x6B0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8100030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: OSC24M 
1: PLL_PERI0(2X) </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: /1 
01: /2 
10: /4 
11: /8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPU_BGR_REG</name>
          <description>GPU Bus Gating Reset Register</description>
          <addressOffset>0x67C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>GPU_RST</name>
              <description>GPU Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPU_GATING</name>
              <description>Gating Clock For GPU 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPU_CLK_REG</name>
          <description>GPU Clock Register</description>
          <addressOffset>0x670</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81000007</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: PLL_GPU 
1: / </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_GPU</name>
                  <description>PLL_GPU</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 8 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_BGR_REG</name>
          <description>HDMI Bus Gating Reset Register</description>
          <addressOffset>0xB1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30001</resetMask>
          <fields>
            <field>
              <name>HDMI_SUB_RST</name>
              <description>HDMI_SUB Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI_MAIN_RST</name>
              <description>HDMI_MAIN Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI_GATING</name>
              <description>Gating Clock For HDMI 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_CEC_CLK_REG</name>
          <description>HDMI CEC Clock Register</description>
          <addressOffset>0xB10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: CCU_32K 
1: PLL_PERI0(2X)/36621 =32.769kHz </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_CLK_REG</name>
          <description>HDMI_CLK_REG</description>
          <addressOffset>0xB00</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_VIDEO0(1X) 
01: PLL_VIDEO1(1X) 
10: PLL_VIDEO1(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_4X_closingparen_</name>
                  <description>PLL_VIDEO1(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_HDCP_BGR_REG</name>
          <description>HDMI_HDCP_BGR_REG</description>
          <addressOffset>0xC4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>HDMI_HDCP_RST</name>
              <description>HDMI_HDCP Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI_HDCP_GATING</name>
              <description>Gating Clock For HDMI_HDCP 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_HDCP_CLK_REG</name>
          <description>HDMI HDCP Clock Register</description>
          <addressOffset>0xC40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_PERI0(1X) 
01: PLL_PERI1(1X) Others:/ </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI1(1X) Others:/</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_SLOW_CLK_REG</name>
          <description>HDMI Slow Clock Register</description>
          <addressOffset>0xB04</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HSTIMER_BGR_REG</name>
          <description>HSTimer Bus Gating Reset Register</description>
          <addressOffset>0x73C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>HSTIMER_RST</name>
              <description>HSTIMER Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSTIMER_GATING</name>
              <description>Gating Clock For HSTIMER 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM0_CLK_REG</name>
          <description>I2S_PCM0_CLK_REG</description>
          <addressOffset>0xA10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000300</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_AUDIO 
01: PLL_AUDIO(2X) 
10: PLL_AUDIO(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM1_CLK_REG</name>
          <description>I2S_PCM1_CLK_REG</description>
          <addressOffset>0xA14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000300</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_AUDIO 
01: PLL_AUDIO(2X) 
10: PLL_AUDIO(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM2_CLK_REG</name>
          <description>I2S_PCM2_CLK_REG</description>
          <addressOffset>0xA18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000300</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_AUDIO 
01: PLL_AUDIO(2X) 
10: PLL_AUDIO(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM3_CLK_REG</name>
          <description>I2S_PCM3_CLK_REG</description>
          <addressOffset>0xA0C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000300</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_AUDIO 
01: PLL_AUDIO(2X) 
10: PLL_AUDIO(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_BGR_REG</name>
          <description>I2S_PCM_BGR_REG</description>
          <addressOffset>0xA1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>I2S/PCM3_RST</name>
              <description>I2S/PCM3 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM2_RST</name>
              <description>I2S/PCM2 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM1_RST</name>
              <description>I2S/PCM1 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM0_RST</name>
              <description>I2S/PCM0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM3_GATING</name>
              <description>Gating Clock For I2S/PCM3 
0: Mask 
1: Pass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM2_GATING</name>
              <description>Gating Clock For I2S/PCM2 
0: Mask 
1: Pass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM1_GATING</name>
              <description>Gating Clock For I2S/PCM1 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM0_GATING</name>
              <description>Gating Clock For I2S/PCM0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_BGR_REG</name>
          <description>IOMMU Bus Gating Reset Register</description>
          <addressOffset>0x7BC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>IOMMU_GATING</name>
              <description>Gating Clock For IOMMU 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_CFG_REG</name>
          <description>MBUS Configuration Register</description>
          <addressOffset>0x540</addressOffset>
          <resetValue>0xC0000000</resetValue>
          <resetMask>0xC3000007</resetMask>
          <fields>
            <field>
              <name>CLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON MBUS CLK = Clock Source/M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON MBUS CLK = Clock Source/M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBUS_RST</name>
              <description>MBUS Reset 
0: Assert 
1: De-assert </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERI0(2X) 
10: PLL_DDR0 
11: PLL_PERI0(4X) </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_4X_closingparen_</name>
                  <description>PLL_PERI0(4X)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 8 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_MAT_CLK_GATING_REG</name>
          <description>MBUS_MAT_CLK_GATING_REG</description>
          <addressOffset>0x804</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x92F</resetMask>
          <fields>
            <field>
              <name>DI_MCLK_GATING</name>
              <description>Gating MBUS Clock For DE_Interlace 
0: Mask 
1: Pass </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_MCLK_GATING</name>
              <description>Gating MBUS Clock For CSI 
0: Mask 
1: Pass </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_MCLK_GATING</name>
              <description>Gating MBUS Clock For NAND 
0: Mask 
1: Pass </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TS_MCLK_GATING</name>
              <description>Gating MBUS Clock For TS 
0: Mask 
1: Pass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_MCLK_GATING</name>
              <description>Gating MBUS Clock For CE 
0: Mask 
1: Pass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_MCLK_GATING</name>
              <description>Gating MBUS Clock For VE 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_MCLK_GATING</name>
              <description>Gating MBUS Clock For DMA 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MSGBOX_BGR_REG</name>
          <description>MessageBox Bus Gating Reset Register</description>
          <addressOffset>0x71C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>MSGBOX_RST</name>
              <description>MSGBOX Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSGBOX_GATING</name>
              <description>Gating Clock For MSGBOX 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NAND_0_CLK_REG</name>
          <description>NAND0 Clock Register</description>
          <addressOffset>0x810</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_PERI0(1X) 
010: PLL_PERI1(1X) 
011: PLL_PERI0(2X) 
100: PLL_PERI1(2X) 1XX:/ </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI1(1X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI1(2X) 1XX:/</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NAND_1_CLK_REG</name>
          <description>NAND1 Clock Register</description>
          <addressOffset>0x814</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_PERI0(1X) 
010: PLL_PERI1(1X) 
011: PLL_PERI0(2X) 
100: PLL_PERI1(2X) 1XX:/ </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI1(1X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI1(2X) 1XX:/</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NAND_BGR_REG</name>
          <description>NAND Bus Gating Reset Register</description>
          <addressOffset>0x82C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>NAND_RST</name>
              <description>NAND Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_GATING</name>
              <description>Gating Clock For NAND 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_BGR_REG</name>
          <description>OWA Bus Gating Reset Register</description>
          <addressOffset>0xA2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>OWA_RST</name>
              <description>OWA Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OWA_GATING</name>
              <description>Gating Clock For OWA 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_CLK_REG</name>
          <description>OWA Clock Register</description>
          <addressOffset>0xA20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000300</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: PLL_AUDIO 
01: PLL_AUDIO(2X) 
10: PLL_AUDIO(4X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PCIE_AUX_CLK_REG</name>
          <description>PCIE AUX Clock Register</description>
          <addressOffset>0xAB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000001F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. Clock Source is OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M. Clock Source is OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 31 </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCIE_BGR_REG</name>
          <description>PCIE_BGR_REG</description>
          <addressOffset>0xABC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30001</resetMask>
          <fields>
            <field>
              <name>PCIE_POWERUP_RST</name>
              <description>PCIE Power up Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE_P_RST</name>
              <description>PCIE P Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE</name>
              <description>_GATING. Gating Clock For PCIE 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PCIE_MAXI_CLK_REG</name>
          <description>PCIE_MAXI_CLK_REG</description>
          <addressOffset>0xAB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M. Clock Source is PLL_PERI0(1X). </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M. Clock Source is PLL_PERI0(1X).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PCIE_REF_CLK_REG</name>
          <description>PCIE REF Clock Register</description>
          <addressOffset>0xAB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source. PLL_PERI0(4X) dividing frequency can get REFCLK_100M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source. PLL_PERI0(4X) dividing frequency can get REFCLK_100M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PAD_CLK_OUTPUT_GATING</name>
              <description>Pad Clock Output Gating 
0: Clock Output is OFF 
1: Clock Output is ON </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock Output is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock Output is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_BIAS_REG</name>
          <description>PLL_AUDIO Bias Register</description>
          <addressOffset>0x378</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_CTRL_REG</name>
          <description>PLL_AUDIO Control Register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x142A01</resetValue>
          <resetMask>0xB13FFF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. This PLL is for Audio. The PLL_AUDIO = 24MHz*N/(Input_div+1)/(Output_div+1)/(P+1). PLL_AUDIO(4X) = 24MHz*N/(Input_div+1)/2 PLL_AUDIO is 24.5714 MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. This PLL is for Audio. The PLL_AUDIO = 24MHz*N/(Input_div+1)/(Output_div+1)/(P+1). PLL_AUDIO(4X) = 24MHz*N/(Input_div+1)/2 PLL_AUDIO is 24.5714 MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_POST_DIV_P</name>
              <description>PLL Post-div P. P= PLL_POST_DIV_P +1 PLL_POST_DIV_P is from 0 to 63.  </description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_PAT0_CTRL_REG</name>
          <description>PLL_AUDIO_PAT0_CTRL_REG</description>
          <addressOffset>0x178</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_PAT1_CTRL_REG</name>
          <description>PLL_AUDIO_PAT1_CTRL_REG</description>
          <addressOffset>0x17C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_BIAS_REG</name>
          <description>PLL_CPUX Bias Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x80030000</resetValue>
          <resetMask>0x801F0000</resetMask>
          <fields>
            <field>
              <name>VCO_RST</name>
              <description>VCO reset in. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CURRENT</name>
              <description>PLL current bias control [4:0], CPU_CP. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_CTRL_REG</name>
          <description>PLL_CPUX Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x2001000</resetValue>
          <resetMask>0xB703FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_CPUX= 24MHz*N/P. NOTE The PLL_CPUX output clock must be in the range of 200MHz~3GHz. Its default value is 408MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_CPUX= 24MHz*N/P. NOTE The PLL_CPUX output clock must be in the range of 200MHz~3GHz. Its default value is 408MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_LOCK_TIME</name>
              <description>PLL Lock Time. This bit is a stepping range from a frequency to another frequency,it can adjust the speed of clock changing.  </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUT_EXT_DIVP</name>
              <description>PLL Output External Divider P. 
00: 1 
01: 2 
10: 4 
11: / When output clock is less than 288MHz,clock frequency is outputted by dividing P. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/ When output clock is less than 288MHz,clock frequency is outputted by dividing P.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M  M = PLL_FACTOR_M + 1  PLL_FACTOR_M is from 0 to 3. M is only used for backdoor testing.  </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_TUN_REG</name>
          <description>PLL_CPUX Tunning Register</description>
          <addressOffset>0x400</addressOffset>
          <resetValue>0x44404000</resetValue>
          <resetMask>0x777FFFFF</resetMask>
          <fields>
            <field>
              <name>VCO_RNG_CTRL</name>
              <description>VCO range control [2:0]. </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KVCO_GAIN_CTRL</name>
              <description>KVCO gain control [2:0]. </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_INIT_CTRL</name>
              <description>Counter initial control [6:0]. </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD0</name>
              <description>C-REG-OD0 for verify. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_IN</name>
              <description>C-B-IN [6:0] for verify. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD1</name>
              <description>C-REG-OD1 for verify. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_OUT</name>
              <description>C-B-OUT [6:0] for verify. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_BIAS_REG</name>
          <description>PLL_DDR0 Bias Register</description>
          <addressOffset>0x310</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_CTRL_REG</name>
          <description>PLL_DDR0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x2301</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_DDR0 = 24MHz*N/M0/M1. PLL_DDR0 is 432MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_DDR0 = 24MHz*N/M0/M1. PLL_DDR0 is 432MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_PAT_CTRL_REG</name>
          <description>PLL_DDR0_PAT_CTRL_REG</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz When PLL_INPUT_DIV_M1 is 1,this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz When PLL_INPUT_DIV_M1 is 1,this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_BIAS_REG</name>
          <description>PLL_DE Bias Register</description>
          <addressOffset>0x360</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_CTRL_REG</name>
          <description>PLL_DE Control Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x2301</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_DE = 24MHz*N/M0/M1. PLL_DE is 432MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_DE = 24MHz*N/M0/M1. PLL_DE is 432MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_PAT0_CTRL_REG</name>
          <description>PLL_DE_PAT0_CTRL_REG</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_PAT1_CTRL_REG</name>
          <description>PLL_DE_PAT1_CTRL_REG</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU0_PAT_CTRL_REG</name>
          <description>PLL_GPU0_PAT_CTRL_REG</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz When PLL_INPUT_DIV_M1 is 1,this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz When PLL_INPUT_DIV_M1 is 1,this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_BIAS_REG</name>
          <description>PLL_GPU Bias Register</description>
          <addressOffset>0x330</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_CTRL_REG</name>
          <description>PLL_GPU Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x2301</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_GPU = 24MHz*N/M0/M1. PLL_GPU is 432MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_GPU = 24MHz*N/M0/M1. PLL_GPU is 432MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_PAT1_CTRL_REG</name>
          <description>PLL_GPU_PAT1_CTRL_REG</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_HSIC_BIAS_REG</name>
          <description>PLL_HSIC Bias Register</description>
          <addressOffset>0x370</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_HSIC_CTRL_REG</name>
          <description>PLL_HSIC Control Register</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x2701</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_HSIC = 24MHz*N/M0/M1. PLL_HSCI is 480MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_HSIC = 24MHz*N/M0/M1. PLL_HSCI is 480MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_HSIC_PAT0_CTRL_REG</name>
          <description>PLL_HSIC_PAT0_CTRL_REG</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_HSIC_PAT1_CTRL_REG</name>
          <description>PLL_HSIC_PAT1_CTRL_REG</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_LOCK_DBG_CTRL_REG</name>
          <description>PLL Lock Debug Control Register</description>
          <addressOffset>0xF04</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81F70000</resetMask>
          <fields>
            <field>
              <name>DBG_EN</name>
              <description>Debug Enable 
0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBG_SEL</name>
              <description>Debug Select 
00000: PLL_CPUX 
00001: / 
00010: PLL_DDR0 00011:/ 
00100: PLL_PERI0(2X) 
00101: PLL_PERI1(2X) 00110:PLL_GPU 00111:/ 
01000: PLL_VIDEO0(4X) 
01001: PLL_VIDEO1(4X) 
01010: / 
01011: PLL_VE 
01100: PLL_DE 
01101: / 
01110: PLL_HSIC 
01111: PLL_AUDIO Others: / </description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_CPUX</name>
                  <description>PLL_CPUX</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0 00011:/</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b00100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI1(2X) 00110:PLL_GPU 00111:/</description>
                  <value>0b00101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_4X_closingparen_</name>
                  <description>PLL_VIDEO0(4X)</description>
                  <value>0b01000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_4X_closingparen_</name>
                  <description>PLL_VIDEO1(4X)</description>
                  <value>0b01001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VE</name>
                  <description>PLL_VE</description>
                  <value>0b01011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE</description>
                  <value>0b01100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_HSIC</name>
                  <description>PLL_HSIC</description>
                  <value>0b01110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO Others: /</description>
                  <value>0b01111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_LEVEL</name>
              <description>Unlock Level  
00: 21-29 Clock Cycles 
01: 22-28 Clock Cycles 
1X: 20-30 Clock Cycles </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_21_minus_29</name>
                  <description>21-29 Clock Cycles</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_minus_28</name>
                  <description>22-28 Clock Cycles</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_minus_30</name>
                  <description>20-30 Clock Cycles</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_LEVEL</name>
              <description>Lock Level  
0: 24-26 Clock Cycles 
1: 23-27 Clock Cycles </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24_minus_26</name>
                  <description>24-26 Clock Cycles</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_23_minus_27</name>
                  <description>23-27 Clock Cycles</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERI0_BIAS_REG</name>
          <description>PLL_PERI0 Bias Register</description>
          <addressOffset>0x320</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERI0_CTRL_REG</name>
          <description>PLL_PERI0 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x6300</resetValue>
          <resetMask>0xB000FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_PERI0(4X) = 24MHz*N/M0/M1. The PLL_PERI0(2X) = (24MHz*N/M0/M1)/2. The PLL_PERI0(1X) = (24MHz*N/M0/M1)/4. PLL_PERI0(4X) is 2.4GHz by default. PLL_PERI0(4X) output clock should be 2.4GHz. It is not suggested to change this parameter. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_PERI0(4X) = 24MHz*N/M0/M1. The PLL_PERI0(2X) = (24MHz*N/M0/M1)/2. The PLL_PERI0(1X) = (24MHz*N/M0/M1)/4. PLL_PERI0(4X) is 2.4GHz by default. PLL_PERI0(4X) output clock should be 2.4GHz. It is not suggested to change this parameter.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERI1_BIAS_REG</name>
          <description>PLL_PERI1 Bias Register</description>
          <addressOffset>0x328</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERI1_CTRL_REG</name>
          <description>PLL_PERI1 Control Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x6300</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_PERI1(4X) = 24MHz*N/M0/M1. The PLL_PERI1(2X) = (24MHz*N/M0/M1)/2. The PLL_PERI1(1X) = (24MHz*N/M0/M1)/4. PLL_PERI1(4X) is 2.4GHz by default. PLL_PERI1(4X) output clock should be 2.4GHz. It is not suggested to change this parameter. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_PERI1(4X) = 24MHz*N/M0/M1. The PLL_PERI1(2X) = (24MHz*N/M0/M1)/2. The PLL_PERI1(1X) = (24MHz*N/M0/M1)/4. PLL_PERI1(4X) is 2.4GHz by default. PLL_PERI1(4X) output clock should be 2.4GHz. It is not suggested to change this parameter.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERI1_PAT0_CTRL_REG</name>
          <description>PLL_PERI1_PAT0_CTRL_REG</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz When PLL_INPUT_DIV_M1 is 1,this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz When PLL_INPUT_DIV_M1 is 1,this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERI1_PAT1_CTRL_REG</name>
          <description>PLL_PERI1_PAT1_CTRL_REG</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_BIAS_REG</name>
          <description>PLL_VE Bias Register</description>
          <addressOffset>0x358</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_CTRL_REG</name>
          <description>PLL_VE Control Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x2301</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. The PLL_VE = 24MHz*N/M0/M1. PLL_VE is 432MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_VE = 24MHz*N/M0/M1. PLL_VE is 432MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M1</name>
              <description>PLL Input Div M1.  M1=PLL_INPUT_DIV_M1 + 1 PLL_INPUT_DIV_M1 is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_M0</name>
              <description>PLL Output Div M0.  M0=PLL_OUTPUT_DIV_M0 + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_PAT0_CTRL_REG</name>
          <description>PLL_VE_PAT0_CTRL_REG</description>
          <addressOffset>0x158</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular(1bit) 
11: Triangular(nbit) </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular_openingparen_1bit_closingparen_</name>
                  <description>Triangular(1bit)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular_openingparen_nbit_closingparen_</name>
                  <description>Triangular(nbit)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_PAT1_CTRL_REG</name>
          <description>PLL_VE_PAT1_CTRL_REG</description>
          <addressOffset>0x15C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_BIAS_REG</name>
          <description>PLL_VIDEO0 Bias Register</description>
          <addressOffset>0x340</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_CTRL_REG</name>
          <description>PLL_VIDEO0 Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x6203</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. For application, PLL_VIDEO0(4X)= 24MHz*N/M. PLL_VIDEO0(1X)=24MHz*N/M/4. PLL_VIDEO0 is 1188MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. For application, PLL_VIDEO0(4X)= 24MHz*N/M. PLL_VIDEO0(1X)=24MHz*N/M/4. PLL_VIDEO0 is 1188MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M</name>
              <description>PLL Input Div M.  M1=PLL_INPUT_DIV_M + 1 PLL_INPUT_DIV_M is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_D</name>
              <description>PLL Output Div D. ( This factor is used for testing.) M0=PLL_OUTPUT_DIV_D + 1 PLL_OUTPUT_DIV_D is from 0 to 1. For test, PLL_VIDEO0(4X) =24MHz*N/M/D </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_PAT0_CTRL_REG</name>
          <description>PLL_VIDEO0_PAT0_CTRL_REG</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_PAT1_CTRL_REG</name>
          <description>PLL_VIDEO0_PAT1_CTRL_REG</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_BIAS_REG</name>
          <description>PLL_VIDEO1 Bias Register</description>
          <addressOffset>0x348</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL bias control [4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_CTRL_REG</name>
          <description>PLL_VIDEO1 Control Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x6203</resetValue>
          <resetMask>0xB100FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable. 
1: Enable. For application, PLL_VIDEO1(4X)= 24MHz*N/M. PLL_VIDEO1(1X)=24MHz*N/M/4. PLL_VIDEO0 is 1188MHz by default. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. For application, PLL_VIDEO1(4X)= 24MHz*N/M. PLL_VIDEO1(1X)=24MHz*N/M/4. PLL_VIDEO0 is 1188MHz by default.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_ENABLE</name>
              <description>Lock Enable 
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_ENABLE</name>
              <description>0: Disable. 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. N= PLL_FACTOR_N +1 PLL_FACTOR_N is from 0 to 254. In application, PLL_FACTOR_N should be more than or equal to 11 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INPUT_DIV_M</name>
              <description>PLL Input Div M.  M1=PLL_INPUT_DIV_M + 1 PLL_INPUT_DIV_M is from 0 to 1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_OUTPUT_DIV_D</name>
              <description>PLL Output Div D.( This factor is used for testing.) M0=PLL_OUTPUT_DIV_D + 1 PLL_OUTPUT_DIV_M0 is from 0 to 1. For test, PLL_VIDEO1(4X) =24MHz*N/M/D </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_PAT0_CTRL_REG</name>
          <description>PLL_VIDEO1_PAT0_CTRL_REG</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: Triangular 
11: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM_CLK_SEL</name>
              <description>SDM Clock Select 
0: 24MHz 
1: 12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12MHz</name>
                  <description>12MHz when PLL_INPUT_DIV_M1 is 1, this register is set to 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5kHz 
01: 32kHz 
10: 32.5kHz 
11: 33kHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5kHz</name>
                  <description>31.5kHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5kHz</name>
                  <description>32.5kHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33kHz</name>
                  <description>33kHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_PAT1_CTRL_REG</name>
          <description>PLL_VIDEO1_PAT1_CTRL_REG</description>
          <addressOffset>0x14C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PSI_AHB1_AHB2_CFG_REG</name>
          <description>PSI_AHB1_AHB2 Configuration Register</description>
          <addressOffset>0x510</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000303</resetMask>
          <fields>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: CCU_32K 
10: RC16M 
11: PLL_PERI0(1X) PSI_AHB1_AHB2 CLK = Clock Source/M/N. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCU_32K</name>
                  <description>CCU_32K</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RC16M</name>
                  <description>RC16M</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X) PSI_AHB1_AHB2 CLK = Clock Source/M/N.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PSI_BGR_REG</name>
          <description>PSI Bus Gating Reset Register</description>
          <addressOffset>0x79C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>PSI_RST</name>
              <description>PSI Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PSI_GATING</name>
              <description>Gating Clock For PSI 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_BGR_REG</name>
          <description>PWM Bus Gating Reset Register</description>
          <addressOffset>0x7AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>PWM_RST</name>
              <description>PWM Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_GATING</name>
              <description>Gating Clock For PWM 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_BGR_REG</name>
          <description>SCR Bus Gating Reset Register</description>
          <addressOffset>0x93C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30003</resetMask>
          <fields>
            <field>
              <name>SCR1_RST</name>
              <description>SCR1 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR0_RST</name>
              <description>SCR0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR1_GATING</name>
              <description>Gating Clock For SCR1 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR0_GATING</name>
              <description>Gating Clock For SCR0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC0_CLK_REG</name>
          <description>SMHC0 Clock Register</description>
          <addressOffset>0x830</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_PERI0(2X) 
010: PLL_PERI1(2X) 
011: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC1_CLK_REG</name>
          <description>SMHC1 Clock Register</description>
          <addressOffset>0x834</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_PERI0(2X) 
010: PLL_PERI1(2X) 
011: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 16 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC2_CLK_REG</name>
          <description>SMHC2 Clock Register</description>
          <addressOffset>0x838</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_PERI0(2X) 
010: PLL_PERI1(2X) 
011: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BGR_REG</name>
          <description>SMHC Bus Gating Reset Register</description>
          <addressOffset>0x84C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x70007</resetMask>
          <fields>
            <field>
              <name>SMHC2_RST</name>
              <description>SMHC2 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC1_RST</name>
              <description>SMHC1 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC0_RST</name>
              <description>SMHC0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC2_GATING</name>
              <description>Gating Clock For SMHC2 
0: Mask 
1: Pass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC1_GATING</name>
              <description>Gating Clock For SMHC1 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC0_GATING</name>
              <description>Gating Clock For SMHC0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI0_CLK_REG</name>
          <description>SPI0 Clock Register</description>
          <addressOffset>0x940</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_PERI0(1X) 
010: PLL_PERI1(1X) 
011: PLL_PERI0(2X) 
100: PLL_PERI1(2X) 1XX:/ </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI1(1X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI1(2X) 1XX:/</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI1_CLK_REG</name>
          <description>SPI1 Clock Register</description>
          <addressOffset>0x944</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: OSC24M 
001: PLL_PERI0(1X) 
010: PLL_PERI1(1X) 
011: PLL_PERI0(2X) 
100: PLL_PERI1(2X) 1XX:/ </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI1(1X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI1(2X) 1XX:/</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPINLOCK_BGR_REG</name>
          <description>Spinlock Bus Gating Reset Register</description>
          <addressOffset>0x72C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>SPINLOCK_RST</name>
              <description>SPINLOCK Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPINLOCK_GATING</name>
              <description>Gating Clock For SPINLOCK 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_BGR_REG</name>
          <description>SPI Bus Gating Reset Register</description>
          <addressOffset>0x96C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30003</resetMask>
          <fields>
            <field>
              <name>SPI1_RST</name>
              <description>SPI1 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_RST</name>
              <description>SPI0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI1_GATING</name>
              <description>Gating Clock For SPI1 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_GATING</name>
              <description>Gating Clock For SPI0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_LCD_BGR_REG</name>
          <description>TCON_LCD Bus Gating Reset Register</description>
          <addressOffset>0xB7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>TCON_LCD_RST</name>
              <description>TCON_LCD Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_LCD_GATING</name>
              <description>Gating Clock For TCON_LCD 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_LCD_CLK_REG</name>
          <description>TCON_LCD Clock Register</description>
          <addressOffset>0xB60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x87000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO0(4X) 
010: PLL_VIDEO1(1X) Others:/ </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_4X_closingparen_</name>
                  <description>PLL_VIDEO0(4X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X) Others:/</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_TV_BGR_REG</name>
          <description>TCON_TV Bus Gating Reset Register</description>
          <addressOffset>0xB9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>TCON_TV0_RST</name>
              <description>TCON_TV0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV0_GATING</name>
              <description>Gating Clock For TCON_TV0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_TV_CLK_REG</name>
          <description>TCON_TV Clock Register</description>
          <addressOffset>0xB80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO0(4X) 
010: PLL_VIDEO1(1X) 
011: PLL_VIDEO1(4X) Others:/  </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_4X_closingparen_</name>
                  <description>PLL_VIDEO0(4X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_4X_closingparen_</name>
                  <description>PLL_VIDEO1(4X) Others:/</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_BGR_REG</name>
          <description>THS Bus Gating Reset Register</description>
          <addressOffset>0x9FC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>THS_RST</name>
              <description>THS Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_GATING</name>
              <description>Gating Clock For THS 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TS_BGR_REG</name>
          <description>TS Bus Gating Reset Register</description>
          <addressOffset>0x9BC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>TS0_RST</name>
              <description>TS0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TS0_GATING</name>
              <description>Gating Clock For TS0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TS_CLK_REG</name>
          <description>TS Clock Register</description>
          <addressOffset>0x9B0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8100030F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/M/N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/M/N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: OSC24M 
1: PLL_PERI0(1X) </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERI0(1X)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_N</name>
              <description>Factor N 
00: 1 
01: 2 
10: 4 
11: 8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 15 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_BGR_REG</name>
          <description>TWI Bus Gating Reset Register</description>
          <addressOffset>0x91C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TWI3_RST</name>
              <description>TWI3 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_RST</name>
              <description>TWI2 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_RST</name>
              <description>TWI1 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_RST</name>
              <description>TWI0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI3_GATING</name>
              <description>Gating Clock For TWI3 
0: Mask 
1: Pass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_GATING</name>
              <description>Gating Clock For TWI2 
0: Mask 
1: Pass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_GATING</name>
              <description>Gating Clock For TWI1 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_GATING</name>
              <description>Gating Clock For TWI0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_BGR_REG</name>
          <description>UART Bus Gating Reset Register</description>
          <addressOffset>0x90C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>UART3_RST</name>
              <description>UART3 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_RST</name>
              <description>UART2 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_RST</name>
              <description>UART1 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_RST</name>
              <description>UART0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART3_GATING</name>
              <description>Gating Clock For UART3 
0: Mask 
1: Pass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_GATING</name>
              <description>Gating Clock For UART2 
0: Mask 
1: Pass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_GATING</name>
              <description>Gating Clock For UART1 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_GATING</name>
              <description>Gating Clock For UART0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB0_CLK_REG</name>
          <description>USB0 Clock Register</description>
          <addressOffset>0xA70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xE3000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING_OHCI0</name>
              <description>Gating Special Clock For OHCI0 
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY0_RST</name>
              <description>USB PHY0 Reset 
0: Assert 
1: De-assert </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY0</name>
              <description>Gating Special Clock For USBPHY0 
0: Clock is OFF 
1: Clock is ON SCLK is from OSC24M </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK is from OSC24M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OHCI0_12M_SRC_SEL</name>
              <description>OHCI0 12M Source Select 
00: 12MHz divided from 48MHz 
01: 12MHz divided from 24MHz 
10: LOSC 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB1_CLK_REG</name>
          <description>USB1 Clock Register</description>
          <addressOffset>0xA74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x60000000</resetMask>
          <fields>
            <field>
              <name>USBPHY1_RST</name>
              <description>USB PHY1 Reset 
0: Assert 
1: De-assert </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY1</name>
              <description>Gating Special Clock For USBPHY1 
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB3_CLK_REG</name>
          <description>USB3 Clock Register</description>
          <addressOffset>0xA7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING_OHCI3</name>
              <description>Gating Special Clock For OHCI3 
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY3_RST</name>
              <description>USB PHY3 Reset 
0: Assert 
1: De-assert </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY3</name>
              <description>Gating Special Clock For USBPHY3 
0: Clock is OFF 
1: Clock is ON SCLK is from OSC24M </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK is from OSC24M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBHSIC_RST</name>
              <description>USB HSIC Reset 
0: Assert 
1: De-assert </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_12M_HSIC</name>
              <description>Gating Special 12M Clock For HSIC 
0: Clock is OFF 
1: Clock is ON SCLK is OSC24M/2 </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK is OSC24M/2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCK_GATING_HSIC</name>
              <description>Gating Special Clock For HSIC 
0: Clock is OFF 
1: Clock is ON The special clock is from PLL_HSIC </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON The special clock is from PLL_HSIC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OHCI3_12M_SRC_SEL</name>
              <description>OHCI3 12M Source Select 
00: 12M divided from 48MHz 
01: 12M divided from 24MHz 
10: LOSC 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_BGR_REG</name>
          <description>USB_BGR_REG</description>
          <addressOffset>0xA8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1B901B9</resetMask>
          <fields>
            <field>
              <name>USBOTG_RST</name>
              <description>USBOTG Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI3_RST</name>
              <description>USBEHCI3 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB3_0_HOST_RST</name>
              <description>USB3.0_HOST. 
0: Assert 
1: De-assert </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI0_RST</name>
              <description>USBEHCI0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI3_RST</name>
              <description>USBOHCI3 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI0_RST</name>
              <description>USBOHCI0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOTG_GATING</name>
              <description>Gating Clock For USBOTG 
0: Mask 
1: Pass </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI3_GATING</name>
              <description>Gating Clock For USBEHCI3 
0: Mask 
1: Pass </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB3_0_HOST_GATING</name>
              <description>Gating Clock For USB3.0_HOST 
0: Mask 
1: Pass </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI0_GATING</name>
              <description>Gating Clock For USBEHCI0 
0: Mask 
1: Pass </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI3_GATING</name>
              <description>Gating Clock For USBOHCI3 
0: Mask 
1: Pass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI0_GATING</name>
              <description>Gating Clock For USBOHCI0 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VE_BGR_REG</name>
          <description>VE Bus Gating Reset Register</description>
          <addressOffset>0x69C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>VE_RST</name>
              <description>VE Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_GATING</name>
              <description>Gating Clock For VE 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VE_CLK_REG</name>
          <description>VE Clock Register</description>
          <addressOffset>0x690</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81000007</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: PLL_VE 
1: / </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VE</name>
                  <description>PLL_VE</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  The range is from 1 to 8 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VP9_BGR_REG</name>
          <description>VP9_BGR_REG</description>
          <addressOffset>0x6CC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>VP9_RST</name>
              <description>VP9 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VP9_GATING</name>
              <description>Gating Clock For VP9 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VP9_CLK_REG</name>
          <description>VP9 Clock Register</description>
          <addressOffset>0x6C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81000007</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0: PLL_VE 
1: PLL_PERI0(2X) </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VE</name>
                  <description>PLL_VE</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERI0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERI0(2X)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FACTOR_M</name>
              <description>Factor M.(M= FACTOR_M +1)  FACTOR_M is from 0 to 7. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>AHUB</name>
      <description>AHUB</description>
      <groupName>generic</groupName>
      <baseAddress>0x5097000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>48</dimIncrement>
          <name>_n[%s]</name>
          <addressOffset>0x10</addressOffset>
          <register>
            <name>APBIF_RXnFIFO</name>
            <description>APBIF RXn FIFO</description>
            <addressOffset>0x110</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RXN_DATA</name>
                <description>RXn_DATA RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_RXnFIFO_CNT</name>
            <description>APBIF RXn FIFO Counter</description>
            <addressOffset>0x114</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RXN_CNT</name>
                <description>RXn_CNT RX Sample Counter The audio sample number of writing into RXFIFO. When one sample is write into RXFIFO by function module, the RX sample counter register increases by one. The RX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should counter on base of this initial value. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_RXnFIFO_CTRL</name>
            <description>APBIF RXn FIFO Control</description>
            <addressOffset>0x100</addressOffset>
            <resetValue>0x400</resetValue>
            <resetMask>0x17F3</resetMask>
            <fields>
              <field>
                <name>FRXN</name>
                <description>FRXn Write `1` to flush RX FIFO, self clear to `0`. </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>RXNTL</name>
                <description>RXnTL RX FIFO Empty Trigger Level Interrupt and DMA request trigger level for RXFIFO normal condition Trigger Level = RXnTL </description>
                <bitRange>[10:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RXNOM</name>
                <description>RXnOM RX FIFO Output Mode(Mode 0, 1,2,3) 
00: Expanding `0` at LSB of RX FIFO register 
01: Expanding received sample sign bit at MSB of RX FIFO register. 
10: Truncating received samples at high half-word of RX FIFO register and low half-word of RX FIFO register is filled by `0`. 
11: Truncating received samples at low half-word of RX FIFO register and high half-word of RX FIFO register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: APB_RDATA[31:0] = {FIFO_O[31:12], 12`h0}. Mode 1: APB_RDATA[31:0] = {12{FIFO_O[31]}, FIFO_O[31:12]}. Mode 2: APB_RDATA[31:0] = {FIFO_O[31:16], 16`h0}. Mode 3: APB_RDATA[31:0] = {16{FIFO_O[31]}, FIFO_O[31:16]}. </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Expanding_`0`_at_LSB_of</name>
                    <description>Expanding `0` at LSB of RX FIFO register</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Expanding_received_sample_sign_bit</name>
                    <description>Expanding received sample sign bit at MSB of RX FIFO register.</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Truncating_received_samples_at_high</name>
                    <description>Truncating received samples at high half-word of RX FIFO register and low half-word of RX FIFO register is filled by `0`.</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Truncating_received_samples_at_low</name>
                    <description>Truncating received samples at low half-word of RX FIFO register and high half-word of RX FIFO register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: APB_RDATA[31:0] = {FIFO_O[31:12], 12`h0}. Mode 1: APB_RDATA[31:0] = {12{FIFO_O[31]}, FIFO_O[31:12]}. Mode 2: APB_RDATA[31:0] = {FIFO_O[31:16], 16`h0}. Mode 3: APB_RDATA[31:0] = {16{FIFO_O[31]}, FIFO_O[31:16]}.</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_RXnFIFO_STS</name>
            <description>APBIF RX0 FIFO Status</description>
            <addressOffset>0x104</addressOffset>
            <resetValue>0x100</resetValue>
            <resetMask>0x1FF</resetMask>
            <fields>
              <field>
                <name>RXNA</name>
                <description>RXnA RX FIFO Available 
0: No available data in RX FIFO 
1: More than One Sample in RX FIFO (&gt;= 1 Word) </description>
                <bitRange>[8:8]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_available</name>
                    <description>No available data in RX FIFO</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>More</name>
                    <description>More than One Sample in RX FIFO (&gt;= 1 Word)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RXNA_CNT</name>
                <description>RXnA_CNT RX FIFO Available Sample Word Counter </description>
                <bitRange>[7:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_RXnIRQ_CTRL</name>
            <description>APBIF RXn DMA &amp; Interrupt Control</description>
            <addressOffset>0xF4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xD</resetMask>
            <fields>
              <field>
                <name>RXN_DRQ</name>
                <description>RXn_DRQ RX FIFO Data Available DRQ Enable 
0: Disable 
1: Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RXFIFO. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RXFIFO.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RXNUI_EN</name>
                <description>RXnUI_EN RX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RXNAI_EN</name>
                <description>RXnAI_EN RX FIFO Data Available Interrupt Enable 
0: Disable 
1: Enable </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_RXnIRQ_STS</name>
            <description>APBIF RXn DMA &amp; Interrupt Status</description>
            <addressOffset>0xF8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x5</resetMask>
            <fields>
              <field>
                <name>RXNU_INT</name>
                <description>RXnU_INT RX FIFO Underrun Pending Interrupt 
0: No Pending Interrupt 
1: RXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending Interrupt</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>RXFIFO</name>
                    <description>RXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RXNA_INT</name>
                <description>RXnA_INT RX FIFO Data Available Pending Interrupt 
0: No Pending IRQ 
1: TX FIFO Data Available Pending Interrupt When Data in RX FIFO are more than RX Trigger Level Write `1` to clear this Interrupt or Automatic clear if Interrupt condition fails </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending IRQ</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>TX</name>
                    <description>TX FIFO Data Available Pending Interrupt When Data in RX FIFO are more than RX Trigger Level Write `1` to clear this Interrupt or Automatic clear if Interrupt condition fails</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_RXn_CONT</name>
            <description>APBIF RXn Contact Select</description>
            <addressOffset>0x108</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFF000</resetMask>
            <fields>
              <field>
                <name>R_XN_CONTACT_RXDIF</name>
                <description>RXn_CONTACT_RXDIF Bit[31]:APBIF_TXDIF0 Bit[30]:APBIF_TXDIF1 Bit[29]:APBIF_TXDIF2 Bit[28]:Reserved Bit[27]:I2S0_TXDIF Bit[26]:I2S1_TXDIF(HDMI) Bit[25]:I2S2_TXDIF Bit[24]:Reserved Bit[23]:I2S3_TXDIF Bit[22~20]:Reserved Bit[19]:DAM0_TXDIF Bit[18~16]:Reserved Bit[15]:DAM1_TXDIF Bit[14~0]:Reserved When the TXDIF Contact to this RXDIF, the corresponding bit will be set. </description>
                <bitRange>[31:12]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_RXn_CTRL</name>
            <description>APBIF RXn Control</description>
            <addressOffset>0xF0</addressOffset>
            <resetValue>0x100</resetValue>
            <resetMask>0x70F10</resetMask>
            <fields>
              <field>
                <name>RXN_SR</name>
                <description>RXn_SR RX Sample Resolution 000:Reserved 001:8-bit 010:12-bit 011:16-bit 100:20-bit 101:24-bit 110:28-bit 111:32-bit </description>
                <bitRange>[18:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>R_XN_CHAN_NUM</name>
                <description>RXn_CHAN_NUM TX Channel Number which between CPU/DMA and FIFO 
0: 1 Channel 
1: 2 Channel ... 
14: 15 Channel 
15: 16 Channel </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_15</name>
                    <description>15 Channel</description>
                    <value>14</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16 Channel</description>
                    <value>15</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>R_XN_START</name>
                <description>RXn_START APBIF RX Streaming Start </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_TXnFIFO</name>
            <description>APBIF TXn FIFO</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TXN_DATA</name>
                <description>TXn_DATA TX Sample Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample. </description>
                <bitRange>[31:0]</bitRange>
                <access>write-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_TXnFIFO_CNT</name>
            <description>APBIF TXn FIFO Counter</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TXN_CNT</name>
                <description>TXn_CNT TX Sample Counter The audio sample number of sending into TXFIFO. When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should counter on base of this initial value. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_TXnFIFO_CTRL</name>
            <description>AHUB APBIF TXn FIFO Control</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x200</resetValue>
            <resetMask>0x13F1</resetMask>
            <fields>
              <field>
                <name>FTXN</name>
                <description>FTXn Write `1` to flush TX FIFO, self clear to `0`. </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>TXNTL</name>
                <description>TXnTL TX FIFO Empty Trigger Level Interrupt and DMA request trigger level for TXFIFO normal condition Trigger Level = TXnTL </description>
                <bitRange>[9:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXNIM</name>
                <description>TXnIM TX FIFO Input Mode(Mode 0, 1) 
0: Valid data at the MSB of TXFIFO register 
1: Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode0: FIFO_I[31:0]={APB_WDATA[31:12], 12`h0} Mode1: FIFO_I[31:0]={APB_WDATA[19:0], 12`h0} </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Valid_data_at_the_MSB</name>
                    <description>Valid data at the MSB of TXFIFO register</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Valid_data_at_the_LSB</name>
                    <description>Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode0: FIFO_I[31:0]={APB_WDATA[31:12], 12`h0} Mode1: FIFO_I[31:0]={APB_WDATA[19:0], 12`h0}</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_TXnFIFO_STS</name>
            <description>APBIF TXn FIFO Status</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x140</resetValue>
            <resetMask>0x17F</resetMask>
            <fields>
              <field>
                <name>TXNE</name>
                <description>TXnE TXFIFO Empty 
0: No Room for New Sample in TXFIFO 
1: More than One Room for New Sample in TXFIFO (&gt;= 1 Word) </description>
                <bitRange>[8:8]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Room</name>
                    <description>No Room for New Sample in TXFIFO</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>More</name>
                    <description>More than One Room for New Sample in TXFIFO (&gt;= 1 Word)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXNE_CNT</name>
                <description>TXnE_CNT TXFIFO Empty Space Word Counter </description>
                <bitRange>[6:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_TXnIRQ_CTRL</name>
            <description>APBIF TXn DMA &amp; Interrupt Control</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xB</resetMask>
            <fields>
              <field>
                <name>TXN_DRQ</name>
                <description>TXn_DRQ TX FIFO Empty DRQ Enable 
0: Disable 
1: Enable </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXNOI_EN</name>
                <description>TXnOI_EN TX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXNEI_EN</name>
                <description>TXnEI_EN TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_TXnIRQ_STS</name>
            <description>AHUB APBIF TXn DMA &amp; Interrupt Status</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x1</resetValue>
            <resetMask>0x3</resetMask>
            <fields>
              <field>
                <name>TXNO_INT</name>
                <description>TXnO_INT TXFIFO Overrun Pending Interrupt 
0: No Pending Interrupt 
1: TXFIFO Overrun Pending Interrupt Write `1` to clear this interrupt. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending Interrupt</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>TXFIFO</name>
                    <description>TXFIFO Overrun Pending Interrupt Write `1` to clear this interrupt.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXNE_INT</name>
                <description>TXnE_INT TXFIFO Empty pending Interrupt 
0: No pending IRQ 
1: TXFIFO Empty Pending Interrupt When Data in TXFIFO are Less than TX Trigger Level Write `1` to clear this Interrupt or automatic clear if Interrupt condition fails </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_pending</name>
                    <description>No pending IRQ</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>TXFIFO</name>
                    <description>TXFIFO Empty Pending Interrupt When Data in TXFIFO are Less than TX Trigger Level Write `1` to clear this Interrupt or automatic clear if Interrupt condition fails</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>APBIF_TXn_CTRL</name>
            <description>APBIF TXn Control</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x100</resetValue>
            <resetMask>0x70F10</resetMask>
            <fields>
              <field>
                <name>TXN_SR</name>
                <description>TXn_SR TX Sample Resolution 000:Reserved 001:8-bit 010:12-bit 011:16-bit 100:20-bit 101:24-bit 110:28-bit 111:32-bit </description>
                <bitRange>[18:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>T_XN_CHAN_NUM</name>
                <description>TXn_CHAN_NUM TX Channel Number which between CPU/DMA and FIFO 
0000: 1 Channel 
0001: 2 Channel ... 
1110: 15 Channel 
1111: 16 Channel </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1</name>
                    <description>1 Channel</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2</name>
                    <description>2 Channel ...</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_15</name>
                    <description>15 Channel</description>
                    <value>0b1110</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16 Channel</description>
                    <value>0b1111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_START</name>
                <description>TXn_START APBIF TX Streaming Start </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>2</dim>
          <dimIncrement>128</dimIncrement>
          <name>_n[%s]</name>
          <addressOffset>0xa00</addressOffset>
          <register>
            <name>DAM_CTRL</name>
            <description>DAM_CTRL</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFF0F71</resetMask>
            <fields>
              <field>
                <name>RX2_NUM</name>
                <description>RX2 Channel Num </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RX1_NUM</name>
                <description>RX1 Channel Num </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RX0_NUM</name>
                <description>RX0 Channel Num </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TX</name>
                <description>Channel Num </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>RX2EN</name>
                <description>Receiver Enable 
0: Disable 
1: Enable </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RX1EN</name>
                <description>Receiver Enable 
0: Disable 
1: Enable </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RX0EN</name>
                <description>Receiver Enable 
0: Disable 
1: Enable </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXEN</name>
                <description>Transmitter Enable 
0: Disable 
1: Enable </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL0</name>
            <description>DAM_MIX_CTRL0</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x1110000</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH1_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 1 N: TXDIF Channel 1 MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH1_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 1 N: TXDIF Channel 1 MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH1_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 1 N: TXDIF Channel 1 MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH0_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 0 N: TXDIF Channel 0 MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH0_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 0 N: TXDIF Channel 0 MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH0_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 0 N: TXDIF Channel 0 MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL1</name>
            <description>DAM_MIX_CTRL1</description>
            <addressOffset>0x34</addressOffset>
            <resetValue>0x3330222</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH3_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 3 N: TXDIF Channel 3 MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH3_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 3 N: TXDIF Channel 3 MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH3_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 3 N: TXDIF Channel 3 MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH2_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 2 N: TXDIF Channel 2 MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH2_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 2 N: TXDIF Channel 2 MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH2_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 2 N: TXDIF Channel 2 MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL2</name>
            <description>DAM_MIX_CTRL2</description>
            <addressOffset>0x38</addressOffset>
            <resetValue>0x5550444</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH5_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 5 N: TXDIF Channel 5 MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH5_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 5 N: TXDIF Channel 5 MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH5_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 5 N: TXDIF Channel 5 MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH4_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 4 N: TXDIF Channel 4 MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH4_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 4 N: TXDIF Channel 2 MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH4_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 4 N: TXDIF Channel 4 MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL3</name>
            <description>DAM_MIX_CTRL3</description>
            <addressOffset>0x3C</addressOffset>
            <resetValue>0x7770666</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH7_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 7 N: TXDIF Channel 7 MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH7_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 7 N: TXDIF Channel 7 MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH7_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 7 N: TXDIF Channel 7 MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH6_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 6 N: TXDIF Channel 6 MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH6_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 6 N: TXDIF Channel 6 MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH6_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 6 N: TXDIF Channel 6 MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL4</name>
            <description>DAM_MIX_CTRL4</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x9990888</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH9_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 9 N: TXDIF Channel 9 MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH9_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 9 N: TXDIF Channel 9 MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH9_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 9 N: TXDIF Channel 9 MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH8_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 8 N: TXDIF Channel 8 MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH8_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 8 N: TXDIF Channel 8 MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCH8_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 8 N: TXDIF Channel 8 MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL5</name>
            <description>DAM_MIX_CTRL5</description>
            <addressOffset>0x44</addressOffset>
            <resetValue>0xBBB0AAA</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCHB_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel B N: TXDIF Channel B MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHB_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel B N: TXDIF Channel B MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHB_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel B N: TXDIF Channel B MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHA_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel A N: TXDIF Channel A MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHA_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel A N: TXDIF Channel A MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHA_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel A N: TXDIF Channel A MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL6</name>
            <description>DAM_MIX_CTRL6</description>
            <addressOffset>0x48</addressOffset>
            <resetValue>0xDDD0CCC</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCHD_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel D N: TXDIF Channel D MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHD_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel D N: TXDIF Channel D MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHD_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel D N: TXDIF Channel D MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHC_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel C N: TXDIF Channel C MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHC_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel C N: TXDIF Channel C MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHC_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel C N: TXDIF Channel C MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_MIX_CTRL7</name>
            <description>DAM_MIX_CTRL7</description>
            <addressOffset>0x4C</addressOffset>
            <resetValue>0xFFF0EEE</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCHF_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel F N: TXDIF Channel F MIX RX2 Channel N </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHF_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel F N: TXDIF Channel F MIX RX1 Channel N </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHF_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel F N: TXDIF Channel F MIX RX0 Channel N </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHE_MIX_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel E N: TXDIF Channel E MIX RX2 Channel N </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHE_MIX_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel E N: TXDIF Channel E MIX RX1 Channel N </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXCHE_MIX_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel E N: TXDIF Channel E MIX RX0 Channel N </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_RX0_SRC</name>
            <description>DAM_RX0_SRC</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFF000</resetMask>
            <fields>
              <field>
                <name>R_XN_CONTACT_RXDIF</name>
                <description>RXn_CONTACT_RXDIF Bit[31]:APBIF_TXDIF0 Bit[30]:APBIF_TXDIF1 Bit[29]:APBIF_TXDIF2 Bit[28]:Reserved Bit[27]:I2S0_TXDIF Bit[26]:I2S1_TXDIF(HDMI) Bit[25]:I2S2_TXDIF Bit[24]:Reserved Bit[23]:I2S3_TXDIF Bit[22]:Reserved Bit[21]:Reserved Bit[20]:Reserved Bit[19]:DAM0_TXDIF0 Bit[18]:Reserved Bit[17]:Reserved Bit[16]:Reserved Bit[15]:DAM1_TXDIF0 Bit[14]:Reserved Bit[13]:Reserved Bit[12]:Reserved When the TXDIF Contact to this RXDIF, the corresponding bit will be set. </description>
                <bitRange>[31:12]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_RX1_SRC</name>
            <description>DAM_RX1_SRC</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFF000</resetMask>
            <fields>
              <field>
                <name>R_XN_CONTACT_RXDIF</name>
                <description>RXn_CONTACT_RXDIF Bit[31]:APBIF_TXDIF0 Bit[30]:APBIF_TXDIF1 Bit[29]:APBIF_TXDIF2 Bit[28]:Reserved Bit[27]:I2S0_TXDIF Bit[26]:I2S1_TXDIF(HDMI) Bit[25]:I2S2_TXDIF Bit[24]:Reserved Bit[23]:I2S3_TXDIF Bit[22]:Reserved Bit[21]:Reserved Bit[20]:Reserved Bit[19]:DAM0_TXDIF0 Bit[18]:Reserved Bit[17]:Reserved Bit[16]:Reserved Bit[15]:DAM1_TXDIF0 Bit[14]:Reserved Bit[13]:Reserved Bit[12]:Reserved When the TXDIF Contact to this RXDIF, the corresponding bit will be set. </description>
                <bitRange>[31:12]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_RX2_SRC</name>
            <description>DAM_RX2_SRC</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFF000</resetMask>
            <fields>
              <field>
                <name>R_XN_CONTACT_RXDIF</name>
                <description>RXn_CONTACT_RXDIF Bit[31]:APBIF_TXDIF0 Bit[30]:APBIF_TXDIF1 Bit[29]:APBIF_TXDIF2 Bit[28]:Reserved Bit[27]:I2S0_TXDIF Bit[26]:I2S1_TXDIF(HDMI) Bit[25]:I2S2_TXDIF Bit[24]:Reserved Bit[23]:I2S3_TXDIF Bit[22]:Reserved Bit[21]:Reserved Bit[20]:Reserved Bit[19]:DAM0_TXDIF0 Bit[18]:Reserved Bit[17]:Reserved Bit[16]:Reserved Bit[15]:DAM1_TXDIF0 Bit[14]:Reserved Bit[13]:Reserved Bit[12]:Reserved When the TXDIF Contact to this RXDIF, the corresponding bit will be set. </description>
                <bitRange>[31:12]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL0</name>
            <description>DAM_VOL_CTRL0</description>
            <addressOffset>0x50</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH1_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 1 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH1_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 1 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH1_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 1 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH0_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 0 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH0_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 0 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH0_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 0 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL1</name>
            <description>DAM_VOL_CTRL1</description>
            <addressOffset>0x54</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH3_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 3 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH3_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 3 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH3_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 3 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 
0100: -12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_12dB</name>
                    <description>-12dB Others: Reserved</description>
                    <value>0b0100</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH2_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 2 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH2_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 2 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH2_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 2 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL2</name>
            <description>DAM_VOL_CTRL2</description>
            <addressOffset>0x58</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH5_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 5 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH5_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 5 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH5_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 5 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH4_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 4 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH4_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 4 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH4_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 4 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL3</name>
            <description>DAM_VOL_CTRL3</description>
            <addressOffset>0x5C</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH7_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 7 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH7_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 7 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH7_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 7 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH6_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 6 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH6_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 6 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH6_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 6 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL4</name>
            <description>DAM_VOL_CTRL4</description>
            <addressOffset>0x60</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCH9_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 9 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH9_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 9 Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH9_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 9 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH8_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel 8 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH8_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel 8 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCH8_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel 8 Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL5</name>
            <description>DAM_VOL_CTRL5</description>
            <addressOffset>0x64</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCHB_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel B Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHB_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel B Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHB_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel B Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHA_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel A Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHA_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel A Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHA_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel A Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL6</name>
            <description>DAM_VOL_CTRL6</description>
            <addressOffset>0x68</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCHD_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel D Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHD_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel D Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHD_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel D Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHC_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel C Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHC_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel C Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHC_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel C Gain  
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DAM_VOL_CTRL7</name>
            <description>DAM_VOL_CTRL7</description>
            <addressOffset>0x6C</addressOffset>
            <resetValue>0x1110111</resetValue>
            <resetMask>0xFFF0FFF</resetMask>
            <fields>
              <field>
                <name>TXCHF_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel F Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHF_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel F Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[23:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHF_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel F Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHE_GAIN_RXCH2</name>
                <description>RX2 Channel NUM to TXDIF Channel E Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHE_GAIN_RXCH1</name>
                <description>RX1 Channel NUM to TXDIF Channel E Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXCHE_GAIN_RXCH0</name>
                <description>RX0 Channel NUM to TXDIF Channel E Gain 
0000: Mute 
0001: 0dB 
0010: -6dB 0100:-12dB Others: Reserved </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Mute</name>
                    <description>Mute</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0dB</name>
                    <description>0dB</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6dB</name>
                    <description>-6dB 0100:-12dB Others: Reserved</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>AHUB_CTRL</name>
          <description>AHUB_CTRL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10</resetMask>
          <fields>
            <field>
              <name>HDMI_SRC_SELECT</name>
              <description>0:From I2S/PCM(0x050910000) 1:From Audio HUB HDMI(I2S1) </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AHUB_GAT</name>
          <description>AHUB Gating</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xEEF0C000</resetMask>
          <fields>
            <field>
              <name>APBIF_TXDIF0_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_TXDIF1_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON  </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_TXDIF2_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_RXDIF0_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_RXDIF1_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_RXDIF2_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S0_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S1_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S2_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S3_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAM0_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAM1_GAT</name>
              <description>0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHUB__RST</name>
          <description>AHUB__RST</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xEEF0C000</resetMask>
          <fields>
            <field>
              <name>APBIF_TXDIF0_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_TXDIF1_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_TXDIF2_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_RXDIF0_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_RXDIF1_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APBIF_RXDIF2_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S0_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S1_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S2_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S3_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAM0_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAM1_RST</name>
              <description>0: Assert 
1: De-assert </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_CHCFG[%s]</name>
          <description>I2Sn Channel Configuration</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>TX_SLOT_HIZ</name>
              <description>0:Normal Mode for the Last Half Cycle of BCLK in the Slot 1:Turn to Hi-Z State for the Last Half Cycle of BCLK in the Slot </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_STATE</name>
              <description>0: Transfer Level 0 When Not Transferring Slot 1:Turn to Hi-Z State(TDM) When Not Transferring Slot </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transfer_Level</name>
                  <description>Transfer Level 0 When Not Transferring Slot 1:Turn to Hi-Z State(TDM) When Not Transferring Slot</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CHAN_NUM</name>
              <description>RX Channel/Slot Number which between AHUB and I2Sn 
0000: 1 channel or slot ... 
0111: 8 channels or slots 
1000: 9 channels or slots ... 
1111: 16 channels or slots </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel or slot ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 channels or slots ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channels or slots</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CHAN_NUM</name>
              <description>TX Channel/Slot Number which between AHUB and I2Sn 
0000: 1 channel or slot ... 
0111: 8 channels or slots 
1000: 9 channels or slots ... 
1111: 16 channels or slots </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel or slot ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 channels or slots ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channels or slots</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_CLKD[%s]</name>
          <description>I2Sn Clock Divide</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>MCLKO_EN</name>
              <description>0: Disable MCLK Output 
1: Enable MCLK Output </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable MCLK Output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable MCLK Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCLKDIV</name>
              <description>BCLK Divide Ratio from PLL_Audio 
0000: reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192 </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLKDIV</name>
              <description>MCLK Divide Ratio from PLL_Audio 
0000: reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_CTRL[%s]</name>
          <description>I2Sn Control</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x40000</resetValue>
          <resetMask>0x40F7F</resetMask>
          <fields>
            <field>
              <name>BCLK/LRCK</name>
              <description>Direction 0:Input 1:Output </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDO3_EN</name>
              <description>0:Disable, Hi-Z state 1:Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDO2_EN</name>
              <description>0:Disable, Hi-Z state 1:Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDO1_EN</name>
              <description>0:Disable, Hi-Z state 1:Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDO0_EN</name>
              <description>0:Disable, Hi-Z state 1:Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT</name>
              <description>Mute 
0: Normal transfer 
1: Force DOUT to output 0 </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Force</name>
                  <description>Force DOUT to output 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE_SEL</name>
              <description>Mode Selection 
00: PCM mode(offset 0: DSP_B; offset 1: DSP_A) 
01: Left mode(offset 0: L-J Mode; offset 1: I2S mode) 
10: Right-Justified mode 
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM</name>
                  <description>PCM mode(offset 0: DSP_B; offset 1: DSP_A)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left</name>
                  <description>Left mode(offset 0: L-J Mode; offset 1: I2S mode)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>right_Justified_mode</name>
                  <description>Right-Justified mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOPBACK</name>
              <description>Loop back test 
0: Normal mode 
1: Loopback test When set `1`, connecting the SDO0 with the SDI </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loopback</name>
                  <description>Loopback test When set `1`, connecting the SDO0 with the SDI</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmitter Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_FMT0[%s]</name>
          <description>I2Sn Format 0</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x33</resetValue>
          <resetMask>0x400BFFFF</resetMask>
          <fields>
            <field>
              <name>LRCK_WIDTH</name>
              <description>(Only apply in PCM mode) LRCK width 
0: LRCK = 1 BCLK width (short frame) 
1: LRCK = 2 BCLK width (long frame) </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LRCK__equals__1</name>
                  <description>LRCK = 1 BCLK width (short frame)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LRCK__equals__2</name>
                  <description>LRCK = 2 BCLK width (long frame)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_POLARITY</name>
              <description>When apply in I2S/Left-Justified/Right-Justified mode: 
0: Left channel when LRCK is low 
1: Left channel when LRCK is high When apply in PCM mode: 
0: PCM LRCK asserted at the negative edge 
1: PCM LRCK asserted at the positive edge </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>low</name>
                  <description>Left channel when LRCK is low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>Left channel when LRCK is high When apply in PCM mode:</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_asserted_at_the_negative</name>
                  <description>PCM LRCK asserted at the negative edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_asserted_at_the_positive</name>
                  <description>PCM LRCK asserted at the positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_PERIOD</name>
              <description>It is used to program the number of BCLKs per channel of sample frame. This value is interpreted as follow: PCM Mode: Number of BCLKs within (Left + Right) channel width. I2S/Left-Justified/Right-Justified Mode: Number of BCLKs within each individual channel width(Left or Right) For example: N = 7 : 8 BCLKs width ... N = 1023 : 1024 BCLKs width </description>
              <bitRange>[17:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BCLK_POLARITY</name>
              <description>0: Normal mode, negative edge drive and positive edge sample 
1: Invert mode, positive edge drive and negative edge sample </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal mode, negative edge drive and positive edge sample</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert mode, positive edge drive and negative edge sample</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SR</name>
              <description>Sample Resolution 
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDGE_TRANSFER</name>
              <description>0: SDO drive data and SDI sample data at the different BCLK edge 
1: SDO drive data and SDI sample data at the sample BCLK edge BCLK_PLARITY = 0, use negative edge BCLK_PLARITY = 1, use positive edge </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDO_drive_data_and_SDI_sample_data_at_the_different</name>
                  <description>SDO drive data and SDI sample data at the different BCLK edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDO_drive_data_and_SDI_sample_data_at_the_sample</name>
                  <description>SDO drive data and SDI sample data at the sample BCLK edge BCLK_PLARITY = 0, use negative edge BCLK_PLARITY = 1, use positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SW</name>
              <description>Slot Width Select 
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_FMT1[%s]</name>
          <description>I2Sn Format 1</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x30</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RX</name>
              <description>MLS MSB/LSB First Select 
0: MSB First 
1: LSB First </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX</name>
              <description>MLS MSB/LSB First Select 
0: MSB First 
1: LSB First </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEXT</name>
              <description>Sign Extend in slot [sample resolution &lt; width] 
00: Zeros or audio gain padding at LSB position 
01: Sign extension at MSB position 
10: Reserved 
11: Transfer 0 after each sample in each slot </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Zeros</name>
                  <description>Zeros or audio gain padding at LSB position</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sign</name>
                  <description>Sign extension at MSB position</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer 0 after each sample in each slot</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PDM</name>
              <description>PCM Data Mode 
00: Linear PCM 
01: reserved 
10: 8-bit u-law 
11: 8-bit A-law </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_ulaw</name>
                  <description>8-bit u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_Alaw</name>
                  <description>8-bit A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_PDM</name>
              <description>PCM Data Mode 
00: Linear PCM 
01: reserved 
10: 8-bit u-law 
11: 8-bit A-law </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_ulaw</name>
                  <description>8-bit u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_Alaw</name>
                  <description>8-bit A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_IRQ_CTRL[%s]</name>
          <description>I2Sn DMA &amp; Interrupt Control</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>RXNOI_EN</name>
              <description>RXnOI_EN RX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXNUI_EN</name>
              <description>TXnUI_EN TX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_IRQ_STS[%s]</name>
          <description>I2Sn DMA &amp; Interrupt Status</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>RXNO_INT</name>
              <description>RXnO_INT RX FIFO Overrun Pending Interrupt 
0: No Pending Interrupt 
1: RXFIFO Overrun Pending Interrupt Write `1` to clear this interrupt </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO</name>
                  <description>RXFIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXNU_INT</name>
              <description>TXnU_INT TX FIFO Underrun Pending Interrupt 
0: No Pending Interrupt 
1: TXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO</name>
                  <description>TXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_RXDIF_CONT[%s]</name>
          <description>I2Sn RXDIF Contact Select</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF000</resetMask>
          <fields>
            <field>
              <name>R_XN_CONTACT_RXDIF</name>
              <description>RXn_CONTACT_RXDIF Bit[31]:APBIF_TXDIF0 Bit[30]:APBIF_TXDIF1 Bit[29]:APBIF_TXDIF2 Bit[28]:Reserved Bit[27]:I2S0_TXDIF Bit[26]:I2S1_TXDIF(HDMI) Bit[25]:I2S2_TXDIF Bit[24]:Reserved Bit[23]:I2S3_TXDIF Bit[22]:Reserved Bit[21]:Reserved Bit[20]:Reserved Bit[19]:DAM0_TXDIF Bit[18]:Reserved Bit[17]:Reserved Bit[16]:Reserved Bit[15]:DAM1_TXDIF Bit[14]:Reserved Bit[13]:Reserved Bit[12]:Reserved When the TXDIF Contact to this RXDIF, the corresponding bit will be set. </description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_SDINCHMAP0[%s]</name>
          <description>I2Sn SDIN Channel Mapping 0</description>
          <addressOffset>0x274</addressOffset>
          <resetValue>0x76543210</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDIN_SLOT7_MAP</name>
              <description>SDIN Slot7 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT6_MAP</name>
              <description>SDIN Slot6 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT5_MAP</name>
              <description>SDIN Slot5 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT4_MAP</name>
              <description>SDIN Slot4 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT3_MAP</name>
              <description>SDIN Slot3 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT2_MAP</name>
              <description>SDIN Slot2 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT1_MAP</name>
              <description>SDIN Slot1 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT0_MAP</name>
              <description>SDIN Slot0 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_SDINCHMAP1[%s]</name>
          <description>I2Sn SDIN Channel Mapping 1</description>
          <addressOffset>0x278</addressOffset>
          <resetValue>0xFEDCBA98</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDIN_SLOT15_MAP</name>
              <description>SDIN Slot15 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT14_MAP</name>
              <description>SDIN Slot14 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT13_MAP</name>
              <description>SDIN Slot13 Mapping 
0: 1 channel data ... 
15: 16 channel data </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT12_MAP</name>
              <description>SDIN Slot12 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT11_MAP</name>
              <description>SDIN Slot11 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT10_MAP</name>
              <description>SDIN Slot10 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT9_MAP</name>
              <description>SDIN Slot9 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIN_SLOT8_MAP</name>
              <description>SDIN Slot8 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>I2Sn_SDIN_SLOTCTR[%s]</name>
          <description>I2Sn Input Slot Control</description>
          <addressOffset>0x270</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F0000</resetMask>
          <fields>
            <field>
              <name>SDIN_OFFSET</name>
              <description>SDIN offset tune, SDIN data offset to LRCK 
0: no offset n: data is offset by n BCLKs to LRCK </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIN_SLOT_NUM</name>
              <description>SDIN Slot number Select for each output 
0000: 1 Slots ... 
0111: 8 Slots 
1000: 9 Slots ... 
1111: 16 Slots </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 Slots ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 Slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 Slots ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 Slots</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2Sn_SDOUTmCHMAP0_0</name>
          <description>I2Sn SDOUTm Channel Mapping 0</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x76543210</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDOU_TM_SLOT7_MAP</name>
              <description>SDOUTm_SLOT7_MAP SDOUT Slot7 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT6_MAP</name>
              <description>SDOUTm_SLOT6_MAP SDOUT Slot6 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT5_MAP</name>
              <description>SDOUTm_SLOT5_MAP SDOUT Slot5 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT4_MAP</name>
              <description>SDOUTm_SLOT4_MAP SDOUT Slot4 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT3_MAP</name>
              <description>SDOUTm_SLOT3_MAP SDOUT Slot3 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT2_MAP</name>
              <description>SDOUTm_SLOT2_MAP SDOUT Slot2 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT1_MAP</name>
              <description>SDOUTm_SLOT1_MAP SDOUT Slot1 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT0_MAP</name>
              <description>SDOUTm_SLOT0_MAP SDOUT Slot0 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_1</name>
          <addressOffset>0x244</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_2</name>
          <addressOffset>0x254</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_3</name>
          <addressOffset>0x264</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_4</name>
          <addressOffset>0x334</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_5</name>
          <addressOffset>0x344</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_6</name>
          <addressOffset>0x354</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_7</name>
          <addressOffset>0x364</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_8</name>
          <addressOffset>0x434</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_9</name>
          <addressOffset>0x444</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_10</name>
          <addressOffset>0x454</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_11</name>
          <addressOffset>0x464</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_12</name>
          <addressOffset>0x534</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_13</name>
          <addressOffset>0x544</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_14</name>
          <addressOffset>0x554</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP0_0">
          <name>I2Sn_SDOUTmCHMAP0_15</name>
          <addressOffset>0x564</addressOffset>
        </register>
        <register>
          <name>I2Sn_SDOUTmCHMAP1_0</name>
          <description>I2Sn SDOUTm Channel Mapping 1</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0xFEDCBA98</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SDOU_TM_SLOT15_MAP</name>
              <description>SDOUTm_SLOT15_MAP SDOUT Slot15 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT14_MAP</name>
              <description>SDOUTm_SLOT14_MAP SDOUT Slot14 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT13_MAP</name>
              <description>SDOUTm_SLOT13_MAP SDOUT Slot13 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT12_MAP</name>
              <description>SDOUTm_SLOT12_MAP SDOUT Slot12 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT11_MAP</name>
              <description>SDOUTm_SLOT11_MAP SDOUT Slot11 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT10_MAP</name>
              <description>SDOUTm_SLOT10_MAP SDOUT Slot10 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT9_MAP</name>
              <description>SDOUTm_SLOT9_MAP SDOUT Slot9 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT8_MAP</name>
              <description>SDOUTm_SLOT8_MAP SDOUT Slot8 Mapping 
0000: 1 channel data ... 
1111: 16 channel data </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel data ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 channel data</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_1</name>
          <addressOffset>0x248</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_2</name>
          <addressOffset>0x258</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_3</name>
          <addressOffset>0x268</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_4</name>
          <addressOffset>0x338</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_5</name>
          <addressOffset>0x348</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_6</name>
          <addressOffset>0x358</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_7</name>
          <addressOffset>0x368</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_8</name>
          <addressOffset>0x438</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_9</name>
          <addressOffset>0x448</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_10</name>
          <addressOffset>0x458</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_11</name>
          <addressOffset>0x468</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_12</name>
          <addressOffset>0x538</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_13</name>
          <addressOffset>0x548</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_14</name>
          <addressOffset>0x558</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTmCHMAP1_0">
          <name>I2Sn_SDOUTmCHMAP1_15</name>
          <addressOffset>0x568</addressOffset>
        </register>
        <register>
          <name>I2Sn_SDOUTm_SLOTCTR_0</name>
          <description>I2Sn Output Slot Control</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>SDOU_TM_OFFSET</name>
              <description>SDOUTm_OFFSET SDOUT offset tune, SDOUT data offset to LRCK 
0: no offset n: data is offset by n BCLKs to LRCK </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDOU_TM_SLOT_NUM</name>
              <description>SDOUTm_SLOT_NUM SDOUT slot number select for each output 
0000: 1 Slots ... 
0111: 8 Slots 
1000: 9 Slots ... 
1111: 16 Slots </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 Slots ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 Slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 Slots ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 Slots</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDOU_TM_SLOT_EN</name>
              <description>SDOUTm_SLOT_EN SDOUT slot enable, bit[15:0] refer to slot[15:0]. When one or more slot(s) is(are) disable, the affected slot(s) is(are) set to disable state 
0: Disable 
1: Enable  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_1</name>
          <addressOffset>0x240</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_2</name>
          <addressOffset>0x250</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_3</name>
          <addressOffset>0x260</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_4</name>
          <addressOffset>0x330</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_5</name>
          <addressOffset>0x340</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_6</name>
          <addressOffset>0x350</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_7</name>
          <addressOffset>0x360</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_8</name>
          <addressOffset>0x430</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_9</name>
          <addressOffset>0x440</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_10</name>
          <addressOffset>0x450</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_11</name>
          <addressOffset>0x460</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_12</name>
          <addressOffset>0x530</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_13</name>
          <addressOffset>0x540</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_14</name>
          <addressOffset>0x550</addressOffset>
        </register>
        <register derivedFrom="I2Sn_SDOUTm_SLOTCTR_0">
          <name>I2Sn_SDOUTm_SLOTCTR_15</name>
          <addressOffset>0x560</addressOffset>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC</name>
      <description>RTC</description>
      <groupName>generic</groupName>
      <baseAddress>0x7000000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ALARM0_COUNTER_REG</name>
          <description>Alarm 0 Counter Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_COUNTER</name>
              <description>Alarm 0 Counter is based on second. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_CUR_VLU_REG</name>
          <description>Alarm 0 Counter Current Value Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ALARM0_CUR_VLU</name>
              <description>Check Alarm 0 Counter Current Values. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_ENABLE_REG</name>
          <description>Alarm 0 Enable Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALM_0_EN</name>
              <description>Alarm 0 Enable. If this bit is set to `1`, the valid bits of Alarm 0 Counter Register will down count to zero, and the alarm pending bit will be set to `1`. 
0: Disable  
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_EN</name>
          <description>Alarm 0 IRQ Enable Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_EN</name>
              <description>Alarm 0 IRQ Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_STA_REG</name>
          <description>Alarm 0 IRQ Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_PEND</name>
              <description>Alarm 0 IRQ Pending bit. 
0: No effect 
1: Pending, alarm 0 counter value is reached If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, alarm 0 counter value is reached If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_EN_REG</name>
          <description>ALARM1_EN_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>WK6_ALM1_EN</name>
              <description>Week 6 (Sunday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 6, the week 6 alarm irq pending bit will be set to `1`.  </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 6, the week 6 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK5_ALM1_EN</name>
              <description>Week 5 (Saturday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 5, the week 5 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 5, the week 5 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK4_ALM1_EN</name>
              <description>Week 4 (Friday) Alarm 1 Enable. 
0: Disable  
1: Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the register bit[31:29] of RTC HH-MM-SS Register is 4, the week 4 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the register bit[31:29] of RTC HH-MM-SS Register is 4, the week 4 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK3_ALM1_EN</name>
              <description>Week 3 (Thursday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 3, the week 3 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 3, the week 3 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK2_ALM1_EN</name>
              <description>Week 2 (Wednesday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 2, the week 2 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 2, the week 2 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK1_ALM1_EN</name>
              <description>Week 1 (Tuesday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 1, the week 1 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 1, the week 1 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK0_ALM1_EN</name>
              <description>Week 0 (Monday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 0, the week 0 alarm irq pending bit will be set to `1`.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 0, the week 0 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_EN</name>
          <description>Alarm 1 IRQ Enable Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_IRQ_EN</name>
              <description>Alarm 1 IRQ Enable. 
0: Disable 
1: Enable  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_STA_REG</name>
          <description>Alarm 1 IRQ Status Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_WEEK_IRQ_PEND</name>
              <description>Alarm 1 Week (0/1/2/3/4/5/6) IRQ Pending. 
0: No effect 
1: Pending, week counter value is reached If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, week counter value is reached If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_WK_HH_MM_SS</name>
          <description>ALARM1_WK_HH_MM_SS</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59. </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM_CONFIG_REG</name>
          <description>Alarm Configuration Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM_WAKEUP</name>
              <description>Configuration of alarm wake up output. 
0: Disable alarm wake up output 
1: Enable alarm wake up output  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable alarm wake up output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable alarm wake up output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BOOT_CPU_HP_FLAG_REG</name>
          <description>Boot CPU Hot Plug Flag Register</description>
          <addressOffset>0x1B8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT</name>
              <description>Boot CPU software flag when acting from hot plug. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CALI_CTRL_REG</name>
          <description>Calibration Control Register</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0x8001FFFF</resetMask>
          <fields>
            <field>
              <name>WAKEUP_DCXO_EN_WAKE_UP</name>
              <description>WAKEUP_DCXO_EN Wake up DCXO circuit enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WAKEUP_READY_SLEEP_MODE_CALIBRATION_WAKE</name>
              <description>WAKEUP_READY_SLEEP_MODE Calibration wake up ready sleep mode 
0: Disable 
1: Enable  </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMER_FOR_READY</name>
              <description>TIMER FOR READY SLEEP  Total timer for ready sleep 
0000: 15s 
0001: 30s 
0010: 45s 
0011: 60s 
0100: 90s 
0101: 120s 
0110: 150s Others: / </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_15s</name>
                  <description>15s</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_30s</name>
                  <description>30s</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_45s</name>
                  <description>45s</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_60s</name>
                  <description>60s</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_90s</name>
                  <description>90s</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_120s</name>
                  <description>120s</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_150s</name>
                  <description>150s Others: /</description>
                  <value>0b0110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEUP_CNT_FOR_READY</name>
              <description>WAKEUP_CNT FOR READY SLEEP  Wake up counter for ready sleep 
0000: 250ms 
0001: 500ms 
0010: 750ms 
0011: 1s 
0100: 1.25s 
0101: 1.5s 
0110: 1.75s 
0111: 2s 
1000: 2.25s 
1001: 2.5s 
1010: 2.75s 
1011: 3s 
1100: 3.25s 
1101: 3.5s 
1110: 3.75s 
1111: 4s </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_250ms</name>
                  <description>250ms</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_500ms</name>
                  <description>500ms</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_750ms</name>
                  <description>750ms</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1s</name>
                  <description>1s</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_25s</name>
                  <description>1.25s</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5s</name>
                  <description>1.5s</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_75s</name>
                  <description>1.75s</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2s</name>
                  <description>2s</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_25s</name>
                  <description>2.25s</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_5s</name>
                  <description>2.5s</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_75s</name>
                  <description>2.75s</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3s</name>
                  <description>3s</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_point_25s</name>
                  <description>3.25s</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_point_5s</name>
                  <description>3.5s</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_point_75s</name>
                  <description>3.75s</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4s</name>
                  <description>4s</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAKEUP_CNT_FOR_SLEEP</name>
              <description>WAKEUP_CNT FOR SLEEP  Wake up counter for sleep 
0000: 250ms 
0001: 500ms 
0010: 1s 
0011: 2s 
0100: 3s 
0101: 4s 
0110: 5s 
0111: 6s 
1000: 7s 
1001: 8s 
1010: 9s 
1011: 10s 
1100: 11s 
1101: 12s 
1110: 30s 
1111: 60s </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_250ms</name>
                  <description>250ms</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_500ms</name>
                  <description>500ms</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1s</name>
                  <description>1s</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2s</name>
                  <description>2s</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3s</name>
                  <description>3s</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4s</name>
                  <description>4s</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5s</name>
                  <description>5s</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6s</name>
                  <description>6s</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7s</name>
                  <description>7s</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8s</name>
                  <description>8s</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9s</name>
                  <description>9s</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10s</name>
                  <description>10s</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11s</name>
                  <description>11s</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12s</name>
                  <description>12s</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_30s</name>
                  <description>30s</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_60s</name>
                  <description>60s</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_DCXO_SEL</name>
              <description>WAIT DCXO SEL Select for DCXO active after DCXO enable 0000:1ms 0001:2ms 0010:3ms 0011:4ms ... 
1111: 16ms  </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16ms</name>
                  <description>16ms</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_SOFT_ENT_REG</name>
          <description>CPU_SOFT_ENT_REG</description>
          <addressOffset>0x1BC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT</name>
              <description>Boot CPU software entry register when acting from hot plug or Non-boot CPU software entry register. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_SOFT_ENT_REG1</name>
          <description>CPU Software Entry Register 1</description>
          <addressOffset>0x1FC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CPU</name>
              <description>software entry register when acting from super standby. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_CONFIG_REG</name>
          <description>Crypto Configuration Register</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_EN_REG</name>
          <description>Crypto Enable Register</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CRY_EN</name>
              <description>Crypto Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_KEY_REG</name>
          <description>Crypto Key Register</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CRY_KEY</name>
              <description>Crypto Key </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DCXO_CTRL_REG</name>
          <description>DCXO_CTRL_REG</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x83F10F2</resetValue>
          <resetMask>0x8F7F1FF2</resetMask>
          <fields>
            <field>
              <name>CLK_REQ_ENB</name>
              <description>0: Enable DCXO wake up function 
1: Disable DCXO wake up function </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable DCXO wake up function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable DCXO wake up function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCXO_ICTRL</name>
              <description>DCXO current control value </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCXO_TRIM</name>
              <description>DCXO cap array value cap cell is 55fF   </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCXO_BG</name>
              <description>DCXO bandgap output voltage </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCXO_LDO_INRUSHB</name>
              <description>DCXO LDO driving capacity signal, active high </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_MODE</name>
              <description>Xtal mode enable signal, active high 
0: for external clk input mode. 
1: for normal mode. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>for_external</name>
                  <description>for external clk input mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>for_normal</name>
                  <description>for normal mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCXO_RFCLK_ENHANCE</name>
              <description>DCXO rfclk enhance Enhance driving capacity of output OUT_RF_REFCLK, 0x0 for 5pF, 0x1 for 10pF, 0x2 for 15pF, 0x3 for 20pF </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OSC_CLK_SRC_SEL</name>
              <description>OSC_CLK_SRC_SEL.(Pad select) High frequency clock source select. 
0: XO24M 
1: DCXO </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>XO24M</name>
                  <description>XO24M</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCXO</name>
                  <description>DCXO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCXO_EN</name>
              <description>DCXO enable. 
1: Enable  
0: Disable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPL_HOLD_OUTPUT_REG</name>
          <description>GPL Hold Output Register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GPL10_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL10 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL9_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL9 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL8_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL8 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL7_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL7 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL6_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL6 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL5_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL5 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL4_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL4 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other output may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL3_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL3 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL2_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL2 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL1_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL1 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL0_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL0 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPM_HOLD_OUTPUT_REG</name>
          <description>GPM_HOLD_OUTPUT_REG</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>GPM4_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL4 when system`s power is changing. The outputs must be low level (0) or high level (1) or High-Z; any other output may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPM3_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL3 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPM2_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL2 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPM1_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL1 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPM0_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL0 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>GP_DATA_REGN[%s]</name>
          <description>GP_DATA_REGN[%s]</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GP_DATA</name>
              <description>Data [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CHARA_REG</name>
          <description>IC Characteristic Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_CHARA</name>
              <description>Key Field. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_DATA</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTOSC_CLK_AUTO_CALI_REG</name>
          <description>Internal OSC Clock Auto Calibration Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x1E800000</resetValue>
          <resetMask>0xFFFFFFF7</resetMask>
          <fields>
            <field>
              <name>32K_CALIBRATION_INTEGER_DIVIDE</name>
              <description>32K Calibration Integer Divide Factor. </description>
              <bitRange>[31:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>32K_CALIBRATION_DECIMAL_DIVIDE</name>
              <description>32K Calibration Decimal Divide Factor. </description>
              <bitRange>[19:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RC_CALIBRATION_PRECISE_SELECTION</name>
              <description>RC Calibration Precise Selection 
0: 1ms calibration precise 
1: 16ms calibration precise </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1ms</name>
                  <description>1ms calibration precise</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16ms</name>
                  <description>16ms calibration precise</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RC_CALIBRATION_ENABLE</name>
              <description>RC calibration enable 0 : Close Calibration circuit 1 : Open Calibration circuit </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RC_CALIBRATION_FUNCTION_ENABLE</name>
              <description>RC calibration function enable 0 Normal RC 1 Calibrated RC  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTOSC_CLK_PRESCAL_REG</name>
          <description>Internal OSC Clock Prescalar Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>INTOSC_CLK_PRESCAL</name>
              <description>Internal OSC Clock Prescalar value N. 
0x000: 1 
0x001: 2 
0x002: 3 ...... 
0x1F: 32  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0x000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0x001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3</name>
                  <description>3 ......</description>
                  <value>0x002</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_AUTO_SWT_STA_REG</name>
          <description>LOSC Auto Switch Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>EXT_LOSC_STA</name>
              <description>0: External 32.768k OSC work normally. 
1: External 32.768k OSC work abnormally. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>External_32_point_768k_OSC_work_normally</name>
                  <description>External 32.768k OSC work normally.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External_32_point_768k_OSC_work_abnormally</name>
                  <description>External 32.768k OSC work abnormally.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_AUTO_SWT_PEND</name>
              <description>LOSC auto switch pending. 
0: No effect 
1: Auto switches pending Setting 1 to this bit will clear it. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto switches pending Setting 1 to this bit will clear it.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL_STA</name>
              <description>Checking LOSC Clock Source Status. ` N ` is the value of  Internal OSC Clock Prescalar Register . 
0: InternalOSC /32/ N  
1: External 32.768kHz OSC (InternalOSC = 16MHz)  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>InternalOSC</name>
                  <description>InternalOSC /32/ N</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768kHz OSC (InternalOSC = 16MHz)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_CTRL_REG</name>
          <description>Low Oscillator Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x4010</resetValue>
          <resetMask>0xFFFF439D</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field.  This field should be filled with 0x16AA, and then the bit 0 can be written with the new value. </description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>LOSC_AUTO_SWT_EN</name>
              <description>LOSC Auto Switch Enable. 
0: Disable  
1: Enable. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALM_DDHHMMSS_ACCE</name>
              <description>ALARM DD-HH-MM-SS access. After writing the Alarm 1 Week HH-MM-SS Register , this bit is set and it will be cleared until the real writing operation is finished. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_HHMMSS_ACCE</name>
              <description>RTC HH-MM-SS access. After writing the RTC HH-MM-SS Register , this bit is set and it will be cleared until the real writing operation is finished. After writing the RTC HH-MM-SS Register , the RTC HH-MM-SS Register will be refreshed for at most one second. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_YYMMDD_ACCE</name>
              <description>RTC YY-MM-DD access. After writing the RTC YY-MM-DD Register , this bit is set and it will be cleared until the real writing operation is finished. After writing the RTC YY-MM-DD Register , the RTC YY-MM-DD Register  will be refreshed for at most one second. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_LOSC_EN</name>
              <description>External 32768Hz Crystal Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EXT_LOSC_GSM</name>
              <description>External 32768Hz Crystal GSM. 
00: Low 
01: / 
10: / 11 High </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/ 11 High</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL</name>
              <description>LOSC Clock source Select. ` N ` is the value of Internal OSC Clock Prescalar Register . 
0: InternalOSC /32/ N  
1: External 32.768kHz OSC. (InternalOSC = 16MHz) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>InternalOSC</name>
                  <description>InternalOSC /32/ N</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768kHz OSC. (InternalOSC = 16MHz)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_OUT_GATING_REG</name>
          <description>LOSC Output Gating Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>LOSC_OUT_GATING</name>
              <description>Configuration of LOSC output, and without LOSC output by default. 
0: Enable LOSC output gating 
1: Disable LOSC output gating </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable LOSC output gating</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable LOSC output gating</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_HH_MM_SS_REG</name>
          <description>RTC Hour-Minute-Second Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xE0000000</resetMask>
          <fields>
            <field>
              <name>WK_NO</name>
              <description>Week number. 
000: Monday 
001: Tuesday 
010: Wednesday 
011: Thursday 
100: Friday 
101: Saturday 
110: Sunday 
111: / </description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Monday</name>
                  <description>Monday</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Tuesday</name>
                  <description>Tuesday</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wednesday</name>
                  <description>Wednesday</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Thursday</name>
                  <description>Thursday</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Friday</name>
                  <description>Friday</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Saturday</name>
                  <description>Saturday</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sunday</name>
                  <description>Sunday</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23 </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59 </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PWR_MODE_SEL_REG</name>
          <description>RTC POWER MODE SELECT Register</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>RTC_POW_MOD_SELECT</name>
              <description>VCC-RTC POWER MODE SELECT. 
0: 3.3V 1:1.8V </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V 1:1.8V</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_VIO_REG</name>
          <description>RTC_VIO_REG</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RTC_VIO_REGU</name>
              <description>These bits are useful for regulating the RTC-VIO from 0.6V to 1.3V. 
000: 1.0V 
001: 0.6V 
010: 0.7V 
011: 0.8V 
100: 0.9V 
101: 1.1V 
110: 1.2V 
111: 1.3V </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_point_0V</name>
                  <description>1.0V</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_6V</name>
                  <description>0.6V</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_7V</name>
                  <description>0.7V</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_8V</name>
                  <description>0.8V</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9V</name>
                  <description>0.9V</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_1V</name>
                  <description>1.1V</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_2V</name>
                  <description>1.2V</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_3V</name>
                  <description>1.3V</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_YY_MM_DD_REG</name>
          <description>RTC Year-Month-Day Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x400000</resetMask>
          <fields>
            <field>
              <name>LEAP</name>
              <description>Leap Year. 
0: Not  
1: Leap year. This bit can not set by hardware. It should be set or cleared by software. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Leap</name>
                  <description>Leap year. This bit can not set by hardware. It should be set or cleared by software.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YEAR</name>
              <description>Year. Range from 0~63. </description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONTH</name>
              <description>Month. Range from 1~12.  </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAY</name>
              <description>Day. Range from 1~31. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SUP_STAN_FLAG_REG</name>
          <description>Super Standby Flag Register</description>
          <addressOffset>0x1F8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SUP_STANDBY_FLAG</name>
              <description>Key Field. Any value can be written and read back in the key field, but if the values are not appropriate, the lower 16 bits will not change in this register. Only fellow the appropriate process, the super standby flag can be written in the lower 16 bits. Refer to Description and Diagram. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUP_STANBY_FLAG_DATA</name>
              <description>Refer to Description and Diagram </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USB2.0_HOST</name>
      <description>USB2.0_HOST</description>
      <groupName>generic</groupName>
      <baseAddress>0x5311000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ASYNCLISTADDR</name>
          <description>ASYNCLISTADDR</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFE0</resetMask>
          <fields>
            <field>
              <name>LINK</name>
              <description>Link Pointer (LP) This field contains the address of the next asynchronous queue head to be executed.  These bits correspond to memory address signals [31:5], respectively. </description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPLENGTH</name>
          <description>CAPLENGTH</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CAPLENGTH</name>
              <description>The value in these bits indicates an offset to add to register base to find the beginning of the Operational Register Space. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFIGFLAG</name>
          <description>CONFIGFLAG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CONFIGURE</name>
              <description>Configure Flag(CF) Host software sets this bit as the last action in its process of configuring the Host Controller. This bit controls the default port-routing control logic as follow: Value Meaning 0 Port routing control logic default-routs each port to an implementation dependent classic host controller. 1 Port routing control logic default-routs all ports to this host controller. The default value of this field is `0`. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRINDEX</name>
          <description>FRINDEX</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>FRAME</name>
              <description>Frame Index The value in this register increment at the end of each time frame (e.g. micro-frame).Bits[N:3] are used for the Frame List current index. It means that each location of the frame list is accessed 8 times(frames or Micro-frames) before moving to the next index. The following illustrates Values of N based on the value of the Frame List Size field in the USBCMD register. USBCMD[Frame List Size] Number Elements N 00b 1024 12 01b 512 11 10b 256 10 11b Reserved  </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCPARAMS</name>
          <description>HCCPARAMS</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF6</resetMask>
          <fields>
            <field>
              <name>EHCI</name>
              <description>Extended Capabilities Pointer (EECP) This optional field indicates the existence of a capabilities list. A value of 00b indicates no extended capabilities are implemented. A non-zero value in this register indicates the offset in PCI configuration space of the first EHCI extended capabiliby. The pointer value must be 40h or greater if implemented to maintain to consistency of the PCI header defined for this calss of device. The value of this field is always `00b`. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ISOCHRONOUS</name>
              <description>Isochronous Scheduling Threshold This field indicates, relative to the current position of the executing host controller, where software can reliably update the isochronous schedule. When bit[7] is zero, the value of the least significant 3 bits indicates the number of micro-frames a host controller can hold a set of isochronous data structures(one or more) before flushing the state. When bit[7] is a one, then host software assumes the host controller may cache an isochronous data structure for an entire frame. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ASYNCHRONOUS</name>
              <description>Asynchronous Schedule Park Capability If this bit is set to a one, then the host controller supports the park feature for high-speed queue heads in the Asynchronous Schedule. The feature can be disabled or enabled and set to a specific level by using the Asynchronous Schedule Park Mode Enable and Asynchronous Schedule Park Mode Count fields in the USBCMD register. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PROGRAMMABLE</name>
              <description>Programmable Frame List Flag If this bit is set to a zero, then system software must use a frame list length of 1024 elements with this host controller. The USBCMD register  Frame List Size field is a read-only register and should be set to zero. If set to 1, then system software can specify and use the frame list in the  USBCMD register Frame List Size field to cofigure the host controller. The frame list must always aligned on a 4K page boundary. This requirement ensures that the frame list is always physically contiguous. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCIVERSION</name>
          <description>HCIVERSION</description>
          <addressOffset>0x2</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HCIVERSION</name>
              <description>This is a 16-bit register containing a BCD encoding of the EHCI revision number supported by this host controller. The most significant byte of this register represents a major revision and the least significant byte is the minor revision. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSPARAMS</name>
          <description>HCSPARAMS</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xF0FF8F</resetMask>
          <fields>
            <field>
              <name>DEBUG_PORT_NUMBER_THIS_REGISTER</name>
              <description>Debug Port Number This register identifies which of the host controller ports is the debug port. The value is the port number (one based) of the debug port. This field will always be `0`. </description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMBER_OF_COMPANION_CONTROLLER</name>
              <description>Number of Companion Controller (N_CC) This field indicates the number of companion controllers associated with this USB2.0 host controller. A zero in this field indicates there are no companion host controllers. And a value larger than zero in this field indicates there are companion USB1.1 host controller(s). This field will always be `0`. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMBER_OF_PORT_PER_COMPANION</name>
              <description>Number of  Port per Companion Controller(N_PCC) This field indicates the number of ports supported per companion host controller host controller. It is used to indicate the port routing configuration to system software. This field will always fix with `0`. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_ROUTING_RULES_THIS_FIELD</name>
              <description>Port Routing Rules This field indicates the method used by this implementation for how all ports are mapped to companion controllers. The value of this field has the following interpretation: Value Meaning 0 The first N_PCC ports are routed to the lowest numbered function companion host controller, the next N_PCC port are routed to the next lowest function companion controller, and so on.   1 The port routing is explicitly enumerated by the first N_PORTS elements of the HCSP-PORTTOUTE array. This field will always be `0`. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>N_PORTS_THIS_FIELD</name>
              <description>N_PORTS This field specifies the number of physical downstream ports implemented on this host controller. The value of this field determines how many port registers are addressable in the Operational Register Space. Valid values are in the range of 0x1 to 0x0f. This field is always 1. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSP_PORTROUTE</name>
          <description>HCSP_PORTROUTE</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCSP_PORTROUTE</name>
              <description>This optional field is valid only if Port Routing Rules field in HCSPARAMS register is set to a one. This field is used to allow a host controller implementation to explicitly describe to which companion host controller each implemented port is mapped. This field is a 15-element nibble array (each 4 bit is one array element). Each array location corresponds one-to-one with a physical port provided by the host controller (e.g. PORTROUTE [0] corresponds to the first PORTSC port, PORTROUTE [1] to the second PORTSC port, etc.). The value of each element indicates to which of the companion host controllers this port is routed. Only the first N_PORTS elements have valid information. A value of zero indicates that the port is routed to the lowest numbered function companion host controller. A value of one indicates that the port is routed to the next lowest numbered function companion host controller, and so on. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSIC_PHY_Tune1</name>
          <description>HSIC_PHY_Tune1</description>
          <addressOffset>0x81C</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>TXRPDTUNE</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXSRTUNE</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSIC_PHY_Tune2</name>
          <description>HSIC_PHY_Tune2</description>
          <addressOffset>0x820</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x7FFFFFFF</resetMask>
          <fields>
            <field>
              <name>TESTBURNIN</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TESTDATAOUTSEL</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TESTCLK</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TESTADDR</name>
              <description></description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TESTDATAIN</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIDDQ</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REFCLK</name>
              <description>DIV </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSIC_PHY_tune3_Register</name>
          <description>HSIC_PHY_tune3_Register</description>
          <addressOffset>0x824</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x33</resetMask>
          <fields>
            <field>
              <name>HSIC_BIST_ERROR</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HSIC_BIST_DONE</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NON_HSIC_MODE_BIST_ERROR</name>
              <description>testdata out[1] </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NON_HSIC_MODE_BIST_DONE</name>
              <description>testdata out[0] </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkCurrentED__BCED_</name>
          <description>HcBulkCurrentED__BCED_</description>
          <addressOffset>0x42C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BULKCURRENTED_31_4</name>
              <description>BulkCurrentED[31:4] This is advanced to the next ED after the HC has served the present one. HC continues processing the list from where it left off in the last Frame. When it reaches the end of the Bulk list, HC checks the ControlListFilled of HcControl. If set, it copies the content of to and clears the bit. If it is not set, it does nothing. HCD is only allowed to modify this register when the BulkListEnable of is cleared. When set, the HCD only reads the instantaneous value of this register. This is initially set to zero to indicate the end of the Bulk list. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULK_CURRENT_ED</name>
              <description>BulkCurrentED [3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkHeadED_BHED_</name>
          <description>HcBulkHeadED_BHED_</description>
          <addressOffset>0x428</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BHED_31_4</name>
              <description>BHED[31:4] The HcBulkHeadED register contains the physical address of the first Endpoint Descriptor of the Bulk list. HC traverses the Bulk list starting with the HcBulkHeadED pointer. The content is loaded from HCCA during the initialization of HC. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BHED_3_0</name>
              <description>BHED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcCommandStatus</name>
          <description>HcCommandStatus</description>
          <addressOffset>0x408</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000F</resetMask>
          <fields>
            <field>
              <name>SCHEDULING_OVERRUN_COUNT</name>
              <description>SchedulingOverrunCount These bits are incremented on each scheduling overrun error. It is initialized to 00b and wraps around at 11b. This will be incremented when a scheduling overrun is detected even if SchedulingOverrun in has already been set. This is used by HCD to monitor any persistent scheduling problem. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OWERSHIP_CHANGE_REQUEST</name>
              <description>OwershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC. When set HC will set the OwnershipChange field in . After the changeover, this bit is cleared and remains so until the next request from OS HCD. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULKL_LIST_FILLED</name>
              <description>BulklListFilled This bit is used to indicate whether there are any TDs on the Bulk list. It is set by HCD whenever it adds a TD to an ED in the Bulk list.  When HC begins to process the head of the Bulk list, it checks BLF. As long as BulkListFilled is 0, HC will not start processing the Bulk list. If BulkListFilled is 1, HC will start processing the Bulk list and will set BF to 0. If HC finds a TD on the list, then HC will set BulkListFilled to 1 causing the Bulk list processing to continue. If no TD is found on the Bulk list, and if HCD does not set BulkListFilled, then BulkListFilled will still be 0 when HC completes processing the Bulk list and Bulk list processing will stop. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_LIST_FILLED</name>
              <description>ControlListFilled This bit is used to indicate whether there are any TDs on the Control list. It is set by HCD whenever it adds a TD to an ED in the Control list. When HC begins to process the head of the Control list, it checks CLF. As long as ControlListFilled is 0, HC will not start processing the Control list. If CF is 1, HC will start processing the Control list and will set ControlListFilled to 0. If HC finds a TD on the list, then HC will set ControlListFilled to 1 causing the Control list processing to continue. If no TD is found on the Control list, and if the HCD does not set ControlListFilled, then ControlListFilled will still be 0 when HC completes processing the Control list and Control list processing will stop. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET</name>
              <description>HostControllerReset This bit is by HCD to initiate a software reset of HC. Regardless of the functional state of HC, it moves to the USBSuspend state in which most of the operational registers are reset except those stated otherwise; e.g, the InteruptRouting field of HcControl, and no Host bus accesses are allowed. This bit is cleared by HC upon the completion of the reset operation. The reset operation must be completed within 10 ms. This bit, when set, should not cause a reset to the Root Hub and no subsequent reset signaling should be asserted to its downstream ports. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControl</name>
          <description>HcControl</description>
          <addressOffset>0x404</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>REMOTE_WAKEUP_ENABLE</name>
              <description>RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wakeup feature upon the detection of upstream resume signaling. When this bit is set and the ResumeDetected bit in is set, a remote wakeup is signaled to the host system. Setting this bit has no impact on the generation of hardware interrupt. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REMOTE_WAKEUP_CONNECTED</name>
              <description>RemoteWakeupConnected This bit indicates whether HC supports remote wakeup signaling. If remote wakeup is supported and used by the system, it is the responsibility of system firmware to set this bit during POST. HC clear the bit upon a hardware reset but does not alter it upon a software reset. Remote wakeup signaling of the host system is host-bus-specific and is not described in this specification. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPT_ROUTING</name>
              <description>InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus. If clear, all interrupt are routed to the normal host bus interrupt mechanism. If set interrupts are routed to the System Management Interrupt. HCD clears this bit upon a hardware reset, but it does not alter this bit upon a software reset. HCD uses this bit as a tag to indicate the ownership of HC. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_FUNCTIONAL_STATE</name>
              <description>HostControllerFunctionalState for USB 00b USBReset 01b USBResume 10b USBOperational 11b USBSuspend A transition to USBOperational from another state causes SOF generation to begin 1 ms later. HCD may determine whether HC has begun sending SOFs by reading the StartoFrame field of  HcInterruptStatus. This field may be changed by HC only when in the USBSUSPEND state. HC may move from the USBSUSPEND state to the USBRESUME state after detecting the resume signaling from a downstream port. HC enters USBSUSPEND after a software reset, whereas it enters USBRESET after a hardware reset. The latter also resets the Root Hub and asserts subsequent reset signaling to downstream ports. </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULK_LIST_ENABLE</name>
              <description>BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame. If cleared by HCD, processing of the Bulk list does not occur after the next SOF. HC checks this bit whenever it determines to process the list. When disabled, HCD may modify the list. If is pointing to an ED to be removed, HCD must advance the pointer by updating  before re-enabling processing of the list. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_LIST_ENABLE</name>
              <description>ControlListEnable This bit is set to enable the processing of the Control list in the next Frame. If cleared by HCD, processing of the Control list does not occur after the next SOF. HC must check this bit whenever it determines to process the list. When disabled, HCD may modify the list. If is pointing to an ED to be removed, HCD must advance the pointer by updating before re-enabling processing of the list. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ISOCHRONOUS_ENABLE</name>
              <description>IsochronousEnable This bit is used by HCD to enable/disable processing of isochronous EDs. While processing the periodic list in a Frame, HC checks the status of this bit when it finds an Isochronous ED (F=1). If set (enabled), HC continues processing the EDs. If cleared (disabled), HC halts processing of the periodic list (which now contains only isochronous EDs) and begins processing the Bulk/Control lists. Setting this bit is guaranteed to take effect in the next Frame (not the current Frame). </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERIODIC_LIST_ENABLE</name>
              <description>PeriodicListEnable  This bit is set to enable the processing of periodic list in the next Frame. If cleared by HCD, processing of the periodic list does not occur after the next SOF. HC must check this bit before it starts processing the list. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_BULK_SERVICE_RATIO</name>
              <description>ControlBulkServiceRatio This specifies the service ratio between Control and Bulk EDs. Before processing any of the nonperiodic lists, HC must compare the ratio specified with its internal count on how many nonempty Control EDs have been processed, in determining whether to continue serving another Control ED or switching to Bulk EDs. The internal count will be retained when crossing the frame boundary. In case of reset, HCD is responsible for restoring this value. CBSR No. of Control EDs Over Bulk EDs Served 0                1:1 1                2:1 2                3:1 3                4:1 The default value is 0x0. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlCurrentED_CCED_</name>
          <description>HcControlCurrentED_CCED_</description>
          <addressOffset>0x424</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CCED_31_4</name>
              <description>CCED[31:4] The pointer is advanced to the next ED after serving the present one. HC will continue processing the list from where it left off in the last Frame. When it reaches the end of the Control list, HC checks the ControlListFilled of in HcCommandStatus. If set, it copies the content of HcControlHeadED to HcControlCurrentED and clears the bit. If not set, it does nothing.  HCD is allowed to modify this register only when the ControlListEnable of HcControl is cleared. When set, HCD only reads the instantaneous value of this register. Initially, this is set to zero to indicate the end of the Control list. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCED_3_0</name>
              <description>CCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlHeadED_CHED_</name>
          <description>HcControlHeadED_CHED_</description>
          <addressOffset>0x420</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EHCD_31_4</name>
              <description>EHCD[31:4] The HcControlHeadED register contains the physical address of the first  Endpoint Descriptor of the Control list. HC traverse the Control list starting with the HcControlHeadED pointer. The content is loaded from HCCA during the initialization of HC. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EHCD_3_0</name>
              <description>EHCD[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcDoneHead</name>
          <description>HcDoneHead</description>
          <addressOffset>0x430</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCDONEHEAD_31_4</name>
              <description>HcDoneHead[31:4] When a TD is completed, HC writes the content of to the NextTD field of the TD. HC then overwrites the content of with the address of this TD. This is set to zero whenever HC writes the content of this register to HCCA. It also sets the WritebackDoneHead of . </description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HCDONEHEAD_3_0</name>
              <description>HcDoneHead[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmInterval_Register</name>
          <description>HcFmInterval_Register</description>
          <addressOffset>0x434</addressOffset>
          <resetValue>0x2EDF</resetValue>
          <resetMask>0xFFFF3FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_INTERVAL_TOGGLER</name>
              <description>FrameIntervalToggler HCD toggles this bit whenever it loads a new value to FrameInterval. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FS_LARGEST_DATA_PACKET</name>
              <description>FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame. The counter value represents the largest amount of data in bits which can be sent or received by the HC in a single transaction at any given time without causing scheduling overrun. The field value is calculated by the HCD. </description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INTERVAL</name>
              <description>FrameInterval This specifies the interval between two consecutive SOFs in bit times. The nominal value is set to be 11,999. HCD should store the current value of this field before resetting HC. By setting the HostControllerReset field of as this will cause the HC to reset this field to its nominal value. HCD may choose to restore the stored value upon the completion of the Reset sequence. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmNumber</name>
          <description>HcFmNumber</description>
          <addressOffset>0x43C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FRAME_NUMBER</name>
              <description>FrameNumber This is incremented when is re-loaded. It will be rolled over to 0x0 after 0x0ffff. When entering the USBOPERATIONAL state, this will be incremented automatically. The content will be written to HCCA after HC has incremented the FrameNumber at each frame boundary and sent a SOF but before HC reads the first ED in that Frame. After writing to HCCA, HC will set the StartofFrame in  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmRemaining</name>
          <description>HcFmRemaining</description>
          <addressOffset>0x438</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_REMAINING</name>
              <description>FrameRemaining Toggle This bit is loaded from the FrameIntervalToggle field of whenever FrameRemaining reaches 0. This bit is used by HCD for the synchronization between FrameInterval and FrameRemaining. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FRAM_REMAINING</name>
              <description>FramRemaining This counter is decremented at each bit time. When it reaches zero, it is reset by loading the FrameInterval value specified in at the next bit time boundary. When entering the USBOPERATIONAL state, HC re-loads the content with the FrameInterval of and uses the updated value from the next SOF. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcHCCA</name>
          <description>HcHCCA</description>
          <addressOffset>0x418</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCCA_31_8</name>
              <description>HCCA[31:8] This is the base address of the Host Controller Communication Area. This area is used to hold the control structures and the Interrupt table that are accessed by both the Host Controller and the Host Controller Driver. </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HCCA_7_0</name>
              <description>HCCA[7:0] The alignment restriction in HcHCCA register is evaluated by examining the number of zeros in the lower order bits. The minimum alignment is 256 bytes, therefore, bits 0 through 7 must always return 0 when read. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptDisable</name>
          <description>HcInterruptDisable</description>
          <addressOffset>0x414</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A written `0` to this field is ignored by HC. A `1` written to this field disables interrupt generation due events specified in the other bits of this register. This field is set after a hardware or software reset. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Root Hub Status Change; </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Frame Number Over Flow; </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Unrecoverable Error; </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Resume Detected; </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Start of  Flame; </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Write back Done Head; </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Scheduling Overrun; </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptEnable</name>
          <description>HcInterruptEnable</description>
          <addressOffset>0x410</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A `0` writtern to this field is ignored by HC. A `1` written to this field enables interrupt generation due to events specified in the other bits of this register. This is used by HCD as Master Interrupt Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Root Hub Status Change; </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Frame Number Over Flow;   </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Unrecoverable Error; </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Resume Detected; </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Start of  Flame; </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Write back Done Head; </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Scheduling Overrun; </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptStatus</name>
          <description>HcInterruptStatus</description>
          <addressOffset>0x40C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange This bit is set when the content of or the content of any of [NumberofDownstreamPort] has changed. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow This bit is set when the MSb of (bit 15) changes value, from 0 to 1 or from 1 to 0, and after  has been updated. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError This bit is set when HC detects a system error not related to USB. HC should not proceed with any processing nor signaling before the system error has been corrected. HCD clears this bit after HC has been reset. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling. It is the transition from no resume signaling to resume signaling causing this bit to be set. This bit is not set when HCD sets the USBRseume state. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame This bit is set by HC at each start of frame and after the update of HccaFrameNumber. HC also generates a SOF token at the same time. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead This bit is set immediately after HC has written to . Further updates of the will not occur until this bit has been cleared. HCD should only clear this bit after it has saved the content of . </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of . A scheduling overrun will also cause the SchedulingOverrunCount of to be Incremented. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcLSThreshold</name>
          <description>HcLSThreshold</description>
          <addressOffset>0x444</addressOffset>
          <resetValue>0x628</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>LS_THRESHOLD</name>
              <description>LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction. The transaction is started only if FrameRemaining  this field. The value is calculated by HCD with the consideration of transmission and setup overhead. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodCurrentED</name>
          <description>HcPeriodCurrentED</description>
          <addressOffset>0x41C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PCED_31_4</name>
              <description>PCED[31:4] This is used by HC to point to the head of one of the Periodec list which will be processed in the current Frame. The content of this register is updated by HC after a periodic ED has been processed. HCD may read the content in determining which ED is currently being processed at the time of reading. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PCED_3_0</name>
              <description>PCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodicStatus</name>
          <description>HcPeriodicStatus</description>
          <addressOffset>0x440</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PERIODIC_START</name>
              <description>PeriodicStart After a hardware reset, this field is cleared. This is then set by HCD during the HC initialization. The value is calculated roughly as 10% off from . A typical value will be 0x2A3F (0x3e67??). When reaches the value specified, processing of the periodic lists will have priority over Control/Bulk processing. HC will therefore start processing the Interrupt list after completing the current Control or Bulk transaction that is in progress. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRevision</name>
          <description>HcRevision</description>
          <addressOffset>0x400</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>REVISION</name>
              <description>Revision This read-only field contains the BCD representation of the version of the HCI specification that is implemented by this HC. For example, a value of 0x11 corresponds to version 1.1. All of the HC implementations that are compliant with this specification will have a value of 0x10. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorA</name>
          <description>HcRhDescriptorA</description>
          <addressOffset>0x448</addressOffset>
          <resetValue>0x2001201</resetValue>
          <resetMask>0xFF001FFF</resetMask>
          <fields>
            <field>
              <name>POWERONTOPOWERGOODTIME</name>
              <description>PowerOnToPowerGoodTime[POTPGT] This byte specifies the duration HCD has to wait before accessing a powered-on port of the Root Hub. It is implementation-specific. The unit of time is 2 ms. The duration is calculated as POTPGT * 2ms. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_OVER_CURRENT_PROTECTION</name>
              <description>NoOverCurrentProtection This bit describes how the overcurrent status for the Root Hub ports are reported. When this bit is cleared, the OverCurrentProtectionMode field specifies global or per-port reporting. 0  Over-current status is reported collectively for all downstream ports. 1 No overcurrent protection supported. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_PROTECTION_MODE</name>
              <description>OverCurrentProtectionMode This bit describes how the overcurrent status for the Root Hub ports are reported. At reset, these fields should reflect the same mode as PowerSwitchingMode. This field is valid only if the NoOverCurrentProtection field is cleared. 0 Over-current status is reported collectively for all downstream ports. 1 Over-current status is reported on per-port basis. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE</name>
              <description>Device Type This bit specifies that the Root Hub is not a compound device. The Root Hub is not permitted to be a compound device. This field should always read/write 0. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_SWITCHING_MODE</name>
              <description>PowerSwitchingMode This bit is used to specify how the power switching of the Root Hub ports is controlled. It is implementation-specific. This field is only valid if the NoPowerSwitching field is cleared. 0 All ports are powered at the same time. 1 Each port is powered individually. This mode allows port power to be controlled by either the global switch or per-port switching. If the PortPowerControlMask bit is set, the port responds only to port power commands (Set/ClearPortPower). If the port mask is cleared, then the port is controlled only by the global power switch (Set/ClearGlobalPower). </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_POWER_SWITHCING</name>
              <description>NoPowerSwithcing These bits are used to specify whether power switching is supported or ports are always powered. It is implementation-specific. When this bit is cleared, the PowerSwitchingMode specifies global or per-port switching. 0 Ports are power switched. 1 Ports are always powered on when the HC is powered on. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NUMBER_DOWNSTREAM_PORTS</name>
              <description>NumberDownstreamPorts These bits specify the number of downstream ports supported by the Root Hub. It is implementation-specific. The minimum number of ports is 1. The maximum number of ports supported. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorB</name>
          <description>HcRhDescriptorB</description>
          <addressOffset>0x44C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_POWER_CONTROL_MASK</name>
              <description>PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set. When set, the port's power state is only affected by per-port power control (Set/ClearPortPower). When cleared, the port is controlled by the global power switch (Set/ClearGlobalPower). If the device is configured to global switching mode (PowerSwitchingMode = 0 ), this field is not valid. Bit0 Reserved Bit1 Ganged-power mask on Port #1. Bit2 Ganged-power mask on Port #2. ...  Bit15 Ganged-power mask on Port #15. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_REMOVABLE</name>
              <description>DeviceRemovable Each bit is dedicated to a port of the Root Hub. When cleared, the attached device is removable. When set, the attached device is not removable. Bit0 Reserved Bit1 Device attached to Port #1. Bit2 Device attached to Port #2. ...  Bit15 Device attached to Port #15. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhPortStatus</name>
          <description>HcRhPortStatus</description>
          <addressOffset>0x454</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x1F031F</resetMask>
          <fields>
            <field>
              <name>PORT_RESET_STATUS_CHANGE</name>
              <description>PortResetStatusChange This bit is set at the end of the 10-ms port reset signal. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 0 port reset is not complete 1 port reset is complete </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_OVER_CURRENT_INDICATOR_CHANGE</name>
              <description>PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis. This bit is set when Root Hub changes the PortOverCurrentIndicator bit. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 0 no change in PortOverCurrentIndicator 1 PortOverCurrentIndicator has changed </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_SUSPEND_STATUS_CHANGE</name>
              <description>PortSuspendStatusChange This bit is set when the full resume sequence has been completed. This sequence includes the 20-s resume pulse, LS EOP, and 3-ms resychronization delay. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. This bit is also cleared when ResetStatusChange is set. 0 resume is not completed 1 resume completed </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_ENABLE_STATUS_CHANGE</name>
              <description>PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be cleared. Changes from HCD writes do not set this bit. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 0 no change in PortEnableStatus 1 change in PortEnableStatus </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONNECT_STATUS_CHANGE</name>
              <description>ConnectStatusChange This bit is set whenever a connect or disconnect event occurs. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared when a SetPortReset,SetPortEnable, or SetPortSuspend write occurs, this bit is set to force the driver to re-evaluate the connection status since these writes should not occur if the port is disconnected. 0 no change in PortEnableStatus 1 change in PortEnableStatus  NOTE If the DeviceRemovable[NDP] bit is set, this bit is set only after a Root Hub reset to inform the system that the device is attached. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_LOW_SPEED_DEVICE_ATTACHED_W_CLEAR_PORT_POWER</name>
              <description>(read)LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port. When set, a Low Speed device is attached to this port. When clear, a Full Speed device is attached to this port. This field is valid only when the CurrentConnectStatus is set. 0 full speed device attached 1 low speed device attached  (write)ClearPortPower The HCD clears the PortPowerStatus bit by writing a `1` to this bit. Writing a `0` has no effect. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_POWER_STATUS_W_SET_PORT_POWER</name>
              <description>(read)PortPowerStatus This bit reflects the port`s power status, regardless of the type of power switching implemented. This bit is cleared if an overcurrent condition is detected. HCD sets this bit by writing SetPortPower or SetGlobalPower. HCD clears this bit by writing ClearPortPower or ClearGlobalPower. Which power control switches are enabled is determined by PowerSwitchingMode and PortPortControlMask[NumberDownstreamPort]. In global switching mode(PowerSwitchingMode=0), only Set/ClearGlobalPower controls this bit. In per-port power switching (PowerSwitchingMode=1), if the PortPowerControlMask[NDP] bit for the port is set, only Set/ClearPortPower commands are enabled. If the mask is not set, only Set/ClearGlobalPower commands are enabled. When port power is disabled, CurrentConnectStatus, PortEnableStatus, PortSuspendStatus, and PortResetStatus should be reset. 0 port power is off 1 port power is on  (write)SetPortPower The HCD writes a `1` to set the PortPowerStatus bit. Writing a `0` has no effect. NOTE </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_RESET_STATUS_W_SET_PORT_RESET</name>
              <description>(read)PortResetStatus When this bit is set by a write to SetPortReset, port reset signaling is asserted. When reset is completed, this bit is cleared when PortResetStatusChange is set. This bit cannot be set if CurrentConnectStatus is cleared. 0 port reset signal is not active 1 port reset signal is active  (write)SetPortReset The HCD sets the port reset signaling by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortResetStatus, but instead sets ConnectStatusChange. This informs the driver that it attempted to reset a disconnected port. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_OVER_CURRENT_INDICATOR_W_CLEAR_SUSPEND_STATUS</name>
              <description>(read)PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis. If per-port overcurrent reporting is not supported, this bit is set to 0. If cleared, all power operations are normal for this port. If set, an overcurrent condition exists on this port. This bit always reflects the overcurrent input signal. 0 no overcurrent condition. 1 overcurrent condition detected.  (write)ClearSuspendStatus The HCD writes a `1` to initiate a resume. Writing a `0` has no effect. A resume is initiated only if PortSuspendStatus is set. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_SUSPEND_STATUS_W_SET_PORT_SUSPEND</name>
              <description>(read)PortSuspendStatus This bit indicates the port is suspended or in the resume sequence. It is set by a SetSuspendState write and cleared when PortSuspendStatusChange is set at the end of the resume interval. This bit cannot be set if CurrentConnectStatus is cleared. This bit is also cleared when PortResetStatusChange is set at the end of the port reset or when the HC is placed in the USBRESUME state. If an upstream resume is in progress, it should propagate to the HC. 0 port is not suspended 1 port is suspended  (write)SetPortSuspend The HCD sets the PortSuspendStatus bit by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortSuspendStatus; instead it sets ConnectStatusChange. This informs the driver that it attempted to suspend a disconnected port. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_ENABLE_STATUS_W_SET_PORT_ENABLE</name>
              <description>(read)PortEnableStatus This bit indicates whether the port is enabled or disabled. The Root Hub may clear this bit when an overcurrent condition, disconnect event, switched-off power, or operational bus error such as babble is detected. This change also causes PortEnabledStatusChange to be set. HCD sets this bit by writing SetPortEnable and clears it by writing ClearPortEnable. This bit cannot be set when CurrentConnectStatus is cleared. This bit is also set, if not already, at the completion of a port reset when ResetStatusChange is set or port suspend when SuspendStatusChange is set. 0 port is disabled 1 port is enabled  (write)SetPortEnable The HCD sets PortEnableStatus by writing a `1`. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortEnableStatus, but instead sets ConnectStatusChange. This informs the driver that it attempted to enable a disconnected Port. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_CURRENT_CONNECT_STATUS_W_CLEAR_PORT_ENABLE</name>
              <description>(read)CurrentConnectStatus This bit reflects the current state of the downstream port. 0 No device connected 1 Device connected (write)ClearPortEnable The HCD writes a `1` to clear the PortEnableStatus bit. Writing `0` has no effect. The CurrentConnectStatus is not affected by any write.  NOTE This bit is always readed as nonremovalble(DviceRemoveable[NumberDownstreamPort]). </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhStatus_Register</name>
          <description>HcRhStatus_Register</description>
          <addressOffset>0x450</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80038003</resetMask>
          <fields>
            <field>
              <name>WRITE_A_CLEARS</name>
              <description>(write)ClearRemoteWakeupEnable Write a `1` clears DeviceRemoteWakeupEnable. Write a `0` has no effect. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVERCURRENTINDICATORCHANG_THIS_BIT_IS_SET</name>
              <description>OverCurrentIndicatorChang This bit is set by hardware when a change has occurred to the OverCurrentIndicator field of this register. The HCD clears this bit by writing a `1`.Writing a `0` has no effect. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STARTUS_CHANGE_W_SET_GLOBAL_POWER</name>
              <description>(read)LocalPowerStartusChange The Root Hub does not support the local power status features, thus, this bit is always read as `0`. (write)SetGlobalPower In global power mode (PowerSwitchingMode=0), This bit is written to `1` to turn on power to all ports (clear PortPowerStatus). In per-port power mode, it sets PortPowerStatus only on ports whose PortPowerControlMask bit is not set. Writing a `0` has no effect. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_DEVICE_REMOTE_WAKEUP_ENABLE_W_SET_REMOTE_WAKEUP_ENABLE</name>
              <description>(read)DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt. 0 ConnectStatusChange is not a remote wakeup event. 1 ConnectStatusChange is a remote wakeup event.  (write)SetRemoteWakeupEnable Writing a `1` sets DeviceRemoveWakeupEnable. Writing a `0` has no effect. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVERCURRENTINDICATOR_THIS_BIT_REPORTS_OVERCURRENT</name>
              <description>OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented. When set, an overcurrent condition exists. When cleared, all power operations are normal.  If per-port overcurrent protection is implemented this bit is always `0` </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STATUS_W_CLEAR_GLOBAL_POWER</name>
              <description>(Read)LocalPowerStatus When read, this bit returns the LocalPowerStatus of the Root Hub. The Root Hub does not support the local power status feature; thus, this bit is always read as `0`. (Write)ClearGlobalPower When write, this bit is operated as the ClearGlobalPower. In global power mode (PowerSwitchingMode=0), This bit is written to `1` to turn off power to all ports (clear PortPowerStatus). In per-port power mode, it clears PortPowerStatus only on ports whose PortPowerControlMask bit is not set. Writing a `0` has no effect. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIODICLISTBASE</name>
          <description>PERIODICLISTBASE</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF000</resetMask>
          <fields>
            <field>
              <name>BASE</name>
              <description>Base Address These bits correspond to memory address signals [31:12], respectively. This register contains the beginning address of the Periodic Frame List in the system memory.  System software loads this register prior to starting the schedule execution by the Host Controller. The memory structure referenced by this physical memory pointer is assumed to be 4-K byte aligned. The contents of this register are combined with the Frame Index Register (FRINDEX) to enable the Host Controller to step through the Periodic Frame List in sequence. </description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PHY_Control</name>
          <description>PHY_Control</description>
          <addressOffset>0x810</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x10103</resetMask>
          <fields>
            <field>
              <name>BIST_EN</name>
              <description>BIST_EN_A </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>500K_PULLUP_ENABLE</name>
              <description>500K PULLUP ENABLE </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIDDQ_WRITE_TO_ENABLE</name>
              <description>SIDDQ write 1 to enable phy </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VC_CLK</name>
              <description>VC_CLK </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PORTSC</name>
          <description>PORTSC</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0x3F2DFF</resetMask>
          <fields>
            <field>
              <name>WKDSCNNT_E_WRITING</name>
              <description>WKDSCNNT_E Writing this bit to a one enables the port to be sensitive to device disconnects as wake-up events. This field is zero if Port Power is zero. The default value in this field is `0`. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WKCNNT_E_WRITING</name>
              <description>WKCNNT_E Writing this bit to a one enable the port to be sensitive to device connects as wake-up events. This field is zero if Port Power is zero. The default value in this field is `0`. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_TEST</name>
              <description>Port Test Control The value in this field specifies the test mode of the port. The encoding of the test mode bits are as follow: Bits Test Mode 0000b The port is NOT operating in a test mode. 0001b Test J_STATE 0010b Test K_STATE 0011b Test SE0_NAK 0100b Test Packet 0101b Test FORCE_ENABLE 0110b- 1111b  Reserved The default value in this field is `0000b`. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_OWNER</name>
              <description>Port Owner This bit unconditionally goes to a 0b when the Configured bit in the CONFIGFLAG register makes a 0b to 1b transition. This bit unconditionally goes to 1b whenever the Configured bit is zero. System software uses this field to release ownership of the port to selected host controller (in the event that the attached device is not a high-speed device).Software writes a one to this bit when the attached device is not a high-speed device. A one in this bit means that a companion host controller owns and controls the port. Default Value = 1b. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LINE_STATUS</name>
              <description>Line Status These bits reflect the current logical levels of the D+ (bit11) and D-(bit10) signal lines. These bits are used for detection of low-speed USB devices prior to port reset and enable sequence. This read only field is valid only when the port enable bit is zero and the current connect status bit is set to a one. The encoding of the bits are: Bit[11:10] USB State Interpretation 00b SE0 Not Low-speed device, perform EHCI reset. 10b J-state Not Low-speed device, perform EHCI reset. 01b K-state Low-speed device, release ownership of port. 11b Undefined Not Low-speed device, perform EHCI reset. This value of this field is undefined if Port Power is zero. </description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_RESET</name>
              <description>Port Reset 1=Port is in Reset. 0=Port is not in Reset. Default value = 0. When software writes a one to this bit (from a zero), the bus reset sequence as defined in the USB Specification Revision 2.0 is started. Software writes a zero to this bit to terminate the bus reset sequence. Software must keep this bit at a one long enough to ensure the reset sequence, as specified in the USB Specification Revision 2.0, completes.  when software writes this bit to a one , it must also write a zero to the Port Enable bit. Note that when software writes a zero to this bit there may be a delay before the bit status changes to a zero. The bit status will not read as a zero until after the reset has completed. If the port is in high-speed mode after reset is complete, the host controller will automatically enable this port (e.g. set the Port Enable bit to a one). A host controller must terminate the reset and stabilize the state of the port within 2 milliseconds of software transitioning this bit from a one to a zero. For example: if the port detects that the attached device is high-speed during reset, then the host controller must have the port in the enabled state with 2ms of software writing this bit to a zero. The HC Halted bit in the USBSTS register should be a zero before software attempts to use this bit. The host controller may hold Port Reset asserted to a one when the HC Halted bit is a one. This field is zero if Port Power is zero. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUSPEND_PORT</name>
              <description>Suspend Port Enabled Bit and Suspend bit of this register define the port states as follows: Bits[Port Enables, Suspend] Port State      0x Disable      10 Enable      11 Suspend When in suspend state, downstream propagation of data is blocked on this port, except for port reset. The blocking occurs at the end of the current transaction, if a transaction was in progress when this bit was written to 1. In the suspend state, the port is sensitive to resume detection. Not that the bit status does not change until the port is suspend and that there may be a delay in suspending a port if there is a transaction currently in progress on the USB. A write of zero to this bit is ignored by the host controller. The host controller will unconditionally set this bit to a zero when: 1. Software sets the Force Port Resume bit to a zero(from a one). 2. Software sets the Port Reset bit to a one(from a zero). If host software sets this bit to a one when the port is not enabled(i.e. Port enabled bit is a zero), the results are undefined. This field is zero if Port Power is zero. The default value in this field is `0`. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_PORT</name>
              <description>Force Port Resume 1 = Resume detected/driven on port. 0 = No resume (K-state) detected/   driven on port. Default value = 0. This functionality defined for manipulating this bit depends on the value of the Suspend bit. For example, if the port is not suspend and software transitions this bit to a one, then the effects on the bus are undefined. Software sets this bit to a 1 drive resume signaling. The Host Controller sets this bit to a 1 if a J-to-K transition is detected while the port is in the Suspend state. When this bit transitions to a one because a J-to-K transition is detected, the Port Change Detect bit in the USBSTS register is also set to a one. If software sets this bit to a one, the host controller must not set the Port Change Detect bit. Note that when the EHCI controller owns the port, the resume sequence follows the defined sequence documented in the USB Specification Revision 2.0. The resume signaling (Full-speed `K`) is driven on the port as long as this remains a one. Software must appropriately time the Resume and set this bit to a zero when the appropriate amount of time has elapsed. Writing a zero (from one) causes the port to return high-speed mode (forcing the bus below the port into a high-speed idle). This bit will remain a one until the port has switched to high-speed idle. The host controller must complete this transition within 2 milliseconds of software setting this bit to a zero. This field is zero if Port Power is zero. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_CHANGE</name>
              <description>Over-current Change Default = 0. This bit gets set to a one when there is a change to Over-current Active. Software clears this bit by writing a one to this bit position. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>OVER_CURRENT_ACTIVE</name>
              <description>Over-current Active 0 = This port does not have an over-current condition. 1 = This port currently has an over-current condition. This bit will automatically transition from a one to a zero when the over current condition is removed. The default value of this bit is `0`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_ENABLE/DISABLE</name>
              <description>Port Enable/Disable Change Default = 0. 1 = Port enabled/disabled status has changed. 0 = No change. For the root hub, this bit gets set to a one only when a port is disabled due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of the USB Specification for the definition of a Port Error). Software clears this bit by writing a 1 to it. This field is zero if Port Power is zero. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PORT_ENABLED/DISABLED</name>
              <description>Port Enabled/Disabled 1=Enable, 0=Disable. Ports can only be enabled by the host controller as a part of the reset and enable. Software cannot enable a port by writing a one to this field. The host controller will only set this bit to a one when the reset sequence determines that the attached device is a high-speed device. Ports can be disabled by either a fault condition(disconnect event or other fault condition) or by host software. Note that the bit status does not change until the port state actually changes. There may be a delay in disabling or enabling a port due to other host controller and bus events.  When the port is disabled, downstream propagation of data is blocked on this port except for reset. The default value of this field is `0`. This field is zero if Port Power is zero. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONNECT_STATUS</name>
              <description>Connect Status Change 1=Change in Current Connect Status, 0=No change, Default=0. Indicates a change has occurred in the port`s Current Connect Status. The host controller sets this bit for all changes to the port device connect status, even if system software has not cleared an existing connect status change. For example, the insertion status changes twice before system software has cleared the changed condition, hub hardware will be `setting` an already-set bit. Software sets this bit to 0 by writing a 1 to it. This field is zero if Port Power is zero. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CURRENT_CONNECT</name>
              <description>Current Connect Status Device is present on port when the value of this field is a one, and no device is present on port when the value of this field is a zero. This value reflects the current state of the port, and may not correspond directly to the event that caused the Connect Status Change(Bit 1) to be set. This field is zero if Port Power zero. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBCMD</name>
          <description>USBCMD</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x80000</resetValue>
          <resetMask>0xFF0BFF</resetMask>
          <fields>
            <field>
              <name>INTERRUPT_THRESHOLD_CONTROL_THE_VALUE</name>
              <description>Interrupt Threshold Control The value in this field is used by system software to select the maximum rate at which the host controller will issue interrupts. The only valid values are defined below: Value Minimum Interrupt Interval 0x00 Reserved 0x01 1 micro-frame 0x02 2 micro-frame 0x04 4 micro-frame 0x08 8 micro-frame(default, equates to 1 ms) 0x10 16 micro-frame(2ms) 0x20 32 micro-frame(4ms) 0x40 64 micro-frame(8ms) Any other value in this register yields undefined results. The default value in this field is 0x08 . Software modifications to this bit while HC Halted bit is equal to zero results in undefined behavior. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_ENABLE</name>
              <description>Asynchronous Schedule Park Mode Enable If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this bit defaults to a 1 and is R/W. Otherwise the bit must be a zero and is Read Only. Software uses this bit to enable or disable Park mode. When this bit is one, Park mode is enabled. When this bit is zero, Park mode is disabled. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_COUNT</name>
              <description>Asynchronous Schedule Park Mode Count Asynchronous Park Capability bit in the HCCPARAMS register is a one, Then this field defaults to 0x3 and is W/R. Otherwise it defaults to zero and is R. It contains a count of the number of successive transactions the host controller is allowed to execute from a high-speed queue head on the Asynchronous schedule before continuing traversal of the Asynchronous schedule. Valid value are 0x1 to 0x3.Software must not write a zero to this bit when Park Mode Enable is a one as it will result in undefined behavior. </description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LIGHT_HOST_CONTROLLER_RESET_THIS</name>
              <description>Light Host Controller Reset This control bit is not required. If implemented, it allows the driver to reset the EHCI controller without affecting the state of the ports or relationship to the companion host controllers. For example, the PORSTC registers should not be reset to their default values and the CF bit setting should not go to zero (retaining port ownership relationships). A host software read of this bit as zero indicates the Light Host Controller Reset has completed and it si safe for software to re-initialize the host controller. A host software read of this bit as a one indicates the Light Host  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_DOORBELL</name>
              <description>Interrupt on Async Advance Doorbell This bit is used as a doorbell by software to tell the host controller to issue an interrupt the next time it advances asynchronous schedule. Soft- Ware must write a 1 to this bit to ring the doorbell. When the host controller has evicted all appropriate cached schedule state, it sets the Interrupt on Async Advance status bit in the USBSTS. if the Interrupt on Async Advance Enable bit in the USBINTR register is a one then the host controller will assert an interrupt at the next interrupt threshold. The host controller sets this bit to a zero after it has set the Interrupt on Async Advance status bit in the USBSTS register to a one. Software should not write a one to this bit when the asynchronous schedule is disabled. Doing so will yield undefined results. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Asynchronous Schedule Enable This bit controls whether the host controller skips processing the Asynchronous Schedule. Values mean: Bit Value Meaning 0 Do not process the Asynchronous Schedule.  1 Use the ASYNLISTADDR register to access the Asynchronous Schedule. The default value of this field is `0b`. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERIODIC_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Periodic Schedule Enable This bit controls whether the host controller skips processing the Periodic Schedule. Values mean: Bit Value Meaning 0 Do not process the Periodic Schedule.  1 Use the PERIODICLISTBASE register to access the Periodic Schedule. The default value of this field is `0b`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_LIST_SIZE_THIS_FIELD</name>
              <description>Frame List Size This field is R/W only if Programmable Frame List Flag in the HCCPARAMS registers is set to a one. This field specifies the size of the  Frame list. The size the frame list controls which bits in the Frame Index  Register should be used for the Frame List Current index. Values mean: Bits Meaning 00b 1024 elements(4096bytes)Default value 01b 512 elements(2048byts) 10b 256 elements(1024bytes)For resource-constrained condition 11b reserved The default value is `00b`. </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET_THIS_CONTROL</name>
              <description>Host Controller Reset This control bit is used by software to reset the host controller. The effects of this on Root Hub registers are similar to a Chip Hardware Reset. When software writes a one to this bit, the Host Controller resets its internal pipelines, timers, counters, state machines, etc. to their initial value. Any transaction currently in progress on USB is immediately terminated. A USB reset is not driven on downstream ports. All operational registers, including port registers and port state machines are set to their initial values. Port ownership reverts to the companion host controller(s). Software must reinitialize the host controller as described in Section 4.1 of the CHEI Specification in order to return the host controller to an operational state. This bit is set to zero by the Host Controller when the reset process is complete. Software cannot terminate the reset process early by writing a zero to this register. Software should not set this bit to a one when the HC Halted bit in the USBSTS register is a zero. Attempting to reset an actively running host controller will result in undefined behavior. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RUN/STOP_WHEN_SET</name>
              <description>Run/Stop When set to a 1, the Host Controller proceeds with execution of the schedule. When set to 0, the Host Controller completes the current and any actively pipelined transactions on the USB and then halts. The Host Controller must halt within 16 micro-frames after software clears this bit. The HC Halted bit indicates when the Host Controller has finished its pending pipelined transactions and has entered the stopped state. Software must not write a one to this field unless the Host Controller is in the Halt State. The default value is 0x0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBINTR</name>
          <description>USBINTR</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_ENABLE</name>
              <description>Interrupt on Async Advance Enable When this bit is 1, and the Interrupt on Async Advance bit in the USBSTS register is 1, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the Interrupt on Async Advance bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_SYSTEM_ERROR_ENABLE</name>
              <description>Host System Error Enable When this bit is 1, and the Host System Error Status bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Host System Error bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_LIST_ROLLOVER_ENABLE</name>
              <description>Frame List Rollover Enable When this bit is 1, and the Frame List Rollover bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Frame List Rollover bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_CHANGE_INTERRUPT_ENABLE</name>
              <description>Port Change Interrupt Enable When this bit is 1, and the Port Chang Detect bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Port Chang Detect bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_ERROR_INTERRUPT_ENABLE</name>
              <description>USB Error Interrupt Enable When this bit is 1, and the USBERRINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBERRINT bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_INTERRUPT_ENABLE_WHEN_THIS</name>
              <description>USB Interrupt Enable When this bit is 1, and the USBINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBINT bit. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBSTS</name>
          <description>USBSTS</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0xF03F</resetMask>
          <fields>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_STATUS_THE_BIT</name>
              <description>Asynchronous Schedule Status The bit reports the current real status of Asynchronous Schedule. If this bit is a zero then the status of the Asynchronous Schedule is disabled. If this bit is a one then the status of the Asynchronous Schedule is enabled. The Host Controller is not required to immediately disable or enable the Asynchronous Schedule when software transitions the Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is either enabled (1) or disabled (0).  </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PERIODIC_SCHEDULE_STATUS_THE_BIT</name>
              <description>Periodic Schedule Status The bit reports the current real status of the Periodic Schedule. If this bit is a zero then the status of the Periodic Schedule is disabled. If this bit is a one then the status of the Periodic Schedule is enabled. The Host Controller is not required to disable or enable the Periodic Schedule when software transitions the bit in the USBCMD register. When this bit and the bit are the same value, the Periodic Schedule is either enabled (1) or disabled (0). </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RECLAMATION_THIS_IS_A_READ_ONLY</name>
              <description>Reclamation This is a read-only status bit, which is used to detect an empty asynchronous schedule. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HC_HALTED_THIS_BIT</name>
              <description>HC Halted This bit is a zero whenever the Run/Stop bit is a one. The Host Controller Sets this bit to one after it has stopped executing as a result of the Run/Stop bit being set to 0, either by software or by the Host Controller Hardware (e.g. internal error). The default value is `1`. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_SYSTEM</name>
              <description>Interrupt on Async Advance System software can force the host controller to issue an interrupt the next time the host controller advances the asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit in the USBCMD register. This status bit indicates the assertion of that interrupt source. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>HOST_SYSTEM_ERROR_THE_HOST</name>
              <description>Host System Error The Host Controller set this bit to 1 when a serious error occurs during a host system access involving the Host Controller module. When this error occurs, the Host Controller clears the Run/Stop bit in the Command register to prevent further execution of the scheduled TDs. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FRAME_LIST_ROLLOVER_THE_HOST</name>
              <description>Frame List Rollover The Host Controller sets this bit to a one when the Frame List Index rolls over from its maximum value to zero. The exact value at which the rollover occurs depends on the frame list size. For example, if the frame list size is 1024, the Frame Index Register rolls over every time FRINDEX [13] toggles. Similarly, if the size is 512, the Host Controller sets this bit to a one every time FRINDEX [12] toggles. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PORT_CHANGE_DETECT_THE_HOST</name>
              <description>Port Change Detect The Host Controller sets this bit to a one when any port for which the Port Owner bit is set to zero has a change bit transition from a zero to a one or a Force Port Resume bit transition from a zero to a one as a result of a J-K transition detected on a suspended port. This bit will also be set as a result of the Connect Status Chang being set to a one after system software has relinquished ownership of a connected port by writing a one to a port`s Port Owner bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>USB_ERROR_INTERRUPT_THE_HOST</name>
              <description>USB Error Interrupt The Host Controller sets this bit to 1 when completion of USB transaction results in an error condition(e.g. error counter underflow).If the TD on which the error interrupt occurred also had its IOC bit set, both. This bit and USBINT bit are set. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>USB_INTERRUPT_THE_HOST_CONTROLLER</name>
              <description>USB Interrupt The Host Controller sets this bit to a one on the completion of a USB transaction, which results in the retirement of a Transfer Descriptor that had its IOC bit set. The Host Controller also sets this bit to 1 when a short packet is detected (actual number of bytes received was less than the expected number of bytes) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_CTRL</name>
          <description>USB_CTRL</description>
          <addressOffset>0x800</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0x13101F01</resetMask>
          <fields>
            <field>
              <name>DMA_TRANSFER_STATUS_ENABLE</name>
              <description>DMA Transfer Status Enable 
0: Disable 
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OHCI_COUNT_SELECT</name>
              <description>OHCI Count Select 
1: Simulation mode, the counters will be much shorter then real time 
0: Normal mode, the counters will count full time </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Simulation</name>
                  <description>Simulation mode, the counters will be much shorter then real time</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal mode, the counters will count full time</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIMULATION_MODE</name>
              <description>Simulation Mode 
1: Set PHY in a non-driving mode so the EHCI can detect device connection, this is used only for simulation 
0: No effect </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set PHY in a non-driving mode so the EHCI can detect device connection, this is used only for simulation</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EHCI_HS_FORCE_SET</name>
              <description>EHCI HS Force Set 1 to this field force the ehci enter the high speed mode during bus reset. This field only valid when the bit 1 is set. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PP2VBUS</name>
              <description>PP2VBUS 
1: ULPI wrapper interface will automatically set or clear DrvVbus register in ULPI PHY according to the port power status form the root hub 
0: ULPI wrapper will ignore the difference between power status of root hub and ULPI PHY </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ULPI_wrapper_interface</name>
                  <description>ULPI wrapper interface will automatically set or clear DrvVbus register in ULPI PHY according to the port power status form the root hub</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ULPI_wrapper_will_ignore</name>
                  <description>ULPI wrapper will ignore the difference between power status of root hub and ULPI PHY</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR16_ENABLE</name>
              <description>AHB Master Interface INCR16 Enable 
1: Use INCR16 when appropriate 
0: do not use INCR16,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR16</name>
                  <description>Use INCR16 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>do_not_use_INCR16_comma_use</name>
                  <description>do not use INCR16,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR8_ENABLE</name>
              <description>AHB Master Interface INCR8 Enable 
1: Use INCR8 when appropriate 
0: Do not use INCR8,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR8</name>
                  <description>Use INCR8 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Do_not_use_INCR8_comma_use</name>
                  <description>Do not use INCR8,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_BURST_TYPE</name>
              <description>AHB Master Interface Burst Type INCR4 Enable 
1: Use INCR4 when appropriate 
0: Do not use INCR4,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR4</name>
                  <description>Use INCR4 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Do_not_use_INCR4_comma_use</name>
                  <description>Do not use INCR4,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCRX_ALIGN</name>
              <description>AHB Master Interface INCRX Align Enable 
1: start INCRx burst only on burst x-align address 
0: Start burst on any double word boundary NOTE This bit must enable if any bit of 11:9 is enabled. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>start_INCRx</name>
                  <description>start INCRx burst only on burst x-align address</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_burst</name>
                  <description>Start burst on any double word boundary NOTE This bit must enable if any bit of 11:9 is enabled.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ULPI_BYPASS_ENABLE</name>
              <description>ULPI Bypass Enable 
1: Enable UTMI interface, disable ULPI interface 
0: Enable ULPI interface, disable UTMI interface </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable_UTMI</name>
                  <description>Enable UTMI interface, disable ULPI interface</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable_ULPI</name>
                  <description>Enable ULPI interface, disable UTMI interface</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_SPDCR</name>
          <description>USB_SPDCR</description>
          <addressOffset>0x828</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10003</resetMask>
          <fields>
            <field>
              <name>SE0</name>
              <description>Status This bit is set when no-se0 is detected before SOF when bit[1:0] is 10b or 11b </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT</name>
              <description>Port Disable Control 
00: Port Disable when no-se0 detect before SOF 
01: Port Disable when no-se0 detect before SOF 
10: No Port Disable when no-se0 detect before SOF 
11: Port Disable when no-se0 3 time detect before SOF during 8 frames </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>Timer</name>
      <description>Timer</description>
      <groupName>generic</groupName>
      <baseAddress>0x3009000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AVS_CNT0_REG</name>
          <description>AVS Counter 0 Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT0</name>
              <description>Counter 0 for Audio/ Video Sync Application The high 32 bits of the internal 33-bits counter register. The initial value of the internal 33-bits counter register can be set by software. The LSB bit of the 33-bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting AVS_CNT0_PS to `1`. When it is paused, the counter will not increase. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT1_REG</name>
          <description>AVS Counter 1 Register</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1</name>
              <description>Counter 1 for Audio/ Video Sync Application The high 32 bits of the internal 33-bits counter register. The initial value of the internal 33-bits counter register can be set by software. The LSB bit of the 33-bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting AVS_CNT1_PS to `1`. When it is paused, the counter will not increase. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_CTL_REG</name>
          <description>AVS Control Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x303</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_PS</name>
              <description>Audio/Video Sync Counter 1 Pause Control 
0: Not pause 
1: Pause Counter 1 </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_PS</name>
              <description>Audio/Video Sync Counter 0 Pause Control 
0: Not pause 
1: Pause Counter 0 </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT1_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/ Disable. The counter source is OSC24M. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/ Disable. The counter source is OSC24M. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_DIV_REG</name>
          <description>AVS Divisor Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x5DB05DB</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_D</name>
              <description>Divisor N for AVS Counter 1 AVS CN1 CLK=24MHz/Divisor_N1. Divisor N1 = Bit [27:16] + 1. The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33-bits counter engine will maintain another 12-bits counter. The 12-bits counter is used for counting the cycle number of one 24Mhz clock. When the 12-bits counter reaches (&gt;= N) the divisor value, the internal 33-bits counter register will increase 1 and the 12-bits counter will reset to zero and restart again. It can be configured by software at any time. </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AVS_CNT0_D</name>
              <description>Divisor N for AVS Counter 0 AVS CN0 CLK=24MHz/Divisor_N0. Divisor N0 = Bit [11:0] + 1 The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33-bits counter engine will maintain another 12-bits counter. The 12-bits counter is used for counting the cycle number of one 24Mhz clock. When the 12-bits counter reaches (&gt;= N) the divisor value, the internal 33-bits counter register will increase 1 and the 12-bits counter will reset to zero and restart again. It can be configured by software at any time. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT64_CTRL_REG</name>
          <description>64-bit Counter Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CNT64_CLK_SRC_SEL</name>
              <description>64-bit Counter Clock Source Select. 
0: OSC24M 
1: / </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CNT64_RL_EN</name>
              <description>64-bit Counter Read Latch Enable. 
0: no effect  
1: to latch the 64-bit Counter to the Low/Hi registers and it will change to zero after the registers are latched. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_effect</name>
                  <description>no effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to_latch</name>
                  <description>to latch the 64-bit Counter to the Low/Hi registers and it will change to zero after the registers are latched.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CNT64_CLR_EN</name>
              <description>64-bit Counter Clear Enable. 
0: no effect  
1: to clear the 64-bit Counter Low/Hi registers and it will change to zero after the registers are cleared. It is not recommended to clear this counter arbitrarily. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_effect</name>
                  <description>no effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>to_clear</name>
                  <description>to clear the 64-bit Counter Low/Hi registers and it will change to zero after the registers are cleared. It is not recommended to clear this counter arbitrarily.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT64_HIGH_REG</name>
          <description>64-bit Counter High Register</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT64_HI</name>
              <description>64-bit Counter [63:32]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT64_LOW_REG</name>
          <description>64-bit Counter Low Register</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT64_LO</name>
              <description>64-bit Counter [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT_TEST_REG</name>
          <description>Counter Test Mode Register</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CNT64_TEST_EN</name>
              <description>64-bit Counter Test Mode Enable. 
0: Normal Mode 
1: Test Mode.  In the Test Mode, this Counter Low/High registers will count simultaneously. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test</name>
                  <description>Test Mode.  In the Test Mode, this Counter Low/High registers will count simultaneously.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CTRL_REG</name>
          <description>Timer 0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR0_MODE</name>
              <description>Timer 0 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_PRES</name>
              <description>Select the pre-scale of timer 0 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128 </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_SRC</name>
              <description>00:LOSC 
01: OSC24M 
10: / 
11: / </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_RELOAD</name>
              <description>Timer 0 Reload. 
0: No effect 
1: Reload timer 0 Interval value After the bit is set, it can not be written again before it is cleared automatically. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 0 Interval value After the bit is set, it can not be written again before it is cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_EN</name>
              <description>Timer 0 Enable. 
0: Stop/Pause 
1: Start If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CUR_VALUE_REG</name>
          <description>Timer 0 Current Value Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_CUR_VALUE</name>
              <description>Timer 0 Current Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_INTV_VALUE_REG</name>
          <description>Timer 0 Interval Value Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_INTV_VALUE</name>
              <description>Timer 0 Interval Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CTRL_REG</name>
          <description>Timer 1 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR1_MODE</name>
              <description>Timer 1 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_PRES</name>
              <description>Select the pre-scale of timer 1 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128 </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_SRC</name>
              <description>00:LOSC 
01: OSC24M 
10: / 
11: / </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_RELOAD</name>
              <description>Timer 1 Reload. 
0: No effect  
1: Reload timer 1 Interval value After the bit is set, it can not be written again before it`s cleared automatically. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 1 Interval value After the bit is set, it can not be written again before it`s cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_EN</name>
              <description>Timer 1 Enable. 
0: Stop/Pause 
1: Start If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CUR_VALUE_REG</name>
          <description>Timer 1 Current Value Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_CUR_VALUE</name>
              <description>Timer 1 Current Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_INTV_VALUE_REG</name>
          <description>Timer 1 Interval Value Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_INTV_VALUE</name>
              <description>Timer 1 Interval Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_EN_REG</name>
          <description>Timer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TMR1_IRQ_EN</name>
              <description>Timer 1 Interrupt Enable. 
0: No effect 
1: Timer 1 Interval Value reached interrupt enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 1 Interval Value reached interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_EN</name>
              <description>Timer 0 Interrupt Enable. 
0: No effect 
1: Timer 0 Interval Value reached interrupt enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 0 Interval Value reached interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_STA_REG</name>
          <description>Timer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TMR1_IRQ_PEND</name>
              <description>Timer 1 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, timer 1 interval value is reached </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 1 interval value is reached</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_PEND</name>
              <description>Timer 0 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, timer 0 interval value is reached </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 0 interval value is reached</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_CFG_REG</name>
          <description>Watchdog Configuration Register</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>WDOG_CONFIG</name>
              <description>00:/ 
01: to whole system 
10: only interrupt 
11: / </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>to_whole</name>
                  <description>to whole system</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>only_interrupt</name>
                  <description>only interrupt</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_CTRL_REG</name>
          <description>Watchdog Control Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>WDOG_KEY_FIELD</name>
              <description>Watchdog Key Field. Should be written at value 0xA57. Writing any other value in this field aborts the write operation. </description>
              <bitRange>[12:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WDOG_RESTART</name>
              <description>Watchdog Restart. 
0: No effect 
1: Restart the Watchdog 0 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Restart</name>
                  <description>Restart the Watchdog 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_IRQ_EN_REG</name>
          <description>Watchdog IRQ Enable Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>WDOG_IRQ_EN</name>
              <description>Watchdog Interrupt Enable. 
0: No effect 
1: Watchdog interrupt enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Watchdog</name>
                  <description>Watchdog interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_IRQ_STA_REG</name>
          <description>Watchdog Status Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>WDOG_IRQ</name>
              <description>_PEND. Watchdog IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, Watchdog interval value is reached </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, Watchdog interval value is reached</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_MODE_REG</name>
          <description>Watchdog Mode Register</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF1</resetMask>
          <fields>
            <field>
              <name>WDOG_INTV_VALUE</name>
              <description>Watchdog Interval Value. Watchdog clock source is OSC24M / 750. If the clock source is turned off, Watchdog 0 will not work. 
0000: 16000 cycles (0.5s) 
0001: 32000 cycles (1s) 
0010: 64000 cycles (2s) 
0011: 96000 cycles (3s) 
0100: 128000 cycles (4s) 
0101: 160000 cycles (5s) 
0110: 192000 cycles (6s) 
0111: 256000 cycles (8s) 
1000: 320000 cycles (10s) 
1001: 384000 cycles (12s) 
1010: 448000 cycles (14s) 
1011: 512000 cycles (16s) 
1100: / 
1101: / 
1110: / 
1111: / </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16000_cycles</name>
                  <description>16000 cycles (0.5s)</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32000_cycles</name>
                  <description>32000 cycles (1s)</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64000_cycles</name>
                  <description>64000 cycles (2s)</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96000_cycles</name>
                  <description>96000 cycles (3s)</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128000_cycles</name>
                  <description>128000 cycles (4s)</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_160000_cycles</name>
                  <description>160000 cycles (5s)</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192000_cycles</name>
                  <description>192000 cycles (6s)</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256000_cycles</name>
                  <description>256000 cycles (8s)</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_320000_cycles</name>
                  <description>320000 cycles (10s)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_384000_cycles</name>
                  <description>384000 cycles (12s)</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_448000_cycles</name>
                  <description>448000 cycles (14s)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512000_cycles</name>
                  <description>512000 cycles (16s)</description>
                  <value>0b1011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WDOG_EN</name>
              <description>Watchdog Enable. 
0: No effect 
1: Enable the Watchdog </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the Watchdog</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYS_CFG</name>
      <description>SYS_CFG</description>
      <groupName>generic</groupName>
      <baseAddress>0x3000000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>BROM_OUTPUT_REG</name>
          <description>BROM Output Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>BROM_OUTPUT_VALUE</name>
              <description>0: U-Boot pin output 0 
1: U-Boot pin output 1 </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>U_minus_Boot_pin_output_0</name>
                  <description>U-Boot pin output 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_minus_Boot_pin_output_1</name>
                  <description>U-Boot pin output 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROM_OUTPUT_ENALBE</name>
              <description>0: Disable U-Boot pin output 
1: Enable U-Boot pin output </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable U-Boot pin output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable U-Boot pin output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_EPHY_CLK_REG0</name>
          <description>EMAC-EPHY Clock Register 0</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x58000</resetValue>
          <resetMask>0xFFFFBFFF</resetMask>
          <fields>
            <field>
              <name>BPS_EFFUSE</name>
              <description></description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XMII_SEL</name>
              <description>0: Internal SMI and MII 
1: External SMI and MII </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal SMI and MII</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External SMI and MII</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EPHY_MODE</name>
              <description>Operation Mode Selection 00 : Normal Mode 01 : Sim Mode 10 : AFE Test Mode 11 : / </description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_ADDR</name>
              <description>PHY Address </description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_SEL</name>
              <description>0 : 25MHz 1 : 24MHz </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_POL</name>
              <description>0 : High active 1 : Low active </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHUTDOWN</name>
              <description>0 : Power up 1 : Shutdown </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_SELECT</name>
              <description>0 : External PHY  1 : Internal PHY </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RMII_EN</name>
              <description>0 : Disable RMII Module 1 : Enable RMII Module When this bit assert, MII or RGMII interface is disabled( This means bit13 is prior to bit2) </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ETXDC</name>
              <description>Configure EMAC Transmit Clock Delay Chain. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERXDC</name>
              <description>Configure EMAC Receive Clock Delay Chain. </description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERXIE</name>
              <description>Enable EMAC Receive Clock Invertor. 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETXIE</name>
              <description>Enable EMAC Transmit Clock Invertor. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EPIT</name>
              <description>EMAC PHY Interface Type 
0: MII 
1: RGMII </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MII</name>
                  <description>MII</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII</name>
                  <description>RGMII</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETCS</name>
              <description>EMAC Transmit Clock Source 
00: Transmit clock source for MII 
01: External transmit clock source for RMII and RGMII 
10: Internal transmit clock source for RMII and RGMII 
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmit</name>
                  <description>Transmit clock source for MII</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External transmit clock source for RMII and RGMII</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal transmit clock source for RMII and RGMII</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VER_REG</name>
          <description>Version Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xFFFF8007</resetMask>
          <fields>
            <field>
              <name>BOOT_SEL_PAD_STA</name>
              <description>0:SMHC0-&gt;SMHC2-&gt;NAND FLASH-&gt;SPI_NOR 1:SMHC0-&gt;NAND FLASH-&gt;SMHC2-&gt;SPI_NOR </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FEL_SEL_PAD_STA</name>
              <description>Fel_Select_Pin_Status 
0: Run_FEL   1:Try Media Boot </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Run_FEL</name>
                  <description>Run_FEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Try</name>
                  <description>Try Media Boot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART0</name>
      <description>UART0</description>
      <groupName>generic</groupName>
      <baseAddress>0x5000000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>BUS_IDLE_CHK</name>
          <description>UART RS485 Bus Idle Check Register</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>BUS_IDLE_CHK_EN</name>
              <description>1: Enable bus idle check function 
0: Disable bus idle check function </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bus idle check function</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bus idle check function</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_STATUS</name>
              <description>The Flag of Bus Status 1:busy 0:idle </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADJ_TIME</name>
              <description>Bus Idle Time.  The unit is 8*16*Tclk.  </description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RS485_ADDR_MATCH</name>
          <description>UART RS485 Address Match Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ADDR_MATCH</name>
              <description>The matching address uses in AAD mode. It is only available is AAD.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DLY</name>
          <description>UART TX Delay Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLY</name>
              <description>The delay time between the last stop bit and the next start bit. The uint is  16*Tclk. It is used to control the space between two bytes in TX. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_485_CTL</name>
          <description>UART RS485 Control and Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6F</resetMask>
          <fields>
            <field>
              <name>AAD_ADDR_F</name>
              <description>In AAD mode, when UART receives an address byte and the byte is the same as RS485_ADDR_MATCH, this bit will be set 1.If RS485 interrupt is enabled, the RS485 interrupt will arrive.  Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RS485_ADDR_DET_F</name>
              <description>This is a flag of the detecting of address bytes. When UART receives an address byte, this bit will be set 1.If the RS485 Interrupt is enabled, the RS485 interrupt will arrive.  1:An address byte is detected 0:No address byte is detected Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_BF_ADDR</name>
              <description>In NMM mode, If set this bit as 1, UART will receive all the bytes into FIFO before receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_AF_ADDR</name>
              <description>In NMM mode, if set this bit as 1, UART will receive all the bytes into FIFO after receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_SLAVE_MODE_SEL</name>
              <description>RS485 Slave Mode 
00: Normal Multidrop Operation NMM 
01: Auto Address Detection Operation AAD 
10: reserved 
11: reserved  </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Multidrop Operation NMM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Address Detection Operation AAD</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLH</name>
          <description>UART Debug DLH Register</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLH  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLL</name>
          <description>UART Debug DLL Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLL  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level. 
1: Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0. </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>The sending of TX_REQ. In DMA1 mode (FIFO on), if PTE is set 1, when TFL is less than trig, send the DMA request. If PTE is set 0, when FIFO is empty, send the DMA request. The DMA request will stop when FIFO is full. In DMA0 mode, if PTE is set 1 and FIFO on, when TFL is less than trig, send DMA request. If PTE is set 1 and FIFO off, when THRE is empty, send DMA request. If PTE is set 0, when FIFO is empty, send DMA request. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>The sending of RX_DRQ. In DMA1 mode, when RFL is more than or equal to trig or receive timeout, send DRQ. In DMA0 mode, if DMA_PTE_RX = 1 and FIFO on, when RFL is more than trig, send DRQ. In other cases, once the receive data is valid, send DRQ. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration and baudrate register (DLH and DLL) when the UART is busy (USB[0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled NOTE If FIFOs are not enabled, the setting has no effect on operation.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HSK</name>
          <description>UART DMA Handshake Configuration Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xE5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>HANDSHAKE</name>
              <description>Handshake configuration 
0xA5: DMA wait cycle mode 
0xE5: DMA handshake mode </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA_wait_cycle</name>
                  <description>DMA wait cycle mode</description>
                  <value>0xA5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_handshake_mode</name>
                  <description>DMA handshake mode</description>
                  <value>0xE5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RS485_INT_EN</name>
              <description>RS485 Interrupt Enable 0:Disable 1:Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 0011:RS485 Interrupt 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty 0011:RS485 Interrupt</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER) 
1: Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loopback Mode, as determined by MCR[4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active (MCR[6] set to one) the sir_out_n line is continuously pulsed. When in Loopback Mode, the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy (USR[0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the LCR[5] is unset to reverse the LCR[4]. 
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 (LCR[1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  If in UART mode (SIR_MODE == Disabled), it is set whenever the serial input, sir_in, is held in a logic '0' state for longer than the sum of + + + . If in infrared mode (SIR_MODE == Enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error (FE) bit (LSR[3]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the Parity Enable (PEN) bit (LCR[3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the Parity Error (PE) bit (LSR[2]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>UART_FUNCTION</name>
              <description>Select IrDA or RS485 0:UART Mode 1:IrDA SIR Mode 2:RS485 Mode 3:Reverse </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled (MCR[5] set to zero), the rts_n signal is set low by programming MCR[1] (RTS) to a high. In Auto Flow Control, AFCE_MODE == Enabled and active (MCR[5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when MCR[1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n 
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready (DR) bit in the Line Status Register (LCR) is set. If in FIFO mode and FIFOs are enabled (FCR[0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to the THR when the THR Empty (THRE) bit (LSR[5]) is set.  If in FIFO mode and FIFOs are enabled (FCR[0] = 1) and THRE is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART1</name>
      <description>UART1</description>
      <groupName>generic</groupName>
      <baseAddress>0x5000400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>BUS_IDLE_CHK</name>
          <description>UART RS485 Bus Idle Check Register</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>BUS_IDLE_CHK_EN</name>
              <description>1: Enable bus idle check function 
0: Disable bus idle check function </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bus idle check function</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bus idle check function</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_STATUS</name>
              <description>The Flag of Bus Status 1:busy 0:idle </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADJ_TIME</name>
              <description>Bus Idle Time.  The unit is 8*16*Tclk.  </description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RS485_ADDR_MATCH</name>
          <description>UART RS485 Address Match Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ADDR_MATCH</name>
              <description>The matching address uses in AAD mode. It is only available is AAD.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DLY</name>
          <description>UART TX Delay Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLY</name>
              <description>The delay time between the last stop bit and the next start bit. The uint is  16*Tclk. It is used to control the space between two bytes in TX. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_485_CTL</name>
          <description>UART RS485 Control and Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6F</resetMask>
          <fields>
            <field>
              <name>AAD_ADDR_F</name>
              <description>In AAD mode, when UART receives an address byte and the byte is the same as RS485_ADDR_MATCH, this bit will be set 1.If RS485 interrupt is enabled, the RS485 interrupt will arrive.  Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RS485_ADDR_DET_F</name>
              <description>This is a flag of the detecting of address bytes. When UART receives an address byte, this bit will be set 1.If the RS485 Interrupt is enabled, the RS485 interrupt will arrive.  1:An address byte is detected 0:No address byte is detected Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_BF_ADDR</name>
              <description>In NMM mode, If set this bit as 1, UART will receive all the bytes into FIFO before receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_AF_ADDR</name>
              <description>In NMM mode, if set this bit as 1, UART will receive all the bytes into FIFO after receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_SLAVE_MODE_SEL</name>
              <description>RS485 Slave Mode 
00: Normal Multidrop Operation NMM 
01: Auto Address Detection Operation AAD 
10: reserved 
11: reserved  </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Multidrop Operation NMM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Address Detection Operation AAD</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLH</name>
          <description>UART Debug DLH Register</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLH  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLL</name>
          <description>UART Debug DLL Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLL  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level. 
1: Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0. </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>The sending of TX_REQ. In DMA1 mode (FIFO on), if PTE is set 1, when TFL is less than trig, send the DMA request. If PTE is set 0, when FIFO is empty, send the DMA request. The DMA request will stop when FIFO is full. In DMA0 mode, if PTE is set 1 and FIFO on, when TFL is less than trig, send DMA request. If PTE is set 1 and FIFO off, when THRE is empty, send DMA request. If PTE is set 0, when FIFO is empty, send DMA request. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>The sending of RX_DRQ. In DMA1 mode, when RFL is more than or equal to trig or receive timeout, send DRQ. In DMA0 mode, if DMA_PTE_RX = 1 and FIFO on, when RFL is more than trig, send DRQ. In other cases, once the receive data is valid, send DRQ. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration and baudrate register (DLH and DLL) when the UART is busy (USB[0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled NOTE If FIFOs are not enabled, the setting has no effect on operation.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HSK</name>
          <description>UART DMA Handshake Configuration Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xE5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>HANDSHAKE</name>
              <description>Handshake configuration 
0xA5: DMA wait cycle mode 
0xE5: DMA handshake mode </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA_wait_cycle</name>
                  <description>DMA wait cycle mode</description>
                  <value>0xA5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_handshake_mode</name>
                  <description>DMA handshake mode</description>
                  <value>0xE5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RS485_INT_EN</name>
              <description>RS485 Interrupt Enable 0:Disable 1:Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 0011:RS485 Interrupt 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty 0011:RS485 Interrupt</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER) 
1: Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loopback Mode, as determined by MCR[4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active (MCR[6] set to one) the sir_out_n line is continuously pulsed. When in Loopback Mode, the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy (USR[0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the LCR[5] is unset to reverse the LCR[4]. 
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 (LCR[1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  If in UART mode (SIR_MODE == Disabled), it is set whenever the serial input, sir_in, is held in a logic '0' state for longer than the sum of + + + . If in infrared mode (SIR_MODE == Enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error (FE) bit (LSR[3]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the Parity Enable (PEN) bit (LCR[3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the Parity Error (PE) bit (LSR[2]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>UART_FUNCTION</name>
              <description>Select IrDA or RS485 0:UART Mode 1:IrDA SIR Mode 2:RS485 Mode 3:Reverse </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled (MCR[5] set to zero), the rts_n signal is set low by programming MCR[1] (RTS) to a high. In Auto Flow Control, AFCE_MODE == Enabled and active (MCR[5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when MCR[1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n 
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready (DR) bit in the Line Status Register (LCR) is set. If in FIFO mode and FIFOs are enabled (FCR[0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to the THR when the THR Empty (THRE) bit (LSR[5]) is set.  If in FIFO mode and FIFOs are enabled (FCR[0] = 1) and THRE is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART2</name>
      <description>UART2</description>
      <groupName>generic</groupName>
      <baseAddress>0x5000800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>BUS_IDLE_CHK</name>
          <description>UART RS485 Bus Idle Check Register</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>BUS_IDLE_CHK_EN</name>
              <description>1: Enable bus idle check function 
0: Disable bus idle check function </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bus idle check function</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bus idle check function</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_STATUS</name>
              <description>The Flag of Bus Status 1:busy 0:idle </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADJ_TIME</name>
              <description>Bus Idle Time.  The unit is 8*16*Tclk.  </description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RS485_ADDR_MATCH</name>
          <description>UART RS485 Address Match Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ADDR_MATCH</name>
              <description>The matching address uses in AAD mode. It is only available is AAD.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DLY</name>
          <description>UART TX Delay Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLY</name>
              <description>The delay time between the last stop bit and the next start bit. The uint is  16*Tclk. It is used to control the space between two bytes in TX. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_485_CTL</name>
          <description>UART RS485 Control and Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6F</resetMask>
          <fields>
            <field>
              <name>AAD_ADDR_F</name>
              <description>In AAD mode, when UART receives an address byte and the byte is the same as RS485_ADDR_MATCH, this bit will be set 1.If RS485 interrupt is enabled, the RS485 interrupt will arrive.  Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RS485_ADDR_DET_F</name>
              <description>This is a flag of the detecting of address bytes. When UART receives an address byte, this bit will be set 1.If the RS485 Interrupt is enabled, the RS485 interrupt will arrive.  1:An address byte is detected 0:No address byte is detected Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_BF_ADDR</name>
              <description>In NMM mode, If set this bit as 1, UART will receive all the bytes into FIFO before receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_AF_ADDR</name>
              <description>In NMM mode, if set this bit as 1, UART will receive all the bytes into FIFO after receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_SLAVE_MODE_SEL</name>
              <description>RS485 Slave Mode 
00: Normal Multidrop Operation NMM 
01: Auto Address Detection Operation AAD 
10: reserved 
11: reserved  </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Multidrop Operation NMM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Address Detection Operation AAD</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLH</name>
          <description>UART Debug DLH Register</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLH  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLL</name>
          <description>UART Debug DLL Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLL  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level. 
1: Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0. </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>The sending of TX_REQ. In DMA1 mode (FIFO on), if PTE is set 1, when TFL is less than trig, send the DMA request. If PTE is set 0, when FIFO is empty, send the DMA request. The DMA request will stop when FIFO is full. In DMA0 mode, if PTE is set 1 and FIFO on, when TFL is less than trig, send DMA request. If PTE is set 1 and FIFO off, when THRE is empty, send DMA request. If PTE is set 0, when FIFO is empty, send DMA request. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>The sending of RX_DRQ. In DMA1 mode, when RFL is more than or equal to trig or receive timeout, send DRQ. In DMA0 mode, if DMA_PTE_RX = 1 and FIFO on, when RFL is more than trig, send DRQ. In other cases, once the receive data is valid, send DRQ. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration and baudrate register (DLH and DLL) when the UART is busy (USB[0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled NOTE If FIFOs are not enabled, the setting has no effect on operation.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HSK</name>
          <description>UART DMA Handshake Configuration Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xE5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>HANDSHAKE</name>
              <description>Handshake configuration 
0xA5: DMA wait cycle mode 
0xE5: DMA handshake mode </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA_wait_cycle</name>
                  <description>DMA wait cycle mode</description>
                  <value>0xA5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_handshake_mode</name>
                  <description>DMA handshake mode</description>
                  <value>0xE5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RS485_INT_EN</name>
              <description>RS485 Interrupt Enable 0:Disable 1:Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 0011:RS485 Interrupt 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty 0011:RS485 Interrupt</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER) 
1: Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loopback Mode, as determined by MCR[4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active (MCR[6] set to one) the sir_out_n line is continuously pulsed. When in Loopback Mode, the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy (USR[0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the LCR[5] is unset to reverse the LCR[4]. 
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 (LCR[1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  If in UART mode (SIR_MODE == Disabled), it is set whenever the serial input, sir_in, is held in a logic '0' state for longer than the sum of + + + . If in infrared mode (SIR_MODE == Enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error (FE) bit (LSR[3]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the Parity Enable (PEN) bit (LCR[3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the Parity Error (PE) bit (LSR[2]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>UART_FUNCTION</name>
              <description>Select IrDA or RS485 0:UART Mode 1:IrDA SIR Mode 2:RS485 Mode 3:Reverse </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled (MCR[5] set to zero), the rts_n signal is set low by programming MCR[1] (RTS) to a high. In Auto Flow Control, AFCE_MODE == Enabled and active (MCR[5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when MCR[1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n 
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready (DR) bit in the Line Status Register (LCR) is set. If in FIFO mode and FIFOs are enabled (FCR[0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to the THR when the THR Empty (THRE) bit (LSR[5]) is set.  If in FIFO mode and FIFOs are enabled (FCR[0] = 1) and THRE is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART3</name>
      <description>UART3</description>
      <groupName>generic</groupName>
      <baseAddress>0x5000C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>BUS_IDLE_CHK</name>
          <description>UART RS485 Bus Idle Check Register</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>BUS_IDLE_CHK_EN</name>
              <description>1: Enable bus idle check function 
0: Disable bus idle check function </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bus idle check function</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bus idle check function</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_STATUS</name>
              <description>The Flag of Bus Status 1:busy 0:idle </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADJ_TIME</name>
              <description>Bus Idle Time.  The unit is 8*16*Tclk.  </description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RS485_ADDR_MATCH</name>
          <description>UART RS485 Address Match Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ADDR_MATCH</name>
              <description>The matching address uses in AAD mode. It is only available is AAD.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DLY</name>
          <description>UART TX Delay Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLY</name>
              <description>The delay time between the last stop bit and the next start bit. The uint is  16*Tclk. It is used to control the space between two bytes in TX. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_485_CTL</name>
          <description>UART RS485 Control and Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6F</resetMask>
          <fields>
            <field>
              <name>AAD_ADDR_F</name>
              <description>In AAD mode, when UART receives an address byte and the byte is the same as RS485_ADDR_MATCH, this bit will be set 1.If RS485 interrupt is enabled, the RS485 interrupt will arrive.  Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RS485_ADDR_DET_F</name>
              <description>This is a flag of the detecting of address bytes. When UART receives an address byte, this bit will be set 1.If the RS485 Interrupt is enabled, the RS485 interrupt will arrive.  1:An address byte is detected 0:No address byte is detected Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_BF_ADDR</name>
              <description>In NMM mode, If set this bit as 1, UART will receive all the bytes into FIFO before receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_AF_ADDR</name>
              <description>In NMM mode, if set this bit as 1, UART will receive all the bytes into FIFO after receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_SLAVE_MODE_SEL</name>
              <description>RS485 Slave Mode 
00: Normal Multidrop Operation NMM 
01: Auto Address Detection Operation AAD 
10: reserved 
11: reserved  </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Multidrop Operation NMM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Address Detection Operation AAD</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLH</name>
          <description>UART Debug DLH Register</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLH  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLL</name>
          <description>UART Debug DLL Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLL  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level. 
1: Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0. </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>The sending of TX_REQ. In DMA1 mode (FIFO on), if PTE is set 1, when TFL is less than trig, send the DMA request. If PTE is set 0, when FIFO is empty, send the DMA request. The DMA request will stop when FIFO is full. In DMA0 mode, if PTE is set 1 and FIFO on, when TFL is less than trig, send DMA request. If PTE is set 1 and FIFO off, when THRE is empty, send DMA request. If PTE is set 0, when FIFO is empty, send DMA request. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>The sending of RX_DRQ. In DMA1 mode, when RFL is more than or equal to trig or receive timeout, send DRQ. In DMA0 mode, if DMA_PTE_RX = 1 and FIFO on, when RFL is more than trig, send DRQ. In other cases, once the receive data is valid, send DRQ. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration and baudrate register (DLH and DLL) when the UART is busy (USB[0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled NOTE If FIFOs are not enabled, the setting has no effect on operation.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HSK</name>
          <description>UART DMA Handshake Configuration Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xE5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>HANDSHAKE</name>
              <description>Handshake configuration 
0xA5: DMA wait cycle mode 
0xE5: DMA handshake mode </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA_wait_cycle</name>
                  <description>DMA wait cycle mode</description>
                  <value>0xA5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_handshake_mode</name>
                  <description>DMA handshake mode</description>
                  <value>0xE5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RS485_INT_EN</name>
              <description>RS485 Interrupt Enable 0:Disable 1:Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 0011:RS485 Interrupt 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty 0011:RS485 Interrupt</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER) 
1: Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loopback Mode, as determined by MCR[4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active (MCR[6] set to one) the sir_out_n line is continuously pulsed. When in Loopback Mode, the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy (USR[0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the LCR[5] is unset to reverse the LCR[4]. 
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 (LCR[1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  If in UART mode (SIR_MODE == Disabled), it is set whenever the serial input, sir_in, is held in a logic '0' state for longer than the sum of + + + . If in infrared mode (SIR_MODE == Enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error (FE) bit (LSR[3]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the Parity Enable (PEN) bit (LCR[3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the Parity Error (PE) bit (LSR[2]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>UART_FUNCTION</name>
              <description>Select IrDA or RS485 0:UART Mode 1:IrDA SIR Mode 2:RS485 Mode 3:Reverse </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled (MCR[5] set to zero), the rts_n signal is set low by programming MCR[1] (RTS) to a high. In Auto Flow Control, AFCE_MODE == Enabled and active (MCR[5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when MCR[1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n 
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready (DR) bit in the Line Status Register (LCR) is set. If in FIFO mode and FIFOs are enabled (FCR[0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to the THR when the THR Empty (THRE) bit (LSR[5]) is set.  If in FIFO mode and FIFOs are enabled (FCR[0] = 1) and THRE is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>R_UART0</name>
      <description>R_UART0</description>
      <groupName>generic</groupName>
      <baseAddress>0x7080000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>BUS_IDLE_CHK</name>
          <description>UART RS485 Bus Idle Check Register</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>BUS_IDLE_CHK_EN</name>
              <description>1: Enable bus idle check function 
0: Disable bus idle check function </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bus idle check function</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bus idle check function</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_STATUS</name>
              <description>The Flag of Bus Status 1:busy 0:idle </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADJ_TIME</name>
              <description>Bus Idle Time.  The unit is 8*16*Tclk.  </description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RS485_ADDR_MATCH</name>
          <description>UART RS485 Address Match Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>ADDR_MATCH</name>
              <description>The matching address uses in AAD mode. It is only available is AAD.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DLY</name>
          <description>UART TX Delay Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLY</name>
              <description>The delay time between the last stop bit and the next start bit. The uint is  16*Tclk. It is used to control the space between two bytes in TX. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_485_CTL</name>
          <description>UART RS485 Control and Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6F</resetMask>
          <fields>
            <field>
              <name>AAD_ADDR_F</name>
              <description>In AAD mode, when UART receives an address byte and the byte is the same as RS485_ADDR_MATCH, this bit will be set 1.If RS485 interrupt is enabled, the RS485 interrupt will arrive.  Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RS485_ADDR_DET_F</name>
              <description>This is a flag of the detecting of address bytes. When UART receives an address byte, this bit will be set 1.If the RS485 Interrupt is enabled, the RS485 interrupt will arrive.  1:An address byte is detected 0:No address byte is detected Write 1 to clear this bit and reset the RS485 interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_BF_ADDR</name>
              <description>In NMM mode, If set this bit as 1, UART will receive all the bytes into FIFO before receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_AF_ADDR</name>
              <description>In NMM mode, if set this bit as 1, UART will receive all the bytes into FIFO after receiving an address byte. If set as 0, it will not. 1:Receive 0:Not Receive </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RS485_SLAVE_MODE_SEL</name>
              <description>RS485 Slave Mode 
00: Normal Multidrop Operation NMM 
01: Auto Address Detection Operation AAD 
10: reserved 
11: reserved  </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Multidrop Operation NMM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Address Detection Operation AAD</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLH</name>
          <description>UART Debug DLH Register</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLH  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DBG_DLL</name>
          <description>UART Debug DLL Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>DLL  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the DLAB bit (LCR[7]) is set and the UART is not busy (USR[0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers (DLL and DLH) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level. 
1: Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0. </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0 In this mode, if PTE is high and TX FIFO is enable, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is high and TX FIFO is disabled, the TX DMA request will send when THRE is empty. If PTE is low, the TX DMA request will send when the TX FIFO is empty. If dma_pte_rx is high and RX FIFO is enabled, the rx drq will send when RFL is equal to or more than FIFO Trigger Level.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1 In this mode, if TX FIFO is enable and the PTE is high, the TX DMA request will send when TFL is less than or equal to FIFO Trigger Level. If PTE is low, the TX DMA request will send when TX FIFO is empty and the request stops only when TX FIFO is full.  If RFL is equal to or more than FIFO Trigger Level, the rx drq will be set 1, in otherwise, it will be set 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>The sending of TX_REQ. In DMA1 mode (FIFO on), if PTE is set 1, when TFL is less than trig, send the DMA request. If PTE is set 0, when FIFO is empty, send the DMA request. The DMA request will stop when FIFO is full. In DMA0 mode, if PTE is set 1 and FIFO on, when TFL is less than trig, send DMA request. If PTE is set 1 and FIFO off, when THRE is empty, send DMA request. If PTE is set 0, when FIFO is empty, send DMA request. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>The sending of RX_DRQ. In DMA1 mode, when RFL is more than or equal to trig or receive timeout, send DRQ. In DMA0 mode, if DMA_PTE_RX = 1 and FIFO on, when RFL is more than trig, send DRQ. In other cases, once the receive data is valid, send DRQ. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration and baudrate register (DLH and DLL) when the UART is busy (USB[0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled NOTE If FIFOs are not enabled, the setting has no effect on operation.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HSK</name>
          <description>UART DMA Handshake Configuration Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xE5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>HANDSHAKE</name>
              <description>Handshake configuration 
0xA5: DMA wait cycle mode 
0xE5: DMA handshake mode </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA_wait_cycle</name>
                  <description>DMA wait cycle mode</description>
                  <value>0xA5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_handshake_mode</name>
                  <description>DMA handshake mode</description>
                  <value>0xE5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RS485_INT_EN</name>
              <description>RS485 Interrupt Enable 0:Disable 1:Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 0011:RS485 Interrupt 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty 0011:RS485 Interrupt</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register (DLL and DLH) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER) 
1: Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register (RBR) / TX Holding Register(THR) and Interrupt Enable Register (IER)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch LS Register (DLL) and Divisor Latch MS Register (DLM)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loopback Mode, as determined by MCR[4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active (MCR[6] set to one) the sir_out_n line is continuously pulsed. When in Loopback Mode, the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy (USR[0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the LCR[5] is unset to reverse the LCR[4]. 
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4] In RS485 mode, it is the 9 bit--address bit. 11:9 bit = 0, indicates that this is a data byte. 10:9 bit = 1, indicates that this is an address byte. NOTE When use this function, PEN(LCR[3]) must set to 1.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy (USR[0] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 (LCR[1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS (LCR[1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy (USR[0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  If in UART mode (SIR_MODE == Disabled), it is set whenever the serial input, sir_in, is held in a logic '0' state for longer than the sum of + + + . If in infrared mode (SIR_MODE == Enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error (FE) bit (LSR[3]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the Parity Enable (PEN) bit (LCR[3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the Parity Error (PE) bit (LSR[2]) is set if a break interrupt has occurred, as indicated by Break Interrupt (BI) bit (LSR[4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>UART_FUNCTION</name>
              <description>Select IrDA or RS485 0:UART Mode 1:IrDA SIR Mode 2:RS485 Mode 3:Reverse </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, MCR[6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in loopback mode, the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, MCR[6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled (MCR[5] set to zero), the rts_n signal is set low by programming MCR[1] (RTS) to a high. In Auto Flow Control, AFCE_MODE == Enabled and active (MCR[5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when MCR[1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode (MCR[4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n 
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode (MCR[4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In Loopback Mode (MCR[4] set to one), DSR is the same as MCR[0] (DTR).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In Loopback Mode (MCR[4] = 1), CTS is the same as MCR[1] (RTS).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. NOTE Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In Loopback Mode (MCR[4] = 1), DDSR reflects changes on MCR[0] (DTR).  If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <readAction>clear</readAction>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In Loopback Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] (RTS). If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready (DR) bit in the Line Status Register (LCR) is set. If in FIFO mode and FIFOs are enabled (FCR[0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO. </description>
              <bitRange>[8:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to the THR when the THR Empty (THRE) bit (LSR[5]) is set.  If in FIFO mode and FIFOs are enabled (FCR[0] = 1) and THRE is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CPU_CFG</name>
      <description>CPU_CFG</description>
      <groupName>generic</groupName>
      <baseAddress>0x9010000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>C0_CTRL_REG0</name>
          <description>Cluster 0 Control Register0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFF000F1F</resetMask>
          <fields>
            <field>
              <name>SYSBAR_DISABLE</name>
              <description>Disable broadcasting of barriers onto system bus 
0: Barriers are broadcast onto system bus,this requires an AMBA4 interconnect. 
1: Barriers are not broadcast onto the system bus.This is compatible with an AXI3 interconnect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Barriers_are_broadcast</name>
                  <description>Barriers are broadcast onto system bus,this requires an AMBA4 interconnect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Barriers_are_not_broadcast</name>
                  <description>Barriers are not broadcast onto the system bus.This is compatible with an AXI3 interconnect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_INNER</name>
              <description>Enable broadcasting of Inner Shareable transactions 
0: Inner shareable transactions are not broadcasted externally. 
1: Inner shareable transactions are broadcasted externally. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Inner_shareable_transactions_are_not_broadcasted</name>
                  <description>Inner shareable transactions are not broadcasted externally.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inner_shareable_transactions_are_broadcasted</name>
                  <description>Inner shareable transactions are broadcasted externally.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_OUTER</name>
              <description>Enable broadcasting of outer shareable transactions 
0: Outer Shareable transactions are not broadcasted externally. 
0: Outer Shareable transactions are broadcasted externally. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Outer_Shareable_transactions_are_not_broadcasted</name>
                  <description>Outer Shareable transactions are not broadcasted externally.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Outer_Shareable_transactions_are_broadcasted</name>
                  <description>Outer Shareable transactions are broadcasted externally.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_CACHE_MAINT</name>
              <description>Enable broadcasting of cache maintenance operations to downstream caches 
0: Cache maintenance operations are not broadcasted to downstream caches. 
1: Cache maintenance operations are broadcasted to downstream caches. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cache_maintenance_operations_are_not_broadcasted</name>
                  <description>Cache maintenance operations are not broadcasted to downstream caches.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cache_maintenance_operations_are_broadcasted</name>
                  <description>Cache maintenance operations are broadcasted to downstream caches.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AA64N_AA32</name>
              <description>AA64nAA32 Register width state.Determines which execution state the processor boots into after a cold reset. 
0: AArch32 
1: AArch64 The processor should boot from BROM when in AArch32 state while it should boot from the RVBARADDR(Reset Vector Base Address) when in AArch64 state.  </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP15S_DISABLE</name>
              <description>Disable write access to some secure CP15 register. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2_RST_DISABLE</name>
              <description>Disable automatic L2 cache invalidate at reset. 
0: L2 cache is reset by hardware. 
1: L2 cache is not reset by hardware. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>reset</name>
                  <description>L2 cache is reset by hardware.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_reset</name>
                  <description>L2 cache is not reset by hardware.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L1_RST_DISABLE</name>
              <description>Disable automatic Cluster CPU[3:0] L1 cache invalidate at reset. 
0: L1 cache is reset by hardware. 
1: L1 cache is not reset by hardware. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CFG_REG</name>
          <description>Cache Configuration Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x1A</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>EMA</name>
              <description>Cache SRAM EMA control port </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAW</name>
              <description>Cache SRAM EMAW control port  </description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAS</name>
              <description>Cache SRAM EMAS control port </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CPU_STATUS</name>
          <description>C_CPU_STATUS</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0xE0000</resetValue>
          <resetMask>0xF0F0F01</resetMask>
          <fields>
            <field>
              <name>SMP_AMP</name>
              <description>CPU[3:0] is in Symmetric Multiprocessing mode or Asymmetric Multiprocessing mode. 
0: AMP mode 
1: SMP mode </description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFI</name>
              <description>Indicates if Cluster CPU[3:0] is in WFI standby mode. 
0: Processor not in WFI standby mode. 
1: Processor in WFI standby mode </description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFE</name>
              <description>Indicates if Cluster CPU[3:0] is in the WFE standby mode. 
0: Processor not in WFE standby mode 
1: Processor in WFE standby mode </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFIL2</name>
              <description>Indicates if the Cluster L2 memory system is in WFI standby mode. 
0: Cluster L2 not in WFI standby mode 
1: Cluster L2 in WFI standby mode </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cluster_L2_not_in</name>
                  <description>Cluster L2 not in WFI standby mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cluster_L2_in</name>
                  <description>Cluster L2 in WFI standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CTRL_REG1</name>
          <description>C_CTRL_REG1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ACINACTM</name>
              <description>Snoop interface is inactive and no longer accepting requests.  
0: Snoop interface is active 
1: Snoop interface is inactive </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active</name>
                  <description>Snoop interface is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>inactive</name>
                  <description>Snoop interface is inactive</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CTRL_REG2</name>
          <description>C_CTRL_REG2</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x1F1F110</resetMask>
          <fields>
            <field>
              <name>EVENTI</name>
              <description>Event input for processor wake-up from WFE state. This bit must remain HIGH for at least one clock cycle to be visible by the cores. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXM_CLR_3_0</name>
              <description>EXM_CLR[3:0] Clear the status of interface. </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLREXMONREQ</name>
              <description>Clearing of the external global exclusive monitor request. When this bit is asserted, it acts as a WFE wake-up event to all the cores in the MPCore device. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTODISABLE</name>
              <description>Disable the Cryptography Extensions. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2FLUSHREQ</name>
              <description>L2 hardware flush request. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GICCDISABLE</name>
              <description>Globally disables the CPU interface logic and routes the "External" signals directly to the processor: 
0: Enable the GIC CPU interface logic. 
1: Disable the GIC CPU interface logic. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the GIC CPU interface logic.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the GIC CPU interface logic.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_RST_CTRL</name>
          <description>C_RST_CTRL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x13FF0101</resetValue>
          <resetMask>0x13FF010F</resetMask>
          <fields>
            <field>
              <name>DDR_RST</name>
              <description>AXI2MBUS logic circuit Rest. 
0: assert  
1: de-assert </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBIST_RST</name>
              <description>CPUBIST Reset.  The reset signal for test. 
0: assert  
1: de-assert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOC_DBG_RST</name>
              <description>Cluster SOC Debug Reset 
0: assert 
1: de-assert. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETM_RST</name>
              <description>Cluster ETM Reset Assert. 
0: assert 
1: de-assert </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_RST</name>
              <description>Cluster Debug Reset Assert. 
0: assert 
1: de-assert </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2_RST</name>
              <description>Cluster L2 Cache Reset 
0: assert 
1: de-assert. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CORE_RESET</name>
              <description>Cluster CPU[3:0] Reset Assert. 
0: assert 
1: de-assert. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_REG0</name>
          <description>Cluster 0 Debug Control Register0</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0xF</resetValue>
          <resetMask>0x10F0F</resetMask>
          <fields>
            <field>
              <name>DBGL1RSTDISABLE</name>
              <description>Disable L1 data cache automatic invalidate on reset functionality. 
0: Enable automatic invalidation of L1 data cache on reset 
1: Disable automatic invalidation of L1 data cache on reset </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable automatic invalidation of L1 data cache on reset</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable automatic invalidation of L1 data cache on reset</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBGRESTART_3_0</name>
              <description>DBGRESTART[3:0] External restart requests. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_DBGPWRDUP</name>
              <description>Cluster Powered-up 
0: Core is powered down 
1: Core is powered up </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DBG_REG1</name>
          <description>Cluster 0 Debug Control Register1</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DBGRESTARTED_3_0</name>
              <description>DBGRESTARTED[3:0] Handshake for DBGRESTART. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_DBGRSTREQ</name>
              <description>Warm reset request. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>C_DBGNOPWRDWN</name>
              <description>No power-down request. Debugger has requested that processor is not powered down. Debug no power down[3:0]. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>C_DBGPWRUPREQ</name>
              <description>Power up request. Debug power up request[3:0] 
0: Do not request that the core is powered up 
1: Request that the core is powered up </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>L2_STATUS_REG</name>
          <description>Cluster 0 L2 Status Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x700</resetMask>
          <fields>
            <field>
              <name>L2FLUSHDONE</name>
              <description>L2 hardware flush complete </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EVENTO</name>
              <description>Event output. This bit is asserted HIGH for 3 clock cycles when any core in the cluster executes an SEV instruction. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLREXMONACK</name>
              <description>Clearing of the external global exclusive monitor acknowledge. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR0_H</name>
          <description>Reset Vector Base Address Register0_H</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU0. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR0_L</name>
          <description>Reset Vector Base Address Register0_L</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU0. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR1_H</name>
          <description>Reset Vector Base Address Register1_H</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU1. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR1_L</name>
          <description>Reset Vector Base Address Register1_L</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU1. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR2_H</name>
          <description>Reset Vector Base Address Register2_H</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU2. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR2_L</name>
          <description>Reset Vector Base Address Register2_L</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU2. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR3_H</name>
          <description>Reset Vector Base Address Register3_H</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU3. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR3_L</name>
          <description>Reset Vector Base Address Register3_L</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU3. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CPU_SUBSYS_CTRL</name>
      <description>CPU_SUBSYS_CTRL</description>
      <groupName>generic</groupName>
      <baseAddress>0x8100000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>C0_INT_EN</name>
          <description>Cluster0 Interrupt Enable Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>C0_GIC_EN</name>
              <description>Interrupt enable control register. Mask irq_out/firq_out to system domain.  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GENER_CTRL_REG0</name>
          <description>General Control Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>GIC_CFGSDISABLE</name>
              <description>Disables write access to some secure GIC registers.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GENER_CTRL_REG1</name>
          <description>General Control Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xE</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>QOSOVERRIDE</name>
              <description>If HIGH, internally generated values override the ARQOS  and AWQOS  inputs. One bit exists for each slave interface. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACCHANNELEN</name>
              <description>If LOW, then AC requests are not issued on the corresponding slave interface. One bit exists for each slave interface. </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCI_CLK_ON</name>
              <description>Set 1 means CCI Clock always on. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCI_CLK_OFF</name>
              <description>Set 1 means CCI Clock always off. NOTE When CCI_CLK_OFF and CCI_CLK_ON are valid at the same time ,CCI_CLK_OFF has the higher priority than CCI_CLK_ON.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GENER_CTRL_REG2</name>
          <description>General Control Register2</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10001</resetMask>
          <fields>
            <field>
              <name>CDBGRSTACK</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C0_TSCLKCHANGE</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GIC_JTAG_RST_CTRL</name>
          <description>GIC and Jtag Reset Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0xF01</resetValue>
          <resetMask>0xF0F01</resetMask>
          <fields>
            <field>
              <name>EXM_CLR_3_0</name>
              <description>EXM_CLR[3:0] Clear the status of interface, for debug </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CS_RST</name>
              <description>CoreSight Reset. 
0: assert 
1: de-assert. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAP_RST</name>
              <description>DAP Reset. 
0: assert 
1: de-assert. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PORTRST</name>
              <description>Jtag portrst. 
0: assert 
1: de-assert. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRST</name>
              <description>Jtag trst. 
0: assert 
1: de-assert. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GIC_RESET</name>
              <description>Gic_reset_cpu_reg 
0: assert 
1: de-assert.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQ_FIQ_STATUS</name>
          <description>GIC IRQ/FIQ Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIQ_OUT_15_0</name>
              <description>FIQ_OUT[15:0] </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRQ_OUT_15_0</name>
              <description>IRQ_OUT[15:0]  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CSI_BASE</name>
      <description>CSI_BASE</description>
      <groupName>generic</groupName>
      <baseAddress>0x6620000</baseAddress>
      <access>read-write</access>
      <registers/>
    </peripheral>
    <peripheral derivedFrom="CSI_BASE">
      <name>CSI_TOP</name>
      <description>CSI_TOP</description>
      <groupName>generic</groupName>
      <baseAddress>0x6620000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="CSI_BASE">
      <name>CSI_PARSER</name>
      <description>CSI_PARSER</description>
      <groupName>generic</groupName>
      <baseAddress>0x6621000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="CSI_BASE">
      <name>CSI_DMA0</name>
      <description>CSI_DMA0</description>
      <groupName>generic</groupName>
      <baseAddress>0x6623000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="CSI_BASE">
      <name>CSI_DMA1</name>
      <description>CSI_DMA1</description>
      <groupName>generic</groupName>
      <baseAddress>0x6623100</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="CSI_BASE">
      <name>CSI_CCI0</name>
      <description>CSI_CCI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x662E000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>CE_NS</name>
      <description>CE_NS</description>
      <groupName>generic</groupName>
      <baseAddress>0x1904000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CE_ACDA</name>
          <description>Asymmetric Algorithm DMA Current Destination Address</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ASYMMETRIC</name>
              <description>Asymmetric algorithm current destination address DMA writes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ACSA</name>
          <description>Asymmetric Algorithm DMA Current Source Address</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ASYMMETRIC</name>
              <description>Asymmetric algorithm current source address DMA reads. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ESR</name>
          <description>Error Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TASK_CHANNEL_3</name>
              <description>Task channel 3 error type. (the same for other channels) Bit 24: algorithm not support Bit 25: data length error Bit 26: keysram access error. Write `1` to clear. Bit 29: address invalid Bit30: key ladder configuration error other: reserved </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TASK_CHANNEL_2</name>
              <description>Task channel 2 error type. Bit 16: algorithm not support Bit 17: data length error Bit 18: keysram access error. Write `1` to clear. Bit 21: address invalid Bit 22: key ladder configuration error other: reserved </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TASK_CHANNEL_1</name>
              <description>Task channel 1 error type. Bit 8: algorithm not support Bit 9: data length error Bit 10: keysram access error. Write `1` to clear. Bit 13: address invalid Bit 14: key ladder configuration error other: reserved </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TASK_CHANNEL_0</name>
              <description>Task channel 0 error type. Bit 0: algorithm not support Bit 1: data length error Bit 2: keysram access error. Write `1` to clear. Bit 5: address invalid Bit 6: key ladder configuration error other: reserved </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_HCDA</name>
          <description>HASH Algorithm DMA Current Destination Address</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH</name>
              <description>algorithm current destination address DMA writes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_HCSA</name>
          <description>HASH Algorithm DMA Current Source Address</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH</name>
              <description>algorithm current source address DMA reads. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ICR</name>
          <description>Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK</name>
              <description>Task channel0-3 interrupt enable 
0: interrupt disable 
1: interrupt enable </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ISR</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK</name>
              <description>Task channel0-3 end pending 
0: not finished 
1: finished It indicates if task has been completed .  Write `1` to clear it. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_SCDA</name>
          <description>Symmetric Algorithm DMA Current Destination Address</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYMMETRIC</name>
              <description>Symmetric algorithm current destination address DMA writes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_SCSA</name>
          <description>Symmetric Algorithm DMA Current Source Address</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYMMETRIC</name>
              <description>Symmetric algorithm current source address DMA reads. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TDA</name>
          <description>Task Descriptor Address</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TASK</name>
              <description>Task Descriptor Address  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TLR</name>
          <description>Task Load Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F01</resetMask>
          <fields>
            <field>
              <name>ALGORITHM</name>
              <description>Algorithm type, the same with type field in description common control. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TASK</name>
              <description>Task Load When set, CE can load the descriptor of task if task FIFO is not full. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TSR</name>
          <description>Task Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3030303</resetMask>
          <fields>
            <field>
              <name>CHANNEL_IN_RUN_FOR_XTS</name>
              <description>indicate which channel in run for XTS.  
00: task channel0 
01: task channel1 
10: task channel2 
11: task channel3 </description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>task_channel0</name>
                  <description>task channel0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel1</name>
                  <description>task channel1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel2</name>
                  <description>task channel2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel3</name>
                  <description>task channel3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANNEL_IN_RUN_FOR_ASYMMETRIC</name>
              <description>indicate which channel in run for asymmetric.  
00: task channel0 
01: task channel1 
10: task channel2 
11: task channel3 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>task_channel0</name>
                  <description>task channel0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel1</name>
                  <description>task channel1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel2</name>
                  <description>task channel2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel3</name>
                  <description>task channel3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANNEL_IN_RUN_FOR_DIGEST</name>
              <description>indicate which channel in run for digest.  
00: task channel0 
01: task channel1 
10: task channel2 
11: task channel3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>task_channel0</name>
                  <description>task channel0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel1</name>
                  <description>task channel1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel2</name>
                  <description>task channel2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel3</name>
                  <description>task channel3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANNEL_IN_RUN_FOR_SYMMETRIC</name>
              <description>indicate which channel in run for symmetric.  
00: task channel0 
01: task channel1 
10: task channel2 
11: task channel3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>task_channel0</name>
                  <description>task channel0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel1</name>
                  <description>task channel1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel2</name>
                  <description>task channel2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_channel3</name>
                  <description>task channel3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_XCDA</name>
          <description>XTS Algorithm DMA Current Destination Address</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTS</name>
              <description>algorithm current destination address DMA writes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_XCSA</name>
          <description>XTS Algorithm DMA Current Source Address</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>XTS</name>
              <description>algorithm current source address DMA reads. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="CE_NS">
      <name>CE_S</name>
      <description>CE_S</description>
      <groupName>generic</groupName>
      <baseAddress>0x1904800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>CIR_RX</name>
      <description>CIR_RX</description>
      <groupName>generic</groupName>
      <baseAddress>0x7040000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CIR_CTL</name>
          <description>CIR Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>ACTIVE</name>
              <description>Active Pulse Accept Mode 00, 01: Both positive and negative pulses are valid as a leading code.  
10: Only negative pulse is valid as a leading code. 
11: Only positive pulse is valid as a leading code. </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Only_negative</name>
                  <description>Only negative pulse is valid as a leading code.</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Only_positive</name>
                  <description>Only positive pulse is valid as a leading code.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIR</name>
              <description>ENABLE 00~10: Reserved 
11: CIR mode enable </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mode</name>
                  <description>CIR mode enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Global Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXCFG</name>
          <description>CIR Receiver Configure Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x1828</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SCS2</name>
              <description>Bit2 of Sample Clock Select for CIR This bit is defined by SCS bits below. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATHC</name>
              <description>Active Threshold Control for CIR 
0: ATHR in Unit of (Sample Clock) 
1: ATHR in Unit of (128*Sample Clocks) </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ATHR_in_Unit_of__openingparen_Sample</name>
                  <description>ATHR in Unit of (Sample Clock)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ATHR_in_Unit_of__openingparen_128_times_Sample</name>
                  <description>ATHR in Unit of (128*Sample Clocks)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ATHR</name>
              <description>Active Threshold for CIR These bits control the duration of CIR from Idle to Active State. The duration can be calculated by ((ATHR + 1)*(ATHC? Sample Clock: 128*Sample Clock)). </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITHR</name>
              <description>Idle Threshold for CIR The Receiver uses it to decide whether the CIR command has been received. If there is no CIR signal on the air, the receiver is staying in IDLE status. One active pulse will bring the receiver from IDLE status to Receiving status. After the CIR is end, the inputting signal will keep the specified level (high or low level) for a long time. The receiver can use this idle signal duration to decide that it has received the CIR command. The corresponding flag is asserted. If the corresponding interrupt is enabled, the interrupt line is asserted to CPU. When the duration of signal keeps one status (high or low level) for the specified duration ( (ITHR + 1)*128 sample_clk ), this means that the previous CIR command has been finished. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NTHR</name>
              <description>Noise Threshold for CIR When the duration of signal pulse (high or low level) is less than NTHR, the pulse is taken as noise and should be discarded by hardware. 
0: all samples are recorded into RX FIFO 
1: If the signal is only one sample duration, it is taken as noise and discarded. 
2: If the signal is less than (&lt;=) two sample duration, it is taken as noise and discarded. ... 
61: if the signal is less than (&lt;=) sixty-one sample duration, it is taken as noise and discarded. </description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCS</name>
              <description>Sample Clock Select for CIR SCS2 SCS[1] SCS[0] Sample Clock 0 0 0 CIR_CLK/64 0 0 1 CIR_CLK /128 0 1 0 CIR_CLK /256 0 1 1 CIR_CLK /512 1 0 0 CIR_CLK 1 0 1 Reserved 1 1 0 Reserved 1 1 1 Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXFIFO</name>
          <description>CIR Receiver FIFO Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RECEIVER</name>
              <description>Receiver Byte FIFO </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXINT</name>
          <description>CIR Receiver Interrupt Control Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F33</resetMask>
          <fields>
            <field>
              <name>RAL</name>
              <description>RX FIFO Available Received Byte Level for interrupt and DMA request TRIGGER_LEVEL = RAL + 1 </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRQ_EN</name>
              <description>RX FIFO DMA Enable 
0: Disable 
1: Enable When set to `1`, the Receiver FIFO DRQ is asserted if reaching RAL. The DRQ is de-asserted when condition fails. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, the Receiver FIFO DRQ is asserted if reaching RAL. The DRQ is de-asserted when condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAI_EN</name>
              <description>RX FIFO Available Interrupt Enable 
0: Disable 
1: Enable When set to `1`, the Receiver FIFO IRQ is asserted if reaching RAL. The IRQ is de-asserted when condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, the Receiver FIFO IRQ is asserted if reaching RAL. The IRQ is de-asserted when condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPEI_EN</name>
              <description>Receiver Packet End Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI_EN</name>
              <description>Receiver FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXPCFG</name>
          <description>CIR Receiver Pulse Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x4</resetMask>
          <fields>
            <field>
              <name>RPPI</name>
              <description>Receiver Pulse Polarity Invert. 
0: Do not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_invert</name>
                  <description>Do not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXSTA</name>
          <description>CIR Receiver Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F93</resetMask>
          <fields>
            <field>
              <name>RAC</name>
              <description>RX FIFO Available Counter 
0: No available data in RX FIFO 
1: 1 byte available data in RX FIFO 
2: 2 byte available data in RX FIFO ... 
64: 64 byte available data in RX FIFO </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 byte available data in RX FIFO ...</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STAT</name>
              <description>Status of CIR 
0: Idle 
1: busy </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy</name>
                  <description>busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RA</name>
              <description>RX FIFO Available 
0: RX FIFO not available according its level 
1: RX FIFO available according its level This bit is cleared by writing a `1`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_FIFO</name>
                  <description>RX FIFO not available according its level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_FIFO_available</name>
                  <description>RX FIFO available according its level This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPE</name>
              <description>Receiver Packet End Flag 
0: STO was not detected. In CIR mode, one CIR symbol is receiving or not detected. 
1: STO field or packet abort symbol (7`b0000,000 and 8`b0000,0000 for MIR and FIR) is detected. In CIR mode, one CIR symbol is received. This bit is cleared by writing a `1`. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STO_was</name>
                  <description>STO was not detected. In CIR mode, one CIR symbol is receiving or not detected.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STO_field</name>
                  <description>STO field or packet abort symbol (7`b0000,000 and 8`b0000,0000 for MIR and FIR) is detected. In CIR mode, one CIR symbol is received. This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI</name>
              <description>Receiver FIFO Overrun 
0: Receiver FIFO not overrun 
1: Receiver FIFO overrun This bit is cleared by writing a `1`. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiver_FIFO_not_overrun</name>
                  <description>Receiver FIFO not overrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receiver_FIFO_overrun</name>
                  <description>Receiver FIFO overrun This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CIR_TX</name>
      <description>CIR_TX</description>
      <groupName>generic</groupName>
      <baseAddress>0x5070400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CIR_DMA_CTL</name>
          <description>CIR_DMA_CTL</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0xA5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DMA</name>
              <description>Handshake Configuration 
0xA5: DMA wait cycle mode 
0xEA: DMA handshake mode   </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>wait_cycle</name>
                  <description>DMA wait cycle mode</description>
                  <value>0xA5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>handshake_mode</name>
                  <description>DMA handshake mode</description>
                  <value>0xEA</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_IDC_H</name>
          <description>CIR Transmit Idle Duration Threshold Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>IDC_H</name>
              <description>Idle Duration Counter threshold(High 4 bit) Idle Duration = 128*IDC*Ts (IDC = 0~4095) </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_IDC_L</name>
          <description>CIR Transmit Idle Duration Threshold Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>IDC_L</name>
              <description>Idle Duration Counter threshold(Low 8 bit) Idle Duration = 128*IDC*Ts (IDC = 0~4095) </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TAC</name>
          <description>CIR Transmit FIFO Available Counter Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TAC</name>
              <description>TX FIFO Available Space Counter 
0x00: No available space in TX FIFO 
0x01: 1 byte available space in TX FIFO 
0x02: 2 byte available space in TX FIFO ...  
0x80: 128 byte available space in TX FIFO </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available space in TX FIFO</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 byte available space in TX FIFO</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 byte available space in TX FIFO ...</description>
                  <value>0x02</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 byte available space in TX FIFO</description>
                  <value>0x80</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TCR</name>
          <description>CIR Transmit Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>CSS</name>
              <description>Cyclical Pulse Start/Stop Control Start to transmit when set to '1',  
0: Stop when cleared to '0'. From start to stop, all data in FIFO must be transmitted. 
1: Start. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop when cleared to '0'. From start to stop, all data in FIFO must be transmitted.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RCS</name>
              <description>Reference Clock Select for CIR Transmit 
000: CIR Transmit reference clock is ir_clk 
001: CIR Transmit reference clock is ir_clk/2 
010: CIR Transmit reference clock is ir_clk/4 
011: CIR Transmit reference clock is ir_clk/8 
100: CIR Transmit reference clock is ir_clk/64 
101: CIR Transmit reference clock is ir_clk/128 
110: CIR Transmit reference clock is ir_clk/256 
111: CIR Transmit reference clock is ir_clk/512  </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ir_clk</name>
                  <description>CIR Transmit reference clock is ir_clk</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ir_clk_slash_2</name>
                  <description>CIR Transmit reference clock is ir_clk/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ir_clk_slash_4</name>
                  <description>CIR Transmit reference clock is ir_clk/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ir_clk_slash_8</name>
                  <description>CIR Transmit reference clock is ir_clk/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ir_clk_slash_64</name>
                  <description>CIR Transmit reference clock is ir_clk/64</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ir_clk_slash_128</name>
                  <description>CIR Transmit reference clock is ir_clk/128</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ir_clk_slash_256</name>
                  <description>CIR Transmit reference clock is ir_clk/256</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ir_clk_slash_512</name>
                  <description>CIR Transmit reference clock is ir_clk/512</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TTS</name>
              <description>Type of the transmission signal 
0: The transmitting wave is single non-cyclical pulse. 
1: The transmitting wave is cyclical short-pulse. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>single</name>
                  <description>The transmitting wave is single non-cyclical pulse.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>cyclical</name>
                  <description>The transmitting wave is cyclical short-pulse.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TEL</name>
          <description>CIR TX FIFO empty Level Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TEL</name>
              <description>TX FIFO empty Level for DRQ and IRQ. TRIGGER_LEVEL = TEL + 1 </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TGLR</name>
          <description>CIR Transmit Global Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xE7</resetMask>
          <fields>
            <field>
              <name>IMS</name>
              <description>Internal Modulation Select 
0: the transmitting signal is not modulated 
1: the transmitting signal is modulated internally </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_modulated</name>
                  <description>the transmitting signal is not modulated</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>modulated</name>
                  <description>the transmitting signal is modulated internally</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRMC</name>
              <description>Duty ratio of modulated carrier is high level /low level. 
00: low level is the one time of high level     
01: low level is the two times of high level                                                                             
10: low level is the three times of high level    
11: reserved </description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>the_one</name>
                  <description>low level is the one time of high level</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>the_two</name>
                  <description>low level is the two times of high level</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>the_three</name>
                  <description>low level is the three times of high level</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TPPI</name>
              <description>Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TR</name>
              <description>Transmit Reset  When this bit is set, the transmitting is reset. The FIFO will be flush, the  TIC filed and CSS field will be clean during Transmit Reset. This field will automatically clear when the Transmit Reset is finished, and the CIR transmitter will state Idle . </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmit Block Enable 
0: Disable the CIR Transmitter 
1: Enable the CIR Transmitter </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the CIR Transmitter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the CIR Transmitter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TICR_H</name>
          <description>CIR Transmit Idle Counter Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TIC_H</name>
              <description>Transmit Idle Counter_H(High 8 bit) Count in 128*Ts (Sample Duration, 1/Fs) when transmitter is idle, and it should be reset when the transmitter active. When this counter reaches the maximum value (0xFFFF), it will stop automatically, and should not be cleared to zero.   </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TICR_L</name>
          <description>CIR Transmit Idle Counter Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TIC_L</name>
              <description>Transmit Idle Counter_L(Low 8 bit) Count in 128*Ts (Sample Duration, 1/Fs) when transmitter is idle, and it should be reset when the transmitter active. When this counter reaches the maximum value (0xFFFF), it will stop automatically, and should not be cleared to zero.   </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TMCR</name>
          <description>CIR Transmit Modulation Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x9E</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RFMC</name>
              <description>Reference Frequency of modulated carrier.  Reference Frequency of modulated carrier based on a division of a fixed functional clock(FCLK).The range of the modulated carrier is usually 30kHz to 60kHz. The most consumer electronics is 38kHzhe default modulated carrier is 38kHz when FCLK is 6MHz.  RFMC= FCLK/N. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TXFIFO</name>
          <description>CIR Transmit FIFO Data Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TRANSMIT</name>
              <description>Transmit Byte FIFO When the transmitting is trigger, the data in the FIFO will be transmitted until the data number is finished to be transmitted. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TXINT</name>
          <description>CIR Transmit Interrupt Control Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DRQ_EN</name>
              <description>TX FIFO DMA Enable 
0: Disable 
1: Enable When set to `1`, the Tx FIFO DRQ is asserted if the number of the transmitting data in the FIFO is less than the RAL. The DRQ is de-asserted when condition fails. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, the Tx FIFO DRQ is asserted if the number of the transmitting data in the FIFO is less than the RAL. The DRQ is de-asserted when condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TAI_EN</name>
              <description>TX FIFO Available Interrupt Enable 0:Disable 1:Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TPEI_EN</name>
              <description>Transmit Packet End Interrupt Enable for Cyclical Pulse 0:Disable 1:Enable  TUI_EN Transmitter FIFO under run Interrupt Enable for Non-cyclical Pulse 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TXSTA</name>
          <description>CIR Transmit Status Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>STCT</name>
              <description>Status of CIR Transmitter 0x0:Idle 0x1:Active This bit will automatically set when the controller begins transmit the data in the FIFO. The `1` will last when the data in the FIFO. It will automatically be cleaned to `0` when all data in the FIFO is transmitted. The bit is for debug. Output Level of Idle state is determined by level of the last data output. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DRQ</name>
              <description>DMA Request Flag When set to `1`, the Tx FIFO DRQ is asserted if the number of the transmitting data in the FIFO is less than the RAL. The DRQ is de-asserted when condition fails. This bit is for debug. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TAI</name>
              <description>TX FIFO Available Interrupt Flag 
0: TX FIFO not available by its level 
1: TX FIFO available by its level This bit can be cleared by software writing `1`. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_FIFO</name>
                  <description>TX FIFO not available by its level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_FIFO_available</name>
                  <description>TX FIFO available by its level This bit can be cleared by software writing `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TPE</name>
              <description>Transmitter Packet End Flag for Cyclical Pulse 
0: Transmissions of address, control and data fields not completed 
1: Transmissions of address, control and data fields completed  TUR Transmitter FIFO Under Run Flag for Non-cyclical Pulse 
0: No transmitter FIFO under run 
1: Transmitter FIFO under run This bit is cleared by writing a `1`. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_TXT</name>
          <description>CIR Transmit Threshold Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>NCTT</name>
              <description>Non-cyclical Pulse Transmit Threshold  The controller will trigger transmitting the data in the FIFO when the data byte number has reaches the Transmit Threshold set in this field.   </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMIC</name>
      <description>DMIC</description>
      <groupName>generic</groupName>
      <baseAddress>0x5095000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>DATA0_DATA1_VOL_CTR</name>
          <description>DATA0 And DATA1 Volume Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0xA0A0A0A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA1L_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ....... 
0xFF: 71.25 dB </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB .......</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA1R_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ....... 
0xFF: 71.25 dB </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB .......</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA0L_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ....... 
0xFF: 71.25 dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB .......</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA0R_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ....... 
0xFF: 71.25 dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB .......</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA2_DATA3_VOL_CTR</name>
          <description>DATA2 And DATA3 Volume Control Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0xA0A0A0A0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA3L_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ....... 
0xFF: 71.25 dB </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB .......</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA3R_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ....... 
0xFF: 71.25 dB </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB .......</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA2L_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ....... 
0xFF: 71.25 dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB .......</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA2R_VOL</name>
              <description>(-119.25 dB to 71.25 dB, 0.75 dB/Step) 
0x00: Mute 
0x01: -119.25 dB ........ 
0x9F: -0.75 dB 
0xA0: 0 dB 
0xA1: 0.75 dB ........ 
0xFF: 71.25 dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25_dB</name>
                  <description>-119.25 dB ........</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_75_dB</name>
                  <description>-0.75 dB</description>
                  <value>0x9F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_dB</name>
                  <description>0 dB</description>
                  <value>0xA0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_75_dB</name>
                  <description>0.75 dB ........</description>
                  <value>0xA1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_71_point_25_dB</name>
                  <description>71.25 dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_CH_MAP</name>
          <description>DMIC Channel Mapping Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x76543210</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMIC_CH7_MAP</name>
              <description>DMIC Channel 7 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_CH6_MAP</name>
              <description>DMIC Channel 6 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_CH5_MAP</name>
              <description>DMIC Channel 5 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_CH4_MAP</name>
              <description>DMIC Channel 4 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_CH3_MAP</name>
              <description>DMIC Channel 3 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_CH2_MAP</name>
              <description>DMIC Channel 2 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_CH1_MAP</name>
              <description>DMIC Channel 1 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC_CH0_MAP</name>
              <description>DMIC Channel0 Mapping 
0000: DATA0 Left Channel 
0001: DATA0 Right Channel 
0010: DATA1 Left Channel 
0011: DATA1 Right Channel 
0100: DATA2 Left Channel 
0101: DATA2 Right Channel 
0110: DATA3 Left Channel 
0111: DATA3 Right Channel </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DATA0_Left</name>
                  <description>DATA0 Left Channel</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA0_Right</name>
                  <description>DATA0 Right Channel</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Left</name>
                  <description>DATA1 Left Channel</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA1_Right</name>
                  <description>DATA1 Right Channel</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Left</name>
                  <description>DATA2 Left Channel</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA2_Right</name>
                  <description>DATA2 Right Channel</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Left</name>
                  <description>DATA3 Left Channel</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DATA3_Right</name>
                  <description>DATA3 Right Channel</description>
                  <value>0b0111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_CH_NUM</name>
          <description>DMIC Channel Numbers Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DMIC_CH_NUM</name>
              <description>DMIC Enable Channel Numbers are (N+1) </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_CNT</name>
          <description>DMIC Counter Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMIC</name>
              <description>_CNT  RX Sample Counter The audio sample number of writing into RXFIFO. When one sample is written by Digital Audio Engine, the RX sample counter register increases by one. The RX sample counter register can be set to any initial valve at any time. After been updated by the initial value, the counter register should count on base of this initial value NOTE It is used for Audio/ Video Synchronization </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_CTR</name>
          <description>DMIC Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F1</resetMask>
          <fields>
            <field>
              <name>DMICFDT</name>
              <description>DMICFIFO Delay Time for Writing Data after GLOBE_EN 
00: 5ms 
01: 10ms 
10: 200ms 
11: 30ms </description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5ms</name>
                  <description>5ms</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10ms</name>
                  <description>10ms</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_200ms</name>
                  <description>200ms</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_30ms</name>
                  <description>30ms</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMICDFEN</name>
              <description>DMIC FIFO Delay Function for Writing Data after GLOBE_EN 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA3</name>
              <description>Left Data and Right Data Sweep Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA2</name>
              <description>Left Data and Right Data Sweep Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA1</name>
              <description>Left Data and Right Data Sweep Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA0</name>
              <description>Left Data and Right Data Sweep Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMIC</name>
              <description>Oversample Rate  
0: 128 (Support 8 kHz ~ 24 kHz) 
1: 64 (Support 16 kHz ~ 48 kHz)  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 (Support 8 kHz ~ 24 kHz)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 (Support 16 kHz ~ 48 kHz)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_DATA</name>
          <description>DMIC_DATA</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DMIC_DATA</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_EN</name>
          <description>DMIC Enable Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>GLOBE_EN</name>
              <description>DMIC Globe Enabl 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA3_CHR_EN</name>
              <description>DATA3 Right Channel 1 Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA3_CHL_EN</name>
              <description>DATA3 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA2_CHR_EN</name>
              <description>DATA2 Right Channel 1 Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA2_CHL_EN</name>
              <description>DATA2 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA1_CHR_EN</name>
              <description>DATA1 Right Channel 1 Enable 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA1_CHL_EN</name>
              <description>DATA1 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA0_CHR_EN</name>
              <description>DATA0 Right Channel 1 Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA0_CHL_EN</name>
              <description>DATA0 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_FIFO_CTR</name>
          <description>DMIC FIFO Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x40</resetValue>
          <resetMask>0x800003FF</resetMask>
          <fields>
            <field>
              <name>DMIC_FIFO_FLUSH</name>
              <description>DMIC FIFO Flush Writing `1` to flush TX FIFO, self clear to `0` </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FIFO_MODE</name>
              <description>RX FIFO Output Mode (Mode 0, 1) 
0: Expanding `0` at LSB of TX FIFO register 
1: Expanding received sample sign bit at MSB of TX FIFO register  For 24-bit received audio sample: Mode 0: RXDATA[31:0] = {FIFO_O[23:0], 8`h0} Mode 1: Reserved  For 16-bit received audio sample: Mode 0: RXDATA[31:0] = {FIFO_O[23:8], 16`h0} Mode 1: RXDATA[31:0] = {16{FIFO_O[23]}, FIFO_O[23:8]} </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`</name>
                  <description>Expanding `0` at LSB of TX FIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample</name>
                  <description>Expanding received sample sign bit at MSB of TX FIFO register  For 24-bit received audio sample: Mode 0: RXDATA[31:0] = {FIFO_O[23:0], 8`h0} Mode 1: Reserved  For 16-bit received audio sample: Mode 0: RXDATA[31:0] = {FIFO_O[23:8], 16`h0} Mode 1: RXDATA[31:0] = {16{FIFO_O[23]}, FIFO_O[23:8]}</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SAMPLE_RESOLUTION</name>
              <description>0: 16 bit 
1: 24 bit </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16 bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24 bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_TRG_LEVEL</name>
              <description>FIFO Trigger Level (TRLV[7:0])  Interrupt and DMA request trigger level for DMIC FIFO normal condition IRQ/DRQ Generated when WLEVEL &gt; TRLV[7:0]) WLEVEL represents the number of valid samples in the DMIC FIFO </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_FIFO_STA</name>
          <description>DMIC FIFO Status Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DMIC_DATA_CNT</name>
              <description>DMIC FIFO Available Sample Word Counter </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_INTC</name>
          <description>MIC Interrupt Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FIFO_DRQ_EN</name>
              <description>DMIC FIFO Data Available DRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_OVERRUN_IRQ_EN</name>
              <description>DMIC FIFO Over Run IRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_IRQ_EN</name>
              <description>DMIC FIFO Data Available IRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_INTS</name>
          <description>DMIC Interrupt Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>FIFO_OVERRUN_IRQ_PENDING</name>
              <description>DMIC FIFO Over Run Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ Writing `1` to clear this interrupt or automatically clear if interrupt condition fails </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ Writing `1` to clear this interrupt or automatically clear if interrupt condition fails</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_DATA_IRQ_PENDING</name>
              <description>DMIC FIFO Data Available Pending Interrupt  
0: No Pending IRQ 
1: Data Available Pending IRQ Writing `1` to clear this interrupt or automatically clear if interrupt condition fails. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ Writing `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMIC_SR</name>
          <description>DMIC Sample Rate Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DMIC_SR</name>
              <description>Sample Rate of DMIC 
000: 48 kHz 
010: 24 kHz 
100: 12 kHz 
110: Reserved 
001: 32 kHz 
011: 16 kHz 
101: 8 kHz 
111: Reserved 44.1 kHz/22.05 kHz/11.025 kHz can be supported by Audio PLL Configure Bit. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_48_kHz</name>
                  <description>48 kHz</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_kHz</name>
                  <description>24 kHz</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_kHz</name>
                  <description>12 kHz</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_kHz</name>
                  <description>32 kHz</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_kHz</name>
                  <description>16 kHz</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_kHz</name>
                  <description>8 kHz</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 44.1 kHz/22.05 kHz/11.025 kHz can be supported by Audio PLL Configure Bit.</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HPF_COEF_REG</name>
          <description>High Pass Filter Coef Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0xFFAA45</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HIGH</name>
              <description>High Pass Filter Coefficient </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HPF_EN_CTR</name>
          <description>High Pass Filter Enable Control Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>HPF_DATA3_CHR_EN</name>
              <description>DATA3 Right Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPF_DATA3_CHL_EN</name>
              <description>DATA3 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPF_DATA2_CHR_EN</name>
              <description>DATA2 Right Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPF_DATA2_CHL_EN</name>
              <description>DATA2 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPF_DATA1_CHR_EN</name>
              <description>DATA1 Right Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPF_DATA1_CHL_EN</name>
              <description>DATA1 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPF_DATA0_CHR_EN</name>
              <description>DATA0 Right Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HPF_DATA0_CHL_EN</name>
              <description>DATA0 Left Channel Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HPF_GAIN_REG</name>
          <description>High Pass Filter Gain Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xFFD522</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HIGH</name>
              <description>High Pass Filter Gain </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA</description>
      <groupName>generic</groupName>
      <baseAddress>0x3002000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>16</dim>
          <dimIncrement>64</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>DMA_MODE_REG</name>
            <description>DMA Mode Register(N=0~15)</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xC</resetMask>
            <fields>
              <field>
                <name>DMA_DST_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PARA_REG</name>
            <description>DMA Channel Parameter Register(N=0~15)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF</resetMask>
            <fields>
              <field>
                <name>WAIT_CYC</name>
                <description>Wait Clock Cycles </description>
                <bitRange>[7:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>DMA_AUTO_GATE_REG</name>
          <description>DMA Auto Gating Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DMA_MCLK_CIRCUIT</name>
              <description>DMA MCLK interface circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_COMMON_CIRCUIT</name>
              <description>DMA common circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_CHAN_CIRCUIT</name>
              <description>DMA channel circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_EN_REG0</name>
          <description>DMA IRQ Enable Register 0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_EN</name>
              <description>DMA 7 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_EN</name>
              <description>DMA 7 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_EN</name>
              <description>DMA 7 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_EN</name>
              <description>DMA 6 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_EN</name>
              <description>DMA 6 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_EN</name>
              <description>DMA 6 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_EN</name>
              <description>DMA 5 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_EN</name>
              <description>DMA 5 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_EN</name>
              <description>DMA 5 Half package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_EN</name>
              <description>DMA 4 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_EN</name>
              <description>DMA 4 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_EN</name>
              <description>DMA 4 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_EN</name>
              <description>DMA 3 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_EN</name>
              <description>DMA 3 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_EN</name>
              <description>DMA 3 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_EN</name>
              <description>DMA 2 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_EN</name>
              <description>DMA 2 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_EN</name>
              <description>DMA 2 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_EN</name>
              <description>DMA 1 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_EN</name>
              <description>DMA 1 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_EN</name>
              <description>DMA 1 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_EN</name>
              <description>DMA 0 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_EN</name>
              <description>DMA 0 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_EN</name>
              <description>DMA 0 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_EN_REG1</name>
          <description>DMA IRQ Enable Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA15_QUEUE_IRQ_EN</name>
              <description>DMA 15 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_PKG_IRQ_EN</name>
              <description>DMA 15 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_HLAF_IRQ_EN</name>
              <description>DMA 15 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_QUEUE_IRQ_EN</name>
              <description>DMA 14 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_PKG_IRQ_EN</name>
              <description>DMA 14 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_HLAF_IRQ_EN</name>
              <description>DMA 14 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_QUEUE_IRQ_EN</name>
              <description>DMA 13 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_PKG_IRQ_EN</name>
              <description>DMA 13 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_HLAF_IRQ_EN</name>
              <description>DMA 13 Half package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_QUEUE_IRQ_EN</name>
              <description>DMA 12 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_PKG_IRQ_EN</name>
              <description>DMA 12 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_HLAF_IRQ_EN</name>
              <description>DMA 12 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_QUEUE_IRQ_EN</name>
              <description>DMA 11 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_PKG_IRQ_EN</name>
              <description>DMA 11 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_HLAF_IRQ_EN</name>
              <description>DMA 11 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_QUEUE_IRQ_EN</name>
              <description>DMA 10 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_PKG_IRQ_EN</name>
              <description>DMA 10 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_HLAF_IRQ_EN</name>
              <description>DMA 10 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_QUEUE_IRQ_EN</name>
              <description>DMA 9 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_PKG_IRQ_EN</name>
              <description>DMA 9 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_HLAF_IRQ_EN</name>
              <description>DMA 9 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_QUEUE_IRQ_EN</name>
              <description>DMA 8 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_PKG_IRQ_EN</name>
              <description>DMA 8 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_HLAF_IRQ_EN</name>
              <description>DMA 8 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_PEND_REG0</name>
          <description>DMA IRQ Pending Register 0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_PEND</name>
              <description>DMA 7 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_PEND</name>
              <description>DMA 7 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_PEND</name>
              <description>DMA 7 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_PEND</name>
              <description>DMA 6 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_PEND</name>
              <description>DMA 6 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_PEND</name>
              <description>DMA 6 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_PEND</name>
              <description>DMA 5 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_PEND</name>
              <description>DMA 5 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_PEND</name>
              <description>DMA 5 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_PEND</name>
              <description>DMA 4 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_PEND</name>
              <description>DMA 4 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_PEND</name>
              <description>DMA 4 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_PEND</name>
              <description>DMA 3 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_PEND</name>
              <description>DMA 3 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_PEND</name>
              <description>DMA 3 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_PEND</name>
              <description>DMA 2 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_PEND</name>
              <description>DMA 2 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_PEND</name>
              <description>DMA 2 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_PEND</name>
              <description>DMA 1 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_PEND</name>
              <description>DMA 1 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_PEND</name>
              <description>DMA 1 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_PEND</name>
              <description>DMA 0 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_PEND</name>
              <description>DMA 0 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_PEND</name>
              <description>DMA 0 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_PEND_REG1</name>
          <description>DMA IRQ Pending Register 1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA15_QUEUE_IRQ_PEND</name>
              <description>DMA 15 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_PKG_IRQ_PEND</name>
              <description>DMA 15 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_HLAF_IRQ_PEND</name>
              <description>DMA 15 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_QUEUE_IRQ_PEND</name>
              <description>DMA 14 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_PKG_IRQ_PEND</name>
              <description>DMA 14 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_HLAF_IRQ_PEND</name>
              <description>DMA 14 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_QUEUE_IRQ_PEND</name>
              <description>DMA 13 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_PKG_IRQ_PEND</name>
              <description>DMA 13 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_HLAF_IRQ_PEND</name>
              <description>DMA 13 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_QUEUE_IRQ_PEND</name>
              <description>DMA 12 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_PKG_IRQ_PEND</name>
              <description>DMA 12 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_HLAF_IRQ_PEND</name>
              <description>DMA 12 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_QUEUE_IRQ_PEND</name>
              <description>DMA 11 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_PKG_IRQ_PEND</name>
              <description>DMA 11 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_HLAF_IRQ_PEND</name>
              <description>DMA 11 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_QUEUE_IRQ_PEND</name>
              <description>DMA 10 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_PKG_IRQ_PEND</name>
              <description>DMA 10 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_HLAF_IRQ_PEND</name>
              <description>DMA 10 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_QUEUE_IRQ_PEND</name>
              <description>DMA 9 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_PKG_IRQ_PEND</name>
              <description>DMA 9 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_HLAF_IRQ_PEND</name>
              <description>DMA 9 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_QUEUE_IRQ_PEND</name>
              <description>DMA 8 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_PKG_IRQ_PEND</name>
              <description>DMA 8 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_HLAF_IRQ_PEND</name>
              <description>DMA 8 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_SEC_REG</name>
          <description>DMA Security Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DMA15_SEC</name>
              <description>DMA channel 15 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_SEC</name>
              <description>DMA channel 14 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_SEC</name>
              <description>DMA channel 13 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_SEC</name>
              <description>DMA channel 12 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_SEC</name>
              <description>DMA channel 11 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_SEC</name>
              <description>DMA channel 10 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_SEC</name>
              <description>DMA channel 9 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_SEC</name>
              <description>DMA channel 8 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_SEC</name>
              <description>DMA channel 7 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_SEC</name>
              <description>DMA channel 6 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_SEC</name>
              <description>DMA channel 5 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_SEC</name>
              <description>DMA channel 4 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_SEC</name>
              <description>DMA channel 3 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_SEC</name>
              <description>DMA channel 2 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_SEC</name>
              <description>DMA channel 1 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_SEC</name>
              <description>DMA channel 0 security. 
0: Secure 
1: Non-secure. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_STA_REG</name>
          <description>DMA Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x4000FFFF</resetMask>
          <fields>
            <field>
              <name>MBUS</name>
              <description>FIFO Status 
0: Empty 
1: Not Empty </description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Empty</name>
                  <description>Empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_Empty</name>
                  <description>Not Empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_STATUS</name>
              <description>DMA Channel 15 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_STATUS</name>
              <description>DMA Channel 14 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_STATUS</name>
              <description>DMA Channel 13 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_STATUS</name>
              <description>DMA Channel 12 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_STATUS</name>
              <description>DMA Channel 11 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_STATUS</name>
              <description>DMA Channel 10 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_STATUS</name>
              <description>DMA Channel 9 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_STATUS</name>
              <description>DMA Channel 8 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_STATUS</name>
              <description>DMA Channel 7 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_STATUS</name>
              <description>DMA Channel 6 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_STATUS</name>
              <description>DMA Channel 5 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_STATUS</name>
              <description>DMA Channel 4 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_STATUS</name>
              <description>DMA Channel 3 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_STATUS</name>
              <description>DMA Channel 2 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_STATUS</name>
              <description>DMA Channel 1 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_STATUS</name>
              <description>DMA Channel 0 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EMAC</name>
      <description>EMAC</description>
      <groupName>generic</groupName>
      <baseAddress>0x5020000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>7</dim>
          <dimIncrement>8</dimIncrement>
          <dimIndex>1,2,3,4,5,6,7</dimIndex>
          <name>_N_%s</name>
          <addressOffset>0x58</addressOffset>
          <register>
            <name>EMAC_ADDR_HIGHN</name>
            <description>EMAC_ADDR_HIGHN</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_CTL</name>
                <description>MAC Address Valid 
0: Not valid 
1: Valid </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Not_valid</name>
                    <description>Not valid</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Valid</name>
                    <description>Valid</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_TYPE</name>
                <description>MAC Address Type 
0: used to compare with the destination address of the received frame 
1: used to compare with the source address of the received frame </description>
                <bitRange>[30:30]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>used_to_compare_with_the_destination</name>
                    <description>used to compare with the destination address of the received frame</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>used_to_compare_with_the_source</name>
                    <description>used to compare with the source address of the received frame</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_BYTE_CTL</name>
                <description>MAC address byte control mask. The lower bit of mask controls the lower byte of in MAC address. When the bit of mask is 1, do not compare the corresponding byte. </description>
                <bitRange>[29:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>MAC_ADDR_HIGH</name>
                <description>The upper 16bits of the MAC address. </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>EMAC_ADDR_LOWN</name>
            <description>EMAC_ADDR_LOWN</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_LOWN</name>
                <description>The lower 32bits of MAC address N (N: 1~7). </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>EMAC_ADDR_HIGH0</name>
          <description>EMAC MAC Address High Register0</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_HIGH0</name>
              <description>The upper 16bits of the 1st MAC address. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_ADDR_LOW0</name>
          <description>EMAC MAC Address High Register0</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_LOW0</name>
              <description>The lower 32bits of 1st MAC address. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_BASIC_CTL0</name>
          <description>EMAC Basic Control Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SPEED</name>
              <description>00: 1000 Mbit/s 
01: Reserved 
10: 10 Mbit/s 
11: 100 Mbit/s </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1000</name>
                  <description>1000 Mbit/s</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10</name>
                  <description>10 Mbit/s</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100</name>
                  <description>100 Mbit/s</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOPBACK</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DUPLEX</name>
              <description>0: Half-duplex 
1: Full-duplex </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_duplex</name>
                  <description>Half-duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_duplex</name>
                  <description>Full-duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_BASIC_CTL1</name>
          <description>EMAC Basic Control Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x8000000</resetValue>
          <resetMask>0x3F000003</resetMask>
          <fields>
            <field>
              <name>BURST_LEN</name>
              <description>The burst length of RX and TX DMA transfer.  </description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TX_PRI</name>
              <description>RX TX DMA priority 
0: Same priority 
1: RX priority over TX </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Same</name>
                  <description>Same priority</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX priority over TX</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Soft Reset all Registers and Logic 
0: No valid 
1: Reset NOTE All clock inputs must be valid before soft rest. This bit is cleared internally when the reset operation is completed fully. Before write any register, this bit should read a 0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_valid</name>
                  <description>No valid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset NOTE All clock inputs must be valid before soft rest. This bit is cleared internally when the reset operation is completed fully. Before write any register, this bit should read a 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_INT_EN</name>
          <description>EMAC Interrupt Enable Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F3F</resetMask>
          <fields>
            <field>
              <name>RX_EARLY_INT_EN</name>
              <description>Early Receive Interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_OVERFLOW_INT_EN</name>
              <description>Receive Overflow Interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TIMEOUT_INT_EN</name>
              <description>Receive Timeout Interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DMA_STOPPED_INT_EN</name>
              <description>Receive DMA FSM Stopped Interrupt 
0: Disable  
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_BUF_UA_INT_EN</name>
              <description>Receive Buffer Unavailable Interrupt 
0: Disable  
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_INT_EN</name>
              <description>Receive interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EARLY_INT_EN</name>
              <description>Early Transmit Interrupt 
0: Disable  
1: Enable  </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_UNDERFLOW_INT_EN</name>
              <description>Transmit Underflow Interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TIMEOUT_INT_EN</name>
              <description>Transmit Timeout Interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_BUF_UA_INT_EN</name>
              <description>Transmit Buffer Available Interrupt 
0: Disable  
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_STOPPED_INT_EN</name>
              <description>Transmit DMA FSM Stopped Interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_INT_EN</name>
              <description>Transmit interrupt 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_INT_STA</name>
          <description>EMAC Interrupt Status Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x13F3F</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK_STA_P</name>
              <description>RMII Link Status Changed Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EARLY_P</name>
              <description>RX DMA Filled First data Buffer of the Receive Frame Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_OVERFLOW_P</name>
              <description>RX FIFO Overflow Error Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TIMEOUT_P</name>
              <description>RX Timeout Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear .When this bit asserted, the length of receive frame is greater than 2048 bytes(10240 when JUMBO_FRM_EN is set) </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear .When this bit asserted, the length of receive frame is greater than 2048 bytes(10240 when JUMBO_FRM_EN is set)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DMA_STOPPED_P</name>
              <description>When this bit asserted, the RX DMA FSM is stopped. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_BUF_UA</name>
              <description>_P RX Buffer UA Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear .When this asserted, the RX DMA can`t acquire next RX descriptor and RX DMA FSM is suspended. The ownership of next RX descriptor should be changed to RX DMA. The RX DMA FSM will resume when write to DMA_RX_START bit or next receive frame is coming. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear .When this asserted, the RX DMA can`t acquire next RX descriptor and RX DMA FSM is suspended. The ownership of next RX descriptor should be changed to RX DMA. The RX DMA FSM will resume when write to DMA_RX_START bit or next receive frame is coming.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_P</name>
              <description>Frame RX Completed Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear. When this bit is asserted, a frame reception is completed. The RX DMA FSM remains in the running state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear. When this bit is asserted, a frame reception is completed. The RX DMA FSM remains in the running state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EARLY_P</name>
              <description>Frame is transmitted to FIFO totally Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear. When this bit asserted  </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear. When this bit asserted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_UNDERFLOW_P</name>
              <description>TX FIFO Underflow Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TIMEOUT_P</name>
              <description>Transmitter Timeout Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_BUF_UA_P</name>
              <description>TX Buffer UA Interrupt Pending 
0: No Pending 
1: Pending When this asserted, the TX DMA can not acquire next TX descriptor and TX DMA FSM is suspended. The ownership of next TX descriptor should be changed to TX DMA. The TX DMA FSM will resume when write to DMA_TX_START bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending When this asserted, the TX DMA can not acquire next TX descriptor and TX DMA FSM is suspended. The ownership of next TX descriptor should be changed to TX DMA. The TX DMA FSM will resume when write to DMA_TX_START bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_STOPPED_P</name>
              <description>Transmission DMA Stopped Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_P</name>
              <description>Frame Transmission Interrupt Pending 
0: No Pending 
1: Pending Write `1` to clear </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MII_CMD</name>
          <description>EMAC Management Interface Command Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71F1F3</resetMask>
          <fields>
            <field>
              <name>MDC_DIV_RATIO_M</name>
              <description>MDC Clock Divide Ratio 
000: 16 
001: 32 
010: 64 
011: 128 Others: Reserved NOTE MDC Clock is divided from AHB clock </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 Others: Reserved NOTE MDC Clock is divided from AHB clock</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PHY_ADDR</name>
              <description>PHY Address </description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_REG_ADDR</name>
              <description>PHY Register Address </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MII_WR</name>
              <description>MII Write and Read 
0: Read 
1: Write </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MII_BUSY</name>
              <description>0: write no valid, read 0 indicate finish in read or write operation 
1: write start read or write operation, read 1 indicate busy. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>write_no_valid</name>
                  <description>write no valid, read 0 indicate finish in read or write operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>write_start</name>
                  <description>write start read or write operation, read 1 indicate busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MII_DATA</name>
          <description>EMAC Management Interface Data Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MII_DATA</name>
              <description>Written to or read from the register in the selected PHY. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RGMII_STA</name>
          <description>EMAC RGMII Status Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK</name>
              <description>The link status of RGMII interface 
0: down 
1: up </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>down</name>
                  <description>down</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>up</name>
                  <description>up</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_SPD</name>
              <description>The link speed of RGMII interface 
00: 2.5 MHz  
01: 25 MHz 
10: 125 MHz 
11: Reserved </description>
              <bitRange>[2:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_point_5</name>
                  <description>2.5 MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_25</name>
                  <description>25 MHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_125</name>
                  <description>125 MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_MD</name>
              <description>The link mode of RGMII interface 
0: Half-Duplex 
1: Full-Duplex </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_Duplex</name>
                  <description>Half-Duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_Duplex</name>
                  <description>Full-Duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_CTL0</name>
          <description>EMAC Receive Control Register0</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF8030000</resetMask>
          <fields>
            <field>
              <name>RX_EN</name>
              <description>Enable Receiver  
0: Disable receiver after current reception 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receiver after current reception</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FRM_LEN_CTL</name>
              <description>Frame Receive Length Control 
0: Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1) 
1: Up to 16,384 bytes any bytes after that is cut off </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Up_to_2_comma_048</name>
                  <description>Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Up_to_16_comma_384</name>
                  <description>Up to 16,384 bytes any bytes after that is cut off</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>JUMBO_FRM_EN</name>
              <description>Jumbo Frame Enable 
0: Disable 
1: Enable Jumbo frames of 9,018 bytes without reporting a giant  </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Jumbo frames of 9,018 bytes without reporting a giant</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STRIP_FCS</name>
              <description>When set, strip the Pad/FCS field on received frames only when the length`s field value is less than or equal to 1,500 bytes. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHECK_CRC</name>
              <description>Check CRC Enable 
0: disable 
1: calculate CRC and check the IPv4 Header Checksum. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>calculate</name>
                  <description>calculate CRC and check the IPv4 Header Checksum.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PAUSE_FRM_MD</name>
              <description>0: Only detect multicast pause frame specified in the 802.3x standard. 
1: In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Only_detect</name>
                  <description>Only detect multicast pause frame specified in the 802.3x standard.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>In</name>
                  <description>In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_EN</name>
              <description>When set, enable the functionality that decode the received pause frame and disable its transmitter for a specified time by pause frame. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_CTL1</name>
          <description>EMAC Receive Control Register1</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC1F0003F</resetMask>
          <fields>
            <field>
              <name>RX_DMA_START</name>
              <description>When set, the RX DMA will go no to work. It is cleared internally and always read a 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DMA_EN</name>
              <description>Receive DMA Enable 
0: Stop RX DMA after finish receiving current frame  
1: Start and run RX DMA </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop RX DMA after finish receiving current frame</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run RX DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FIFO_FLOW_CTL</name>
              <description>Receive FIFO Flow Control Enable 
0: Disable 
1: Enable,base on RX_FLOW_CTL_TH_DEACT  and  RX_FLOW_CTL_TH_ACT  </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable_comma_base</name>
                  <description>Enable,base on RX_FLOW_CTL_TH_DEACT  and  RX_FLOW_CTL_TH_ACT</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_DEACT</name>
              <description>Threshold for Deactivating Flow Control 
00: Full minus 1 KB  
01: Full minus 2 KB 
10: Full minus 3 KB 
11: Full minus 4 KB  valid in both half-duplex mode and full-duplex mode. </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB  valid in both half-duplex mode and full-duplex mode.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_ACT</name>
              <description>Threshold for Activating Flow Control 
00: Full minus 1 KB  
01: Full minus 2 KB 
10: Full minus 3 KB 
11: Full minus 4 KB  valid in both half-duplex mode and full-duplex mode.  </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB  valid in both half-duplex mode and full-duplex mode.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TH</name>
              <description>Threshold for RX DMA FIFO Start 
00: 64  
01: 32 
10: 96 
11: 128 only valid when RX_MD == 0, full frames with a length less than the threshold are transferred automatically. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96</name>
                  <description>96</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 only valid when RX_MD == 0, full frames with a length less than the threshold are transferred automatically.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ERR_FRM</name>
              <description>0: RX DMA drops frames with error 
1: RX DMA forwards frames with error </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_drops</name>
                  <description>RX DMA drops frames with error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA_forwards</name>
                  <description>RX DMA forwards frames with error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RUNT_FRM</name>
              <description>When set, forward undersized frames with no error and length less than 64bytes </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MD</name>
              <description>Receive Mode 
0: RX start read after RX DMA FIFO bytes is greater than RX_TH 
1: RX start read after RX DMA FIFO located a full frame </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_start_read_after_RX_DMA_FIFO_bytes</name>
                  <description>RX start read after RX DMA FIFO bytes is greater than RX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_start_read_after_RX_DMA_FIFO_located</name>
                  <description>RX start read after RX DMA FIFO located a full frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_RX_FRM</name>
              <description>Flush Receive Frames  
00: Enable when receive descriptors/buffers is unavailable 
1: Disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_DMA_CUR_BUF</name>
          <description>EMAC_RX_DMA_CUR_BUF</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive DMA buffer </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_DMA_CUR_DESC</name>
          <description>EMAC_RX_DMA_CUR_DESC</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive descriptor </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_DMA_LIST</name>
          <description>EMAC_RX_DMA_LIST</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DESC_LIST</name>
              <description>The base address of receive descriptor list. It must be 32-bit aligned. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_DMA_STA</name>
          <description>EMAC Receive DMA Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RX_DMA_STA</name>
              <description>The State of RX DMA FSM. 
000: STOP, When reset or disable RX DMA  
001: RUN_FETCH_DESC, Fetching RX DMA descriptor 
010: Reserved. 
011: RUN_WAIT_FRM, Waiting for frame.  
100: SUSPEND, RX descriptor unavailable;   
101: RUN_CLOSE_DESC, Closing RX descriptor. 
110: Reserved. 
111: RUN_TRANS_DATA, Passing frame from host memory to RX DMA FIFO;  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_FRM_FLT</name>
          <description>EMAC Receive Frame Filter Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80033373</resetMask>
          <fields>
            <field>
              <name>DIS_ADDR_FILTER</name>
              <description>Disable Address Filter 
0: Enable 
1: Disable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIS_BROADCAST</name>
              <description>Disable Receive Broadcast Frames 
0: Receive 
1: Drop </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drop</name>
                  <description>Drop</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL_MULTICAST</name>
              <description>Receive All Multicast Frames Filter 
0: Filter according to HASH_MULTICAST 
1: Receive All </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter</name>
                  <description>Filter according to HASH_MULTICAST</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive All</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTL_FRM_FILTER</name>
              <description>Receive Control Frames Filter 
00: Drop all control frames 
01: Drop all control frames 
10: Receive all control frames 
11: Receive all control frames when pass the address filter </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HASH_MULTICAST</name>
              <description>Filter Multicast Frames Set 
0: by comparing the DA field in DA MAC address registers 
1: according to the hash table </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>by</name>
                  <description>by comparing the DA field in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>according</name>
                  <description>according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH_UNICAST</name>
              <description>Filter Unicast Frames Set 
0: by comparing the DA field in DA MAC address registers 
1: according to the hash table </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>by</name>
                  <description>by comparing the DA field in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>according</name>
                  <description>according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_FILTER_EN</name>
              <description>Receive SA Filter Enable 
0: Receive frames and update the result of SA filter 
1: Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive frames and update the result of SA filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_INV_FILTER</name>
              <description>Receive SA Invert Filter Set 
0: Pass Frames whose SA field matches SA MAC address registers 
1: Pass Frames whose SA field not matches SA MAC address registers </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pass_Frames_whose_SA_field_matches</name>
                  <description>Pass Frames whose SA field matches SA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass_Frames_whose_SA_field_not_matches</name>
                  <description>Pass Frames whose SA field not matches SA MAC address registers</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA_INV_FILTER</name>
              <description>0: Normal filtering of frames is performed  
1: Filter both unicast and multicast frames by comparing DA field in inverse filtering mode </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal filtering of frames is performed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_both</name>
                  <description>Filter both unicast and multicast frames by comparing DA field in inverse filtering mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLT_MD</name>
              <description>0: If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter 
1: Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST) </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>If</name>
                  <description>If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL</name>
              <description>Receive All Frame Enable 
0: Receive the frames that pass the SA/DA address filter 
1: Receive all frames and update the result of address filter(pass or fail) in the receive status word </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_the_frames</name>
                  <description>Receive the frames that pass the SA/DA address filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_all</name>
                  <description>Receive all frames and update the result of address filter(pass or fail) in the receive status word</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_HASH0</name>
          <description>EMAC Hash Table Register0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB0</name>
              <description>The upper 32 bits of Hash table for receive frame filter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_HASH1</name>
          <description>EMAC Hash Table Register1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB1</name>
              <description>The lower 32 bits of Hash table for receive frame filter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_CTL0</name>
          <description>EMAC Transmit Control Register0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TX_EN</name>
              <description>Enable Transmitter. 
0: Disable 
1: Enable When disable, transmit will continue until current transmit finish. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When disable, transmit will continue until current transmit finish.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FRM_LEN_CTL</name>
              <description>Frame Transmit Length Control 
0: Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1) 
1: Up to 16,384 bytes Any bytes after that is cut off </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Up_to_2_comma_048</name>
                  <description>Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Up_to_16_comma_384</name>
                  <description>Up to 16,384 bytes Any bytes after that is cut off</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_CTL1</name>
          <description>EMAC Transmit Control Register1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000703</resetMask>
          <fields>
            <field>
              <name>TX_DMA_START</name>
              <description>Transmit DMA FSM Start 
0: No valid 
1: Start This cleared internally and always read a 0 </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_valid</name>
                  <description>No valid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start This cleared internally and always read a 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_EN</name>
              <description>0x0: Stop TX DMA after the completion of current frame transmission. 
0x1: Start and run TX DMA. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop TX DMA after the completion of current frame transmission.</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run TX DMA.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TH</name>
              <description>The threshold value of TX DMA FIFO. When TX_MD is 0, transmission starts when the size of frame in TX DMA FIFO is greater than the threshold. In addition, full frames with a length less than the threshold are transferred automatically.  
000: 64  
001: 128 
010: 192 
011: 256  Others: Reserved </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192</name>
                  <description>192</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_MD</name>
              <description>Transmission Mode 
0: TX start after TX DMA FIFO bytes is greater than TX_TH 
1: TX start after TX DMA FIFO located a full frame </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_start_after_TX_DMA_FIFO_bytes</name>
                  <description>TX start after TX DMA FIFO bytes is greater than TX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_start_after_TX_DMA_FIFO_located</name>
                  <description>TX start after TX DMA FIFO located a full frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_TX_FIFO</name>
              <description>Flush the data in the TX FIFO. 
0: Enable 
1: Disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_DMA_CUR_BUF</name>
          <description>EMAC_TX_DMA_CUR_BUF</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit DMA buffer. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_DMA_CUR_DESC</name>
          <description>EMAC_TX_DMA_CUR_DESC</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit descriptor.  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_DMA_LIST</name>
          <description>EMAC_TX_DMA_LIST</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DESC_LIST</name>
              <description>The base address of transmit descriptor list. It must be 32-bit aligned. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_DMA_STA</name>
          <description>EMAC Transmit DMA Status Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TX_DMA_STA</name>
              <description>The state of Transmit DMA FSM.  
000: STOP, When reset or disable TX DMA 
001: RUN_FETCH_DESC, Fetching TX DMA descriptor 
010: RUN_WAIT_STA, Waiting for the status of TX frame 
011: RUN_TRANS_DATA, Passing frame from host memory to TX DMA FIFO  
100: Reserved 
101: Reserved 
111: RUN_CLOSE_DESC, Closing TX descriptor 
110: SUSPEND, TX descriptor unavailable or TX DMA FIFO underflow  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>STOP, When reset or disable TX DMA</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_FETCH_DESC</name>
                  <description>RUN_FETCH_DESC, Fetching TX DMA descriptor</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_WAIT_STA</name>
                  <description>RUN_WAIT_STA, Waiting for the status of TX frame</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_TRANS_DATA</name>
                  <description>RUN_TRANS_DATA, Passing frame from host memory to TX DMA FIFO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_CLOSE_DESC</name>
                  <description>RUN_CLOSE_DESC, Closing TX descriptor</description>
                  <value>0b111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUSPEND</name>
                  <description>SUSPEND, TX descriptor unavailable or TX DMA FIFO underflow</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_FLOW_CTL</name>
          <description>EMAC Transmit Flow Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x803FFFF3</resetMask>
          <fields>
            <field>
              <name>TX_FLOW_CTL_STA</name>
              <description>This bit indicates a pause frame transmission is in progress. When the configuration of flow control is ready, set this bit to transmit a pause frame in full-duplex mode or activate the backpressure function. After completion of transmission, this bit will be cleared automatically. Before write register TX_FLOW_CTRL, this bit must be read as 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PAUSE_FRM_SLOT</name>
              <description>The threshold of the pause timer at which the input flow control signal is checked for automatic retransmission of pause frame. The threshold values should be always less than the PAUSE_TIME </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAUSE_TIME</name>
              <description>The pause time field in the transmitted control frame.  </description>
              <bitRange>[19:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZQP_FRM_EN</name>
              <description>0: Disable 
1: Enable When set, enable the functionality to generate Zero-Quanta Pause control frame. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set, enable the functionality to generate Zero-Quanta Pause control frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FLOW_CTL_EN</name>
              <description>TX Flow Control Enable 
0: Disable 
1: Enable  When set, enable flow control operation to transmit pause frames in full-duplex mode, or enable the back-pressure operation in half-duplex mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  When set, enable flow control operation to transmit pause frames in full-duplex mode, or enable the back-pressure operation in half-duplex mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EMCE</name>
      <description>EMCE</description>
      <groupName>generic</groupName>
      <baseAddress>0x1905000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>EMCE_KEY0</name>
          <description>EMCE Master Key`s 1st Word</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 1st word </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_KEY1</name>
          <description>EMCE Master key`s 2nd Word</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 2nd word </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_KEY2</name>
          <description>EMCE Master Key`s 3rd Word</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 3rd word </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_KEY3</name>
          <description>EMCE Master Key`s 4th Word</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 4th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_KEY4</name>
          <description>EMCE Master Key`s 5th Word</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 5th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_KEY5</name>
          <description>EMCE Master Key`s 6th Word</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 6th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_KEY6</name>
          <description>EMCE Master Key`s 7th Word</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 7th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_KEY7</name>
          <description>EMCE Master Key`s 8th Word</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>master key`s 8th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_MODE</name>
          <description>AES Configuration for Key Length and Mode</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x2000801</resetValue>
          <resetMask>0xFFFF1C3F</resetMask>
          <fields>
            <field>
              <name>SECTOR_SIZE</name>
              <description>Sector Size for Controller </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NAND_OR_EMMC</name>
              <description>NAND_OR_EMMC 
0: current controller is NDFC 
1: current controller is SMHC  </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC</name>
                  <description>current controller is NDFC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMHC</name>
                  <description>current controller is SMHC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IV_KEY_LEN_AES_KEY</name>
              <description>IV_KEY_LEN AES key length when computing IV 
00: 128-bit 
01: 192-bit 
10: 256-bit 
11: reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_128_bit</name>
                  <description>128-bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192_bit</name>
                  <description>192-bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256_bit</name>
                  <description>256-bit</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEY_LEN</name>
              <description>KEY_LEN 
00: 128-bit 
01: 192-bit 
10: 256-bit 
11: reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_128_bit</name>
                  <description>128-bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192_bit</name>
                  <description>192-bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256_bit</name>
                  <description>256-bit</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>Mode 
0000: ECB 
0001: CBC 1001:XTS Others: reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECB</name>
                  <description>ECB</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CBC</name>
                  <description>CBC 1001:XTS Others: reserved</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT0</name>
          <description>EMCE Master Salt`s 1st Word</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 1st word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT1</name>
          <description>EMCE Master Salt`s 2nd Word</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 2nd word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT2</name>
          <description>EMCE Master Salt`s 3rd Word</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 3rd word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT3</name>
          <description>EMCE Master Salt`s 4th Word</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 4th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT4</name>
          <description>EMCE Master Salt`s 5th Word</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 5th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT5</name>
          <description>EMCE Master Salt`s 6th Word</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 6th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT6</name>
          <description>EMCE Master Salt`s 7th Word</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 7th word  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMCE_SALT7</name>
          <description>EMCE Master Salt`s 8th Word</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMCE</name>
              <description>salt`s 8th word </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ATE_EPHY</name>
      <description>ATE_EPHY</description>
      <groupName>generic</groupName>
      <baseAddress>0x6000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>EPHY_BIST</name>
          <description>Ethernet PHY BIST Register</description>
          <addressOffset>0x2</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7701</resetMask>
          <fields>
            <field>
              <name>BIST_STATUS</name>
              <description>bist_status[5]:BIST_FAIL_RMII2MII   bist_status[4]:BIST_FAIL_MII2RMII   bist_status[3]:BIST_FAIL_PLPIC     </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIST_FINISH</name>
              <description>bist_status[2]:BIST_FINISH_RMII2MII bist_status[1]:BIST_FINISH_MII2RMII bist_status[0]:BIST_FINISH_PLPIC    </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIST_START</name>
              <description>0 : disable 1 : Start </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EPHY_CTL</name>
          <description>Ethernet PHY Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BPS_EFFUSE</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XMII_SEL</name>
              <description>0: MII 
1: RMII </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MII</name>
                  <description>MII</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RMII</name>
                  <description>RMII</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EPHY_MODE</name>
              <description>Operation Mode Selection 00 : Normal Mode 01 : Sim Mode 10 : AFE Test Mode 11 : / </description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_ADDR</name>
              <description>PHY Address </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIST_CLK_EN</name>
              <description>0 : BIST clk disable 1 : BIST clk enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_SEL</name>
              <description>0 : 27MHz 1 : 24MHz </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LED_POL</name>
              <description>0 : High active 1 : Low active </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHUTDOWN</name>
              <description>0 : Power up 1 : Shutdown </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>R_OWC</name>
      <description>R_OWC</description>
      <groupName>generic</groupName>
      <baseAddress>0x7040400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>HDQ__BR_TCTL</name>
          <description>HDQ__BR_TCTL</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0xBE0028</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>TB</name>
              <description>t(B) = N us. The range setting for TB in these fields is from 0 to 0x 3ff. In HDQ mode, Rang: 190 us &lt;= t(B) &lt;= infinity. </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TBR</name>
              <description>t(BR) = N us. The range setting for TBR in these fields is from 0 to 0xff. In HDQ mode, Rang: 40 us &lt;= t(BR) &lt;= infinity. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_CTL</name>
          <description>One Wire Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0xF037F</resetMask>
          <fields>
            <field>
              <name>SAMPLE_TIME</name>
              <description>These fields determine the sample times in digital circuit. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INNER_PULL_UP_ENABLE</name>
              <description>When this bit is set, the inner pull up for one wire bus is determined by inner output (pull up is off when bus is drive 0)  
0: inner pull up is on 
1: inner pull up is off when bus is drive 0 </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>on</name>
                  <description>inner pull up is on</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>off</name>
                  <description>inner pull up is off when bus is drive 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTOIDLE</name>
              <description>Auto Idle 
0: Module clock is free-running 
1: Module clock is in power saving mode: the function clock is running only when module is accessed or inside logic is in function to process events. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>free_minus_running</name>
                  <description>Module clock is free-running</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Module clock is in power saving mode: the function clock is running only when module is accessed or inside logic is in function to process events.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRESENCEDETECT</name>
              <description>Slave Presence Indicator This read-only flag is only used in Standard Mode The value of this field indicates whether there is Presence Pulse responding to the host initialization pulse. The flag is updated when the OW_INT_STATUS[0] Presence Detect Interrupt Flag is set.  </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDARD_MODE_SINGLE_BIT</name>
              <description>The single-bit mode is only supported for Standard Mode. After the bit is transferred, Tx-complete or Rx-complete interrupt will generate for corresponding transfer operation.  
0: Disabled 
1: Enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GO</name>
              <description>Go Go Bit Write 1 to start the appropriate operation.  If the INITIALIZATION/BREAK bit is set, the controller generates the initialization or break pulse.  If the INITIALIZATION/BREAK bit is not set, the controller in Standard Mode samples/sends data to/from the OW_DATA fields determining by the DIR bit, or controller in Simple Mode begins a transfer sequence with the command byte in OW_DATA.   Bit returns to 0 after the operation is complete.  </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INITIALIZATION/BREAK</name>
              <description>Initialization/Break Bit Write 1 to send initialization pulse for the Standard Mode or break pulse for the Simple Mode. The OW_DATA register will be flushed when initialization or the break situation is generating. Bit returns to 0 after pulse is sent. The pulse generates after the Go bit is set. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIR</name>
              <description>Direction Bit In Standard Mode, this field determines if next operation (byte operation or bit operation) is read or write. In Simple Mode, this field determines if the current transfer sequence is read or write. 0 = read 1 = write The operation starts after the Go bit is set.  </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MS</name>
              <description>Mode Selection Bit 
0: Standard Mode 
1: Simple Mode </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Standard</name>
                  <description>Standard Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Simple</name>
                  <description>Simple Mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Global Enable This field is used to enable or disable the One Wire Controller. A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_DATA</name>
          <description>One Wire Data Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF00FF</resetMask>
          <fields>
            <field>
              <name>SM_DATA</name>
              <description>These fields are for Simple Mode data send or receive in a one wire transmission. After this byte data transfer finishing, a transmission complete interrupt will generate. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OW_DATA</name>
              <description>Data byte for transmitting or received In Simple Mode mode, these fields are for the command byte transmission. When GO bit is set (the INITIALIZATION/BREAK bit is not set at the same time), these fields will be sent as the address and command for a Simple Mode transfer. After the command byte transmission finished, the controller in Simple Mode will send next 8 bit data from SM_DATA when the DIR bit is 1 or receive one byte data to SM_DATA when the DIR bit is 0. In Standard Mode, if the INITIALIZATION/BREAK bit is not set, the controller samples/sends data to/from these fields determining by the DIR bit when the Go bit is set. When the ONE_WIRE_SINGLE_BIT is enabled, only the first bit of these fields is available. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_FCLK</name>
          <description>One Wire Function Clock Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F00FF</resetMask>
          <fields>
            <field>
              <name>OW_FCLK</name>
              <description>(n) n-MHz clock is needed to use as a time reference by the machine. Transitions between the states of the state machine as well as actions triggered at precise time deadlines are expressed using the n - MHz clock. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OW_FCLK_D</name>
              <description>OW_FCLK = SOURCE_CLK/OW_FCLK_D </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_INT_MASK</name>
          <description>One Wire Interrupt Mask Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>DEGLITCH</name>
              <description>Deglitch Detected Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRC</name>
              <description>Comparing Complete Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMISSION</name>
              <description>Transmission Complete Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ</name>
              <description>Read Complete Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_OUT</name>
              <description>Time-out Interrupt Enable 
0: Disable 
1: Enable  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRESENCE</name>
              <description>Presence Detect Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_INT_STATUS</name>
          <description>One Wire Interrupt Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>DEGLITCH</name>
              <description>Deglitch Detected Interrupt Flag This flag indicates a deglitch in the bus. The controller looks for any glitch in the sample window for at least 1us. If the Deglitch Interrupt is enabled, an interrupt will issue when any deglitch occurs in the bus.  The interrupt condition is cleared by writing `1` to this field. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRC</name>
              <description>Comparing Complete Interrupt Flag This flag is used in Standard Mode., and is used to indicate the CRC comparing has finished. The interrupt condition is cleared by writing `1` to this field. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TRANSMISSION</name>
              <description>Transmission Complete Interrupt Flag In Standard Mode., the flag is set when a write operation of one byte or one bit in single-bit mode was completed. The interrupt is generated then. In Simple Mode., the flag is set when a write operation of one byte was completed. The interrupt is also generated. The interrupt condition is cleared by writing `1` to this field. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>READ</name>
              <description>Read Complete Interrupt Flag In Standard Mode., the flag is set when a byte or a bit in single-bit mode has been successfully read. The interrupt is generated then. In Simple Mode. the flag is set when a byte has been successfully read. The interrupt is also generated then. The interrupt condition is cleared by writing `1` to this field. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TIME_OUT</name>
              <description>Time-out Interrupt Flag This flag is only used in Simple Mode. The flag is set when two event happened. The one event is that after a read command initiated by the host, the slave did not pull the line low within the specified time (512 us). The other event is that another bit transfer does not begin after a specified time (512 us) from the pre-bit beginning.    When the above situation occurs, the interrupt generates and the value of this field is set. The interrupt condition is cleared by writing `1` to this field. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PRESENCE</name>
              <description>Presence Detect Interrupt Flag In Standard Mode., this interrupt status is set when the Initialization Pulse is completed. The interrupt is generated then and the PRESENCEDETECT bit is update. In Simple Mode., the flag is set when the successful completion of a break pulse. The interrupt is also generated then. The interrupt condition is cleared by writing `1` to this field. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_LC</name>
          <description>One Wire Line Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CURRENT_STATE_OF_ONE_WIRE_LINE</name>
              <description>Current state of One Wire Line 
0: low 
1: high  </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>low</name>
                  <description>low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>high</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ONE_WIRE_LINE_STATE_CONTROL_BIT</name>
              <description>One Wire line state control bit When the line control mode is enabled (bit [0] set), value of this bit decides the output level of the One Wire line. 
0: output low level 
1: output high level  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>output_low_level</name>
                  <description>output low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>output_high_level</name>
                  <description>output high level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ONE_WIRE_LINE_STATE_CONTROL_ENABLE</name>
              <description>One Wire line state control enable When this bit is set, the state of One Wire line is control by the value of bit [1]. 
0: disable line control mode 
1: enable line control mode </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable_line</name>
                  <description>disable line control mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable_line</name>
                  <description>enable line control mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_SMCRC</name>
          <description>One Wire Standard Mode CRC Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CRC_CALC_INDICATE</name>
              <description>This field indicates the CRC value calculated by the CRC shift register.  </description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CRC_RECEV</name>
              <description>The data CRC value (CRC8 or CRC16) will be written to these fields by software for CRC comparing. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OW_SMSC</name>
          <description>One Wire Standard Mode Special Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x2F</resetMask>
          <fields>
            <field>
              <name>CRC_ERROR_STATUS</name>
              <description>These fields indicate the result of the CRC comparing.  
0: CRC comparing right 
1: CRC comparing wrong </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CRC_comparing_right</name>
                  <description>CRC comparing right</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CRC_comparing_wrong</name>
                  <description>CRC comparing wrong</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MEM_CRC_COMPARE</name>
              <description>This field is only used in Standard Mode. When this field is set, the controller will compare the value in the CRC_RECEV field with the data read from the CRC_CALC_INDICATE field, and then returns corresponding result in the CRC_ERROR_STATUS field and generates CRC finish interrupt. The CRC shift register and CRC_CALC_INDICATE field will be cleaned to 0 then. This field will be automatically cleaned when the CRC compare is finish. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CRC_16BIT_EN</name>
              <description>This field is only used in Standard Mode. and is set to 1 to select 16bit CRC, else the 8bit CRC is select. 
0: CRC_8BIT_EN 
1: CRC_16BIT_EN </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CRC_8BIT_EN</name>
                  <description>CRC_8BIT_EN</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CRC_16BIT_EN</name>
                  <description>CRC_16BIT_EN</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WR_MEM_CRC_REQ</name>
              <description>This field is only used in One Wire mode. When this bit is set, the bit send to the device will be took into calculate the CRC value (CRC8 or CRC16). The calculation will stop when this bit is cleaned. The value will be preserved in the corresponding CRC (CRC8 or CRC16) shift register then.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_MEM_CRC_REQ</name>
              <description>This field is only used in Standard Mode. When this bit is set, the bit received from the device will be took into calculate the CRC value (CRC8 or CRC16). The calculation will stop when this bit is cleaned. The value will be preserved in the corresponding CRC (CRC8 or CRC16) shift register then.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SM_RST_PRESENCE_TCTL</name>
          <description>Standard Mode Reset Presence Timing Control Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x3C3FC1E0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TPDL</name>
              <description>PRESENCE_DETECT_LOW t(pdl) = N us. The range setting for TPDL in these fields is from 0 to 0xf0. In standard speed, Range: 60 &lt;= t(pdl) &lt;240. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TPDH</name>
              <description>PRESENCE_DETECT_HIGH t(pdh) = N us. The range setting for TPDH in these fields is from 0xf to 0x3c. In standard speed, range: 15 &lt;= t(pdh) &lt; 60 . </description>
              <bitRange>[23:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRSTL</name>
              <description>RESET_TIME_LOW t(rstl) = N us. The range setting for TRSTL in these fields is from 0 to 0xff. In standard speed, Range: 480 &lt;= t(rstl) &lt; infinity </description>
              <bitRange>[17:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRSTH</name>
              <description>RESET_TIME_HIGH, t(rsth) = N us. The range setting for TRSTH in these fields is from 0 to 0xff. In standard speed, Range : 480 &lt;= t(rsth) &lt; infinity </description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SM_WR_RD_TCTL</name>
          <description>Standard Mode Write Read Timing Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x213DE0BC</resetValue>
          <resetMask>0x6F7FFFFF</resetMask>
          <fields>
            <field>
              <name>TSU</name>
              <description>Read Data Setup. In standard speed, range: t(SU) &lt; 1 
00: 0.5us 
01: 1us 
10: 2us 
11: 4us </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_5us</name>
                  <description>0.5us</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1us</name>
                  <description>1us</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2us</name>
                  <description>2us</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4us</name>
                  <description>4us</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REC</name>
              <description>Recovery Time, t(recovery) = N us. In standard speed, range: 1us &lt;= t(recovery) </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRDV</name>
              <description>Read data valid time, t(rdv) = N us. In standard speed, range: Exactly 15 </description>
              <bitRange>[22:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TLOW0</name>
              <description>Write Zero time Low, Tlow0 = N us. The range setting for TLOW0 is from 0x3c to 0x77. In standard mode, range:60&lt;= t(low0) &lt; t(tslot) &lt;120 </description>
              <bitRange>[17:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TLOW1</name>
              <description>Write One time Low, or TLOWR both are same. t(low1) = N us. The range setting for TLOW1 and TLOWR here is from 0x1 to 0xf. In standard speed, range:1 &lt;= t(low1) &lt; 15. t(lowR) = N owr clks. In standard speed, rang = 1 &lt;= t(lowR) &lt;15 </description>
              <bitRange>[10:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSLOT</name>
              <description>Active time slot for write and read data, t(slot) = N us. The range setting for TSLOT is from 0x3c to 0x78. In standard mode, range:60 &lt;= t(slot) &lt;120 </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SP_WR_RD_TCTL</name>
          <description>Simple Mode Timing Control Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xA0158BE</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RD_SAMPLE_POINT</name>
              <description>When controller of the Simple Mode read, the default sample point is at the middle of the THW1 point and the THW0 point, named S(middle). When these fields are set, the corresponding new sample point will be determined.  0000 S(middle)  1000 S(middle)-30us 0001 S(middle)+5us 1001 S(middle)+40us 0010 S(middle)-5us 1010 S(middle)-40us 0011 S(middle)+10us 1011 S(middle)+50us 0100 S(middle)-10us 1100 S(middle)-50us 0101 S(middle)+20us 1101 S(middle)+60us 0110 S(middle)-20us 1110 S(middle)-60us 0111 S(middle)+30us 1111 reserve </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THW1_INT</name>
              <description>t(HW1_INT) = N us. The range setting for THW1_INT in these fields is from 0 to 0x3f, which is the integer part of the THW1. In HDQ mode, Range: t(HW0) &lt;= 50 us. </description>
              <bitRange>[27:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THW1_DEC</name>
              <description>THW1_DEC is the decimal part of the THW1.  t(HW1_DEC) = N ow_clks. The value for the THW1 = THW1_INT + THW1_DEC. </description>
              <bitRange>[21:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THW0</name>
              <description>t(HW0) = N us. The range setting for THW0 in these fields is from 0 to 0xff. In HDQ mode, Range: t(HW0) &lt;= 145 us. </description>
              <bitRange>[17:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCYCH</name>
              <description>t(CYCH) = N us. The range setting for TCYCH in these fields is from 0 to 0x3ff. In HDQ mode, Rang: 190 us &lt;= t(CYCH) &lt;= infinity. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>High Speed Timer</name>
      <description>High Speed Timer</description>
      <groupName>generic</groupName>
      <baseAddress>0x3005000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>HS_TMR0_CTRL_REG</name>
          <description>HS Timer 0 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800000F3</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_TEST</name>
              <description>High speed timer 0 test mode. In test mode, the low register should be set to 0x1, the high register will down counter. The counter needs to be reloaded. 
0: Normal mode 
1: Test mode </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test_mode</name>
                  <description>Test mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_MODE</name>
              <description>High Speed Timer 0 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_CLK</name>
              <description>Select the pre-scale of the high speed timer 0 clock sources. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: / 
110: / 
111: / </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_RELOAD</name>
              <description>High Speed Timer 0 Reload. 
0: No effect 
1: Reload High Speed Timer 0 Interval Value </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload High Speed Timer 0 Interval Value</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_EN</name>
              <description>High Speed Timer 0 Enable. 
0: Stop/Pause  
1: Start If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_CURNT_HI_REG</name>
          <description>HS Timer 0 Current Value High Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_CUR_VALUE_HI</name>
              <description>High Speed Timer 0 Current Value [55:32]. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_CURNT_LO_REG</name>
          <description>HS Timer 0 Current Value Low Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_CUR_VALUE_LO</name>
              <description>High Speed Timer 0 Current Value [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_INTV_HI_REG</name>
          <description>HS Timer 0 Interval Value High Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_INTV_VALUE_HI</name>
              <description>High Speed Timer 0 Interval Value [55:32]. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_INTV_LO_REG</name>
          <description>HS Timer 0 Interval Value Low Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_INTV_VALUE_LO</name>
              <description>High Speed Timer 0 Interval Value [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_EN_REG</name>
          <description>HS Timer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_INT_EN</name>
              <description>High Speed Timer 0 Interrupt Enable. 
0: No effect 
1: High Speed Timer 0 Interval Value reached interrupt enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Speed Timer 0 Interval Value reached interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_STAS_REG</name>
          <description>HS Timer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_IRQ_PEND</name>
              <description>High Speed Timer 0 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, High speed timer 0 interval value is reached </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, High speed timer 0 interval value is reached</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2S/PCM0</name>
      <description>I2S/PCM0</description>
      <groupName>generic</groupName>
      <baseAddress>0x5090000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>I2S_PCM_CHCFG</name>
          <description>I2S_PCM_CHCFG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>TX_SLOT_HIZ</name>
              <description>0: Normal mode for the last half cycle of BCLK in the Slot 
1: Turn to Hi-Z State for the last half cycle of BCLK in the Slot </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode for the last half cycle of BCLK in the Slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn to Hi-Z State for the last half cycle of BCLK in the Slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_STATE</name>
              <description>0: Transfer level 0 When Not Transferring Slot 
1: Turn to Hi-Z State (TDM) When Not Transferring Slot </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transfer_level</name>
                  <description>Transfer level 0 When Not Transferring Slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn to Hi-Z State (TDM) When Not Transferring Slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_SLOT_NUM</name>
              <description>RX Channel/Slot number between CPU/DMA and RXFIFO 
0000: 1 Channel or Slot ... 
0111: 8 Channels or Slots 
1000: 9 Channels or Slots ... 1111:16 Channels or Slots </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 Channel or Slot ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 Channels or Slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 Channels or Slots ... 1111:16 Channels or Slots</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_SLOT_NUM</name>
              <description>TX Channel/Slot number between CPU/DMA and TXFIFO 
0000: 1 Channel or Slot ... 
0111: 8 Channels or Slots 
1000: 9 Channels or Slots ... 1111:16 Channels or Slots </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 Channel or Slot ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 Channels or Slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 Channels or Slots ... 1111:16 Channels or Slots</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CLKD</name>
          <description>I2S_PCM_CLKD</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>MCLKO_EN</name>
              <description>0: Disable MCLK Output 
1: Enable MCLK Output NOTE Whether in Slave or Master mode, when this bit is set to , MCLK should be output. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable MCLK Output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable MCLK Output NOTE Whether in Slave or Master mode, when this bit is set to , MCLK should be output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCLKDIV</name>
              <description>BCLK Divide Ratio from PLL_AUDIO 
0000: Reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192 </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLKDIV</name>
              <description>MCLK Divide Ratio from PLL_AUDIO 
0000: Reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CTL</name>
          <description>I2S_PCM_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x60000</resetValue>
          <resetMask>0x6017F</resetMask>
          <fields>
            <field>
              <name>BCLK_OUT</name>
              <description>0: Input 
1: Output </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_OUT</name>
              <description>0: Input 
1: Output </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DOUT_EN</name>
              <description>0: Disable, Hi-Z State 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, Hi-Z State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_MUTE</name>
              <description>0: Normal Transfer 
1: Force DOUT to Output 0 </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Force</name>
                  <description>Force DOUT to Output 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE_SEL</name>
              <description>Mode Selection 
00: PCM Mode (offset 0: Long Frame;  offset 1: Short Frame) 
01: Left Mode (offset 0: LJ Mode;  offset 1: I2S Mode) 
10: Right-Justified Mode 
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM</name>
                  <description>PCM Mode (offset 0: Long Frame;  offset 1: Short Frame)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left</name>
                  <description>Left Mode (offset 0: LJ Mode;  offset 1: I2S Mode)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>right_Justified</name>
                  <description>Right-Justified Mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Test 
0: Normal Mode 
1: Loop Back Test When Set `1` , Connecting the DOUT with the DIN. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Test When Set `1` , Connecting the DOUT with the DIN.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmitter Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FCTL</name>
          <description>I2S_PCM_FCTL</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x400F0</resetValue>
          <resetMask>0x8307F3F7</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable 0 : Disable 1 : Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TXFIFO, self clear to `0`. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FRX</name>
              <description>Write `1` to flush RXFIFO, self clear to `0`. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXTL</name>
              <description>TXFIFO Empty Trigger Level Interrupt and DMA request trigger level for TXFIFO normal condition. Trigger Level = TXTL </description>
              <bitRange>[18:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RXFIFO Trigger Level Interrupt and DMA request trigger level for RXFIFO normal condition. Trigger Level = RXTL + 1 </description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TXFIFO Input Mode (Mode 0, 1) 
0: Valid data at the MSB of TXFIFO register 
1: Valid data at the LSB of TXFIFO register Example for 20-bit Transmitted Audio Sample: Mode 0: TXFIFO[31:0] = {APB_WDATA[31:12], 12`h0} Mode 1: TXFIFO[31:0] = {APB_WDATA[19:0], 12`h0} </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of TXFIFO register Example for 20-bit Transmitted Audio Sample: Mode 0: TXFIFO[31:0] = {APB_WDATA[31:12], 12`h0} Mode 1: TXFIFO[31:0] = {APB_WDATA[19:0], 12`h0}</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RXFIFO Output Mode (Mode 0, 1, 2, 3) 
00: Expanding `0` at LSB of RXFIFO register 
01: Expanding received sample sign bit at MSB of RXFIFO register 
10: Truncating received samples at high half-word of RXFIFO register and low half-word of RXFIFO register is filled by `0` 
11: Truncating received samples at low half-word of RXFIFO register and high half-word of RXFIFO register is expanded by its sign bit Example for 20-bit Received Audio Sample: Mode 0: APB_RDATA[31:0] = {RXFIFO[31:12], 12`h0} Mode 1: APB_RDATA[31:0] = {12{RXFIFO[31]}, RXFIFO[31:12]} Mode 2: APB_RDATA [31:0] = {RXFIFO[31:16], 16`h0} Mode 3: APB_RDATA[31:0] = {16{RXFIFO[31], RXFIFO[31:16]} </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`_at_LSB_of</name>
                  <description>Expanding `0` at LSB of RXFIFO register</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample_sign_bit</name>
                  <description>Expanding received sample sign bit at MSB of RXFIFO register</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_high</name>
                  <description>Truncating received samples at high half-word of RXFIFO register and low half-word of RXFIFO register is filled by `0`</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_low</name>
                  <description>Truncating received samples at low half-word of RXFIFO register and high half-word of RXFIFO register is expanded by its sign bit Example for 20-bit Received Audio Sample: Mode 0: APB_RDATA[31:0] = {RXFIFO[31:12], 12`h0} Mode 1: APB_RDATA[31:0] = {12{RXFIFO[31]}, RXFIFO[31:12]} Mode 2: APB_RDATA [31:0] = {RXFIFO[31:16], 16`h0} Mode 3: APB_RDATA[31:0] = {16{RXFIFO[31], RXFIFO[31:16]}</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FMT0</name>
          <description>I2S_PCM_FMT0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x33</resetValue>
          <resetMask>0x400BFFFF</resetMask>
          <fields>
            <field>
              <name>LRCK_WIDTH</name>
              <description>(Only Apply in PCM Mode ) LRCK Width 
0: LRCK = 1 BCLK Width (Short Frame) 
1: LRCK = 2 BCLK Width (Long Frame) </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LRCK__equals__1</name>
                  <description>LRCK = 1 BCLK Width (Short Frame)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LRCK__equals__2</name>
                  <description>LRCK = 2 BCLK Width (Long Frame)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_POLARITY</name>
              <description>When Apply in I2S / Left-Justified / Right-Justified Mode: 
0: Left Channel When LRCK is Low 
1: Left Channel When LRCK is High When Apply in PCM Mode: 
0: PCM LRCK Asserted at the Negative Edge 
1: PCM LRCK Asserted at the Positive Edge </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Left Channel When LRCK is Low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>Left Channel When LRCK is High When Apply in PCM Mode:</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_Asserted_at_the_Negative</name>
                  <description>PCM LRCK Asserted at the Negative Edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_Asserted_at_the_Positive</name>
                  <description>PCM LRCK Asserted at the Positive Edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_PERIOD</name>
              <description>It is used to program the number of BCLKs per channel of sample frame. This value is interpreted as follow: PCM Mode: Number of BCLKs within (Left + Right) channel width. I2S / Left-Justified / Right-Justified Mode: Number of BCLKs within each individual channel width (Left or Right) . N+1 For example: N = 7:   8 BCLKs width ... N = 1023:   1024 BCLKs width </description>
              <bitRange>[17:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BCLK_POLARITY</name>
              <description>0: Normal Mode, DOUT Drive Data at Negative Edge 
1: Invert Mode, DOUT Drive Data at Positive Edge </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode, DOUT Drive Data at Negative Edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert Mode, DOUT Drive Data at Positive Edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SR</name>
              <description>Sample Resolution 
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDGE_TRANSFER</name>
              <description>0: DOUT Drive Data and DIN Sample Data at the Different BCLK Edge 
1: DOUT Drive Data and DIN Sample Data at the Same BCLK Edge BCLK_POLARITY = 0, EDGE_TRANSFER = 0, DIN Sample Data at Positive Edge; BCLK_POLARITY = 0, EDGE_TRANSFER = 1, DIN Sample Data at Negative Edge; BCLK_POLARITY = 1, EDGE_TRANSFER = 0, DIN Sample Data at Negative Edge; BCLK_POLARITY = 1, EDGE_TRANSFER = 1, DIN Sample Data at Positive Edge. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DOUT_Drive_Data_and_DIN_Sample_Data_at_the_Different</name>
                  <description>DOUT Drive Data and DIN Sample Data at the Different BCLK Edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DOUT_Drive_Data_and_DIN_Sample_Data_at_the_Same</name>
                  <description>DOUT Drive Data and DIN Sample Data at the Same BCLK Edge BCLK_POLARITY = 0, EDGE_TRANSFER = 0, DIN Sample Data at Positive Edge; BCLK_POLARITY = 0, EDGE_TRANSFER = 1, DIN Sample Data at Negative Edge; BCLK_POLARITY = 1, EDGE_TRANSFER = 0, DIN Sample Data at Negative Edge; BCLK_POLARITY = 1, EDGE_TRANSFER = 1, DIN Sample Data at Positive Edge.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SW</name>
              <description>Slot Width Select 
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FMT1</name>
          <description>I2S_PCM_FMT1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x30</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RX</name>
              <description>MLS MSB/LSB First Select 
0: MSB First 
1: LSB First </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX</name>
              <description>MLS MSB/LSB First Select 
0: MSB First 
1: LSB First </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEXT</name>
              <description>Sign Extend in Slot [Sample Resolution &lt; Slot Width] 
00: Zeros or Audio Gain Padding at LSB Position 
01: Sign Extension at MSB Position 
10: Reserved 
11: Transfer 0 after each Sample in each Slot </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Zeros</name>
                  <description>Zeros or Audio Gain Padding at LSB Position</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sign</name>
                  <description>Sign Extension at MSB Position</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer 0 after each Sample in each Slot</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PDM</name>
              <description>PCM Data Mode 
00: Linear PCM 
01: Reserved 
10: 8-bit u-law 
11: 8-bit A-law </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_ulaw</name>
                  <description>8-bit u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_Alaw</name>
                  <description>8-bit A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_PDM</name>
              <description>PCM Data Mode 
00: Linear PCM 
01: Reserved 
10: 8-bits u-law 
11: 8-bits A-law </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_ulaw</name>
                  <description>8-bits u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_Alaw</name>
                  <description>8-bits A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FSTA</name>
          <description>I2S_PCM_FSTA</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x10800000</resetValue>
          <resetMask>0x10FF017F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TXFIFO Empty 
0: No Room for New Sample in TXFIFO 
1: More than One Room for New Sample in TXFIFO (&gt;= 1 Word) </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Room</name>
                  <description>No Room for New Sample in TXFIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than One Room for New Sample in TXFIFO (&gt;= 1 Word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TXFIFO Empty Space Word Counter </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RXFIFO Available 
0: No Available Data in RXFIFO 
1: More than One Sample in RXFIFO (&gt;= 1 Word) </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Available</name>
                  <description>No Available Data in RXFIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than One Sample in RXFIFO (&gt;= 1 Word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RXFIFO Available Sample Word Counter </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_INT</name>
          <description>I2S_PCM_INT</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TX_DRQ</name>
              <description>TXFIFO Empty DRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TXFIFO Underrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TXFIFO Overrun Interrupt Enable 
0: Disable 
1: Enable When set to `1`, an interrupt happens when writing new audio data if TXFIFO is full. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, an interrupt happens when writing new audio data if TXFIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TXFIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RXFIFO Data Available DRQ Enable 
0: Disable 
1: Enable When set to `1`, RXFIFO DMA request line is asserted if data is available in RXFIFO. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, RXFIFO DMA request line is asserted if data is available in RXFIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXUI_EN</name>
              <description>RXFIFO Underrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RXFIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RXFIFO Data Available Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_ISTA</name>
          <description>I2S_PCM_ISTA</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>TXU_INT</name>
              <description>TXFIFO Underrun Pending Interrupt 
0: No Pending Interrupt 
1: TXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO</name>
                  <description>TXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TXFIFO Overrun Pending Interrupt 
0: No Pending Interrupt 
1: TXFIFO Overrun Pending Interrupt Write `1` to clear this interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO</name>
                  <description>TXFIFO Overrun Pending Interrupt Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TXFIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: TXFIFO Empty Pending Interrupt When Data in TXFIFO are Less than TX Trigger Level Write `1` to clear this interrupt or automatic clear if interrupt condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TXFIFO</name>
                  <description>TXFIFO Empty Pending Interrupt When Data in TXFIFO are Less than TX Trigger Level Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXU_INT</name>
              <description>RXFIFO Underrun Pending Interrupt 
0: No Pending Interrupt 
1: RXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO</name>
                  <description>RXFIFO Underrun Pending Interrupt Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RXFIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: RXFIFO Overrun Pending IRQ  Write `1` to clear this interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO</name>
                  <description>RXFIFO Overrun Pending IRQ  Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RXFIFO Data Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ When Data in RXFIFO are More than RX Trigger Level Write `1` to clear this interrupt or automatic clear if interrupt condition fails. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ When Data in RXFIFO are More than RX Trigger Level Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHMAP</name>
          <description>I2S_PCM_RXCHMAP</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CH7_MAP</name>
              <description>RX Channel 7 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH6_MAP</name>
              <description>RX Channel 6 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH5_MAP</name>
              <description>RX Channel 5 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH4_MAP</name>
              <description>RX Channel 4 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH3_MAP</name>
              <description>RX Channel 3 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH2_MAP</name>
              <description>RX Channel 2 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH1_MAP</name>
              <description>RX Channel 1 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH0_MAP</name>
              <description>RX Channel 0 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHMAP0</name>
          <description>I2S_PCM_RXCHMAP0</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CH15_MAP</name>
              <description>RX Channel 15 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH14_MAP</name>
              <description>RX Channel 14 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH13_MAP</name>
              <description>RX Channel 13 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH12_MAP</name>
              <description>RX Channel 12 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH11_MAP</name>
              <description>RX Channel 11 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH10_MAP</name>
              <description>RX Channel 10 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH9_MAP</name>
              <description>RX Channel 9 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH8_MAP</name>
              <description>RX Channel 8 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHSEL</name>
          <description>I2S_PCM_RXCHSEL</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F0000</resetMask>
          <fields>
            <field>
              <name>RX_OFFSET</name>
              <description>RX offset Tune, RX Data offset to LRCK 
0: No offset n: Data is offset by n BCLKs to LRCK </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CHSEL</name>
              <description>RX Channel (Slot) Number Select for Input 
0000: 1 Channel / Slot ... 
0111: 8 Channels / Slots 
1000: 9 Channels / Slots ... 
1111: 16 Channels / Slots </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 Channel / Slot ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 Channels / Slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 Channels / Slots ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 Channels / Slots</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCNT</name>
          <description>I2S_PCM_RXCNT</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample Counter The audio sample number of writing into RXFIFO. When one sample is written by Digital Audio Engine, the RX sample counter register increases by one. The RX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXFIFO</name>
          <description>I2S_PCM_RXFIFO</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCHMAP0</name>
          <description>I2S_PCM_TXCHMAP0</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CH15_MAP</name>
              <description>TX Channel 15 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH14_MAP</name>
              <description>TX Channel 14 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th sample </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th_sample</name>
                  <description>16th sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH13_MAP</name>
              <description>TX Channel 13 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH12_MAP</name>
              <description>TX Channel 12 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH11_MAP</name>
              <description>TX Channel 11 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th sample </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th_sample</name>
                  <description>16th sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH10_MAP</name>
              <description>TX Channel 10 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH9_MAP</name>
              <description>TX Channel 9 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH8_MAP</name>
              <description>TX Channel 8 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCHMAP1</name>
          <description>I2S_PCM_TXCHMAP1</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CH7_MAP</name>
              <description>TX Channel 7 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH6_MAP</name>
              <description>TX Channel 6 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH5_MAP</name>
              <description>TX Channel 5 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH4_MAP</name>
              <description>TX Channel 4 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH3_MAP</name>
              <description>TX Channel 3 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH2_MAP</name>
              <description>TX Channel 2 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH1_MAP</name>
              <description>TX Channel 1 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH0_MAP</name>
              <description>TX Channel 0 Mapping 
0000: 1st Sample ... 
0111: 8th Sample 
1000: 9th Sample ... 
1111: 16th Sample </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>1st Sample ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th</name>
                  <description>8th Sample</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9th</name>
                  <description>9th Sample ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16th</name>
                  <description>16th Sample</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCHSEL</name>
          <description>I2S_PCM_TXCHSEL</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>TX_OFFSET</name>
              <description>TX offset Tune, TX Data offset to LRCK  
0: No offset n: Data is offset by n BCLKs to LRCK </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CHSEL</name>
              <description>TX Channel (Slot) number select for each output 
0000: 1 Channel / Slot ... 
0111: 8 Channels / Slots 
1000: 9 Channels / Slots ... 
1111: 16 Channels / Slots </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 Channel / Slot ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 Channels / Slots</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9</name>
                  <description>9 Channels / Slots ...</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 Channels / Slots</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CHEN</name>
              <description>TX Channel (Slot) Enable, bit[15:0] refer to Slot [15:0]. When one or more Slot(s) is(are) disabled, the affected Slot(s) is(are) set to the disable state. 
0: Disable 
1: Enable </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCNT</name>
          <description>I2S_PCM_TXCNT</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of sending into TXFIFO. When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXFIFO</name>
          <description>I2S_PCM_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>TX Sample Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample. </description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM0">
      <name>I2S/PCM1(used for HDMI)</name>
      <description>I2S/PCM1(used for HDMI)</description>
      <groupName>generic</groupName>
      <baseAddress>0x5091000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM0">
      <name>I2S/PCM2</name>
      <description>I2S/PCM2</description>
      <groupName>generic</groupName>
      <baseAddress>0x5092000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM0">
      <name>I2S/PCM3(used for Audio Codec)</name>
      <description>I2S/PCM3(used for Audio Codec)</description>
      <groupName>generic</groupName>
      <baseAddress>0x508F000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>IOMMU</name>
      <description>IOMMU</description>
      <groupName>generic</groupName>
      <baseAddress>0x30F0000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>IOMMU_4KB_BDY_PRT_CTRL_REG</name>
          <description>IOMMU 4KB Boundary Protect Control Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x1F</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>MASTER4_4KB_BDY_PRT_CTRL</name>
              <description>Master4 4KB boundary protect control bit 
0: Disable 4KB boundary protect 
1: Enable 4KB boundary protect </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 4KB boundary protect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 4KB boundary protect</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER3_4KB_BDY_PRT_CTRL</name>
              <description>Master3 4KB boundary protect control bit 
0: Disable 4KB boundary protect 
1: Enable 4KB boundary protect </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 4KB boundary protect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 4KB boundary protect</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER2_4KB_BDY_PRT_CTRL</name>
              <description>Master2 4KB boundary protect control bit 
0: Disable 4KB boundary protect 
1: Enable 4KB boundary protect </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 4KB boundary protect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 4KB boundary protect</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER1_4KB_BDY_PRT_CTRL</name>
              <description>Master1 4KB boundary protect control bit 
0: Disable 4KB boundary protect 
1: Enable 4KB boundary protect </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 4KB boundary protect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 4KB boundary protect</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER0_4KB_BDY_PRT_CTRL</name>
              <description>Master0 4KB boundary protect control bit 
0: Disable 4KB boundary protect 
1: Enable 4KB boundary protect NOTE When Master sends the burst of over 4KB boundary, IOMMU can split demand and data. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 4KB boundary protect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 4KB boundary protect NOTE When Master sends the burst of over 4KB boundary, IOMMU can split demand and data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_AUTO_GATING_REG</name>
          <description>IOMMU Auto Gating Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>IOMMU_AUTO_GATING</name>
              <description>IOMMU circuit auto gating control.  The purpose is decreasing power consumption of the module. 
0: Disable auto gating function 
1: Enable auto gating function </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable auto gating function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable auto gating function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_BYPASS_REG</name>
          <description>IOMMU Bypass Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>MASTER5_BYPASS</name>
              <description>Master5 bypass switch After open bypass function IOMMU can not map the address of Master5 sending, and directly output the virtual address to MBUS as physical address. 
0: Disable bypass function 
1: Enable bypass function </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bypass function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bypass function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER4_BYPASS</name>
              <description>Master4 bypass switch After open bypass function IOMMU can not map the address of Master4 sending, and directly output the virtual address to MBUS as physical address. 
0: Disable bypass function 
1: Enable bypass function </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bypass function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bypass function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER3_BYPASS</name>
              <description>Master3 bypass switch After open bypass function IOMMU can not map the address of Master3 sending, and directly output the virtual address to MBUS as physical address. 
0: Disable bypass function 
1: Enable bypass function </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bypass function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bypass function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER2_BYPASS</name>
              <description>Master2 bypass switch After open bypass function IOMMU can not map the address of Master2 sending, and directly output the virtual address to MBUS as physical address. 
0: Disable bypass function 
1: Enable bypass function </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bypass function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bypass function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER1_BYPASS</name>
              <description>Master1 bypass switch After open bypass function IOMMU can not map the address of Master1 sending, and directly output the virtual address to MBUS as physical address. 
0: Disable bypass function 
1: Enable bypass function </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bypass function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bypass function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER0_BYPASS</name>
              <description>Master0 bypass switch After open bypass function IOMMU can not map the address of Master0 sending, and directly output the virtual address to MBUS as physical address. 
0: Disable bypass function 
1: Enable bypass function </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bypass function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bypass function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG0</name>
          <description>IOMMU Domain Authority Control Register 0</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM1_M5_WT_AUT_CTRL</name>
              <description>Domain1 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M5_RD_AUT_CTRL</name>
              <description>Domain1 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M4_WT_AUT_CTRL</name>
              <description>Domain1 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M4_RD_AUT_CTRL</name>
              <description>Domain1 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M3_WT_AUT_CTRL</name>
              <description>Domain1 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M3_RD_AUT_CTRL</name>
              <description>Domain1 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M2_WT_AUT_CTRL</name>
              <description>Domain1 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M2_RD_AUT_CTRL</name>
              <description>Domain1 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M1_WT_AUT_CTRL</name>
              <description>Domain1 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M1_RD_AUT_CTRL</name>
              <description>Domain1 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M0_WT_AUT_CTRL</name>
              <description>Domain1 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM1_M0_RD_AUT_CTRL</name>
              <description>Domain1 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M5_WT_AUT_CTRL</name>
              <description>Domain0 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M5_RD_AUT_CTRL</name>
              <description>Domain0 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M4_WT_AUT_CTRL</name>
              <description>Domain0 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M4_RD_AUT_CTRL</name>
              <description>Domain0 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M3_WT_AUT_CTRL</name>
              <description>Domain0 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M3_RD_AUT_CTRL</name>
              <description>Domain0 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M2_WT_AUT_CTRL</name>
              <description>Domain0 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M2_RD_AUT_CTRL</name>
              <description>Domain0 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M1_WT_AUT_CTRL</name>
              <description>Domain0 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M1_RD_AUT_CTRL</name>
              <description>Domain0 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M0_WT_AUT_CTRL</name>
              <description>Domain0 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM0_M0_RD_AUT_CTRL</name>
              <description>Domain0 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG1</name>
          <description>IOMMU Domain Authority Control Register 1</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM3_M5_WT_AUT_CTRL</name>
              <description>Domain3 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M5_RD_AUT_CTRL</name>
              <description>Domain3 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M4_WT_AUT_CTRL</name>
              <description>Domain3 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M4_RD_AUT_CTRL</name>
              <description>Domain3 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M3_WT_AUT_CTRL</name>
              <description>Domain3 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M3_RD_AUT_CTRL</name>
              <description>Domain3 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M2_WT_AUT_CTRL</name>
              <description>Domain3 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M2_RD_AUT_CTRL</name>
              <description>Domain3 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M1_WT_AUT_CTRL</name>
              <description>Domain3 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M1_RD_AUT_CTRL</name>
              <description>Domain3 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M0_WT_AUT_CTRL</name>
              <description>Domain3 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM3_M0_RD_AUT_CTRL</name>
              <description>Domain3 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M5_WT_AUT_CTRL</name>
              <description>Domain2 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M5_RD_AUT_CTRL</name>
              <description>Domain2 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M4_WT_AUT_CTRL</name>
              <description>Domain2 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M4_RD_AUT_CTRL</name>
              <description>Domain2 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M3_WT_AUT_CTRL</name>
              <description>Domain2 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M3_RD_AUT_CTRL</name>
              <description>Domain2 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M2_WT_AUT_CTRL</name>
              <description>Domain2 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M2_RD_AUT_CTRL</name>
              <description>Domain2 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M1_WT_AUT_CTRL</name>
              <description>Domain2 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M1_RD_AUT_CTRL</name>
              <description>Domain2 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M0_WT_AUT_CTRL</name>
              <description>Domain2 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM2_M0_RD_AUT_CTRL</name>
              <description>Domain2 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG2</name>
          <description>IOMMU Domain Authority Control Register 2</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM5_M5_WT_AUT_CTRL</name>
              <description>Domain5 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M5_RD_AUT_CTRL</name>
              <description>Domain5 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M4_WT_AUT_CTRL</name>
              <description>Domain5 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M4_RD_AUT_CTRL</name>
              <description>Domain5 read permission control for master4
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M3_WT_AUT_CTRL</name>
              <description>Domain5 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M3_RD_AUT_CTRL</name>
              <description>Domain5 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M2_WT_AUT_CTRL</name>
              <description>Domain5 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M2_RD_AUT_CTRL</name>
              <description>Domain5 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M1_WT_AUT_CTRL</name>
              <description>Domain5 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M1_RD_AUT_CTRL</name>
              <description>Domain5 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M0_WT_AUT_CTRL</name>
              <description>Domain5 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM5_M0_RD_AUT_CTRL</name>
              <description>Domain5 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M5_WT_AUT_CTRL</name>
              <description>Domain4 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M5_RD_AUT_CTRL</name>
              <description>Domain4 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M4_WT_AUT_CTRL</name>
              <description>Domain4 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M4_RD_AUT_CTRL</name>
              <description>Domain4 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M3_WT_AUT_CTRL</name>
              <description>Domain4 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M3_RD_AUT_CTRL</name>
              <description>Domain4 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M2_WT_AUT_CTRL</name>
              <description>Domain4 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M2_RD_AUT_CTRL</name>
              <description>Domain4 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M1_WT_AUT_CTRL</name>
              <description>Domain4 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M1_RD_AUT_CTRL</name>
              <description>Domain4 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M0_WT_AUT_CTRL</name>
              <description>Domain4 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM4_M0_RD_AUT_CTRL</name>
              <description>Domain4 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG3</name>
          <description>IOMMU Domain Authority Control Register 3</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM7_M5_WT_AUT_CTRL</name>
              <description>Domain7 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M5_RD_AUT_CTRL</name>
              <description>Domain7 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M4_WT_AUT_CTRL</name>
              <description>Domain7 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M4_RD_AUT_CTRL</name>
              <description>Domain7 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M3_WT_AUT_CTRL</name>
              <description>Domain7 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M3_RD_AUT_CTRL</name>
              <description>Domain7 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M2_WT_AUT_CTRL</name>
              <description>Domain7 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M2_RD_AUT_CTRL</name>
              <description>Domain7 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M1_WT_AUT_CTRL</name>
              <description>Domain7 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M1_RD_AUT_CTRL</name>
              <description>Domain7 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M0_WT_AUT_CTRL</name>
              <description>Domain7 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM7_M0_RD_AUT_CTRL</name>
              <description>Domain7 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M5_WT_AUT_CTRL</name>
              <description>Domain6 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M5_RD_AUT_CTRL</name>
              <description>Domain6 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M4_WT_AUT_CTRL</name>
              <description>Domain6 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M4_RD_AUT_CTRL</name>
              <description>Domain6 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M3_WT_AUT_CTRL</name>
              <description>Domain6 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M3_RD_AUT_CTRL</name>
              <description>Domain6 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M2_WT_AUT_CTRL</name>
              <description>Domain6 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M2_RD_AUT_CTRL</name>
              <description>Domain6 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M1_WT_AUT_CTRL</name>
              <description>Domain6 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M1_RD_AUT_CTRL</name>
              <description>Domain6 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M0_WT_AUT_CTRL</name>
              <description>Domain6 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM6_M0_RD_AUT_CTRL</name>
              <description>Domain6 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG4</name>
          <description>IOMMU Domain Authority Control Register 4</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM9_M5_WT_AUT_CTRL</name>
              <description>Domain9 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M5_RD_AUT_CTRL</name>
              <description>Domain9 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M4_WT_AUT_CTRL</name>
              <description>Domain9 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M4_RD_AUT_CTRL</name>
              <description>Domain9 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M3_WT_AUT_CTRL</name>
              <description>Domain9 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M3_RD_AUT_CTRL</name>
              <description>Domain9 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M2_WT_AUT_CTRL</name>
              <description>Domain9 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M2_RD_AUT_CTRL</name>
              <description>Domain9 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M1_WT_AUT_CTRL</name>
              <description>Domain9 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M1_RD_AUT_CTRL</name>
              <description>Domain9 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M0_WT_AUT_CTRL</name>
              <description>Domain9 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM9_M0_RD_AUT_CTRL</name>
              <description>Domain9 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M5_WT_AUT_CTRL</name>
              <description>Domain8 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M5_RD_AUT_CTRL</name>
              <description>Domain8 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M4_WT_AUT_CTRL</name>
              <description>Domain8 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M4_RD_AUT_CTRL</name>
              <description>Domain8 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M3_WT_AUT_CTRL</name>
              <description>Domain8 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M3_RD_AUT_CTRL</name>
              <description>Domain8 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M2_WT_AUT_CTRL</name>
              <description>Domain8 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M2_RD_AUT_CTRL</name>
              <description>Domain8 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M1_WT_AUT_CTRL</name>
              <description>Domain8 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M1_RD_AUT_CTRL</name>
              <description>Domain8 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M0_WT_AUT_CTRL</name>
              <description>Domain8 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM8_M0_RD_AUT_CTRL</name>
              <description>Domain8 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG5</name>
          <description>IOMMU Domain Authority Control Register 5</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM11_M5_WT_AUT_CTRL</name>
              <description>Domain11 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M5_RD_AUT_CTRL</name>
              <description>Domain11 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M4_WT_AUT_CTRL</name>
              <description>Domain11 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M4_RD_AUT_CTRL</name>
              <description>Domain11 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M3_WT_AUT_CTRL</name>
              <description>Domain11 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M3_RD_AUT_CTRL</name>
              <description>Domain11 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M2_WT_AUT_CTRL</name>
              <description>Domain11 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M2_RD_AUT_CTRL</name>
              <description>Domain11 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M1_WT_AUT_CTRL</name>
              <description>Domain11 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M1_RD_AUT_CTRL</name>
              <description>Domain11 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M0_WT_AUT_CTRL</name>
              <description>Domain11 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM11_M0_RD_AUT_CTRL</name>
              <description>Domain11 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M5_WT_AUT_CTRL</name>
              <description>Domain10 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M5_RD_AUT_CTRL</name>
              <description>Domain10 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M4_WT_AUT_CTRL</name>
              <description>Domain10 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M4_RD_AUT_CTRL</name>
              <description>Domain10 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M3_WT_AUT_CTRL</name>
              <description>Domain10 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M3_RD_AUT_CTRL</name>
              <description>Domain10 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M2_WT_AUT_CTRL</name>
              <description>Domain10 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M2_RD_AUT_CTRL</name>
              <description>Domain10 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M1_WT_AUT_CTRL</name>
              <description>Domain10 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M1_RD_AUT_CTRL</name>
              <description>Domain10 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M0_WT_AUT_CTRL</name>
              <description>Domain10 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM10_M0_RD_AUT_CTRL</name>
              <description>Domain10 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG6</name>
          <description>IOMMU Domain Authority Control Register 6</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM13_M5_WT_AUT_CTRL</name>
              <description>Domain13 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M5_RD_AUT_CTRL</name>
              <description>Domain13 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M4_WT_AUT_CTRL</name>
              <description>Domain13 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M4_RD_AUT_CTRL</name>
              <description>Domain13 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M3_WT_AUT_CTRL</name>
              <description>Domain13 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M3_RD_AUT_CTRL</name>
              <description>Domain13 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M2_WT_AUT_CTRL</name>
              <description>Domain13 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M2_RD_AUT_CTRL</name>
              <description>Domain13 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M1_WT_AUT_CTRL</name>
              <description>Domain13 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M1_RD_AUT_CTRL</name>
              <description>Domain13 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M0_WT_AUT_CTRL</name>
              <description>Domain13 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM13_M0_RD_AUT_CTRL</name>
              <description>Domain13 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M5_WT_AUT_CTRL</name>
              <description>Domain12 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M5_RD_AUT_CTRL</name>
              <description>Domain12 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M4_WT_AUT_CTRL</name>
              <description>Domain12 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M4_RD_AUT_CTRL</name>
              <description>Domain12 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M3_WT_AUT_CTRL</name>
              <description>Domain12 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M3_RD_AUT_CTRL</name>
              <description>Domain12 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M2_WT_AUT_CTRL</name>
              <description>Domain12 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M2_RD_AUT_CTRL</name>
              <description>Domain12 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M1_WT_AUT_CTRL</name>
              <description>Domain12 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M1_RD_AUT_CTRL</name>
              <description>Domain12 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M0_WT_AUT_CTRL</name>
              <description>Domain12 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM12_M0_RD_AUT_CTRL</name>
              <description>Domain12 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_CTRL_REG7</name>
          <description>IOMMU Domain Authority Control Register 7</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>DM15_M5_WT_AUT_CTRL</name>
              <description>Domain15 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M5_RD_AUT_CTRL</name>
              <description>Domain15 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M4_WT_AUT_CTRL</name>
              <description>Domain15 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M4_RD_AUT_CTRL</name>
              <description>Domain15 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M3_WT_AUT_CTRL</name>
              <description>Domain15 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M3_RD_AUT_CTRL</name>
              <description>Domain15 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M2_WT_AUT_CTRL</name>
              <description>Domain15 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M2_RD_AUT_CTRL</name>
              <description>Domain15 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M1_WT_AUT_CTRL</name>
              <description>Domain15 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M1_RD_AUT_CTRL</name>
              <description>Domain15 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M0_WT_AUT_CTRL</name>
              <description>Domain15 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM15_M0_RD_AUT_CTRL</name>
              <description>Domain15 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M5_WT_AUT_CTRL</name>
              <description>Domain14 write permission control for master5 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M5_RD_AUT_CTRL</name>
              <description>Domain14 read permission control for master5 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M4_WT_AUT_CTRL</name>
              <description>Domain14 write permission control for master4 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M4_RD_AUT_CTRL</name>
              <description>Domain14 read permission control for master4 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M3_WT_AUT_CTRL</name>
              <description>Domain14 write permission control for master3 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M3_RD_AUT_CTRL</name>
              <description>Domain14 read permission control for master3 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M2_WT_AUT_CTRL</name>
              <description>Domain14 write permission control for master2 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M2_RD_AUT_CTRL</name>
              <description>Domain14 read permission control for master2 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M1_WT_AUT_CTRL</name>
              <description>Domain14 write permission control for master1 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M1_RD_AUT_CTRL</name>
              <description>Domain14 read permission control for master1 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M0_WT_AUT_CTRL</name>
              <description>Domain14 write permission control for master0 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DM14_M0_RD_AUT_CTRL</name>
              <description>Domain14 read permission control for master0 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_DM_AUT_OVWT_REG</name>
          <description>IOMMU Domain Authority Overwrite Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000FFF</resetMask>
          <fields>
            <field>
              <name>DM_AUT_OVWT_ENABLE</name>
              <description>Domain write/read permission overwrite enable 
0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M5_WT_AUT_OVWT_CTRL</name>
              <description>Master5 write permission overwrite control 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M5_RD_AUT_OVWT_CTRL</name>
              <description>Master5 read permission overwrite control 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M4_WT_AUT_OVWT_CTRL</name>
              <description>Master5 write permission overwrite control 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M4_RD_AUT_OVWT_CTRL</name>
              <description>Master5 read permission overwrite control 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M3_WT_AUT_OVWT_CTRL</name>
              <description>Master3 write permission overwrite control 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M3_RD_AUT_OVWT_CTRL</name>
              <description>Master3 read permission overwrite control 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M2_WT_AUT_OVWT_CTRL</name>
              <description>Master2 write permission overwrite control 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M2_RD_AUT_OVWT_CTRL</name>
              <description>Master2 read permission overwrite control 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M1_WT_AUT_OVWT_CTRL</name>
              <description>Master1 write permission overwrite control 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M1_RD_AUT_OVWT_CTRL</name>
              <description>Master1 read permission overwrite control 
0: The read-operation is available 
1: The read-operation is unavailable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M0_WT_AUT_OVWT_CTRL</name>
              <description>Master0 write permission overwrite control 
0: The write-operation is available 
1: The write-operation is unavailable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The write-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The write-operation is unavailable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M0_RD_AUT_OVWT_CTRL</name>
              <description>Master0 read permission overwrite control 
0: The read-operation is available 
1: The read-operation is unavailable REG_ARD_OVWT IOMMU_DM_AUT_CTRL_REG0~7 Domain REG_ARD_OVWT </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>The read-operation is available</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>unavailable</name>
                  <description>The read-operation is unavailable REG_ARD_OVWT IOMMU_DM_AUT_CTRL_REG0~7 Domain REG_ARD_OVWT</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_ENABLE_REG</name>
          <description>IOMMU Enable Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ENABLE</name>
              <description>IOMMU module enable switch 
0: Disable IOMMU 
1: Enable IOMMU Before IOMMU address mapping function opens, configure the Translation Table Base register; or ensure all masters are in bypass status or no the status of sending bus demand such as reset </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable IOMMU</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable IOMMU Before IOMMU address mapping function opens, configure the Translation Table Base register; or ensure all masters are in bypass status or no the status of sending bus demand such as reset</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_CLR_REG</name>
          <description>IOMMU_INT_CLR_REG</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3003F</resetMask>
          <fields>
            <field>
              <name>L2_PAGE_TABLE_INVALID_CLR</name>
              <description>Level2 page table invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[17:17]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L1_PAGE_TABLE_INVALID_CLR</name>
              <description>Level1 page table invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB5_INVALID_CLR</name>
              <description>Micro TLB5 permission invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[5:5]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB4_INVALID_CLR</name>
              <description>Micro TLB4 permission invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[4:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB3_INVALID_CLR</name>
              <description>Micro TLB3 permission invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB2_INVALID_CLR</name>
              <description>Micro TLB2 permission invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB1_INVALID_CLR</name>
              <description>Micro TLB1 permission invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB0_INVALID_CLR</name>
              <description>Micro TLB0 permission invalid interrupt clear bit 
0: Invalid operation 
1: Clear interrupt </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ENABLE_REG</name>
          <description>IOMMU_INT_ENABLE_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3003F</resetMask>
          <fields>
            <field>
              <name>L2_PAGE_TABLE_INVALID_EN</name>
              <description>Level2 page table invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L1_PAGE_TABLE_INVALID_EN</name>
              <description>Level1 page table invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB5_INVALID_EN</name>
              <description>Micro TLB5 permission invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB4_INVALID_EN</name>
              <description>Micro TLB4 permission invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB3_INVALID_EN</name>
              <description>Micro TLB3 permission invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB2_INVALID_EN</name>
              <description>Micro TLB2 permission invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB1_INVALID_EN</name>
              <description>Micro TLB1 permission invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB0_INVALID_EN</name>
              <description>Micro TLB0 permission invalid interrupt enable 
0: Mask interrupt 
1: Enable interrupt </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG0</name>
          <description>IOMMU Interrupt Error Address Register 0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR0</name>
              <description>Virtual address causing Micro TLB0 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG1</name>
          <description>IOMMU Interrupt Error Address Register 1</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR1</name>
              <description>Virtual address causing Micro TLB1 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG2</name>
          <description>IOMMU Interrupt Error Address Register 2</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR2</name>
              <description>Virtual address causing Micro TLB2 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG3</name>
          <description>IOMMU Interrupt Error Address Register 3</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR3</name>
              <description>Virtual address causing Micro TLB3 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG4</name>
          <description>IOMMU Interrupt Error Address Register 4</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR4</name>
              <description>Virtual address causing Micro TLB4 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG5</name>
          <description>IOMMU Interrupt Error Address Register 5</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR5</name>
              <description>Virtual address causing Micro TLB5 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG6</name>
          <description>IOMMU Interrupt Error Address Register 6</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR6</name>
              <description>Virtual address causing Micro TLB6 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_ADDR_REG7</name>
          <description>IOMMU Interrupt Error Address Register 7</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_ADDR7</name>
              <description>Virtual address causing Micro TLB7 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG0</name>
          <description>IOMMU Interrupt Error Data Register 0</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA0</name>
              <description>Corresponding page table of virtual address causing Micro TLB0 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG1</name>
          <description>IOMMU Interrupt Error Data Register 1</description>
          <addressOffset>0x154</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA1</name>
              <description>Corresponding page table of virtual address causing Micro TLB1 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG2</name>
          <description>IOMMU Interrupt Error Data Register 2</description>
          <addressOffset>0x158</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA2</name>
              <description>Corresponding page table of virtual address causing Micro TLB2 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG3</name>
          <description>IOMMU Interrupt Error Data Register 3</description>
          <addressOffset>0x15C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA3</name>
              <description>Corresponding page table of virtual address causing Micro TLB3 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG4</name>
          <description>IOMMU Interrupt Error Data Register 4</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA4</name>
              <description>Corresponding page table of virtual address causing Micro TLB4 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG5</name>
          <description>IOMMU Interrupt Error Data Register 5</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA5</name>
              <description>Corresponding page table of virtual address causing Micro TLB5 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG6</name>
          <description>IOMMU Interrupt Error Data Register 6</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA6</name>
              <description>Corresponding page table of virtual address causing Micro TLB6 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_ERR_DATA_REG7</name>
          <description>IOMMU Interrupt Error Data Register 7</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>INT_ERR_DATA7</name>
              <description>Corresponding page table of virtual address causing Micro TLB7 occurs interrupt </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_INT_STA_REG</name>
          <description>IOMMU_INT_STA_REG</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3003F</resetMask>
          <fields>
            <field>
              <name>L2_PAGE_TABLE_INVALID_STA</name>
              <description>Level2 page table invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L1_PAGE_TABLE_INVALID_STA</name>
              <description>Level2 page table invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB5_INVALID_STA</name>
              <description>Micro TLB5 permission invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB4_INVALID_STA</name>
              <description>Micro TLB4 permission invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB3_INVALID_STA</name>
              <description>Micro TLB3 permission invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB2_INVALID_STA</name>
              <description>Micro TLB2 permission invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB1_INVALID_STA</name>
              <description>Micro TLB1 permission invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB0_INVALID_STA</name>
              <description>Micro TLB0 permission invalid interrupt status bit 
0: Interrupt does not happen or interrupt is cleared 
1: Interrupt happens </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_does</name>
                  <description>Interrupt does not happen or interrupt is cleared</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_happens</name>
                  <description>Interrupt happens</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_L1PG_INT_REG</name>
          <description>IOMMU_L1PG_INT_REG</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>MASTER5_L1PG_INT</name>
              <description>Master5 address switch causes L1 page table to occur interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER4_L1PG_INT</name>
              <description>Master4 address switch causes L1 page table to occur interrupt. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER3_L1PG_INT</name>
              <description>Master3 address switch causes L1 page table to occur interrupt. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER2_L1PG_INT</name>
              <description>Master2 address switch causes L1 page table to occur interrupt. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER1_L1PG_INT</name>
              <description>Master1 address switch causes L1 page table to occur interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER0_L1PG_INT</name>
              <description>Master0 address switch causes L1 page table to occur interrupt. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_L2PG_INT_REG</name>
          <description>IOMMU_L2PG_INT_REG</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>MASTER5_L2PG_INT</name>
              <description>Master5 address switch causes L2 page table to occur interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER4_L2PG_INT</name>
              <description>Master4 address switch causes L2 page table to occur interrupt. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER3_L2PG_INT</name>
              <description>Master3 address switch causes L2 page table to occur interrupt. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER2_L2PG_INT</name>
              <description>Master2 address switch causes L2 page table to occur interrupt. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER1_L2PG_INT</name>
              <description>Master1 address switch causes L2 page table to occur interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER0_L2PG_INT</name>
              <description>Master0 address switch causes L2 page table to occur interrupt. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_OOO_CTRL_REG</name>
          <description>IOMMU Out Of Order Control Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x3F</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>MASTER5_OOO_CTRL</name>
              <description>Master5 out-of-order control bit 
0: Disable out-of-order 
1: Enable out-of-order </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable out-of-order</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable out-of-order</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER4_OOO_CTRL</name>
              <description>Master4 out-of-order control bit 
0: Disable out-of-order 
1: Enable out-of-order </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable out-of-order</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable out-of-order</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER3_OOO_CTRL</name>
              <description>Master3 out-of-order control bit 
0: Disable out-of-order 
1: Enable out-of-order </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable out-of-order</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable out-of-order</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER2_OOO_CTRL</name>
              <description>Master2 out-of-order control bit 
0: Disable out-of-order 
1: Enable out-of-order </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable out-of-order</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable out-of-order</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER1_OOO_CTRL</name>
              <description>Master1 out-of-order control bit 
0: Disable out-of-order 
1: Enable out-of-order </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable out-of-order</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable out-of-order</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER0_OOO_CTRL</name>
              <description>Master0 out-of-order control bit 
0: Disable out-of-order 
1: Enable out-of-order </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable out-of-order</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable out-of-order</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PC_IVLD_ADDR_REG</name>
          <description>IOMMU PC Invalidation Address Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF00000</resetMask>
          <fields>
            <field>
              <name>PC_IVLD_ADDR</name>
              <description>PTW Cache invalid address, aligned to 1M. </description>
              <bitRange>[31:20]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PC_IVLD_ENABLE_REG</name>
          <description>IOMMU PC Invalidation Enable Register</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PC_IVLD_ENABLE</name>
              <description>Enable PTW Cache invalid operation 
0: No-operation or operation completed 
1: Enable is invalid After invalidation operation completed, the bit can clear 0 automatically. After or Before Invalidation starts, t here is no absolute relationship between same address switch operation and Invalidation operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_operation</name>
                  <description>No-operation or operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is invalid After invalidation operation completed, the bit can clear 0 automatically. After or Before Invalidation starts, t here is no absolute relationship between same address switch operation and Invalidation operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG0</name>
          <description>IOMMU PMU Access High Register 0</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH0</name>
              <description>Record total number of Micro TLB0 access , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG1</name>
          <description>IOMMU PMU Access High Register 1</description>
          <addressOffset>0x244</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH1</name>
              <description>Record total number of Micro TLB1 access , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG2</name>
          <description>IOMMU PMU Access High Register 2</description>
          <addressOffset>0x254</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH2</name>
              <description>Record total number of Micro TLB2 access , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG3</name>
          <description>IOMMU PMU Access High Register 3</description>
          <addressOffset>0x264</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH3</name>
              <description>Record total number of Micro TLB3 access , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG4</name>
          <description>IOMMU PMU Access High Register 4</description>
          <addressOffset>0x274</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH4</name>
              <description>Record total number of Micro TLB4 access, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG5</name>
          <description>IOMMU PMU Access High Register 5</description>
          <addressOffset>0x284</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH5</name>
              <description>Record total number of Micro TLB5 access, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG6</name>
          <description>IOMMU PMU Access High Register 6</description>
          <addressOffset>0x2D4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH6</name>
              <description>Record total number of Micro TLB6 access, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_HIGH_REG7</name>
          <description>IOMMU PMU Access High Register 7</description>
          <addressOffset>0x2E4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_HIGH7</name>
              <description>Record total number of PTW Cache access, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG0</name>
          <description>IOMMU PMU Access Low Register 0</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW0</name>
              <description>Record total number of Micro TLB0 access , lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG1</name>
          <description>IOMMU PMU Access Low Register 1</description>
          <addressOffset>0x240</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW1</name>
              <description>Record total number of Micro TLB1 access , lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG2</name>
          <description>IOMMU PMU Access Low Register 2</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW2</name>
              <description>Record total number of Micro TLB2 access , lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG3</name>
          <description>IOMMU PMU Access Low Register 3</description>
          <addressOffset>0x260</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW3</name>
              <description>Record total number of Micro TLB3 access, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG4</name>
          <description>IOMMU PMU Access Low Register 4</description>
          <addressOffset>0x270</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW4</name>
              <description>Record total number of Micro TLB4 access, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG5</name>
          <description>IOMMU PMU Access Low Register 5</description>
          <addressOffset>0x280</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW5</name>
              <description>Record total number of Micro TLB5 access, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG6</name>
          <description>IOMMU PMU Access Low Register 6</description>
          <addressOffset>0x2D0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW6</name>
              <description>Record total number of Micro TLB6 access, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ACCESS_LOW_REG7</name>
          <description>IOMMU PMU Access Low Register 7</description>
          <addressOffset>0x2E0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_ACCESS_LOW7</name>
              <description>Record total number of PTW Cache access, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_CLR__REG</name>
          <description>IOMMU_PMU_CLR__REG</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PMU_CLR</name>
              <description>0: No clear operation or clear operation completes 
1: Clear counter data After the operation completes, the bit can clear to 0 automatically. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completes</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear counter data After the operation completes, the bit can clear to 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_ENABLE__REG</name>
          <description>IOMMU_PMU_ENABLE__REG</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>PMU_ENABLE</name>
              <description>0: Disable statistical function 
1: Enable statistical function </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable statistical function</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable statistical function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG0</name>
          <description>IOMMU PMU Hit High Register 0</description>
          <addressOffset>0x23C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH0</name>
              <description>Record total number of Micro TLB0 hit , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG1</name>
          <description>IOMMU PMU Hit High Register 1</description>
          <addressOffset>0x24C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH1</name>
              <description>Record total number of Micro TLB1 hit , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG2</name>
          <description>IOMMU PMU Hit High Register 2</description>
          <addressOffset>0x25C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH2</name>
              <description>Record total number of Micro TLB2 hit , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG3</name>
          <description>IOMMU PMU Hit High Register 3</description>
          <addressOffset>0x26C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH3</name>
              <description>Record total number of Micro TLB3 hit , higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG4</name>
          <description>IOMMU PMU Hit High Register 4</description>
          <addressOffset>0x27C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH4</name>
              <description>Record total number of Micro TLB4 hit, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG5</name>
          <description>IOMMU PMU Hit High Register 5</description>
          <addressOffset>0x28C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH5</name>
              <description>Record total number of Micro TLB5 hit, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG6</name>
          <description>IOMMU PMU Hit High Register 6</description>
          <addressOffset>0x2DC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH6</name>
              <description>Record total number of Micro TLB6 hit, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_HIGH_REG7</name>
          <description>IOMMU PMU Hit High Register 7</description>
          <addressOffset>0x2EC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_HIGH7</name>
              <description>Record total number of PTW Cache hit, higher 11-bit register </description>
              <bitRange>[10:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG0</name>
          <description>IOMMU PMU Hit Low Register 0</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW0</name>
              <description>Record total number of Micro TLB0 hit , lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG1</name>
          <description>IOMMU PMU Hit Low Register 1</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW1</name>
              <description>Record total number of Micro TLB1 hit , lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG2</name>
          <description>IOMMU PMU Hit Low Register 2</description>
          <addressOffset>0x258</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW2</name>
              <description>Record total number of Micro TLB2 hit , lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG3</name>
          <description>IOMMU PMU Hit Low Register 3</description>
          <addressOffset>0x268</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW3</name>
              <description>Record total number of Micro TLB3 hit, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG4</name>
          <description>IOMMU PMU Hit Low Register 4</description>
          <addressOffset>0x278</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW4</name>
              <description>Record total number of Micro TLB4 hit, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG5</name>
          <description>IOMMU PMU Hit Low Register 5</description>
          <addressOffset>0x288</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW5</name>
              <description>Record total number of Micro TLB5 hit, lower 32-bit register  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG6</name>
          <description>IOMMU PMU Hit Low Register 6</description>
          <addressOffset>0x2D8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW6</name>
              <description>Record total number of Micro TLB6 hit, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_HIT_LOW_REG7</name>
          <description>IOMMU PMU Hit Low Register 7</description>
          <addressOffset>0x2E8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_HIT_LOW7</name>
              <description>Record total number of PTW Cache hit, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_HIGH_REG0</name>
          <description>IOMMU_PMU_TL_HIGH_REG0</description>
          <addressOffset>0x304</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_HIGH0</name>
              <description>Record total latency of Master0, higher 18-bit register </description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_HIGH_REG1</name>
          <description>IOMMU_PMU_TL_HIGH_REG1</description>
          <addressOffset>0x314</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_HIGH1</name>
              <description>Record total latency of Master1, higher 18-bit register </description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_HIGH_REG2</name>
          <description>IOMMU_PMU_TL_HIGH_REG2</description>
          <addressOffset>0x324</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_HIGH2</name>
              <description>Record total latency of Master2, higher 18-bit register </description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_HIGH_REG3</name>
          <description>IOMMU_PMU_TL_HIGH_REG3</description>
          <addressOffset>0x334</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_HIGH3</name>
              <description>Record total latency of Master3, higher 18-bit register </description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_HIGH_REG4</name>
          <description>IOMMU_PMU_TL_HIGH_REG4</description>
          <addressOffset>0x344</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_HIGH4</name>
              <description>Record total latency of Master4, higher 18-bit register </description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_HIGH_REG5</name>
          <description>IOMMU_PMU_TL_HIGH_REG5</description>
          <addressOffset>0x354</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_HIGH5</name>
              <description>Record total latency of Master5, higher 18-bit register </description>
              <bitRange>[17:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_LOW_REG0</name>
          <description>IOMMU_PMU_TL_LOW_REG0</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_LOW0</name>
              <description>Record total latency of Master0, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_LOW_REG1</name>
          <description>IOMMU_PMU_TL_LOW_REG1</description>
          <addressOffset>0x310</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_LOW1</name>
              <description>Record total latency of Master1, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_LOW_REG2</name>
          <description>IOMMU_PMU_TL_LOW_REG2</description>
          <addressOffset>0x320</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_LOW2</name>
              <description>Record total latency of Master2, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_LOW_REG3</name>
          <description>IOMMU_PMU_TL_LOW_REG3</description>
          <addressOffset>0x330</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_LOW3</name>
              <description>Record total latency of Master3, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_LOW_REG4</name>
          <description>IOMMU_PMU_TL_LOW_REG4</description>
          <addressOffset>0x340</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_LOW4</name>
              <description>Record total latency of Master4, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_PMU_TL_LOW_REG5</name>
          <description>IOMMU_PMU_TL_LOW_REG5</description>
          <addressOffset>0x350</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PMU_TL_LOW5</name>
              <description>Record total latency of Master5, lower 32-bit register </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_RESET__REG</name>
          <description>IOMMU_RESET__REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x8003003F</resetValue>
          <resetMask>0x8003003F</resetMask>
          <fields>
            <field>
              <name>IOMMU_RESET</name>
              <description>IOMMU Software Reset Switch 
0: Set reset signal 
1: Release reset signal Before IOMMU software reset operation, ensure IOMMU never be opened; Or no unfinished bus operation; Or DRAM and the peripherals have opened the corresponding switch, for shielding the effects of IOMMU reset . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal Before IOMMU software reset operation, ensure IOMMU never be opened; Or no unfinished bus operation; Or DRAM and the peripherals have opened the corresponding switch, for shielding the effects of IOMMU reset .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PTW_CACHE_RESET</name>
              <description>PTW Cache address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When PTW Cache occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When PTW Cache occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MACRO_TLB_RESET</name>
              <description>Macro TLB address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When PTW Cache occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When PTW Cache occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER5_RESET</name>
              <description>Master5 address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When Master5 occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When Master5 occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER4_RESET</name>
              <description>Master4 address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When Master4 occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When Master4 occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER3_RESET</name>
              <description>Master3 address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When Master3 occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When Master3 occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER2_RESET</name>
              <description>Master2 address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When Master2 occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When Master2 occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER1_RESET</name>
              <description>Master1 address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When Master1 occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When Master1 occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER0_RESET</name>
              <description>Master0 address convert lane software reset switch. 
0: Set reset signal 
1: Release reset signal When Master0 occurs abnormal, the bit is used for resetting PTW Cache individually. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set reset signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Release</name>
                  <description>Release reset signal When Master0 occurs abnormal, the bit is used for resetting PTW Cache individually.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_TLB_ENABLE_REG</name>
          <description>IOMMU TLB Enable Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x3003F</resetValue>
          <resetMask>0x3003F</resetMask>
          <fields>
            <field>
              <name>PTW_CACHE_ENABLE</name>
              <description>PTW Cache enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MACRO_TLB_ENABLE</name>
              <description>Macro TLB enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB5_ENABLE</name>
              <description>Micro TLB5 enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB4_ENABLE</name>
              <description>Micro TLB4 enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB3_ENABLE</name>
              <description>Micro TLB3 enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB2_ENABLE</name>
              <description>Micro TLB2 enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB1_ENABLE</name>
              <description>Micro TLB1 enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB0_ENABLE</name>
              <description>Micro TLB0 enable bit 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_TLB_FLUSH_ENABLE_REG</name>
          <description>IOMMU TLB Flush Enable Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3003F</resetMask>
          <fields>
            <field>
              <name>PTW_CACHE_FLUSH</name>
              <description>Clear PTW Cache 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MACRO_TLB_FLUSH</name>
              <description>Clear Macro TLB 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB5_FLUSH</name>
              <description>Clear Micro TLB5 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB4_FLUSH</name>
              <description>Clear Micro TLB4 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB3_FLUSH</name>
              <description>Clear Micro TLB3 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB2_FLUSH</name>
              <description>Clear Micro TLB2 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB1_FLUSH</name>
              <description>Clear Micro TLB1 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB0_FLUSH</name>
              <description>Clear Micro TLB1 
0: No clear operation or clear operation completed 
1: Enable is cleared After Flush operation completes, the bit can clear 0 automatically. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_clear</name>
                  <description>No clear operation or clear operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is cleared After Flush operation completes, the bit can clear 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_TLB_IVLD_ADDR_MASK_REG</name>
          <description>IOMMU TLB Invalidation Address Mask Register</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF000</resetMask>
          <fields>
            <field>
              <name>TLB_IVLD_ADDR_MASK</name>
              <description>TLB invalid address mask register, aligned to 4K </description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_TLB_IVLD_ADDR_REG</name>
          <description>IOMMU TLB Invalidation Address Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF000</resetMask>
          <fields>
            <field>
              <name>TLB_IVLD_ADDR</name>
              <description>TLB invalid address, aligned to 4K </description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_TLB_IVLD_ENABLE_REG</name>
          <description>IOMMU TLB Invalidation Enable Register</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TLB_IVLD_ENABLE</name>
              <description>Enable TLB invalid operation 
0: No-operation or operation completed 
1: Enable is invalid After invalidation operation completed, the bit can clear 0 automatically. When operating Invalidation, TLB/Cache operation has not affected. After or Before Invalidation starts, t here is no absolute relationship between same address switch operation and Invalidation operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_operation</name>
                  <description>No-operation or operation completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable is invalid After invalidation operation completed, the bit can clear 0 automatically. When operating Invalidation, TLB/Cache operation has not affected. After or Before Invalidation starts, t here is no absolute relationship between same address switch operation and Invalidation operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_TLB_PREFETCH_REG</name>
          <description>IOMMU TLB Prefetch Register</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>MICRO_TLB5_PREFETCH</name>
              <description>Micro TLB5 prefetch enable 
0: Disable  
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB4_PREFETCH</name>
              <description>Micro TLB4 prefetch enable 
0: Disable  
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB3_PREFETCH</name>
              <description>Micro TLB3 prefetch enable 
0: Disable  
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB2_PREFETCH</name>
              <description>Micro TLB2 prefetch enable 
0: Disable  
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB1_PREFETCH</name>
              <description>Micro TLB1 prefetch enable 
0: Disable  
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICRO_TLB0_PREFETCH</name>
              <description>Micro TLB0 prefetch enable 
0: Disable  
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_TTB_REG</name>
          <description>IOMMU Translation Table Base Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFC000</resetMask>
          <fields>
            <field>
              <name>TTB</name>
              <description>Level1 page table starting address, aligned to 16 KB. NOTE When operating the register , IOMMU address mapping function must be closed, namely IOMMU_ENABLE_REG is 0 ; Or Bypass function of all main equipment is set to 1 or not the state of transfer bus commands (such as setting). </description>
              <bitRange>[31:14]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_VA_CONFIG__REG</name>
          <description>IOMMU_VA_CONFIG__REG</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x101</resetMask>
          <fields>
            <field>
              <name>VA_CONFIG</name>
              <description>0: Read operation 
1: Write operation </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write operation</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VA_CONFIG_START</name>
              <description>0: No operation or operation completes 
1: Start After the operation completes, the bit can clear to 0 automatically. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_operation</name>
                  <description>No operation or operation completes</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start After the operation completes, the bit can clear to 0 automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_VA_DATA__REG</name>
          <description>IOMMU_VA_DATA__REG</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VA_DATA</name>
              <description>Data of read/write virtual address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_VA__REG</name>
          <description>IOMMU_VA__REG</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VA</name>
              <description>Virtual address of read/write </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IOMMU_WBUF_CTRL_REG</name>
          <description>IOMMU Write Buffer Control Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x3F</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>MASTER5_WBUF_CTRL</name>
              <description>Master5 write buffer control bit 
0: Disable write buffer 
1: Enable write buffer </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable write buffer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable write buffer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER4_WBUF_CTRL</name>
              <description>Master4 write buffer control bit 
0: Disable write buffer 
1: Enable write buffer </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable write buffer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable write buffer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER3_WBUF_CTRL</name>
              <description>Master3 write buffer control bit 
0: Disable write buffer 
1: Enable write buffer </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable write buffer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable write buffer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER2_WBUF_CTRL</name>
              <description>Master2 write buffer control bit 
0: Disable write buffer 
1: Enable write buffer </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable write buffer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable write buffer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER1_WBUF_CTRL</name>
              <description>Master1 write buffer control bit 
0: Disable write buffer 
1: Enable write buffer </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable write buffer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable write buffer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MASTER0_WBUF_CTRL</name>
              <description>Master0 write buffer control bit 
0: Disable write buffer 
1: Enable write buffer </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable write buffer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable write buffer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON_LCD0</name>
      <description>TCON_LCD0</description>
      <groupName>generic</groupName>
      <baseAddress>0x6511000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>LCD_CEU_COEF_ADD_REG</name>
            <description>LCD CEU Coefficient Register1(N=0,1,2)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc </description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>LCD_CEU_COEF_RANG_REG</name>
            <description>LCD CEU Coefficient Register2(N=0,1,2)</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>unsigned 8bit value, range of [0,255] </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU_COEF_RANGE_MAX</name>
                <description>unsigned 8bit value, range of [0,255] </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>LCD_3D_FIFO_REG</name>
          <description>LCD 3D FIFO Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FF3</resetMask>
          <fields>
            <field>
              <name>3D_FIFO_BIST_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_FIFO_HALF_LINE_SIZE</name>
              <description>The number of data in half line=3D_FIFO_HALF_LINE_SIZE+1 only valid when 3D_FIFO_SETTING set as 2 </description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_FIFO</name>
              <description>0: by pass 
1: used as normal FIFO 
2: used as 3D interlace FIFO 
3: reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_BASIC0_REG</name>
          <description>LCD Basic Timing Register0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>X_PANEL</name>
              <description>X Panel width is X+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>Y_PANEL</name>
              <description>Y Panel height is Y+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_BASIC1_REG</name>
          <description>LCD Basic Timing Register1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>Thcycle = (HT+1) * Tdclk Computation 1) parallel:HT = X + BLANK Limitation: 1) parallel :HT &gt;=  (HBP +1) + (X+1) +2  2) serial 1: HT &gt;=  (HBP +1) + (X+1) *3+2  3) serial 2: HT &gt;=  (HBP +1) + (X+1) *3/2+2 </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch (in dclk) Thbp = (HBP +1) * Tdclk </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_BASIC2_REG</name>
          <description>LCD Basic Timing Register2</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>TVT = (VT)/2 * Thsync VT/2 &gt;=  (VBP+1 ) + (Y+1) +2 </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>Tvbp = (VBP +1) * Thsync </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_BASIC3_REG</name>
          <description>LCD Basic Timing Register3</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>Thspw = (HSPW+1) * Tdclk HT&gt;  (HSPW+1) </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>Tvspw = (VSPW+1) * Thsync VT/2 &gt;  (VSPW+1) </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CEU_COEF_MUL_REG_0</name>
          <description>LCD CEU Coefficient Register0(N=0,1,2,4,5,6,8,9,10)</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="LCD_CEU_COEF_MUL_REG_0">
          <name>LCD_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>LCD_CEU_CTL_REG</name>
          <description>LCD CEU Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: bypass 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CMAP_CTL_REG</name>
          <description>LCD Color Map Control Register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>COLOR_MAP_EN</name>
              <description>0: bypass 
1: enable This module only work when X is divided by 4 </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable This module only work when X is divided by 4</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_FORMAT</name>
              <description>0: 4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3 
1: 2 pixel output mode: Out0 -&gt; Out1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 pixel output mode: Out0 -&gt; Out1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CMAP_EVEN0_REG</name>
          <description>LCD Color Map Even Line Register0</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN0</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CMAP_ODD0_REG</name>
          <description>LCD Color Map Odd Line Register0</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD0</name>
              <description>bit15-12: Reservd bit11-08: Out_Odd0[23:16] bit07-04: Out_Odd0[15:8] bit03-00: Out_Odd0[7:0] 
0x0: in_b0 
0x1: in_g0 
0x2: in_r0 
0x3: reservd 
0x4: in_b1 
0x5: in_g1 
0x6: in_r1 
0x7: reservd 
0x8: in_b2 
0x9: in_g2 0xa: in_r2 0xb: reservd 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: reservd </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CMAP_ODD1_REG</name>
          <description>LCD Color Map Odd Line Register1</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CMAP__EVEN1_REG</name>
          <description>LCD_CMAP__EVEN1_REG</description>
          <addressOffset>0x19C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_IF_REG</name>
          <description>LCD CPU Panel Interface Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF6C3000F</resetMask>
          <fields>
            <field>
              <name>CPU_MODE</name>
              <description>0000: 18bit/256K mode 
0010: 16bit mode0 
0100: 16bit mode1 
0110: 16bit mode2 
1000: 16bit mode3 
1010: 9bit mode 
1100: 8bit 256K mode 
1110: 8bit 65K mode 
xxx1: 24bit for DSI </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_18bit_slash_256K_mode</name>
                  <description>18bit/256K mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode0</name>
                  <description>16bit mode0</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode1</name>
                  <description>16bit mode1</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode2</name>
                  <description>16bit mode2</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode3</name>
                  <description>16bit mode3</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9bit_mode</name>
                  <description>9bit mode</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_256K_mode</name>
                  <description>8bit 256K mode</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_65K_mode</name>
                  <description>8bit 65K mode</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit_for</name>
                  <description>24bit for DSI</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA</name>
              <description>pin A1 value in 8080 mode auto/flash states </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CA</name>
              <description>pin A1 value in 8080 mode WR/RD execute </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_FLAG</name>
              <description>0:write operation is finishing 1:write operation is pending </description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_FLAG</name>
              <description>0:read operation is finishing 1:read operation is pending </description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AUTO</name>
              <description>auto Transfer Mode: If it`s 1, all the valid data during this frame are write to panel. This bit is sampled by Vsync </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLUSH</name>
              <description>direct transfer mode: If it`s enabled, FIFO1 is regardless of the HV timing, pixels data keep being transferred unless the input FIFO was empty. Data output rate control by DCLK. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_FIFO_BIST_EN</name>
              <description>0: disable 
1: enable Entry addr is 0xFF8 </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable Entry addr is 0xFF8</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIGGER_FIFO_EN</name>
              <description>0:disable  1:enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_START</name>
              <description>write `1` to start a frame flush, write`0` has no effect. This flag indicated frame flush is running. Sofeware must make sure write `1` only when this flag is `0`. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
            </field>
            <field>
              <name>TRIGGER_EN</name>
              <description>0: trigger mode disable 
1: trigger mode enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>trigger mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>trigger mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_RD0_REG</name>
          <description>LCD CPU Panel Read Data Register0</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_RD0</name>
              <description>data read on 8080 bus, launch a new read operation on 8080 bus </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_RD1_REG</name>
          <description>LCD CPU Panel Read Data Register1</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_RD1</name>
              <description>data read on 8080 bus, without a new read operation on 8080 bus </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_TRI0_REG</name>
          <description>LCD CPU Panel Trigger Register0</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_SPACE</name>
              <description>should be set &gt;20*pixel_cycle </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLOCK_SIZE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_TRI1_REG</name>
          <description>LCD CPU Panel Trigger Register1</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_CURRENT_NUM</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BLOCK_NUM</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_TRI2_REG</name>
          <description>LCD CPU Panel Trigger Register2</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0x200000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>START_DELAY</name>
              <description>Tdly = (Start_Delay +1) * be_clk*8 </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_MODE</name>
              <description>0: ecc_fifo+tri_fifo 
1: tri_fifo </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ecc_fifo_plus_tri_fifo</name>
                  <description>ecc_fifo+tri_fifo</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>tri_fifo</name>
                  <description>tri_fifo</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNC_MODE</name>
              <description>0x: auto 
10: 0 
11: 1 </description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_START_SET</name>
              <description>Usual set as the length of a line </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_TRI3_REG</name>
          <description>LCD CPU Panel Trigger Register3</description>
          <addressOffset>0x16C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30FFFFFF</resetMask>
          <fields>
            <field>
              <name>TRI_INT_MODE</name>
              <description>00: disable 
01: counter mode  
10: te rising mode 
11: te falling mode when set as 01, Tri_Counter_Int occur in cycle of (Count_N+1)&#215;(Count_M+1)&#215;4 dclk. when set as 10 or 11, io0 is map as TE input. </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_N</name>
              <description></description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_M</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_TRI4_REG</name>
          <description>LCD CPU Panel Trigger Register4</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x11FFFFFF</resetMask>
          <fields>
            <field>
              <name>PLUG_MODE_EN</name>
              <description>0: disable 1:enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable 1:enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A1</name>
              <description>Valid in first Block </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in first Block </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_TRI5_REG</name>
          <description>LCD CPU Panel Trigger Register5</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>A1</name>
              <description>Valid in Block except first </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in Block except first </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CPU_WR_REG</name>
          <description>LCD CPU Panel Write Data Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_WR</name>
              <description>data write on 8080 bus, launch a write operation on 8080 bus </description>
              <bitRange>[23:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_CTL_REG</name>
          <description>LCD Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x93F001F7</resetMask>
          <fields>
            <field>
              <name>LCD_EN</name>
              <description>LCD_EN  
0: disable 
1: enable It executes at the beginning of the first blank line of LCD timing. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable It executes at the beginning of the first blank line of LCD timing.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_WORK_MODE</name>
              <description>LCD_WORK_MODE 
0: normal 
1: dynamic freq </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>dynamic</name>
                  <description>dynamic freq</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD</name>
              <description>LCD_IF 
00: HV(Sync+DE) 
01: 8080 I/F 1x:reservd </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HV_openingparen_Sync_plus_DE_closingparen_</name>
                  <description>HV(Sync+DE)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8080</name>
                  <description>8080 I/F 1x:reservd</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_RB_SWAP</name>
              <description>LCD_RB_SWAP 
0: default 
1: swap RED and BLUE data at FIFO1 </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>default</name>
                  <description>default</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>swap</name>
                  <description>swap RED and BLUE data at FIFO1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_TEST_VALUE</name>
              <description>LCD_TEST_VALUE 0:all 0s 1:all 1s </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_FIFO1_RST_WRITE_AND_THEN</name>
              <description>LCD_FIFO1_RST Write 1 and then 0 at this bit will reset FIFO 1 1 holding time must more than 1 DCLK </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_INTERLACE_EN</name>
              <description>LCD_INTERLACE_EN 0:disable 1:enable This flag is valid only when LCD_EN == 1 </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_START_DELAY_STA_DELAY_VALID_ONLY</name>
              <description>LCD_START_DELAY STA delay Valid only when LCD_EN == 1 </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_SRC_SEL</name>
              <description>LCD_SRC_SEL  
000: DE 
001: Color Check 
010: Grayscale Check 
011: Black by White Check 
100: Test Data all 0 
101: Test Data all 1 
111: Gridding Check   </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_DCLK_REG</name>
          <description>LCD Data Clock Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000007F</resetMask>
          <fields>
            <field>
              <name>LCD_DCLK_EN</name>
              <description>LCLK_EN[3:0] :LCD clock enable 4'h0, 'h4,4'h6,4'ha7:dclk_en=0;dclk1_en=0;dclk2_en=0;dclkm2_en=0;               4'h1: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 0;               4'h2: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 1;               4'h3: dclk_en = 1; dclk1_en = 1; dclk2_en = 0; dclkm2_en = 0;               4'h5: dclk_en = 1; dclk1_en = 0; dclk2_en = 1; dclkm2_en = 0;               4'h8,4'h9,4'ha,4'hb,4'hc,4'hd,4'he,4'hf:             dclk_en   = 1;             dclk1_en  = 1;             dclk2_en  = 1;             dclkm2_en = 1; </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_DCLK_DIV</name>
              <description>Tdclk = Tsclk * DCLKDIV 1.if dclk1&amp;dclk2 used, DCLKDIV &gt;=6 2.if dclk only, DCLKDIV &gt;=1 </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_DEBUG_REG</name>
          <description>LCD Debug Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xAFFF0000</resetMask>
          <fields>
            <field>
              <name>LCD_FIFO_UNDER_FLOW</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_FIELD_POLARITY</name>
              <description>0: second field 
1: first field </description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>second</name>
                  <description>second field</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>first</name>
                  <description>first field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_CURRENT_LINE</name>
              <description></description>
              <bitRange>[27:16]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_FRM_CTL_REG</name>
          <description>LCD FRM Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000073</resetMask>
          <fields>
            <field>
              <name>LCD_FRM_EN</name>
              <description>0:disable 1:enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LCD_FRM_MODE_R</name>
              <description>0: 6bit frm output 
1: 5bit frm output </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_FRM_MODE_G</name>
              <description>0: 6bit frm output 
1: 5bit frm output </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_FRM_MODE_B</name>
              <description>0: 6bit frm output 
1: 5bit frm output </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_FRM_TEST</name>
              <description>00: FRM 
01: half 5/6bit, half FRM 
10: half 8bit, half FRM 
11: half 8bit, half 5/6bit </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>4</dimIncrement>
          <name>LCD_FRM_SEED_REG[%s]</name>
          <description>LCD FRM Seed Register(N=0,1,2,3,4,5)</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SEED_VALUE</name>
              <description>N=0: Pixel_Seed_R N=1: Pixel_Seed_G N=2: Pixel_Seed_B N=3: Line_Seed_R N=4: Line_Seed_G N=5: Line_Seed_B Avoid set it to 0 </description>
              <bitRange>[24:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>LCD_FRM_TAB_REG[%s]</name>
          <description>LCD FRM Table Register(N=0,1,2,3)</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRM_TABLE_VALUE</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_GCTL_REG</name>
          <description>LCD Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>LCD_EN</name>
              <description>0: disable 
1: enable When it is disabled, the module will be reset to idle state. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable When it is disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_GAMMA_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_GINT0_REG</name>
          <description>LCD Global Interrupt Register0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xAC00AE00</resetMask>
          <fields>
            <field>
              <name>LCD_VB_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_LINE_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_TRI_FINISH_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_TRI_COUNTER_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LCD_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>zeroToClear</modifiedWriteValues>
            </field>
            <field>
              <name>LCD_LINE_INT_FLAG</name>
              <description>trigger when SY0 match the current LCD scan line Write 0 to clear it. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>zeroToClear</modifiedWriteValues>
            </field>
            <field>
              <name>LCD_TRI_FINISH_INT_FLAG</name>
              <description>trigger when cpu trigger mode finish Write 0 to clear it. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>zeroToClear</modifiedWriteValues>
            </field>
            <field>
              <name>LCD_TRI_COUNTER_INT_FLAG</name>
              <description>trigger when tri counter reach this value Write 0 to clear it. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>zeroToClear</modifiedWriteValues>
            </field>
            <field>
              <name>LCD_TRI_UNDERFLOW_FLAG</name>
              <description>only used in dsi video mode, tri when sync by dsi but not finish Write 0 to clear it. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>zeroToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_GINT1_REG</name>
          <description>LCD Global Interrupt Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>LCD_LINE_INT_NUM</name>
              <description>scan line for LCD line trigger(including inactive lines) Setting it for the specified line for trigger0. SY0 is writable only when LINE_TRG0 disable. </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_HV_IF_REG</name>
          <description>LCD HV Panel Interface Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF80000</resetMask>
          <fields>
            <field>
              <name>HV_MODE</name>
              <description>0000: 24bit/1cycle parallel mode 
1000: 8bit/3cycle RGB serial mode(RGB888) 
1010: 8bit/4cycle Dummy RGB(DRGB) 
1011: 8bit/4cycle RGB Dummy(RGBD) 
1100: 8bit/2cycle YUV serial mode(CCIR656) </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24bit_slash_1cycle_parallel_mode</name>
                  <description>24bit/1cycle parallel mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_3cycle_RGB</name>
                  <description>8bit/3cycle RGB serial mode(RGB888)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_Dummy</name>
                  <description>8bit/4cycle Dummy RGB(DRGB)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_RGB</name>
                  <description>8bit/4cycle RGB Dummy(RGBD)</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_2cycle_YUV</name>
                  <description>8bit/2cycle YUV serial mode(CCIR656)</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGB888_ODD_ORDER</name>
              <description>serial RGB888 mode Output sequence at odd lines of the panel (line 1, 3, 5, 7...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RGB888_EVEN_ORDER</name>
              <description>serial RGB888 mode Output sequence at even lines of the panel (line 2, 4, 6, 8...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YUV_SM</name>
              <description>serial YUV mode Output sequence 2-pixel-pair of every scan line 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YUV</name>
              <description>EAV/SAV F LINE DELAY 00:F toggle right after active video line 01:delay 2 line(CCIR PAL) 10:delay 3 line(CCIR NTSC) 11:reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCIR_CSC_DIS</name>
              <description>0: enable 
1: disable Only valid when HV mode is `1100`, select `0` LCD convert source from RGB to YUV </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable Only valid when HV mode is `1100`, select `0` LCD convert source from RGB to YUV</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_IO_POL_REG</name>
          <description>LCD IO Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO_OUTPUT_SEL</name>
              <description>0: normal output 
1: register output when set as `1`, d[23:0], io0, io1,io3 sync to dclk </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>register</name>
                  <description>register output when set as `1`, d[23:0], io0, io1,io3 sync to dclk</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCLK_SEL</name>
              <description>000: used DCLK0(normal phase offset) 
001: used DCLK1(1/3 phase offset) 
010: used DCLK2(2/3 phase offset) 
101: DCLK0/2   phase 0 
100: DCLK0/2   phase 90 reserved </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used_DCLK0_openingparen_normal_phase</name>
                  <description>used DCLK0(normal phase offset)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK1_openingparen_1_slash_3_phase</name>
                  <description>used DCLK1(1/3 phase offset)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK2_openingparen_2_slash_3_phase</name>
                  <description>used DCLK2(2/3 phase offset)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_0</name>
                  <description>DCLK0/2   phase 0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_90</name>
                  <description>DCLK0/2   phase 90 reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>LCD output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_IO_TRI_REG</name>
          <description>LCD IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>RGB_ENDIAN</name>
              <description>0: normal 
1: bits_invert </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bits_invert</name>
                  <description>bits_invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>LCD output port D[23:0] output enable, with independent bit control: 1s: disable 0s: enable </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_SAFE_PERIOD_REG</name>
          <description>LCD Safe Period Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>000: unsafe 
001: safe 
010: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
011: safe at 2 and safe at sync active 
100: safe at line </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MSGBOX</name>
      <description>MSGBOX</description>
      <groupName>generic</groupName>
      <baseAddress>0x3003000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>MSGBOXM_FIFO_STATUS_REG</name>
            <description>FIFO Status for Message Queue N(N = 0~7)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>FIFO_FULL_FLAG</name>
                <description>0: The Message FIFO queue is not full (space is available) 
1: The Message FIFO queue is full.  This FIFO status register has the status related to the message queue. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>not_full</name>
                    <description>The Message FIFO queue is not full (space is available)</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>full</name>
                    <description>The Message FIFO queue is full.  This FIFO status register has the status related to the message queue.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXM_MSG_REG</name>
            <description>Message Register for Message Queue N(N=0~7)</description>
            <addressOffset>0x80</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>MESSAGE</name>
                <description>The message register stores the next to be read message of the message FIFO queue. Reads remove the message from the FIFO queue. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXM_MSG_STATUS_REG</name>
            <description>Message Status for Message Queue N(N=0~7)</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>MSG_NUM</name>
                <description>Number of unread messages in the message queue. Here, limited to four messages per message queue. 
000: There is no message in the message FIFO queue. 
001: There is 1 message in the message FIFO queue. 
010: There are 2 messages in the message FIFO queue. 
011: There are 3 messages in the message FIFO queue. 
100: There are 4 messages in the message FIFO queue. 101~111:/ </description>
                <bitRange>[2:0]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>no_message</name>
                    <description>There is no message in the message FIFO queue.</description>
                    <value>0b000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>1</name>
                    <description>There is 1 message in the message FIFO queue.</description>
                    <value>0b001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_2</name>
                    <description>There are 2 messages in the message FIFO queue.</description>
                    <value>0b010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_3</name>
                    <description>There are 3 messages in the message FIFO queue.</description>
                    <value>0b011</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_4</name>
                    <description>There are 4 messages in the message FIFO queue. 101~111:/</description>
                    <value>0b100</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>2</dim>
          <dimIncrement>32</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x40</addressOffset>
          <register>
            <name>MSGBOXU_IRQ_STATUS_REG</name>
            <description>IRQ Status for User n ( n=0,1)</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0xAAAA</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>TRANSMIT_MQ7_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 7 is not full. Setting one to this bit will clear it. </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 7 is not full. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ7_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 7 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 7 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ6_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 6 is not full. Setting one to this bit will clear it. </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 6 is not full. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ6_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 6 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 6 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ5_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 5 is not full. Setting one to this bit will clear it. </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 5 is not full. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ5_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 5 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 5 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ4_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 4 is not full. Set one to this bit will clear it. </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 4 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ4_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 4 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 4 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ3_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 3 is not full. Setting one to this bit will clear it. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 3 is not full. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ3_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 3 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 3 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ2_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 2 is not full. Setting one to this bit will clear it. </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 2 is not full. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ2_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 2 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 2 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ1_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 1 is not full. Setting one to this bit will clear it. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 1 is not full. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ1_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 1 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 1 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ0_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 0 is not full. Setting one to this bit will clear it. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 0 is not full. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ0_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 0 has received a new message. Setting one to this bit will clear it. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 0 has received a new message. Setting one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOX_IRQ_EN_REG</name>
            <description>MSGBOX_IRQ_EN_REG</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>TRANSMIT_MQ7_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 7 is not full.) </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 7 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ7_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 7 has received a new message.) </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 7 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ6_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 6 is not full.) </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 6 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ6_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 6 has received a new message.) </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 6 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ5_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 5 is not full.) </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 5 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ5_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 5 has received a new message.) </description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 5 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ4_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 4 is not full.) </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 4 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ4_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 4 has received a new message.) </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 4 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ3_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 3 is not full.) </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 3 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ3_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 3 has received a new message.) </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 3 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ2_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 2 is not full.) </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 2 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ2_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 2 has received a new message.) </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 2 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ1_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 1 is not full.) </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 1 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ1_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 1 has received a new message.) </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 1 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ0_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 0 is not full.) </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 0 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ0_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 0 has received a new message.) </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 0 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>MSGBOX_CTRL_REG0</name>
          <description>Message Queue Attribute Control Register 0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10101010</resetValue>
          <resetMask>0x11111111</resetMask>
          <fields>
            <field>
              <name>TRANSMIT_MQ3</name>
              <description>Message Queue 3 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ3</name>
              <description>Message Queue 3 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ2</name>
              <description>Message Queue 2 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ2</name>
              <description>Message Queue 2 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ1</name>
              <description>Message Queue 1 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ1</name>
              <description>Message Queue 1 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ0</name>
              <description>Message Queue 0 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ0</name>
              <description>Message Queue 0 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MSGBOX_CTRL_REG1</name>
          <description>Message Queue Attribute Control Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x10101010</resetValue>
          <resetMask>0x11111111</resetMask>
          <fields>
            <field>
              <name>TRANSMIT_MQ7</name>
              <description>Message Queue 7 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ7</name>
              <description>Message Queue 7 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ6</name>
              <description>Message Queue 6 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ6</name>
              <description>Message Queue 6 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ5</name>
              <description>Message Queue 5 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ5</name>
              <description>Message Queue 5 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ4</name>
              <description>Message Queue 4 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ4</name>
              <description>Message Queue 4 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MSGBOX_DEBUG_REG</name>
          <description>MSGBOX Debug Register</description>
          <addressOffset>0x1C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF01</resetMask>
          <fields>
            <field>
              <name>FIFO_CTRL</name>
              <description>MQ[7:0] Control. In the debug mode, the corresponding FIFO channel will disable and only one register space valid for a message exchange. 
0: Normal Mode. 
1: Disable the corresponding FIFO (Clear FIFO). </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEBUG_MODE</name>
              <description>In the Debug Mode, each user can transmit messages to itself through each Message Queue. 
0: Normal Mode 
1: Debug Mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Debug</name>
                  <description>Debug Mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>NDFC0</name>
      <description>NDFC0</description>
      <groupName>generic</groupName>
      <baseAddress>0x4011000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x80</addressOffset>
          <register>
            <name>NDFC_EMCE_IV_CAL_FACTOR_N</name>
            <description>NDFC EMCE IV Calculate Factor Register N(N from 0 to 31)</description>
            <addressOffset>0x1A0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>NDFC_EMCE_IV_CAL_FACTOR_N</name>
                <description>This factor is set by user. If factor is equal to NDFC_EMCE_CMP_VAL, the corresponding sector don`t need encryption. If factor is not equal to NDFC_EMCE_CMP_VAL, the corresponding sector need encryption, and its IV factor specified by this register. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>NDFC_USER_DATA_N</name>
            <description>User Data Field Register N (N from 0 to 31)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0xFFFFFFFF</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>USER_DATA</name>
                <description>All of the user data in one page is stored in these NDFC_USER_DATA_N.  The start register address of each ECC DATA BLOCK's user data is determined by its length configured in NDFC_USER_DATA_LEN_N. For example:  ECC DATA BLOCK[0] user data len = 8 Bytes, address = 0x80 ECC DATA BLOCK[1] user data len = 0 Bytes,  ECC DATA BLOCK[2] user data len = 4 Bytes, address = 0x80+8 ECC DATA BLOCK[3] user data len = 4 Bytes, address = 0x80+8+4 ECC DATA BLOCK[4] user data len = 0 Bytes ECC DATA BLOCK[5] user data len = 16 Bytes, address = 0x80+8+4+4 ECC DATA BLOCK[6] user data len = 0 Bytes  ECC DATA BLOCK[7] user data len = 0 Bytes  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>NDFC_ADDR_HIGH</name>
          <description>NDFC High Word Address Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA8</name>
              <description>NAND Flash 8th Cycle Address Data </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA7</name>
              <description>NAND Flash 7th Cycle Address Data </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA6</name>
              <description>NAND Flash 6th Cycle Address Data </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA5</name>
              <description>NAND Flash 5th Cycle Address Data </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ADDR_LOW</name>
          <description>NDFC Low Word Address Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA4</name>
              <description>NAND Flash 4th Cycle Address Data </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA3</name>
              <description>NAND Flash 3rd Cycle Address Data </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA2</name>
              <description>NAND Flash 2nd Cycle Address Data </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA1</name>
              <description>NAND Flash 1st Cycle Address Data </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD</name>
          <description>Set up NDFC commands Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF03FF</resetMask>
          <fields>
            <field>
              <name>NDFC_CMD_TYPE</name>
              <description>00: Common Command for normal operation 
01: Special Command for Flash Spare Field Operation 
10: Page Command for batch process operation 
11: Reserved </description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Common</name>
                  <description>Common Command for normal operation</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special Command for Flash Spare Field Operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page Command for batch process operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FOURTH_CMD</name>
              <description>0: Don`t send third set command 
1: Send it on the external memory`s bus It is used for EF-NAND page read. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send third set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus It is used for EF-NAND page read.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_THIRD_CMD</name>
              <description>0: Don`t send third set command 
1: Send it on the external memory`s bus It is used for EF-NAND page read. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send third set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus It is used for EF-NAND page read.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_RANDOM_CMD2_CTL</name>
              <description>0: Don`t send random cmd2 (NDFC_RANDOM_CMD2) 
1: Send random cmd2 </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send random cmd2 (NDFC_RANDOM_CMD2)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send random cmd2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_METHOD</name>
              <description>Data swap method when the internal RAM and system memory It is only active for Common Command and Special Command. 
0: No action 
1: DMA transfer automatically It only is active when NDFC_RAM_METHOD is 1. If this bit is set to 1, NDFC should setup DRQ to fetching data before output to Flash or NDFC should setup DRQ to sending out to system memory after fetching data from Flash. If this bit is set to 0, NDFC output the data in internal RAM or do nothing after fetching data from Flash. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_action</name>
                  <description>No action</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA transfer automatically It only is active when NDFC_RAM_METHOD is 1. If this bit is set to 1, NDFC should setup DRQ to fetching data before output to Flash or NDFC should setup DRQ to sending out to system memory after fetching data from Flash. If this bit is set to 0, NDFC output the data in internal RAM or do nothing after fetching data from Flash.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEQ</name>
              <description>User data &amp; BCH check word position. It only is active for Page Command, don`t care about this bit for other two commands 
0: Interleave Method (on page spare area) 
1: Sequence Method (following data block) </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interleave</name>
                  <description>Interleave Method (on page spare area)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sequence</name>
                  <description>Sequence Method (following data block)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_SECOND_CMD</name>
              <description>0: Don`t send second set command 
1: Send it on the external memory`s bus </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send second set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_WAIT_FLAG</name>
              <description>0: NDFC can transfer data regardless of the internal NDFC_RB wire 
1: NDFC can transfer data when the internal NDFC_RB wire is READY; otherwise it can`t when the internal NDFC_RB wire is BUSY. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_regardless</name>
                  <description>NDFC can transfer data regardless of the internal NDFC_RB wire</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_when</name>
                  <description>NDFC can transfer data when the internal NDFC_RB wire is READY; otherwise it can`t when the internal NDFC_RB wire is BUSY.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FIRST_CMD</name>
              <description>0: Don`t send first set command 
1: Send it on the external memory`s bus </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send first set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_TRANS</name>
              <description>0: No data transfer on external memory bus 
1: Data transfer and direction is decided by the field NDFC_ACCESS_DIR </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data transfer on external memory bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data transfer and direction is decided by the field NDFC_ACCESS_DIR</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ACCESS_DIR</name>
              <description>0: Read NAND Flash  
1: Write NAND Flash  </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read NAND Flash</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write NAND Flash</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_ADR</name>
              <description>0: Don`t send ADDRESS 
1: Send N cycles ADDRESS, the number N is specified by NDFC_ADR_NUM field </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send ADDRESS</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send N cycles ADDRESS, the number N is specified by NDFC_ADR_NUM field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ADR_NUM</name>
              <description>Address Cycles` Number  
000: 1 cycle address field 
001: 2 cycles address field 
010: 3 cycles address field 
011: 4 cycles address field 
100: 5 cycles address field 
101: 6 cycles address field 
110: 7 cycles address field 
111: 8 cycles address field </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_cycle</name>
                  <description>1 cycle address field</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_cycles</name>
                  <description>2 cycles address field</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_cycles</name>
                  <description>3 cycles address field</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_cycles</name>
                  <description>4 cycles address field</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5_cycles</name>
                  <description>5 cycles address field</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_cycles</name>
                  <description>6 cycles address field</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_cycles</name>
                  <description>7 cycles address field</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_cycles</name>
                  <description>8 cycles address field</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ADR_NUM_IN_PAGE_CMD</name>
              <description>The number of address cycles during page command. 
00: 2 address cycles 
11: 5 address cycles Others: reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 address cycles</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5</name>
                  <description>5 address cycles Others: reserved</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_LOW_BYTE</name>
              <description>NDFC Command low byte data This command will be sent to external Flash by NDFC. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET0</name>
          <description>NDFC_CMD_SET0</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE00530</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_CMD2</name>
              <description>Used for Batch Operation </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_READ_CMD1</name>
              <description>Used for Batch Read Operation </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_READ_CMD0</name>
              <description>Used for Batch Read Operation </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD</name>
              <description>Used for Batch Read Operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET1</name>
          <description>NDFC_CMD_SET1</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x70008510</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_CMD0</name>
              <description>Used for EF-NAND Page Read operation </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD1</name>
              <description>Used for EF-NAND Page Read operation </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_WRITE_CMD</name>
              <description>Used for Batch Write Operation </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_PROGRAM_CMD</name>
              <description>Used for Batch Write Operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CNT</name>
          <description>NDFC Data Counter for data transfer Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>NDFC_DATA_CNT</name>
              <description>Transfer Data Byte Counter The length can be set from 1 byte to 1024 bytes. However, 1024 bytes is set when it is zero. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CTL</name>
          <description>NDFC Configure and Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F3FCF5F</resetMask>
          <fields>
            <field>
              <name>NDFC_DDR_TYPE</name>
              <description>The type of DDR data interface. This bit is valid when NF_TYPE is 0x2 or 0x3. 
0: DDR 
1: DDR2 </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DDR</name>
                  <description>DDR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DDR2</name>
                  <description>DDR2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CE_SEL</name>
              <description>Chip Select for NAND Flash Chips 
0000: NDFC Select Chip 0  
0001: NDFC Select Chip 1  
0010: NDFC Select Chip 2  
0011: NDFC Select Chip 3  
0100: NDFC Select Chip 4  
0101: NDFC Select Chip 5  
0110: NDFC Select Chip 6  
0111: NDFC Select Chip 7  
1000: NDFC Select Chip 8  
1001: NDFC Select Chip 9  
1010: NDFC Select Chip 10  
1011: NDFC Select Chip 11 
1100: NDFC Select Chip 12 
1101: NDFC Select Chip 13 
1110: NDFC Select Chip 14  
1111: NDFC Select Chip 15  </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_0</name>
                  <description>NDFC Select Chip 0</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_1</name>
                  <description>NDFC Select Chip 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_2</name>
                  <description>NDFC Select Chip 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_3</name>
                  <description>NDFC Select Chip 3</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_4</name>
                  <description>NDFC Select Chip 4</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_5</name>
                  <description>NDFC Select Chip 5</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_6</name>
                  <description>NDFC Select Chip 6</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_7</name>
                  <description>NDFC Select Chip 7</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_8</name>
                  <description>NDFC Select Chip 8</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_9</name>
                  <description>NDFC Select Chip 9</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_10</name>
                  <description>NDFC Select Chip 10</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_11</name>
                  <description>NDFC Select Chip 11</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_12</name>
                  <description>NDFC Select Chip 12</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_13</name>
                  <description>NDFC Select Chip 13</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_14</name>
                  <description>NDFC Select Chip 14</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_Select_Chip_15</name>
                  <description>NDFC Select Chip 15</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DDR_RM</name>
              <description>DDR Repeat data mode 
0: Lower byte 
1: Higher byte </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Lower</name>
                  <description>Lower byte</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Higher</name>
                  <description>Higher byte</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DDR_REN</name>
              <description>DDR Repeat Enable 
0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NF_TYPE</name>
              <description>NAND Flash Type 
00: Normal SDR NAND 
01: Reserved 
10: ONFI DDR NAND  
11: Toggle DDR NAND </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal SDR NAND</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONFI</name>
                  <description>ONFI DDR NAND</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Toggle</name>
                  <description>Toggle DDR NAND</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CLE_POL</name>
              <description>NDFC Command Latch Enable (CLE) Signal Polarity Select 
0: High active 
1: Low active </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ALE_POL</name>
              <description>NDFC Address Latch Enable (ALE) Signal Polarity Select 
0: High active 
1: Low active </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_TYPE</name>
              <description>0: Dedicated DMA 
1: Normal DMA </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dedicated</name>
                  <description>Dedicated DMA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RAM_METHOD</name>
              <description>Access internal RAM method 
0: Access internal RAM by AHB method 
1: Access internal RAM by DMA method </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_AHB</name>
                  <description>Access internal RAM by AHB method</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_DMA</name>
                  <description>Access internal RAM by DMA method</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_PAGE_SIZE</name>
              <description>000: 1KB 
001: 2KB 
010: 4KB 
011: 8KB 
100: 16KB 
101: 32KB The page size is for main field data. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CE_ACT</name>
              <description>Chip Select Signal CE# Control During NAND operation 
0: De-active Chip Select Signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatic control Chip Select Signals.  
1: Chip select signal NDFC_CE# is always active after NDFC is enabled </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deactive</name>
                  <description>De-active Chip Select Signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatic control Chip Select Signals.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chip</name>
                  <description>Chip select signal NDFC_CE# is always active after NDFC is enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_SEL</name>
              <description>NDFC external R/B Signal select The value 0-3 selects the external R/B signal. The same R/B signal can be used for multiple chip select flash. </description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_BUS_WIDTH</name>
              <description>0: 8-bit bus 
1: 16-bit bus </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RESET</name>
              <description>NDFC Reset Write 1 to reset NDFC and clear to 0 after reset </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NDFC_EN</name>
              <description>NDFC Enable Control 
0: Disable NDFC 
1: Enable NDFC </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable NDFC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable NDFC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DATA_BLOCK_MASK</name>
          <description>NDFC_DATA_BLOCK_MASK</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_31</name>
              <description>It is used to indicate the data block 31 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_30</name>
              <description>It is used to indicate the data block 30 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_29</name>
              <description>It is used to indicate the data block 29 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_28</name>
              <description>It is used to indicate the data block 28 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_27</name>
              <description>It is used to indicate the data block 27 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_26</name>
              <description>It is used to indicate the data block 26 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_25</name>
              <description>It is used to indicate the data block 25 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_24</name>
              <description>It is used to indicate the data block 24 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_23</name>
              <description>It is used to indicate the data block 23 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_22</name>
              <description>It is used to indicate the data block 22 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_21</name>
              <description>It is used to indicate the data block 21 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_20</name>
              <description>It is used to indicate the data block 20 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_19</name>
              <description>It is used to indicate the data block 19 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_18</name>
              <description>It is used to indicate the data block 18 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_17</name>
              <description>It is used to indicate the data block 17 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_16</name>
              <description>It is used to indicate the data block 16 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_15</name>
              <description>It is used to indicate the data block 15 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_14</name>
              <description>It is used to indicate the data block 14 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_13</name>
              <description>It is used to indicate the data block 13 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_12</name>
              <description>It is used to indicate the data block 12 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_11</name>
              <description>It is used to indicate the data block 11 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_10</name>
              <description>It is used to indicate the data block 10 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_9</name>
              <description>It is used to indicate the data block 9 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_8</name>
              <description>It is used to indicate the data block 8 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_7</name>
              <description>It is used to indicate the data block 7 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_6</name>
              <description>It is used to indicate the data block 6 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_5</name>
              <description>It is used to indicate the data block 5 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_4</name>
              <description>It is used to indicate the data block 4 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_3</name>
              <description>It is used to indicate the data block 3 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_2</name>
              <description>It is used to indicate the data block 2 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_1</name>
              <description>It is used to indicate the data block 1 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_BLOCK_MASK_0</name>
              <description>It is used to indicate the data block 0 should be written or read during batch command procession(NDFC_CMD_TYPE=0x10 in NDFC_CMD ).  
0: disable 
1: enable  1 data block = 1024 bytes main field data. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable  1 data block = 1024 bytes main field data.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DATA_PAT_STA</name>
          <description>NDFC Data Pattern Status Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SPECIAL_31</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 31 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_30</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 30 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_29</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 29 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_28</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 28 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_27</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 27 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_26</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 26 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_25</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 25 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_24</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 24 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_23</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 23 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_22</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 22 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_21</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 21 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_20</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 20 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_19</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 19 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_18</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 18 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_17</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 17 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_16</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 16 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_15</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 15 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_14</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 14 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_13</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 13 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_12</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 12 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_11</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 11 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_10</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 10 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_9</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 9 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_8</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 8 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_7</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 7 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_6</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 6 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_5</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 5 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_4</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 4 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_3</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 3 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_2</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 2 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_1</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 1 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPECIAL_0</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for Data Block 0 when read from external NAND flash. 
0: No Found 
1: Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Found</name>
                  <description>No Found</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special pattern is found The register of NDFC_PAT_ID would indicate which kind of pattern is found.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DDR2_SPEC_CTL</name>
          <description>NDFC DDR2 Configuration Control Register</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF06</resetMask>
          <fields>
            <field>
              <name>DLEN_WR</name>
              <description>The number of latency DQS cycle for write. 
0000: No latency 
0001: One latency DQS cycle 
0010: Two latency DQS cycle 
0011: Four latency DQS cycle </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_latency</name>
                  <description>No latency</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One latency DQS cycle</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Two</name>
                  <description>Two latency DQS cycle</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Four</name>
                  <description>Four latency DQS cycle</description>
                  <value>0b0011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLEN_RD</name>
              <description>The number of latency DQS cycle for read. 
0000: No latency 
0001: One latency DQS cycle 
0010: Two latency DQS cycle 
0011: Four latency DQS cycle </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_latency</name>
                  <description>No latency</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One latency DQS cycle</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Two</name>
                  <description>Two latency DQS cycle</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Four</name>
                  <description>Four latency DQS cycle</description>
                  <value>0b0011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN_RE_C</name>
              <description>Enable the complementary RE# signal. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN_DQS_C</name>
              <description>Enable the complementary DQS signal. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DMA_CNT</name>
          <description>NDFC DMA Byte Counter Register</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_CNT</name>
              <description>DMA data counter for DMA, only is valid for Normal DMA </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DMA_INT_MASK</name>
          <description>NDFC MBUS DMA Interrupt Enable Register</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NFC_MDMA_TRANS</name>
              <description>_INT_ENB Transfer Interrupt Enable.  When set, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled. Bit 0: Corresponding DMA descriptor 0 Bit 1: Corresponding DMA descriptor 1 ... Bit 31: Corresponding DMA descriptor 31 </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_CTL</name>
          <description>ECC Configure and Control Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x4A800000</resetValue>
          <resetMask>0x7FFFFF00</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_SEED</name>
              <description>The seed value for randomize engine. It is only active when NDFC_RANDOM_EN is set to `1`. </description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_ECC_MODE</name>
              <description>00000000: BCH-16 
00000001: BCH-24 
00000010: BCH-28 
00000011: BCH-32 
00000100: BCH-40 
00000101: BCH-44 
00000110: BCH-48 
00000111: BCH-52 
00001000: BCH-56 
00001001: BCH-60 
00001010: BCH-64 
00001011: BCH-68 
00001100: BCH-72 
00001101: BCH-76 </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BCH_minus_16</name>
                  <description>BCH-16</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_24</name>
                  <description>BCH-24</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_28</name>
                  <description>BCH-28</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_32</name>
                  <description>BCH-32</description>
                  <value>0b00000011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_40</name>
                  <description>BCH-40</description>
                  <value>0b00000100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_44</name>
                  <description>BCH-44</description>
                  <value>0b00000101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_48</name>
                  <description>BCH-48</description>
                  <value>0b00000110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_52</name>
                  <description>BCH-52</description>
                  <value>0b00000111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_56</name>
                  <description>BCH-56</description>
                  <value>0b00001000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_60</name>
                  <description>BCH-60</description>
                  <value>0b00001001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_64</name>
                  <description>BCH-64</description>
                  <value>0b00001010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_68</name>
                  <description>BCH-68</description>
                  <value>0b00001011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_72</name>
                  <description>BCH-72</description>
                  <value>0b00001100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_76</name>
                  <description>BCH-76</description>
                  <value>0b00001101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_ST</name>
          <description>ECC Status and Operation information Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x8</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_ECC_ERR_37</name>
              <description>Error information bit of Data Block 31 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[31] of this register is corresponding the thirty-first ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[31] of this register is corresponding the thirty-first ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_36</name>
              <description>Error information bit of Data Block 30 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[30] of this register is corresponding the thirtieth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[30] of this register is corresponding the thirtieth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_35</name>
              <description>Error information bit of Data Block 29 
00001110: BCH-80 Others : Reserved </description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NDFC_RANDOM_SIZE_34</name>
              <description>0: ECC block size 
1: Page size </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC block size</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page size</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_DIRECTION_33</name>
              <description>0: LSB first 
1: MSB first </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_EN_32</name>
              <description>0: Disable Data Randomize 
1: Enable Data Randomize </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Data Randomize</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Data Randomize</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EXCEPTION_31</name>
              <description>0: Normal ECC 
1: For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported. It only is active when ECC is ON </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal ECC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported. It only is active when ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_PIPELINE_30</name>
              <description>Pipeline function enable or disable for batch command 
0: Error Correction function no pipeline with next block operation 
1: Error Correction pipeline </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Error_Correction_function</name>
                  <description>Error Correction function no pipeline with next block operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_Correction_pipeline</name>
                  <description>Error Correction pipeline</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EN_29</name>
              <description>0: ECC is OFF 
1: ECC is ON 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[29] of this register is corresponding the twenty-ninth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>ECC is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECC_can</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[29] of this register is corresponding the twenty-ninth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_28</name>
              <description>Error information bit of Data Block 28 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[28] of this register is corresponding the twenty-eighth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[28] of this register is corresponding the twenty-eighth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_27</name>
              <description>Error information bit of Data Block 27 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[27] of this register is corresponding the twenty-seventh ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[27] of this register is corresponding the twenty-seventh ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_26</name>
              <description>Error information bit of Data Block 26 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[26] of this register is corresponding the twenty-sixth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[26] of this register is corresponding the twenty-sixth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_25</name>
              <description>Error information bit of Data Block 25 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[25] of this register is corresponding the twenty-fifth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[25] of this register is corresponding the twenty-fifth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_24</name>
              <description>Error information bit of Data Block 24 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[24] of this register is corresponding the twenty-fourth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[24] of this register is corresponding the twenty-fourth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_23</name>
              <description>Error information bit of Data Block 23 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[23] of this register is corresponding the twenty-third ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[23] of this register is corresponding the twenty-third ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_22</name>
              <description>Error information bit of Data Block 22 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[22] of this register is corresponding the twenty-second ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[22] of this register is corresponding the twenty-second ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_21</name>
              <description>Error information bit of Data Block 21 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[21] of this register is corresponding the twenty-first ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[21] of this register is corresponding the twenty-first ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_20</name>
              <description>Error information bit of Data Block 20 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[20] of this register is corresponding the twentieth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[20] of this register is corresponding the twentieth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_19</name>
              <description>Error information bit of Data Block 19 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[19] of this register is corresponding the nineteenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[19] of this register is corresponding the nineteenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_18</name>
              <description>Error information bit of Data Block 18 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[18] of this register is corresponding the eighteenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[18] of this register is corresponding the eighteenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_17</name>
              <description>Error information bit of Data Block 17 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[17] of this register is corresponding the seventeenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[17] of this register is corresponding the seventeenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_16</name>
              <description>Error information bit of Data Block 16 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[16] of this register is corresponding the sixteenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[16] of this register is corresponding the sixteenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_15</name>
              <description>Error information bit of Data Block 15 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[15] of this register is corresponding the fifteenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[15] of this register is corresponding the fifteenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_14</name>
              <description>Error information bit of Data Block 14 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[14] of this register is corresponding the fourteenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[14] of this register is corresponding the fourteenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_13</name>
              <description>Error information bit of Data Block 13 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[13] of this register is corresponding the thirteenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[13] of this register is corresponding the thirteenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_12</name>
              <description>Error information bit of Data Block 12 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[12] of this register is corresponding the twelfth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[12] of this register is corresponding the twelfth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_11</name>
              <description>Error information bit of Data Block 11 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[11] of this register is corresponding the eleventh ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[11] of this register is corresponding the eleventh ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_10</name>
              <description>Error information bit of Data Block 10 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[10] of this register is corresponding the Tenth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[10] of this register is corresponding the Tenth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_9</name>
              <description>Error information bit of Data Block 9 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[9] of this register is corresponding the ninth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[9] of this register is corresponding the ninth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_8</name>
              <description>Error information bit of Data Block 8 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[8] of this register is corresponding the eighth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[8] of this register is corresponding the eighth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_7</name>
              <description>Error information bit of Data Block 7 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[7] of this register is corresponding the seventh ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[7] of this register is corresponding the seventh ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_6</name>
              <description>Error information bit of Data Block 6 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[6] of this register is corresponding the sixth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[6] of this register is corresponding the sixth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_5</name>
              <description>Error information bit of Data Block 5 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[5] of this register is corresponding the fifth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[5] of this register is corresponding the fifth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_4</name>
              <description>Error information bit of Data Block 4 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[4] of this register is corresponding the fourth ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[4] of this register is corresponding the fourth ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_3</name>
              <description>Error information bit of Data Block 3 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[3] of this register is corresponding the third ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[3] of this register is corresponding the third ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_2</name>
              <description>Error information bit of Data Block 2 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[2] of this register is corresponding the second ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[2] of this register is corresponding the second ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_1</name>
              <description>Error information bit of Data Block 1 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[1] of this register is corresponding the first ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[1] of this register is corresponding the first ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_ERR_0</name>
              <description>Error information bit of Data Block 0 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them The bit[0] of this register is corresponding the zero one ECC data block. 1 ECC Data Block = 1024 bytes. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC can correct these error bits or there is no error bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_bits</name>
                  <description>Error bits number beyond of ECC correction capability and can`t correct them The bit[0] of this register is corresponding the zero one ECC data block. 1 ECC Data Block = 1024 bytes.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFNAND_STATUS</name>
          <description>NDFC_EFNAND_STATUS</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>EF_NAND_STATUS</name>
              <description>The Status Value for EF-NAND Page Read operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFR</name>
          <description>NDFC Enhanced Feature Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF017F</resetMask>
          <fields>
            <field>
              <name>DB_CNT_EN</name>
              <description>Dummy_Byte_Count_EN 0:Disable fill Dummy Byte. 1:Enable fill Dummy Byte. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DB_CNT</name>
              <description>Dummy_Byte_Count After PAGE CMD operation finishing sending out the main data , user data and ECC code, controller would send dummy byte to fill the unused space in one page.  NDFC_CMD_TYPE Dummy_Byte_Count_EN </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_WP_CTRL</name>
              <description>NAND Flash Write Protect Control Bit 
0: Write Protect is active 
1: Write Protect is not active When this bit is `0`, WP signal line is low level and external NAND flash is on protected state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active</name>
                  <description>Write Protect is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_active</name>
                  <description>Write Protect is not active When this bit is `0`, WP signal line is low level and external NAND flash is on protected state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_DEBUG</name>
              <description>For the purpose of debugging ECC engine, special bits error are inserted before writing external Flash Memory. 
0: No error is inserted (ECC Normal Operation) n: N bits error are inserted </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EMCE_IV_FAC_CMP_VAL</name>
          <description>NDFC EMCE IV_FAC Compare Value Register</description>
          <addressOffset>0x21C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_EMCE_IV_FAC_CMP_VAL</name>
              <description>This value is set by user. It is EMCE IV factor compare value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>NDFC_ERR_CNT_N[%s]</name>
          <description>NDFC Error Counter Register(N from 0 to 7)</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>NDFC_INT</name>
          <description>NDFC Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>NDFC_DMA_INT_ENABLE</name>
              <description>Enable or disable interrupt when a pending DMA is completed. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC has finished the procession of a single command in Normal Command Work Mode or one Batch Command Work Mode. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_B2R_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC_RB# signal is transferring from BUSY state to READY state 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_IO_DATA</name>
          <description>Data Input/Output Port Address Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_IO_DATA</name>
              <description>Read/ Write data into internal RAM Access unit is 32-bit. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_CUR_BUF_ADDR</name>
          <description>NDFC MBUS DMA Current Buffer Address Register</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CUR_BUFF_ADDR</name>
              <description>Current Buffer Address Pointer.  Cleared on Reset. Pointer updated by DMA during operation. This register points to the current Data Buffer Address being accessed by the DMA. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_CUR_DESC_ADDR</name>
          <description>NDFC MBUS DMA Current Descriptor Address Register</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CUR_DESC_ADDR</name>
              <description>Current Descriptor Address Pointer.  Cleared on reset. Pointer updated by DMA during operation. This register points to the start address of the current descriptor read by the DMA. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_DLBA_REG</name>
          <description>NDFC MBUS DMA Descriptor List Base Address Register</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NFC_MDMA_DESC_BASE_ADDR</name>
              <description>Start Address of Descriptor List. Contains the base address of the First Descriptor. The LSB bits [1:0] are ignored and taken as all-zero by the DMA internally. Hence these LSB bits are read-only. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_STA</name>
          <description>NDFC MBUS DMA Interrupt Status Register</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NFC_MDMA_TRANS_FINISH_INT</name>
              <description>Transfer Finish Interrupt.  Indicates that data transmission is finished for a descriptor. Writing a `1` clears this bit. Bit 0: Corresponding DMA descriptor 0 Bit 1: Corresponding DMA descriptor 1 ... Bit 31: Corresponding DMA descriptor 31 </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_NDMA_MODE_CTL</name>
          <description>NDFC Normal DMA Mode Control Register</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0xE5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DMA_ACT_STA</name>
              <description>00:dma_active is low  01:dma_active is high 10:dma_active is controlled by dma_request(DRQ) 11:dma_active is controlled by controller </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_ACK_EN</name>
              <description>0: active fall do not care ack  
1: active fall must after detect ack is high </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_fall_do_not_care</name>
                  <description>active fall do not care ack</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_fall_must_after</name>
                  <description>active fall must after detect ack is high</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DELAY_CYCLE</name>
              <description>The delay cycles The counts of hold cycles from DMA last signal high to dma_active high </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_PAT_ID</name>
          <description>Pattern ID Register</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PAT_ID_31</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_30</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_29</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_28</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_27</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_26</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_25</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_24</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_23</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_22</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_21</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_20</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_19</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_18</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_17</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_16</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_15</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_14</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_13</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_12</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_11</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_10</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_9</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_8</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_7</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_6</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_5</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_4</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_3</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_2</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_1</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_0</name>
              <description>Special Pattern ID for ECC data block[n] 0: All 0x00 is found 1: All 0xFF is found</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_0</name>
          <description>Read Data Status Register 0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_1</name>
              <description>The number of input bit 1 during current command. It will be cleared automatically when next command is executed. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_1</name>
          <description>Read Data Status Register 1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_0</name>
              <description>The number of input bit 0 during current command. It will be cleared automatically when next command is executed. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_CTL</name>
          <description>Read Data Status Control Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x107FFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_EN</name>
              <description>0: Disable to count the number of bit 1 and bit 0 during current read operation; 
1: Enable to count the number of bit 1 and bit 0 during current read operation; The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable to count the number of bit 1 and bit 0 during current read operation;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable to count the number of bit 1 and bit 0 during current read operation; The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_TH</name>
              <description>The threshold value to generate data status. If the number of bit 1 during current read operation is less than or equal to threshold value, the bit 13 of NDFC_ST register will be set. If the number of bit 0 during current read operation is less than or equal to threshold value, the bit 12 of NDFC_ST register will be set. </description>
              <bitRange>[18:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_SPARE_AREA</name>
          <description>Spare Area Configure Register</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x400</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_SPARE_ADR</name>
              <description>This value indicates the spare area first byte address for NDFC interleave page operation. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ST</name>
          <description>NDFC Status Information Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xF00</resetValue>
          <resetMask>0x3F1F</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_0</name>
              <description>0: The number of bit 1 during current read operation is more than threshold value. 
1: The number of bit 1 during current read operation is less than or equal to threshold value. This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH.  </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>more</name>
                  <description>The number of bit 1 during current read operation is more than threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 1 during current read operation is less than or equal to threshold value. This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_1</name>
              <description>0: The number of bit 0 during current read operation is more than threshold value. 
1: The number of bit 0 during current read operation is less than or equal to the threshold value. This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH.  </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>more</name>
                  <description>The number of bit 0 during current read operation is more than threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 0 during current read operation is less than or equal to the threshold value. This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE3</name>
              <description>NAND Flash R/B 3 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE2</name>
              <description>NAND Flash R/B 2 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE1</name>
              <description>NAND Flash R/B 1 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE0</name>
              <description>NAND Flash R/B 0 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_STA</name>
              <description>0: NDFC FSM in IDLE state  
1: NDFC FSM in BUSY state When NDFC_STA is 0, NDFC can accept new command and process command. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_FSM_in_IDLE</name>
                  <description>NDFC FSM in IDLE state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_FSM_in_BUSY</name>
                  <description>NDFC FSM in BUSY state When NDFC_STA is 0, NDFC can accept new command and process command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_FIFO_STATUS</name>
              <description>0: Command FIFO not full and can receive new command 
1: Full and waiting NDFC to process commands in FIFO Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command</name>
                  <description>Command FIFO not full and can receive new command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_and</name>
                  <description>Full and waiting NDFC to process commands in FIFO Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_INT_FLAG</name>
              <description>When it is 1, it means that a pending DMA is completed. It will be clear after writing 1 to this bit or it will be automatically clear before FSM processing an new command. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NDFC_CMD_INT_FLAG</name>
              <description>When it is 1, it means that NDFC has finished one Normal Command Mode or one Batch Command Work Mode. It will be clear after writing 1 to this bit or it will be automatically clear before FSM processing an new command. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NDFC_RB_B2R</name>
              <description>When it is 1, it means that NDFC_R/B# signal is transferred from BUSY state to READY state. It will be clear after writing 1 to this bit.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CFG</name>
          <description>NDFC Timing Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x95</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>T_WC</name>
              <description>Write Cycle Time 
00: 1*2T 
01: 2*2T 
10: 3*2T 
11: 4*2T </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_times_2T</name>
                  <description>1*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_times_2T</name>
                  <description>3*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CCS</name>
              <description>Change Column Setup Time 
00: 12*2T 
01: 20*2T 
10: 28*2T 
11: 60*2T </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_times_2T</name>
                  <description>20*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_times_2T</name>
                  <description>28*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_60_times_2T</name>
                  <description>60*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CLHZ</name>
              <description>CLE High to Output Hi-z 
00: 2*2T 
01: 8*2T 
10: 16*2T 
11: 31*2T </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CS</name>
              <description>CE Setup Time 
00: 2*2T 
01: 8*2T 
10: 16*2T 
11: 31*2T </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R/W</name>
              <description>0x0 T_CDQSS DQS Setup Time for data input start 
0: 4*2T 
1: 20*2T </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_times_2T</name>
                  <description>20*2T</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CAD</name>
              <description>Command, Address, Data Delay 
000: 2*2T 
001: 6*2T 
010: 10*2T 
011: 14*2T 
100: 22*2T 
101: 30*2T 110/111: 62*2T </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_times_2T</name>
                  <description>6*2T</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10_times_2T</name>
                  <description>10*2T</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_14_times_2T</name>
                  <description>14*2T</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_times_2T</name>
                  <description>22*2T</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_30_times_2T</name>
                  <description>30*2T 110/111: 62*2T</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_RHW</name>
              <description>RE# high to WE# low cycle number 
00: 4*2T 
01: 12*2T 
10: 20*2T 
11: 28*2T </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_times_2T</name>
                  <description>20*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_times_2T</name>
                  <description>28*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WHR</name>
              <description>WE# high to RE# low cycle number 
00: 0*2T 
01: 6*2T 
10: 14*2T 
11: 22*2T </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_times_2T</name>
                  <description>0*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_times_2T</name>
                  <description>6*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_14_times_2T</name>
                  <description>14*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_times_2T</name>
                  <description>22*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_ADL</name>
              <description>Address to Data Loading cycle number 
00: 0*2T 
01: 6*2T 
10: 14*2T 
11: 22*2T </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_times_2T</name>
                  <description>0*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_times_2T</name>
                  <description>6*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_14_times_2T</name>
                  <description>14*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_times_2T</name>
                  <description>22*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WB</name>
              <description>WE# high to busy cycle number 00:14*2T 
01: 22*2T 
10: 30*2T 
11: 38*2T </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_22_times_2T</name>
                  <description>22*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_30_times_2T</name>
                  <description>30*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_38_times_2T</name>
                  <description>38*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CTL</name>
          <description>NDFC Timing Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3F</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_PIPE</name>
              <description>In SDR mode: 
00: Normal 
01: EDO 
10: E-EDO Others: Reserved  In DDR mode: 1~15 is valid.(These bits configure the number of clock when data is valid after RE#`s falling edge) </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_DC_CTL</name>
              <description>NDFC Delay Chain Control. (These bits are only valid in DDR data interface, and configure the relative phase between DQS and DQ[0...7] ) </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>NDFC_USER_DATA_LEN_N[%s]</name>
          <description>NDFC User Data Length Register(N from 0 to 3)</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IT'S_7_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_7 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IT'S_6_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_6 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IT'S_5_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_5 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IT'S_4_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_4 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IT'S_3_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_3 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IT'S_2_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_2 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IT'S_1_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_1 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IT'S_0_USED_TO_INDICATE_USER_DATA'S</name>
              <description>It's_0 used to indicate user data's length of ECC DATA BLOCK[0x08*N+M]. 0000 : no user data 0001 : 04bytes user data 0010 : 08bytes user data 0011 : 12bytes user data 0100 : 16bytes user data 0101 : 20bytes user data 0110 : 24bytes user data 0111 : 28bytes user data 1000 : 32bytes user data Other : reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>OWA</name>
      <description>OWA</description>
      <groupName>generic</groupName>
      <baseAddress>0x5093000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>OWA_CTL</name>
          <description>OWA_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x3EF</resetMask>
          <fields>
            <field>
              <name>MCLKDIV</name>
              <description>MCLK Clock Divide Ratio MCLK Divide Ratio from PLL_AUDIO 
00000: Divide by 128 
00001: Divide by 2 
00010: Divide by 4 
00011: Divide by 6 
00100: Divide by 8 
00101: Divide by 10 
00110: Divide by 12 
00111: Divide by 14 
01000: Divide by 16 
01001: Divide by 18 
01010: Divide by 20 
01011: Divide by 22 
01100: Divide by 24 .........  
11111: Divide by 62 </description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b00011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b00100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_10</name>
                  <description>Divide by 10</description>
                  <value>0b00101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b00110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_14</name>
                  <description>Divide by 14</description>
                  <value>0b00111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b01000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_18</name>
                  <description>Divide by 18</description>
                  <value>0b01001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_20</name>
                  <description>Divide by 20</description>
                  <value>0b01010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_22</name>
                  <description>Divide by 22</description>
                  <value>0b01011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24 .........</description>
                  <value>0b01100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_62</name>
                  <description>Divide by 62</description>
                  <value>0b11111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLKEN</name>
              <description>MCLK Enable 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Test 
0: Normal Mode 
1: Loop Back Test When set `1`, connecting the DOUT with the DIN. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Test When set `1`, connecting the DOUT with the DIN.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Global Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RST</name>
              <description>Reset 
0: Normal 
1: Reset Self clear to 0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset Self clear to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FCTL</name>
          <description>OWA FIFO Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x40200</resetValue>
          <resetMask>0xE00FF7F7</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable 
0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TXFIFO, self clear to `0`. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FRX</name>
              <description>Write `1` to flush RXFIFO, self clear to `0`. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO empty Trigger Level Interrupt and DMA request trigger level for TX FIFO normal condition. Trigger Level = TXTL </description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RX FIFO Trigger Level Interrupt and DMA request trigger level for RX FIFO normal condition. Trigger Level = RXTL + 1 </description>
              <bitRange>[10:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TXFIFO Input Mode(Mode0, 1) 
0: Valid Data at the MSB of TXFIFO Register 
1: Valid Data at the LSB of TXFIFO Register Example for 20-bits transmitted audio sample: Mode 0: TXFIFO[23:0] = {APB_WDATA[31:12], 4`h0} Mode 1: TXFIFO[23:0] = {APB_WDATA[19:0], 4`h0} </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_Data_at_the_MSB</name>
                  <description>Valid Data at the MSB of TXFIFO Register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_Data_at_the_LSB</name>
                  <description>Valid Data at the LSB of TXFIFO Register Example for 20-bits transmitted audio sample: Mode 0: TXFIFO[23:0] = {APB_WDATA[31:12], 4`h0} Mode 1: TXFIFO[23:0] = {APB_WDATA[19:0], 4`h0}</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RXFIFO Output Mode(Mode 0,1,2,3) 
00:  Expanding `0` at LSB of RXFIFO Register 
01: Expanding Received Sample Sign bit at MSB of RXFIFO Register 
10: Truncating Received Samples at High Half-word of RXFIFO Register and Low Half-word of RXFIFO Register is filled by `0` 
11: Truncating Received Samples at Low Half-word of RXFIFO Register and High Half-word of RXFIFO Register is Expanded by Its Sigh Bit Mode 0: APB_RDATA[31:0] = {RXFIFO[23:0], 8`h0} Mode 1: APB_RDATA[31:0] = {8`RXFIFO[23], RXFIFO[23:0]} Mode 2: APB_RDATA[31:0] = {RXFIFO[23:8], 16`h0} Mode 3: APB_RDATA[31:0] ={16`RXFIFO[23], RXFIFO[23:8]} </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`_at_LSB_of</name>
                  <description>Expanding `0` at LSB of RXFIFO Register</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_Received_Sample_Sign_bit</name>
                  <description>Expanding Received Sample Sign bit at MSB of RXFIFO Register</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_Received_Samples_at_High</name>
                  <description>Truncating Received Samples at High Half-word of RXFIFO Register and Low Half-word of RXFIFO Register is filled by `0`</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_Received_Samples_at_Low</name>
                  <description>Truncating Received Samples at Low Half-word of RXFIFO Register and High Half-word of RXFIFO Register is Expanded by Its Sigh Bit Mode 0: APB_RDATA[31:0] = {RXFIFO[23:0], 8`h0} Mode 1: APB_RDATA[31:0] = {8`RXFIFO[23], RXFIFO[23:0]} Mode 2: APB_RDATA[31:0] = {RXFIFO[23:8], 16`h0} Mode 3: APB_RDATA[31:0] ={16`RXFIFO[23], RXFIFO[23:8]}</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FSTA</name>
          <description>OWA FIFO Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x80200000</resetValue>
          <resetMask>0x80FF807F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TXFIFO Empty (Indicate TXFIFO is Not Full) 
0: No Room for New Sample in TXFIFO 
1: More than One Room for New Sample in TXFIFO ( &gt;=1 Word ) </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Room</name>
                  <description>No Room for New Sample in TXFIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than One Room for New Sample in TXFIFO ( &gt;=1 Word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TXFIFO Empty Space Word Counter </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RXFIFO Available 
0: No Available Data in RXFIFO 
1: More than One Sample in RXFIFO ( &gt;=1 Word ) </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Available</name>
                  <description>No Available Data in RXFIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than One Sample in RXFIFO ( &gt;=1 Word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RXFIFO Available Sample Word Counter </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_INT</name>
          <description>OWA Interrupt Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x700F7</resetMask>
          <fields>
            <field>
              <name>RX_LOCKI_EN</name>
              <description>RX LOCK Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UNLOCKI_EN</name>
              <description>RX UNLOCK Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PARERRI_EN</name>
              <description>RX PARITY ERORR Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DRQ</name>
              <description>TXFIFO Empty DRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TXFIFO Underrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TXFIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TXFIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RXFIFO Data Available DRQ Enable When Set to `1`, RXFIFO DMA Request is Asserted if Data is Available in RXFIFO. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RXFIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RXFIFO Data Available Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_ISTA</name>
          <description>OWA Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x70073</resetMask>
          <fields>
            <field>
              <name>RX_LOCK_INT</name>
              <description>0: No Pending IRQ 
1: RX lock Pending Interrupt (RX_LOCK_FLAG 0&#8594;1) Write `1` to clear this interrupt. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX lock Pending Interrupt (RX_LOCK_FLAG 0&#8594;1) Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UNLOCK_INT</name>
              <description>RX Unlock Pending Interrupt 
0: No Pending IRQ 
1: RX Unlock Pending Interrupt (RX_LOCK_FLAG 1&#8594;0) Write `1` to clear this interrupt. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX Unlock Pending Interrupt (RX_LOCK_FLAG 1&#8594;0) Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PARERRI_INT</name>
              <description>RX Parity Error Pending Interrupt  
0: No Pending IRQ 
1: RX Parity Error Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX Parity Error Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Underrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Underrun Pending Interrupt Writing `1` to clear this interrupt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Underrun Pending Interrupt Writing `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending Interrupt Writing `1` to clear this interrupt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt Writing `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt Writing `1` to clear this interrupt or automatically clear if the interrupt condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt Writing `1` to clear this interrupt or automatically clear if the interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RXFIFO Overrun Pending Interrupt 
0: RXFIFO Overrun Pending Write `1` to clear this interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RXFIFO</name>
                  <description>RXFIFO Overrun Pending Write `1` to clear this interrupt.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RXFIFO Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RXFIFO</name>
          <description>OWA RXFIFO Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>Host can get one sample by reading this register, the A channel data is first and then the B channel data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RX_CFIG</name>
          <description>OWA RX Configuration Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1B</resetMask>
          <fields>
            <field>
              <name>RX_LOCK_FLAG</name>
              <description>0: Unlock 
1: Lock </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlock</name>
                  <description>Unlock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Lock</name>
                  <description>Lock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CHST_SRC</name>
              <description>0: RX_CH_STA Register Holds Status from Channel A 
1: RX_CH_STA Register Holds Status from Channel B </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_CH_STA_Register_Holds_Status_from_Channel_A</name>
                  <description>RX_CH_STA Register Holds Status from Channel A</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_CH_STA_Register_Holds_Status_from_Channel_B</name>
                  <description>RX_CH_STA Register Holds Status from Channel B</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHST_CP</name>
              <description>Channel Status Capture 
0: Idle or Capture End 
1: Capture Channel Status Start When set to `1`, the channel status information is capturing, the bit will clear to `0` after captured. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or Capture End</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture Channel Status Start When set to `1`, the channel status information is capturing, the bit will clear to `0` after captured.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>0: Disabled 
1: Enabled </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RX_CHSTA0</name>
          <description>OWA_RX_CHSTA0</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>CA</name>
              <description>Clock Accuracy 
00: Level 2 
01: Level 1 
10: Level 3 
11: Not Matched </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_Matched</name>
                  <description>Not Matched</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Sampling Frequency 
0000: 44.1kHz          
0001: Not Indicated       
0010: 48kHz             
0011: 32kHz            
0100: 22.05kHz           
0101: Reserved           
0110: 24kHz             
0111: Reserved           
1000: Reserved 
1001: 768kHz 
1010: 96kHz 
1011: Reserved 1100:176.4kHz 
1101: Reserved 
1110: 192kHz 
1111: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_Indicated</name>
                  <description>Not Indicated</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_768kHz</name>
                  <description>768kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 1100:176.4kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CN</name>
              <description>Channel Number </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN</name>
              <description>Source Number </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Category Code Indicates the Kind of Equipment that Generates the digital audio interface Signal. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Mode 
00: Default Mode 01~11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default Mode 01~11: Reserved</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMP</name>
              <description>Emphasis Additional Format Information For bit 1 = `0`, Linear PCM Audio Mode: 
000: 2 Audio Channels without Pre-emphasis 
001: 2 Audio Channels with 50 &#956;s / 15 &#956;s Pre-emphasis 
010: Reserved (For 2 Audio Channels with Pre-emphasis) 
011: Reserved (For 2 Audio Channels with Pre-emphasis) 100~111: Reserved  For bit 1 = `1`, Other than Linear PCM Applications: 
000: Default State 001~111: Reserved </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP</name>
              <description>Copyright 
0: Copyright is Asserted 
1: No Copyright is Asserted </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copyright</name>
                  <description>Copyright is Asserted</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_Copyright</name>
                  <description>No Copyright is Asserted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TYPE</name>
              <description>Audio Data Type 
0: Linear PCM Samples 
1: For None-linear PCM Audio Such as AC3, DTS, MPEG Audio </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM Samples</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For None-linear PCM Audio Such as AC3, DTS, MPEG Audio</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRO</name>
              <description>Application Type 
0: Consumer Application 
1: Professional Application </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Consumer</name>
                  <description>Consumer Application</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Professional</name>
                  <description>Professional Application</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RX_CHSTA1</name>
          <description>OWA_RX_CHSTA1</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>CGMS</name>
              <description>CGMS_A 
00: Copying is Permitted without Restriction 
01: One Generation of Copies May Be Made 
10: Condition Not Be Used 
11: No Copying is Permitted </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copying</name>
                  <description>Copying is Permitted without Restriction</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One Generation of Copies May Be Made</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Condition</name>
                  <description>Condition Not Be Used</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_Copying</name>
                  <description>No Copying is Permitted</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ORIG_FREQ_ORIGINAL_SAMPLING_FREQUENCY</name>
              <description>ORIG_FREQ Original Sampling Frequency 
0000: Not Indicated 
0001: 192kHz 
0010: 12kHz 
0011: 176.4kHz 
0100: Reserved 
0101: 96kHz 
0110: 8kHz 
0111: 88.2kHz 
1000: 16kHz 
1001: 24kHz 
1010: 11.025kHz 
1011: 22.05kHz 
1100: 32kHz 
1101: 48kHz 
1110: Reserved 
1111: 44.1kHz </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_Indicated</name>
                  <description>Not Indicated</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12kHz</name>
                  <description>12kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8kHz</name>
                  <description>8kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_88_point_2kHz</name>
                  <description>88.2kHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16kHz</name>
                  <description>16kHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025kHz</name>
                  <description>11.025kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WL_SAMPLE_WORD_LENGTH</name>
              <description>WL Sample Word Length For bit 0 = `0`: 
000: Not Indicated 
001: 16 bits 
010: 18 bits 
100: 19 bits 
101: 20 bits 
110: 17 bits 
111: Reserved For bit 0 = `1`: 
000: Not Indicated 
001: 20 bits 
010: 22 bits 
100: 23 bits 
101: 24 bits 
110: 21 bits 
111: Reserved </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MWL_MAX_WORD_LENGTH</name>
              <description>MWL Max Word Length 
0: Maximum Audio Sample Word Length is 20 bits 
1: Maximum Audio Sample Word Length is 24 bits </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>20</name>
                  <description>Maximum Audio Sample Word Length is 20 bits</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24</name>
                  <description>Maximum Audio Sample Word Length is 24 bits</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RX_CNT</name>
          <description>OWA RX Counter Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample Counter The audio sample number of writing into RXFIFO. When one sample is written by Codec, the RX sample counter register increases by one. The RX Counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TXFIFO</name>
          <description>OWA_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Transmitting A, B channel data should be written this register one by one. The A channel data is first and then the B channel data. </description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CFIG</name>
          <description>OWA TX Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xF0</resetValue>
          <resetMask>0x800301FF</resetMask>
          <fields>
            <field>
              <name>TX_SINGLE_MODE</name>
              <description>Tx Single Channel Mode 
0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASS</name>
              <description>Audio Sample Select with TX FIFO Underrun When 
0: Sending 0 
1: Sending the last audio This bit is only valid in PCM mode </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sending_0</name>
                  <description>Sending 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sending_the_last</name>
                  <description>Sending the last audio This bit is only valid in PCM mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_AUDIO</name>
              <description>TX Data Type 
0: Linear PCM (Valid bit of both sub-frame set to 0 ) 
1: Non-audio(Valid bit of both sub-frame set to 1) </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM (Valid bit of both sub-frame set to 0 )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_audio_openingparen_Valid_bit</name>
                  <description>Non-audio(Valid bit of both sub-frame set to 1)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_RATIO</name>
              <description>TX Clock Divide Ratio Clock divide ratio = TX TATIO +1 Fs= PLL_AUDIO/[(TX_TATIO +1)*64*2] </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SF</name>
              <description>TX Sample Format 
00: 16 bits 
01: 20 bits 
10: 24 bits 
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bits</name>
                  <description>16 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bits</name>
                  <description>20 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bits</name>
                  <description>24 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CHM</name>
              <description>CHSTMODE 
0: Channel status A&amp;B set to 0 
1: Channel status A&amp;B generated form TX_CHSTA </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_set</name>
                  <description>Channel status A&amp;B set to 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_generated</name>
                  <description>Channel status A&amp;B generated form TX_CHSTA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>0: Disabled 
1: Enabled </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA0</name>
          <description>OWA TX Channel Status Register0</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>CA</name>
              <description>Clock Accuracy 
00: Level 2 
01: Level 1 
10: Level 3 
11: Not matched </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_matched</name>
                  <description>Not matched</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Sampling Frequency 
0000: 44.1kHz           
0001: Not indicated        
0010: 48kHz             
0011: 32kHz             
0100: 22.05kHz           
0101: Reserved           
0110: 24kHz              
0111: Reserved            
1000: Reserved 
1001: 768kHz 
1010: 96kHz 
1011: Reserved 1100:176.4kHz 
1101: Reserved 
1110: 192kHz 
1111: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_indicated</name>
                  <description>Not indicated</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_768kHz</name>
                  <description>768kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 1100:176.4kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CN</name>
              <description>Channel Number </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN</name>
              <description>Source Number </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Category Code Indicates the kind of equipment that generates the digital audio interface signal. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Mode 
00: Default Mode 01~11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default Mode 01~11: Reserved</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMP</name>
              <description>Emphasis Additional format information For bit 1 = `0`, Linear PCM audio mode: 
000: 2 audio channels without pre-emphasis 
001: 2 audio channels with 50 &#956;s / 15 &#956;s pre-emphasis 
010: Reserved (for 2 audio channels with pre-emphasis) 
011: Reserved (for 2 audio channels with pre-emphasis) 100~111: Reserved  For bit 1 = `1`, other than Linear PCM applications: 
000: Default state 001~111: Reserved </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP</name>
              <description>Copyright 
0: Copyright is asserted 
1: No copyright is asserted </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copyright</name>
                  <description>Copyright is asserted</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_copyright</name>
                  <description>No copyright is asserted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TYPE</name>
              <description>Audio Data Type 
0: Linear PCM Samples 
1: For none-linear PCM audio such as AC3, DTS, MPEG audio </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM Samples</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For none-linear PCM audio such as AC3, DTS, MPEG audio</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRO</name>
              <description>Application Type 
0: Consumer Application 
1: Professional Application  This bit must be fixed to `0` </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Consumer</name>
                  <description>Consumer Application</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Professional</name>
                  <description>Professional Application  This bit must be fixed to `0`</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA1</name>
          <description>OWA TX Channel Status Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>CGMS</name>
              <description>CGMS_A 
00: Copying is permitted without restriction 
01: One generation of copies may be made 
10: Condition not be used 
11: No copying is permitted </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copying</name>
                  <description>Copying is permitted without restriction</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One generation of copies may be made</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Condition</name>
                  <description>Condition not be used</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_copying</name>
                  <description>No copying is permitted</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ORIG_FREQ_ORIGINAL_SAMPLING_FREQUENCY</name>
              <description>ORIG_FREQ Original Sampling Frequency 
0000: Not indicated 
0001: 192kHz 
0010: 12kHz 
0011: 176.4kHz 
0100: Reserved 
0101: 96kHz 
0110: 8kHz 
0111: 88.2kHz 
1000: 16kHz 
1001: 24kHz 
1010: 11.025kHz 
1011: 22.05kHz 
1100: 32kHz 
1101: 48kHz 
1110: Reserved 
1111: 44.1kHz </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_indicated</name>
                  <description>Not indicated</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12kHz</name>
                  <description>12kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8kHz</name>
                  <description>8kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_88_point_2kHz</name>
                  <description>88.2kHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16kHz</name>
                  <description>16kHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025kHz</name>
                  <description>11.025kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WL_SAMPLE_WORD_LENGTH</name>
              <description>WL Sample Word Length For bit 0 = `0`: 
000: Not indicated 
001: 16 bits 
010: 18 bits 
100: 19 bits 
101: 20 bits 
110: 17 bits 
111: Reserved  For bit 0 = `1`: 
000: Not indicated 
001: 20 bits 
010: 22 bits 
100: 23 bits 
101: 24 bits 
110: 21 bits 
111: Reserved </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MWL_MAX_WORD_LENGTH</name>
              <description>MWL Max Word Length 
0: Maximum audio sample word length is 20 bits 
1: Maximum audio sample word length is 24 bits </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>20</name>
                  <description>Maximum audio sample word length is 20 bits</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24</name>
                  <description>Maximum audio sample word length is 24 bits</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CNT</name>
          <description>OWA TX Counter Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of sending into TXFIFO.  When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial value at any time. After updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PIO</name>
      <description>PIO</description>
      <groupName>generic</groupName>
      <baseAddress>0x300B000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PC_CFG0</name>
          <description>PC_CFG0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC7_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ1   011:SDC2_D1 100:SPI0_WP    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC6_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ0   011:SDC2_D0 100:SPI0_HOLD   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC5_SELECT</name>
              <description>000:Input     001:Output 010:NAND_RB0   011:SDC2_CMD 100:SPI0_CS    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC4_SELECT</name>
              <description>000:Input     001:Output 010:NAND_RE       011:SDC2_CLK 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC3_SELECT</name>
              <description>000:Input     001:Output 010:NAND_CE0   011:Reserved 100:SPI0_MISO   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC2_SELECT</name>
              <description>000:Input     001:Output 010:NAND_CLE   011:Reserved 100:SPI0_MOSI   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC1_SELECT</name>
              <description>000:Input     001:Output 010:NAND_ALE   011:SDC2_DS 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC0_SELECT</name>
              <description>000:Input     001:Output 010:NAND_WE   011:Reserved 100:SPI0_CLK    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG1</name>
          <description>PC_CFG1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC15_SELECT</name>
              <description>000:Input     001:Output 010:NAND_CE1   011:Reserved 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC14_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQS   011:SDC2_RST 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC13_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ7   011:SDC2_D7 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC12_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ6   011:SDC2_D6 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC11_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ5   011:SDC2_D5 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC10_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ4   011:SDC2_D4 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC9_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ3   011:SDC2_D3 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC8_SELECT</name>
              <description>000:Input     001:Output 010:NAND_DQ2   011:SDC2_D2 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG2</name>
          <description>PC_CFG2</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>PC16_SELECT</name>
              <description>000:Input     001:Output 010:NAND_RB1   011:Reserved 100:Reserved    101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG3</name>
          <description>PC_CFG3</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PC_DAT</name>
          <description>PC_DAT</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFF</resetMask>
          <fields>
            <field>
              <name>PC_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV0</name>
          <description>PC_DRV0</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PC15_DRV</name>
              <description>PC15 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC14_DRV</name>
              <description>PC14 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC13_DRV</name>
              <description>PC13 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC12_DRV</name>
              <description>PC12 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC11_DRV</name>
              <description>PC11 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC10_DRV</name>
              <description>PC10 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC9_DRV</name>
              <description>PC9 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC8_DRV</name>
              <description>PC8 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC7_DRV</name>
              <description>PC7 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC6_DRV</name>
              <description>PC6 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC5_DRV</name>
              <description>PC5 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC4_DRV</name>
              <description>PC4 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC3_DRV</name>
              <description>PC3 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC2_DRV</name>
              <description>PC2 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC1_DRV</name>
              <description>PC1 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC0_DRV</name>
              <description>PC0 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV1</name>
          <description>PC_DRV1</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>PC16_DRV</name>
              <description>PC16 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_PULL0</name>
          <description>PC_PULL0</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x40000440</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PC15_PULL</name>
              <description>PC15 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC14_PULL</name>
              <description>PC14 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC13_PULL</name>
              <description>PC13 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC12_PULL</name>
              <description>PC12 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC11_PULL</name>
              <description>PC11 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC10_PULL</name>
              <description>PC10 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC9_PULL</name>
              <description>PC9 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC8_PULL</name>
              <description>PC8 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC7_PULL</name>
              <description>PC7 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC6_PULL</name>
              <description>PC6 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC5_PULL</name>
              <description>PC5 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC4_PULL</name>
              <description>PC4 Pull-up/down Select 
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC3_PULL</name>
              <description>PC3 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC2_PULL</name>
              <description>PC2 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC1_PULL</name>
              <description>PC Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC0_PULL</name>
              <description>PC0 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_PULL1</name>
          <description>PC_PULL1</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>PC16_PULL</name>
              <description>PC16 Pull-up/down Select 
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG0</name>
          <description>PD_CFG0</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD7_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D11    011:TS0_D3 100:CSI_D3    101:RGMII_TXD3/RMII_NULL 110:Reserved    111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD6_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D10    011:TS0_D2 100:CSI_D2    101:RGMII_NULL/RMII_RXER 110:Reserved    111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD5_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D7    011:TS0_D1 100:CSI_D1    101:RGMII_RXCTL/RMII_CRS_DV 110:Reserved    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD4_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D6    011:TS0_D0 100:CSI_D0    101:RGMII_RXCK/RMII_NULL 110:Reserved    111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD3_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D5    011:TS0_DVLD 100:CSI_VSYNC   101:RGMII_RXD0/RMII_RXD0 110:Reserved    111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD2_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D4    011:TS0_SYNC 100:CSI_HSYNC   101:RGMII_RXD1/RMII_RXD1 110:Reserved    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD1_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D3    011:TS0_ERR 100:CSI_MCLK       101:RGMII_RXD2/RMII_NULL 110:Reserved    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD0_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D2    011:TS0_CLK 100:CSI_PCLK    101:RGMII_RXD3/RMII_NULL 110:Reserved    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG1</name>
          <description>PD_CFG1</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD15_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D21       011:TS1_DVLD 100:DMIC_DATA0   101:CSI_D9 110:Reserved    111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD14_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D20       011:TS1_SYNC 100:DMIC_CLK   101:CSI_D8 110:Reserved    111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD13_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D19       011:TS1_ERR 100:CSI_SDA    101:RGMII_CLKIN/RMII_NULL 110:Reserved    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD12_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D18          011:TS1_CLK 100:CSI_SCK    101:RGMII_TXCTL/RMII_TXEN 110:Reserved    111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD11_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D15       011:TS0_D7 100:CSI_D7    101:RGMII_TXCK/RMII_TXCK 110:Reserved       111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD10_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D14       011:TS0_D6 100:CSI_D6    101:RGMII_TXD0/RMII_TXD0 110:Reserved    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD9_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D13       011:TS0_D5 100:CSI_D5    101:RGMII_TXD1/RMII_TXD1 110:Reserved    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD8_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D12       011:TS0_D4 100:CSI_D4    101:RGMII_TXD2/RMII_NULL 110:Reserved       111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG2</name>
          <description>PD_CFG2</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD23_SELECT</name>
              <description>000:Input     001:Output 010:TWI2_SCK    011:TS3_ERR 100:UART3_TX   101:JTAG_MS 110:Reserved    111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD22_SELECT</name>
              <description>000:Input     001:Output 010:PWM0         011:TS3_CLK 100:UART2_CTS   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD21_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_VSYNC      011:TS2_D0 100:UART2_RTS   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD20_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_HSYNC      011:TS2_DVLD 100:UART2_RX   101:MDIO 110:Reserved    111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD19_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_DE       011:TS2_SYNC 100:UART2_TX   101:MDC 110:Reserved    111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD18_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_CLK       011:TS2_ERR 100:DMIC_DATA3   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD17_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D23          011:TS2_CLK 100:DMIC_DATA2   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD16_SELECT</name>
              <description>000:Input     001:Output 010:LCD0_D22        011:TS1_D0 100:DMIC_DATA1   101:Reserved 110:Reserved    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG3</name>
          <description>PD_CFG3</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x777</resetValue>
          <resetMask>0x777</resetMask>
          <fields>
            <field>
              <name>PD26_SELECT</name>
              <description>000:Input     001:Output 010:TWI0_SDA   011:TS3_D0 100:UART3_CTS   101:JTAG_DI 110:Reserved    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD25_SELECT</name>
              <description>000:Input     001:Output 010:TWI0_SCK    011:TS3_DVLD 100:UART3_RTS   101:JTAG_DO 110:Reserved    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD24_SELECT</name>
              <description>000:Input     001:Output 010:TWI2_SDA   011:TS3_SYNC 100:UART3_RX   101:JTAG_CK 110:Reserved    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DAT</name>
          <description>PD_DAT</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[26:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV0</name>
          <description>PD_DRV0</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD15_DRV</name>
              <description>PD15 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD14_DRV</name>
              <description>PD14 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD13_DRV</name>
              <description>PD13 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD12_DRV</name>
              <description>PD12 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD11_DRV</name>
              <description>PD11 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD10_DRV</name>
              <description>PD10 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD9_DRV</name>
              <description>PD9 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD8_DRV</name>
              <description>PD8 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD7_DRV</name>
              <description>PD7 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD6_DRV</name>
              <description>PD6 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD5_DRV</name>
              <description>PD5 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD4_DRV</name>
              <description>PD4 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD3_DRV</name>
              <description>PD3 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD2_DRV</name>
              <description>PD2 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD1_DRV</name>
              <description>PD1 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD0_DRV</name>
              <description>PD0 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV1</name>
          <description>PD_DRV1</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x155555</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PD26_DRV</name>
              <description>PD26 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD25_DRV</name>
              <description>PD25 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD24_DRV</name>
              <description>PD24 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD23_DRV</name>
              <description>PD23 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD22_DRV</name>
              <description>PD22 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD21_DRV</name>
              <description>PD21 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD20_DRV</name>
              <description>PD20 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD19_DRV</name>
              <description>PD19 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD18_DRV</name>
              <description>PD18 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD17_DRV</name>
              <description>PD17 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD16_DRV</name>
              <description>PD16 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL0</name>
          <description>PD_PULL0</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD15_PULL</name>
              <description>PD15 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD14_PULL</name>
              <description>PD14 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD13_PULL</name>
              <description>PD13 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD12_PULL</name>
              <description>PD12 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD11_PULL</name>
              <description>PD11 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD10_PULL</name>
              <description>PD10 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD9_PULL</name>
              <description>PD9 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD8_PULL</name>
              <description>PD8 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD7_PULL</name>
              <description>PD7 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD6_PULL</name>
              <description>PD6 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD5_PULL</name>
              <description>PD5 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD4_PULL</name>
              <description>PD4 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD3_PULL</name>
              <description>PD3 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD2_PULL</name>
              <description>PD2 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD1_PULL</name>
              <description>PD1 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD0_PULL</name>
              <description>PD0 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL1</name>
          <description>PD_PULL1</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PD26_PULL</name>
              <description>PD26 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD25_PULL</name>
              <description>PD25 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD24_PULL</name>
              <description>PD24 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD23_PULL</name>
              <description>PD23 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD22_PULL</name>
              <description>PD22 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD21_PULL</name>
              <description>PD21 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD20_PULL</name>
              <description>PD20 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD19_PULL</name>
              <description>PD19 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD18_PULL</name>
              <description>PD18 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD17_PULL</name>
              <description>PD17 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD16_PULL</name>
              <description>PD16 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_CFG0</name>
          <description>PF_CFG0</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x7777777</resetValue>
          <resetMask>0x7777777</resetMask>
          <fields>
            <field>
              <name>PF6_SELECT</name>
              <description>000:Input     001:Output 010:Reserved    011:Reserved 100:Reserved    101:Reserved 110:PF_EINT6    111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF5_SELECT</name>
              <description>000:Input     001:Output 010:SDC0_D2    011:JTAG_CK1 100:Reserved    101:Reserved 110:PF_EINT5    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF4_SELECT</name>
              <description>000:Input     001:Output 010:SDC0_D3    011:UART0_RX 100:Reserved    101:Reserved 110:PF_EINT4    111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF3_SELECT</name>
              <description>000:Input     001:Output 010:SDC0_CMD   011:JTAG_DO1 100:Reserved    101:Reserved 110:PF_EINT3    111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF2_SELECT</name>
              <description>000:Input     001:Output 010:SDC0_CLK       011:UART0_TX 100:Reserved       101:Reserved 110:PF_EINT2       111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF1_SELECT</name>
              <description>000:Input     001:Output 010:SDC0_D0    011:JTAG_DI1 100:Reserved    101:Reserved 110:PF_EINT1    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF0_SELECT</name>
              <description>000:Input     001:Output 010:SDC0_D1    011:JTAG_MS1 100:Reserved    101:Reserved 110:PF_EINT0    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_CFG1</name>
          <description>PF_CFG1</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG2</name>
          <description>PF_CFG2</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG3</name>
          <description>PF_CFG3</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_DAT</name>
          <description>PF_DAT</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>PF_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV0</name>
          <description>PF_DRV0</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x1555</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PF6_DRV</name>
              <description>PF6 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF5_DRV</name>
              <description>PF5 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF4_DRV</name>
              <description>PF4 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF3_DRV</name>
              <description>PF3 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF2_DRV</name>
              <description>PF2 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF1_DRV</name>
              <description>PF1 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF0_DRV</name>
              <description>PF0 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV1</name>
          <description>PF_DRV1</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CFG0</name>
          <description>PF_EINT_CFG0</description>
          <addressOffset>0x2A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT6_CFG</name>
              <description>External INT6 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CFG</name>
              <description>External INT5 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CFG</name>
              <description>External INT4 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CFG</name>
              <description>External INT3 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CFG</name>
              <description>External INT2 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CFG</name>
              <description>External INT1 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CFG</name>
              <description>External INT0 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_EINT_CFG1</name>
          <description>PF_EINT_CFG1</description>
          <addressOffset>0x2A4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CFG2</name>
          <description>PF_EINT_CFG2</description>
          <addressOffset>0x2A8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CFG3</name>
          <description>PF_EINT_CFG3</description>
          <addressOffset>0x2AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CTL</name>
          <description>PF_EINT_CTL</description>
          <addressOffset>0x2B0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>EINT6_CTL</name>
              <description>External INT6 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CTL</name>
              <description>External INT5 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CTL</name>
              <description>External INT4 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CTL</name>
              <description>External INT3 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CTL</name>
              <description>External INT2 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CTL</name>
              <description>External INT1 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CTL</name>
              <description>External INT0 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_EINT_DEB</name>
          <description>PF_EINT_DEB</description>
          <addressOffset>0x2B8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_EINT_STATUS</name>
          <description>PF_EINT_STATUS</description>
          <addressOffset>0x2B4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>EINT6_STATUS</name>
              <description>External INT6 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_STATUS</name>
              <description>External INT5 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_STATUS</name>
              <description>External INT4 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_STATUS</name>
              <description>External INT3 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_STATUS</name>
              <description>External INT2 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_STATUS</name>
              <description>External INT1 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_STATUS</name>
              <description>External INT0 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_PULL0</name>
          <description>PF_PULL0</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PF6_PULL</name>
              <description>PF6 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF5_PULL</name>
              <description>PF5 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF4_PULL</name>
              <description>PF4 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF3_PULL</name>
              <description>PF3 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF2_PULL</name>
              <description>PF2 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF1_PULL</name>
              <description>PF1 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF0_PULL</name>
              <description>PF0 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_PULL1</name>
          <description>PF_PULL1</description>
          <addressOffset>0xD4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG0</name>
          <description>PG_CFG0</description>
          <addressOffset>0xD8</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PG7_SELECT</name>
              <description>000:Input     001:Output 010:UART1_RX   011:Reserved 100:Reserved    101:Reserved 110:PG_EINT7    111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG6_SELECT</name>
              <description>000:Input     001:Output 010:UART1_TX   011:Reserved 100:Reserved    101:Reserved 110:PG_EINT6    111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG5_SELECT</name>
              <description>000:Input     001:Output 010:SDC1_D3    011:Reserved 100:Reserved    101:Reserved 110:PG_EINT5    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG4_SELECT</name>
              <description>000:Input     001:Output 010:SDC1_D2    011:Reserved 100:Reserved    101:Reserved 110:PG_EINT4    111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG3_SELECT</name>
              <description>000:Input     001:Output 010:SDC1_D1    011:Reserved 100:Reserved    101:Reserved 110:PG_EINT3       111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG2_SELECT</name>
              <description>000:Input     001:Output 010:SDC1_D0    011:Reserved 100:Reserved    101:Reserved 110:PG_EINT2    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG1_SELECT</name>
              <description>000:Input     001:Output 010:SDC1_CMD   011:Reserved 100:Reserved    101:Reserved 110:PG_EINT1    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG0_SELECT</name>
              <description>000:Input     001:Output 010:SDC1_CLK    011:Reserved 100:Reserved    101:Reserved 110:PG_EINT0    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG1</name>
          <description>PG_CFG1</description>
          <addressOffset>0xDC</addressOffset>
          <resetValue>0x7777777</resetValue>
          <resetMask>0x7777777</resetMask>
          <fields>
            <field>
              <name>PG14_SELECT</name>
              <description>000:Input     001:Output 010:PCM2_MCLK   011:H_PCM2_MCLK 100:SIM0_DET       101:Reserved 110:PG_EINT14   111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG13_SELECT</name>
              <description>000:Input     001:Output 010:PCM2_DIN   011:H_PCM2_DIN 100:SIM0_RST       101:Reserved 110:PG_EINT13   111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG12_SELECT</name>
              <description>000:Input     001:Output 010:PCM2_DOUT   011:H_PCM2_DOUT 100:SIM0_DATA   101:Reserved 110:PG_EINT12   111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG11_SELECT</name>
              <description>000:Input     001:Output 010:PCM2_CLK   011:H_PCM2_CLK 100:SIM0_CLK       101:Reserved 110:PG_EINT11   111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG10_SELECT</name>
              <description>000:Input     001:Output 010:PCM2_SYNC   011:H_PCM2_SYNC 100:SIM0_PWREN   101:Reserved 110:PG_EINT10   111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG9_SELECT</name>
              <description>000:Input     001:Output 010:UART1_CTS   011:Reserved 100:SIM0_VPPPP   101:Reserved 110:PG_EINT9    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG8_SELECT</name>
              <description>000:Input     001:Output 010:UART1_RTS   011:Reserved 100:SIM0_VPPEN   101:Reserved 110:PG_EINT8    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG2</name>
          <description>PG_CFG2</description>
          <addressOffset>0xE0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG3</name>
          <description>PG_CFG3</description>
          <addressOffset>0xE4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_DAT</name>
          <description>PG_DAT</description>
          <addressOffset>0xE8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>PG_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV0</name>
          <description>PG_DRV0</description>
          <addressOffset>0xEC</addressOffset>
          <resetValue>0x15555555</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>PG14_DRV</name>
              <description>PG14 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG13_DRV</name>
              <description>PG13 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG12_DRV</name>
              <description>PG12 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG11_DRV</name>
              <description>PG11 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG10_DRV</name>
              <description>PG10 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG9_DRV</name>
              <description>PG9 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG8_DRV</name>
              <description>PG8 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG7_DRV</name>
              <description>PG7 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG6_DRV</name>
              <description>PG6 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG5_DRV</name>
              <description>PG5 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG4_DRV</name>
              <description>PG4 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG3_DRV</name>
              <description>PG3 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG2_DRV</name>
              <description>PG2 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG1_DRV</name>
              <description>PG1 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG0_DRV</name>
              <description>PG0 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV1</name>
          <description>PG_DRV1</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CFG0</name>
          <description>PG_EINT_CFG0</description>
          <addressOffset>0x2C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT7_CFG</name>
              <description>External INT7 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_CFG</name>
              <description>External INT6 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CFG</name>
              <description>External INT5 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CFG</name>
              <description>External INT4 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CFG</name>
              <description>External INT3 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CFG</name>
              <description>External INT2 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CFG</name>
              <description>External INT1 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CFG</name>
              <description>External INT0 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_CFG1</name>
          <description>PG_EINT_CFG1</description>
          <addressOffset>0x2C4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT14_CFG</name>
              <description>External INT14 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT13_CFG</name>
              <description>External INT13 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT12_CFG</name>
              <description>External INT12 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT11_CFG</name>
              <description>External INT11 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT10_CFG</name>
              <description>External INT10 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_CFG</name>
              <description>External INT9 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_CFG</name>
              <description>External INT8 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_CFG2</name>
          <description>PG_EINT_CFG2</description>
          <addressOffset>0x2C8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CFG3</name>
          <description>PG_EINT_CFG3</description>
          <addressOffset>0x2CC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CTL</name>
          <description>PG_EINT_CTL</description>
          <addressOffset>0x2D0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>EINT14_CTL</name>
              <description>External INT14 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT13_CTL</name>
              <description>External INT13 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT12_CTL</name>
              <description>External INT12 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT11_CTL</name>
              <description>External INT11 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT10_CTL</name>
              <description>External INT10 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_CTL</name>
              <description>External INT9 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_CTL</name>
              <description>External INT8 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT7_CTL</name>
              <description>External INT7 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_CTL</name>
              <description>External INT6 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CTL</name>
              <description>External INT5 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CTL</name>
              <description>External INT4 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CTL</name>
              <description>External INT3 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CTL</name>
              <description>External INT2 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CTL</name>
              <description>External INT1 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CTL</name>
              <description>External INT0 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_DEB</name>
          <description>PG_EINT_DEB</description>
          <addressOffset>0x2D8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_STATUS</name>
          <description>PG_EINT_STATUS</description>
          <addressOffset>0x2D4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>EINT14_STATUS</name>
              <description>External INT14 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT13_STATUS</name>
              <description>External INT13 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT12_STATUS</name>
              <description>External INT12 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT11_STATUS</name>
              <description>External INT11 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT10_STATUS</name>
              <description>External INT10 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_STATUS</name>
              <description>External INT9 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_STATUS</name>
              <description>External INT8 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT7_STATUS</name>
              <description>External INT7 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_STATUS</name>
              <description>External INT6 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_STATUS</name>
              <description>External INT5 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_STATUS</name>
              <description>External INT4 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_STATUS</name>
              <description>External INT3 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_STATUS</name>
              <description>External INT2 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_STATUS</name>
              <description>External INT1 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_STATUS</name>
              <description>External INT0 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_PULL0</name>
          <description>PG_PULL0</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>PG14_PULL</name>
              <description>PG14 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG13_PULL</name>
              <description>PG13 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG12_PULL</name>
              <description>PG12 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG11_PULL</name>
              <description>PG11 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG10_PULL</name>
              <description>PG10 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG9_PULL</name>
              <description>PG9 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG8_PULL</name>
              <description>PG8 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG7_PULL</name>
              <description>PG7 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG6_PULL</name>
              <description>PG6 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG5_PULL</name>
              <description>PG5 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG4_PULL</name>
              <description>PG4 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG3_PULL</name>
              <description>PG3 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG2_PULL</name>
              <description>PG2 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG1_PULL</name>
              <description>PG1 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG0_PULL</name>
              <description>PG0 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_PULL1</name>
          <description>PG_PULL1</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_CFG0</name>
          <description>PH_CFG0</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PH7_SELECT</name>
              <description>000:Input    001:Output 010:Reserved    011:OWA_OUT 100:Reserved    101:Reserved 110:PH_EINT7    111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH6_SELECT</name>
              <description>000:Input   001:Output 010:SPI1_MISO   011:OWA_IN 100:TWI1_SDA  101:SIM1_DET 110:PH_EINT6  111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH5_SELECT</name>
              <description>000:Input     001:Output 010:SPI1_MOSI   011:OWA_MCLK 100:TWI1_SCK    101:SIM1_RST 110:PH_EINT5    111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH4_SELECT</name>
              <description>000:Input                001:Output 010:SPI1_CLK             011:PCM0_MCLK 100:H_PCM0_MCLK       101:SIM1_DATA 110:PH_EINT4            111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH3_SELECT</name>
              <description>000:Input     001:Output 010:SPI1_CS    011:PCM0_DIN 100:H_PCM0_DIN       101:SIM1_CLK 110:PH_EINT3    111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH2_SELECT</name>
              <description>000:Input     001:Output 010:CIR_TX    011:PCM0_DOUT 100:H_PCM0_DOUT  101:SIM1_PWREN 110:PH_EINT2    111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH1_SELECT</name>
              <description>000:Input     001:Output 010:UART0_RX   011:PCM0_CLK 100:H_PCM0_CLK   101:SIM1_VPPPP 110:PH_EINT1    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH0_SELECT</name>
              <description>000:Input     001:Output 010:UART0_TX   011:PCM0_SYNC 100:H_PCM0_SYNC   101:SIM1_VPPEN 110:PH_EINT0    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_CFG1</name>
          <description>PH_CFG1</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x777</resetValue>
          <resetMask>0x777</resetMask>
          <fields>
            <field>
              <name>PH10_SELECT</name>
              <description>000:Input     001:Output 010:HCEC     011:Reserved 100:Reserved    101:Reserved 110:PH_EINT10   111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH9_SELECT</name>
              <description>000:Input     001:Output 010:HSDA    011:Reserved 100:Reserved    101:Reserved 110:PH_EINT9    111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH8_SELECT</name>
              <description>000:Input     001:Output 010:HSCL     011:Reserved 100:Reserved    101:Reserved 110:PH_EINT8    111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_CFG2</name>
          <description>PH_CFG2</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_CFG3</name>
          <description>PH_CFG3</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_DAT</name>
          <description>PH_DAT</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PH_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_DRV0</name>
          <description>PH_DRV0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x155555</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PH10_DRV</name>
              <description>PH10 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH9_DRV</name>
              <description>PH9 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH8_DRV</name>
              <description>PH8 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH7_DRV</name>
              <description>PH7 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH6_DRV</name>
              <description>PH6 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH5_DRV</name>
              <description>PH5 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH4_DRV</name>
              <description>PH4 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH3_DRV</name>
              <description>PH3 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH2_DRV</name>
              <description>PH2 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH1_DRV</name>
              <description>PH1 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH0_DRV</name>
              <description>PH0 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_DRV1</name>
          <description>PH_DRV1</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_EINT_CFG0</name>
          <description>PH_EINT_CFG0</description>
          <addressOffset>0x2E0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT7_CFG</name>
              <description>External INT7 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_CFG</name>
              <description>External INT6 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CFG</name>
              <description>External INT5 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CFG</name>
              <description>External INT4 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CFG</name>
              <description>External INT3 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CFG</name>
              <description>External INT2 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CFG</name>
              <description>External INT1 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CFG</name>
              <description>External INT0 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_CFG1</name>
          <description>PH_EINT_CFG1</description>
          <addressOffset>0x2E4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EINT10_CFG</name>
              <description>External INT10 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_CFG</name>
              <description>External INT9 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_CFG</name>
              <description>External INT8 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_CFG2</name>
          <description>PH_EINT_CFG2</description>
          <addressOffset>0x2E8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_EINT_CFG3</name>
          <description>PH_EINT_CFG3</description>
          <addressOffset>0x2EC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_EINT_CTL</name>
          <description>PH_EINT_CTL</description>
          <addressOffset>0x2F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>EINT10_CTL</name>
              <description>External INT10 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_CTL</name>
              <description>External INT9 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_CTL</name>
              <description>External INT8 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT7_CTL</name>
              <description>External INT7 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_CTL</name>
              <description>External INT6 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CTL</name>
              <description>External INT5 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CTL</name>
              <description>External INT4 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CTL</name>
              <description>External INT3 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CTL</name>
              <description>External INT2 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CTL</name>
              <description>External INT1 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CTL</name>
              <description>External INT0 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_DEB</name>
          <description>PH_EINT_DEB</description>
          <addressOffset>0x2F8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_STATUS</name>
          <description>PH_EINT_STATUS</description>
          <addressOffset>0x2F4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>EINT10_STATUS</name>
              <description>External INT10 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_STATUS</name>
              <description>External INT9 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_STATUS</name>
              <description>External INT8 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT7_STATUS</name>
              <description>External INT7 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_STATUS</name>
              <description>External INT6 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_STATUS</name>
              <description>External INT5 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_STATUS</name>
              <description>External INT4 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_STATUS</name>
              <description>External INT3 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_STATUS</name>
              <description>External INT2 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_STATUS</name>
              <description>External INT1 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_STATUS</name>
              <description>External INT0 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_PULL0</name>
          <description>PH_PULL0</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PH10_PULL</name>
              <description>PH10 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH9_PULL</name>
              <description>PH9 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH8_PULL</name>
              <description>PH8 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH7_PULL</name>
              <description>PH7 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH6_PULL</name>
              <description>PH6 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH5_PULL</name>
              <description>PH5 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH4_PULL</name>
              <description>PH4 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH3_PULL</name>
              <description>PH3 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH2_PULL</name>
              <description>PH2 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH1_PULL</name>
              <description>PH1 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH0_PULL</name>
              <description>PH0 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_PULL1</name>
          <description>PH_PULL1</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PIO_X_POW_MOD_SEL</name>
          <description>PIO_X_POW_MOD_SEL</description>
          <addressOffset>0x340</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1004C</resetMask>
          <fields>
            <field>
              <name>VCC_IO</name>
              <description>POWER MODE Select 
0: 3.3V 
1: 1.8V </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_8V</name>
                  <description>1.8V</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH_POWER</name>
              <description>MODE Select invalid </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_POWER</name>
              <description>MODE Select 
0: 3.3V 
1: 1.8V If PG_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_8V</name>
                  <description>1.8V If PG_Port Power Source selects VCC-IO,this bit is invalid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD_POWER</name>
              <description>MODE Select 
0: 3.3V 
1: 1.8V If PD_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_8V</name>
                  <description>1.8V If PD_Port Power Source selects VCC-IO,this bit is invalid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC_POWER</name>
              <description>MODE Select 
0: 3.3V 
1: 1.8V If PC_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_8V</name>
                  <description>1.8V If PC_Port Power Source selects VCC-IO,this bit is invalid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_X_POW_Val</name>
          <description>PIO_X_POW_Val</description>
          <addressOffset>0x348</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>VCC_IO</name>
              <description>Power Value  </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PG_PORT</name>
              <description>Power Value If PG_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PD_PORT</name>
              <description>Power Value If PD_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PC_PORT</name>
              <description>Power Value If PC_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PA_PORT</name>
              <description>Power Value invalid </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PIO</name>
      <description>PIO</description>
      <groupName>generic</groupName>
      <baseAddress>0x7022000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PIO_S_POW_MOD_SEL</name>
          <description>PIO_S_POW_MOD_SEL</description>
          <addressOffset>0x340</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10003</resetMask>
          <fields>
            <field>
              <name>VCC_IO</name>
              <description>POWER MODE Select 
0: 3.3V 
1: 1.8V </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_8V</name>
                  <description>1.8V</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM_POWER</name>
              <description>MODE Select 
0: 3.3V 
1: 1.8V If PM_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_8V</name>
                  <description>1.8V If PM_Port Power Source selects VCC-IO,this bit is invalid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL_POWER</name>
              <description>MODE Select 
0: 3.3V 
1: 1.8V If PL_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_point_3V</name>
                  <description>3.3V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_8V</name>
                  <description>1.8V If PL_Port Power Source selects VCC-IO,this bit is invalid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_S_POW_Val</name>
          <description>PIO_S_POW_Val</description>
          <addressOffset>0x348</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>VCC_IO</name>
              <description>Power Value </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PM_PORT</name>
              <description>Power Value If PM_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PL_PORT</name>
              <description>Power Value If PL_Port Power Source selects VCC-IO,this bit is invalid </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_CFG0</name>
          <description>PL_CFG0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PL7_SELECT</name>
              <description>000:Input     001:Output 010:S_JTAG_DI   011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT7   111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL6_SELECT</name>
              <description>000:Input     001:Output 010:S_JTAG_DO   011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT6   111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL5_SELECT</name>
              <description>000:Input     001:Output 010:S_JTAG_CK   011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT5   111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL4_SELECT</name>
              <description>000:Input     001:Output 010:S_JTAG_MS   011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT4   111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL3_SELECT</name>
              <description>000:Input     001:Output 010:S_UART_RX   011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT3   111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL2_SELECT</name>
              <description>000:Input     001:Output 010:S_UART_TX   011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT2   111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL1_SELECT</name>
              <description>000:Input     001:Output 010:Reserved      011:S_TWI_SDA 100:Reserved    101:Reserved 110:S_PL_EINT1   111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL0_SELECT</name>
              <description>000:Input     001:Output 010:Reserved       011:S_TWI_SCK 100:Reserved    101:Reserved 110:S_PL_EINT0   111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_CFG1</name>
          <description>PL_CFG1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x777</resetValue>
          <resetMask>0x777</resetMask>
          <fields>
            <field>
              <name>PL10_SELECT</name>
              <description>000:Input     001:Output 010:S_OWC    011:S_PWM1 100:Reserved    101:Reserved 110:S_PL_EINT10   111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL9_SELECT</name>
              <description>000:Input     001:Output 010:S_CIR_RX    011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT9   111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL8_SELECT</name>
              <description>000:Input     001:Output 010:S_PWM0    011:Reserved 100:Reserved    101:Reserved 110:S_PL_EINT8   111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_CFG2</name>
          <description>PL_CFG2</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_CFG3</name>
          <description>PL_CFG3</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_DAT</name>
          <description>PL_DAT</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>PL_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_DRV0</name>
          <description>PL_DRV0</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x155555</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PL10_DRV</name>
              <description>PL10 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL9_DRV</name>
              <description>PL9 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL8_DRV</name>
              <description>PL8 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL7_DRV</name>
              <description>PL7 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL6_DRV</name>
              <description>PL6 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL5_DRV</name>
              <description>PL5 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL4_DRV</name>
              <description>PL4 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL3_DRV</name>
              <description>PL3 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL2_DRV</name>
              <description>PL2 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL1_DRV</name>
              <description>PL1 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL0_DRV</name>
              <description>PL0 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_DRV1</name>
          <description>PL_DRV1</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CFG0</name>
          <description>PL_EINT_CFG0</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT7_CFG</name>
              <description>External INT7 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_CFG</name>
              <description>External INT6 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CFG</name>
              <description>External INT5 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CFG</name>
              <description>External INT4 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CFG</name>
              <description>External INT3 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CFG</name>
              <description>External INT2 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CFG</name>
              <description>External INT1 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CFG</name>
              <description>External INT0 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_CFG1</name>
          <description>PL_EINT_CFG1</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EINT10_CFG</name>
              <description>External INT10 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_CFG</name>
              <description>External INT9 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_CFG</name>
              <description>External INT8 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_CFG2</name>
          <description>PL_EINT_CFG2</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CFG3</name>
          <description>PL_EINT_CFG3</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CTL</name>
          <description>PL_EINT_CTL</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>EINT10_CTL</name>
              <description>External INT10 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_CTL</name>
              <description>External INT9 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_CTL</name>
              <description>External INT8 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT7_CTL</name>
              <description>External INT7 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_CTL</name>
              <description>External INT6 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_CTL</name>
              <description>External INT5 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_CTL</name>
              <description>External INT4 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CTL</name>
              <description>External INT3 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CTL</name>
              <description>External INT2 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CTL</name>
              <description>External INT1 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CTL</name>
              <description>External INT0 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_DEB</name>
          <description>PL_EINT_DEB</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_STATUS</name>
          <description>PL_EINT_STATUS</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>EINT10_STATUS</name>
              <description>External INT10 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT9_STATUS</name>
              <description>External INT9 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT8_STATUS</name>
              <description>External INT8 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT7_STATUS</name>
              <description>External INT7 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT6_STATUS</name>
              <description>External INT6 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT5_STATUS</name>
              <description>External INT5 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT4_STATUS</name>
              <description>External INT4 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_STATUS</name>
              <description>External INT3 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_STATUS</name>
              <description>External INT2 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_STATUS</name>
              <description>External INT1 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_STATUS</name>
              <description>External INT0 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_PULL0</name>
          <description>PL_PULL0</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PL10_PULL</name>
              <description>PL10 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL9_PULL</name>
              <description>PL9 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL8_PULL</name>
              <description>PL8 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL7_PULL</name>
              <description>PL7 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL6_PULL</name>
              <description>PL6 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL5_PULL</name>
              <description>PL5 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL4_PULL</name>
              <description>PL4 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL3_PULL</name>
              <description>PL3 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL2_PULL</name>
              <description>PL2 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL1_PULL</name>
              <description>PL1 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL0_PULL</name>
              <description>PL0 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_PULL1</name>
          <description>PL_PULL1</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_CFG0</name>
          <description>PM_CFG0</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x77777</resetValue>
          <resetMask>0x77777</resetMask>
          <fields>
            <field>
              <name>PM4_SELECT</name>
              <description>000:Input     001:Output 010:Reserved    011:Reserved 100:Reserved    101:Reserved 110:S_PM_EINT4   111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PM3_SELECT</name>
              <description>000:Input     001:Output 010:Reserved    011:Reserved 100:Reserved    101:Reserved 110:S_PM_EINT3   111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PM2_SELECT</name>
              <description>000:Input     001:Output 010:Reserved    011:Reserved 100:Reserved    101:Reserved 110:S_PM_EINT2   111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PM1_SELECT</name>
              <description>000:Input     001:Output 010:Reserved    011:Reserved 100:Reserved    101:Reserved 110:S_PM_EINT1   111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PM0_SELECT</name>
              <description>000:Input     001:Output 010:Reserved    011:Reserved 100:Reserved    101:Reserved 110:S_PM_EINT0   111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_CFG1</name>
          <description>PM_CFG1</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_CFG2</name>
          <description>PM_CFG2</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_CFG3</name>
          <description>PM_CFG3</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_DAT</name>
          <description>PM_DAT</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>PM_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_DRV0</name>
          <description>PM_DRV0</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x155</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>PM4_DRV</name>
              <description>PM4 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM3_DRV</name>
              <description>PM3 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM2_DRV</name>
              <description>PM2 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM1_DRV</name>
              <description>PM1 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM0_DRV</name>
              <description>PM0 Multi-Driving Select  
00: Level 0    
01: Level 1 
10: Level 2    
11: Level 3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_0</name>
                  <description>Level 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_DRV1</name>
          <description>PM_DRV1</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_EINT_CFG0</name>
          <description>PM_EINT_CFG0</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT4_CFG</name>
              <description>External INT4 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CFG</name>
              <description>External INT3 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CFG</name>
              <description>External INT2 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CFG</name>
              <description>External INT1 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CFG</name>
              <description>External INT0 Mode 
0000: Positive Edge 
0001: Negative Edge 
0010: High Level 
0011: Low Level 
0100: Double Edge (Positive/ Negative) Others: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive_Edge</name>
                  <description>Positive Edge</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_Edge</name>
                  <description>Negative Edge</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Double_Edge</name>
                  <description>Double Edge (Positive/ Negative) Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_EINT_CFG1</name>
          <description>PM_EINT_CFG1</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_EINT_CFG2</name>
          <description>PM_EINT_CFG2</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_EINT_CFG3</name>
          <description>PM_EINT_CFG3</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PM_EINT_CTL</name>
          <description>PM_EINT_CTL</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>EINT4_CTL</name>
              <description>External INT4 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_CTL</name>
              <description>External INT3 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_CTL</name>
              <description>External INT2 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_CTL</name>
              <description>External INT1 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_CTL</name>
              <description>External INT0 Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_EINT_DEB</name>
          <description>PM_EINT_DEB</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_EINT_STATUS</name>
          <description>PM_EINT_STATUS</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>EINT4_STATUS</name>
              <description>External INT4 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT3_STATUS</name>
              <description>External INT3 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT2_STATUS</name>
              <description>External INT2 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT1_STATUS</name>
              <description>External INT1 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EINT0_STATUS</name>
              <description>External INT0 Pending Bit  
0: No IRQ pending 
1: IRQ pending Write `1` to clear </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_pending</name>
                  <description>IRQ pending Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_PULL0</name>
          <description>PM_PULL0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>PM4_PULL</name>
              <description>PM4 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM3_PULL</name>
              <description>PM3 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM2_PULL</name>
              <description>PM2 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM1_PULL</name>
              <description>PM1 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PM0_PULL</name>
              <description>PM0 Pull-up/down Select  
00: Pull-up/down disable 
01: Pull-up 
10: Pull-down    
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pull_minus_up_slash_down_disable</name>
                  <description>Pull-up/down disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_up</name>
                  <description>Pull-up</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pull_minus_down</name>
                  <description>Pull-down</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PM_PULL1</name>
          <description>PM_PULL1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PWM</name>
      <description>PWM</description>
      <groupName>generic</groupName>
      <baseAddress>0x300A000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PWM_CH0_PERIOD</name>
          <description>PWM Channel 0 Period Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>PWM_CH0_ENTIRE_CYS</name>
              <description>Number of the entire cycles in the PWM clock. 0 : 1 cycle 
1: 2 cycles ... N: N+1 cycles If the register need to be modified dynamically, the PCLK should be faster than the PWM CLK(PWM CLK = 24MHz/pre-scale). </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_CH0_ENTIRE_ACT_CYS</name>
              <description>Number of the active cycles in the PWM clock. 
0: 0 cycle 
1: 1 cycles ... N : N cycles </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_CTRL_REG</name>
          <description>PWM Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>PWM0_BYPASS</name>
              <description>PWM channel 0 bypass enable. If the bit is set to 1, PWM0`s output is OSC24MHz. 
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_PUL_START</name>
              <description>PWM channel 0 pulse output start. 
0: No effect  
1: Output 1 pulse. The pulse width should be according to the period 0 register[15:0],and the pulse state should be according to the active state. After the pulse is finished,the bit will be cleared automatically. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output 1 pulse. The pulse width should be according to the period 0 register[15:0],and the pulse state should be according to the active state. After the pulse is finished,the bit will be cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CHANNEL0_MODE</name>
              <description>0: Cycle mode 
1: Pulse mode </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cycle_mode</name>
                  <description>Cycle mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pulse_mode</name>
                  <description>Pulse mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_CH0_GATING</name>
              <description>Gating the Special Clock for PWM0 
0: Mask  
1: Pass </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_ACT_STA</name>
              <description>PWM channel 0 active state. 
0: Low Level 
1: High Level </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_Level</name>
                  <description>High Level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_EN</name>
              <description>PWM channel 0 enable. 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_PRESCAL</name>
              <description>PWM channel 0 prescalar. These bits should be setting before the PWM channel 0 clock gate on. 
0000: /120 
0001: /180 
0010: /240 
0011: /360 
0100: /480 
0101: / 
0110: / 
0111: / 
1000: /12k 
1001: /24k 
1010: /36k 
1011: /48k 
1100: /72k 
1101: / 
1110: / 
1111: /1 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_120</name>
                  <description>/120</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_180</name>
                  <description>/180</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_240</name>
                  <description>/240</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_360</name>
                  <description>/360</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_480</name>
                  <description>/480</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_12k</name>
                  <description>/12k</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_24k</name>
                  <description>/24k</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_36k</name>
                  <description>/36k</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_48k</name>
                  <description>/48k</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_72k</name>
                  <description>/72k</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SCR0</name>
      <description>SCR0</description>
      <groupName>generic</groupName>
      <baseAddress>0x5005000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SCR_CLKDIV</name>
          <description>SCR_CLKDIV</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BAUDDIV</name>
              <description>Baud Clock Divisor. This 16-bit register defines the divisor value used to generate the Baud Clock impulses from the system clock.  </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCCDIV</name>
              <description>Smart Card Clock Divisor. This 16-bit register defines the divisor value used to generate the Smart Card Clock from the system clock.   is the frequency of Smart Card Clock Signal.  is the frequency of APB Clock. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CSR</name>
          <description>Smart Card Reader Control and Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81FF0F07</resetMask>
          <fields>
            <field>
              <name>SCDET</name>
              <description>Smart Card Detected This bit is set to `1` when the scdetect input is active at least for a debounce time. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCDETPOL</name>
              <description>Smart Card Detect Polarity This bit set polarity of scdetect signal. 
0: Low Active 
1: High Active </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low Active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROTOCOL</name>
              <description>Protocol Selection (PTLSEL)  
00: T=0. 
01: T=1, no character repeating and no guard time is used when T=1 protocol is selected. 
10: Reserved 
11: Reserved  </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>T_equals_0</name>
                  <description>T=0.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>T_equals_1</name>
                  <description>T=1, no character repeating and no guard time is used when T=1 protocol is selected.</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ATRSTFLUSH</name>
              <description>ATR Start Flush FIFO When enabled, both FIFOs are flushed before the ATR is started. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSRXE</name>
              <description>TS Receive Enable When set to `1`, the TS character (the first ATR character) will be store in RXFIFO during card session. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTPPOL</name>
              <description>Clock Stop Polarity The value of the scclk output during the clock stop state. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PECRXE</name>
              <description>Parity Error Character Receive Enable Enables storage of the characters received with wrong parity in RX FIFO. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSBF</name>
              <description>MSB First When high, inverse bit ordering convention (msb to lsb) is used. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATAPOL</name>
              <description>Data Plorarity When high, inverse level convention is used (A=`1`, Z=`0`). </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEACT_DEACTIVATION</name>
              <description>Setting of this bit initializes the deactivation sequence. When the deactivation is finished, the DEACT bit is automatically cleared. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation. Setting of this bit initializes the activation sequence. When the activation is finished, the ACT bit is automatically cleared. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WARMRST</name>
              <description>Warm Reset Command. Writing `1` to this bit initializes Warm Reset of the Smart Card. This bit is always read as `0`. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOP</name>
              <description>Clock Stop. When this bit is asserted and the smart card I/O line is in `Z` state, the SCR core stops driving of the smart card clock signal after the CLKSTOPDELAY time expires. The smart card clock is restarted immediately after the CLKSTOP signal is deasserted. New character transmission can be started after CLKSTARTDELAY time. The expiration of both times is signaled by the CLKSTOPRUN bit in the interrupt registers. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GINTEN</name>
              <description>Global Interrupt Enable. When high, IRQ output assertion is enabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiving Enable. When enabled the characters sent by the Smart Card are received by the UART and stored in RX FIFO. Receiving is internally disabled while a transmission is in progress. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmission Enable. When enabled the characters are read from TX FIFO and transmitted through UART to the Smart Card. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CTIM</name>
          <description>Smart Card Reader Character Time Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF00FF</resetMask>
          <fields>
            <field>
              <name>CHARLIMIT</name>
              <description>Character Limit. This 16-bit register sets the maximum time between the leading edges of two consecutive characters. The value is ETUs. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GUARDTIME</name>
              <description>Character Guard time. This 8-bit register sets a delay at the end of each character transmitted from the Smart Card Reader to the Smart Card. The value is in ETUs. The parity error is besides signaled during the guard time.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_DT</name>
          <description>Smart Card Reader Debounce Time Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x3FF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SCR_DEBOUNCE_TIME</name>
              <description>Set the debounce time value for card insert detecting.The time uint is the cycle of SCCLK. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FCSR</name>
          <description>Smart Card Reader FIFO Control and Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x101</resetValue>
          <resetMask>0x707</resetMask>
          <fields>
            <field>
              <name>RXFIFOFLUSH</name>
              <description>Flush RX FIFO. RX FIFO is flushed, when `1` is written to this bit. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFOEMPTY</name>
              <description>RX FIFO Empty. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOFLUSH</name>
              <description>Flush TX FIFO. TX FIFO is flushed, when `1` is written to this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOFULL</name>
              <description>TX FIFO Full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFO</name>
          <description>Smart Card Reader RX and TX FIFO Access Point</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFO_DATA</name>
              <description>This 8-bit register provides access to the RX and TX FIFO buffers. The TX FIFO is accessed during the APB write transfer. The RX FIFO is accessed during the APB read transfer.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFOCNT</name>
          <description>SCR_FIFOCNT</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFTH</name>
              <description>RX FIFO Threshold These bits set the interrupt threshold of RX FIFO. The interrupt is asserted when the number of bytes it receives is equal to, or exceeds the threshold. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTH</name>
              <description>TX FIFO Threshold These bits set the interrupt threshold of TX FIFO. The interrupt is asserted when the number of bytes in TX FIFO is equal to or less than the threshold. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFCNT</name>
              <description>RX FIFO Counter These bits provide the number of bytes stored in the RXFIFO. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFCNT</name>
              <description>TX FIFO Counter These bits provide the number of bytes stored in the TXFIFO. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FSM</name>
          <description>Smart Card Reader FSM Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATR_STRUCTURE_FSM</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ATR_FSM</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACT_FSM</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCR_FSM</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTEN</name>
          <description>Smart Card Reader Interrupt Enable Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt Enable. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt Enable. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt Enable. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt Enable. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt Enable. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt Enable. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt Enable. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt Enable. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt Enable. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt Enable. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt Enable. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt Enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt Enable. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt Enable. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt Enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt Enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTST</name>
          <description>Smart Card Reader Interrupt Status Register 1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt. When enabled, this interrupt is asserted after the Smart Card deactivation sequence is complete. Write `1` to clear. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt. When enabled, this interrupt is asserted after the Smart Card activation sequence is complete. Write `1` to clear. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt. When enabled, this interrupt is asserted after the smart card insertion. Write `1` to clear. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt. When enabled, this interrupt is asserted after the smart card removal. Write `1` to clear. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt. When enabled, this interrupt is asserted after the ATR sequence is successfully completed. Write `1` to clear. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt. When enabled, this interrupt is asserted if the ATR sequence fails. Write `1` to clear. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt. When enabled, this interrupt is asserted if the time between two consecutive characters, transmitted between the Smart Card and the Reader in both directions, is equal the Two Characters Delay Limit described below. The C2CFULL interrupt is internally enabled from the ATR start to the deactivation or ATR restart initialization. It is recommended to use this counter to detect unresponsive Smart Cards. Write `1` to clear. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt. When enabled, this interrupt is asserted in two cases: 1. When the smart card clock is stopped. 2. When the new character can be started after the clock restart. To distinguish between the two interrupt cases, we recommend reading the CLKSTOP bit in SCR_CTRL1 register.  Write `1` to clear. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt. When enabled, this interrupt is asserted after the character with wrong parity was received when the number of repeated receptions exceeds RXREPEAT value or T=1 protocol is used. Write `1` to clear. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt. When enabled, this interrupt is asserted after a character was received from the Smart Card. Write `1` to clear. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt. When enabled, this interrupt is asserted if the number of bytes in RX FIFO is equal or exceeds the RX FIFO threshold. Write `1` to clear. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt. When enabled, this interrupt is asserted if the RX FIFO is filled up. Write `1` to clear. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt. When enabled, this interrupt is asserted if the Smart Card signals wrong character parity during the guard time after the character transmission was repeated TXREPEAT times or T=1 protocol is used.  Write `1` to clear. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt. When enabled, this interrupt is asserted after one character was transmitted to the smart card. Write `1` to clear. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt. When enabled, this interrupt is asserted if the number of bytes in TX FIFO is equal or less than the TX FIFO threshold. Write `1` to clear. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt. When enabled, this interrupt is asserted if the TX FIFO is emptied out. Write `1` to clear. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt. When enabled, this interrupt is asserted after all bytes from TX FIFO ware transferred to the Smart Card. Write `1` to clear. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_LTIM</name>
          <description>Smart Card Reader Line Time Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATR</name>
              <description>ATR Start Limit. This 16-bit register defines the maximum time between the rising edge of the  signal and the start of ATR response.  ATR Start Limit = 128* ATR* . </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RST</name>
              <description>Reset Duration. This 16-bit register sets the duration of the Smart Card reset sequence. This value is same for the cold and warm reset.  Cold/Warm Reset Duration = 128* RST* . </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation/Deactivation Time. This 16-bit register sets the duration of each part of the activation and deactivation sequence.  Activation/Deactivation Duration = 128* ACT * .  is the Smart Card Clock Cycle. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_PAD</name>
          <description>SCR_PAD</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DSCVPPPP</name>
              <description>Direct Smart Card Vpp Pause/Prog. It provides direct access to SCVPPPP output. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVPPEN</name>
              <description>Direct Smart Card Vpp Enable. It provides direct access to SCVPPEN output. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOADEAVPP</name>
              <description>Automatic Vpp Handling. When high, it enables automatic handling of DSVPPEN and DSVPPPP signals during activation and deactivation sequence. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVCC</name>
              <description>Direct Smart Card VCC. When DIRACCPADS=`1`, the DSCVCC bit provides direct access to SCVCC pad. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCRST</name>
              <description>Direct Smart Card Clock. When DIRACCPADS=`1`, the DSCRST bit provides direct access to SCRST pad. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCCLK</name>
              <description>Direct Smart Card Clock. When DIRACCPADS=`1`, the DSCCLK bit provides direct access to SCCLK pad. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCIO</name>
              <description>Direct Smart Card Input/Output. When DIRACCPADS=`1`, the DSCIO bit provides direct access to SCIO pad. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIRACCPADS</name>
              <description>Direct Access to Smart Card Pads. When high, it disables a serial interface functionality and enables direct control of the smart card pads using following 4 bits. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_REPEAT</name>
          <description>SCR_REPEAT</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RXRPT</name>
              <description>RX Repeat This is a 4-bit register that specifies the number of attempts to request character re-transmission after wrong parity was detected. The re-transmission of the character is requested using the error signal during the guard time. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRPT</name>
              <description>TX Repeat This is a 4-bit register that specifies the number of attempts to re-transmit the character after the Smart Card signals the wrong parity during the guard time. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_VER</name>
          <description>SCR_VER</description>
          <addressOffset>0x3FC</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>GEN_VER</name>
              <description>Generation version. </description>
              <bitRange>[24:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SUB_VER</name>
              <description>Sub version. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRJ_VER</name>
              <description>Project version. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SCR0">
      <name>SCR1</name>
      <description>SCR1</description>
      <groupName>generic</groupName>
      <baseAddress>0x5005400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>SMHC0</name>
      <description>SMHC0</description>
      <groupName>generic</groupName>
      <baseAddress>0x4020000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SMHC_BLKSIZ</name>
          <description>Block Size Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BLK_SZ</name>
              <description>Block Size </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BYTCNT</name>
          <description>Byte Count Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BYTE_CNT</name>
              <description>Byte counter Number of bytes to be transferred; should be integer multiple of Block Size for block transfers. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CLKDIV</name>
          <description>Clock Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800300FF</resetMask>
          <fields>
            <field>
              <name>MASK_DATA0</name>
              <description>0: Do not mask data0 when update clock  
1: Mask data0 when update clock </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_mask</name>
                  <description>Do not mask data0 when update clock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask data0 when update clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_CTRL</name>
              <description>Card Clock Output Control 0 : Card clock always on 1 : Turn off card clock when FSM in IDLE state </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCLK_ENB</name>
              <description>Card Clock Enable 
0: Card Clock off 
1: Card Clock on </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Clock_off</name>
                  <description>Card Clock off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Clock_on</name>
                  <description>Card Clock on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_DIV</name>
              <description>Card clock divider n: Source clock is divided by 2*n.(n=0~255) when HS400_MD_EN is set, this field must be cleared. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMD</name>
          <description>Command Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F20FFFF</resetMask>
          <fields>
            <field>
              <name>CMD_LOAD</name>
              <description>Start Command. This bit is auto cleared when current command is sent. If there is no any response error happened, a command complete interrupt bit (CMD_OVER) will be set in interrupt register. You should not write any other command before this bit is cleared, or a command busy interrupt bit (CMD_BUSY) will be set in interrupt register. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_SW</name>
              <description>Voltage Switch 
0: normal command 
1: Voltage switch command, set for CMD11 only </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Voltage</name>
                  <description>Voltage switch command, set for CMD11 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_ABT</name>
              <description>Boot Abort Setting this bit will terminate the boot operation. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXP_BOOT_ACK</name>
              <description>Expect Boot Acknowledge.  When Software sets this bit along in mandatory boot operation, controller expects a boot acknowledge start pattern of 0-1-0 from the selected card. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_MOD</name>
              <description>Boot Mode 
00: Normal command 
01: Mandatory Boot operation 
10: Alternate Boot operation 
11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mandatory</name>
                  <description>Mandatory Boot operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Alternate</name>
                  <description>Alternate Boot operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRG_CLK</name>
              <description>Change Clock 
0: Normal command 
1: Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Change</name>
                  <description>Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEND_INIT_SEQ</name>
              <description>Send Initialization 
0: Normal command sending 
1: Send initialization sequence before sending this command. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send initialization sequence before sending this command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_ABT_CMD</name>
              <description>Stop Abort Command 
0: Normal command sending 
1: Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR) </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_PRE_OVER</name>
              <description>Wait Data Transfer Over 
0: Send command at once, do not care of data transferring 
1: Wait for data transfer completion before sending current command </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send command at once, do not care of data transferring</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wait</name>
                  <description>Wait for data transfer completion before sending current command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_CMD_FLAG</name>
              <description>Send Stop CMD Automatically (CMD12) 
0: Do not send stop command at end of data transfer 
1: Send stop command automatically at end of data transfer </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_send</name>
                  <description>Do not send stop command at end of data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send stop command automatically at end of data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_MODE</name>
              <description>Transfer Mode 
0: Block data transfer command 
1: Stream data transfer command </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Block_data</name>
                  <description>Block data transfer command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stream_data</name>
                  <description>Stream data transfer command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_DIR</name>
              <description>Transfer Direction 
0: Read operation 
1: Write operation </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write operation</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_TRANS</name>
              <description>Data Transfer 
0: without data transfer 
1: with data transfer </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>without_data</name>
                  <description>without data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>with_data</name>
                  <description>with data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHK_RESP_CRC</name>
              <description>Check Response CRC 
0: Do not check response CRC 
1: Check response CRC </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_check</name>
                  <description>Do not check response CRC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Check</name>
                  <description>Check response CRC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LONG_RESP</name>
              <description>Response Type 0:Short Response (48 bits) 1:Long Response (136 bits) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESP_RCV</name>
              <description>Response Receive 
0: Command without Response 
1: Command with Response </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command_without_Response</name>
                  <description>Command without Response</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Command_with_Response</name>
                  <description>Command with Response</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_IDX</name>
              <description>CMD Index Command index value </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMDARG</name>
          <description>Command Argument Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_ARG</name>
              <description>Command argument </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CRC_STA</name>
          <description>CRC Status from Device in Write Operation</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CRC_STA</name>
              <description>CRC Status CRC status from device in write operation  Positive CRC status token: 3`b010 Negative CRC status token: 3`b101 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CSDC</name>
          <description>CRC Status Detect Control Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CRC_DET_PARA</name>
              <description>110: HS400 speed mode 
011: Other speed mode </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTRL</name>
          <description>Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x80001D37</resetMask>
          <fields>
            <field>
              <name>FIFO_AC_MOD</name>
              <description>FIFO Access Mode 
1: AHB bus 
0: DMA bus </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AHB</name>
                  <description>AHB bus</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA bus</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_CMD</name>
              <description>Time unit for command line Time unit used to calculate command line time out value defined in RTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_DAT</name>
              <description>Time unit for data line Time unit used to calculate data line time out value defined in DTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_MOD_SEL</name>
              <description>DDR Mode Select Although eMMC`s HS400 speed mode is 8-bit DDR, this filed should be cleared when HS400_MD_EN is set. 
0: SDR mode 
1: DDR mode </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDR_mode</name>
                  <description>SDR mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DDR_mode</name>
                  <description>DDR mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CD_DBC_ENB</name>
              <description>Card Detect (Data[3] status) De-bounce Enable 
0: Disable de-bounce 
1: Enable de-bounce </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable de-bounce</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable de-bounce</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_ENB</name>
              <description>DMA Global Enable 
0: Disable DMA to transfer data, using AHB bus 
1: Enable DMA to transfer data </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable DMA to transfer data, using AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable DMA to transfer data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_ENB</name>
              <description>Global Interrupt Enable 
0: Disable interrupts 
1: Enable interrupts </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupts</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_RST</name>
              <description>FIFO Reset 
0: No change 
1: Reset FIFO This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset FIFO This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Software Reset 
0: No change 
1: Reset SD/MMC controller This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset SD/MMC controller This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTYPE</name>
          <description>Bus Width Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CARD_WID</name>
              <description>Card Width 
00: 1-bit width 
01: 4-bit width 
1x: 8-bit width </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_bit</name>
                  <description>1-bit width</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_bit</name>
                  <description>4-bit width</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit width</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT0_CRC</name>
          <description>SMHC_DAT0_CRC</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT0_CRC</name>
              <description>Data[0] CRC CRC in data[0] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT1_CRC</name>
          <description>SMHC_DAT1_CRC</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT1_CRC</name>
              <description>Data[1] CRC CRC in data[1] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT2_CRC</name>
          <description>SMHC_DAT2_CRC</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT2_CRC</name>
              <description>Data[2] CRC CRC in data[2] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT3_CRC</name>
          <description>SMHC_DAT3_CRC</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT3_CRC</name>
              <description>Data[3] CRC CRC in data[3] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT4_CRC</name>
          <description>SMHC_DAT4_CRC</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT4_CRC</name>
              <description>Data[4] CRC CRC in data[4] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT5_CRC</name>
          <description>SMHC_DAT5_CRC</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT5_CRC</name>
              <description>Data[5] CRC CRC in data[5] from device. In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT6_CRC</name>
          <description>SMHC_DAT6_CRC</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT6_CRC</name>
              <description>Data[6] CRC CRC in data[6] from device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT7_CRC</name>
          <description>SMHC_DAT7_CRC</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT7_CRC</name>
              <description>Data[7] CRC CRC in data[7] from device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DLBA_REG</name>
          <description>SMHC_DLBA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_BASE_ADDR</name>
              <description>Start of Descriptor List.  Contains the base address of the First Descriptor. The LSB bits [1:0] are ignored and taken as all-zero by the IDMAC internally. Hence these LSB bits are read-only. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DMAC</name>
          <description>DMA Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800007FF</resetMask>
          <fields>
            <field>
              <name>DES_LOAD_CTRL</name>
              <description>When DMAC fetches a descriptor, if the valid bit of a descriptor is not set, DMAC FSM will go to the suspend state. Setting this bit will make DMAC re-fetch descriptor again and do the transfer normally. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IDMAC_ENB</name>
              <description>IDMAC Enable.  When set, the IDMAC is enabled. DE is read/write. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_BUST_CTRL</name>
              <description>Fixed Burst.  Controls whether the AHB Master interface performs fixed burst transfers or not. When set, the AHB will use only SINGLE, INCR4, INCR8 during start of normal burst transfers. When reset, the AHB will use SINGLE and INCR burst transfer operations.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMAC_RST</name>
              <description>DMA Reset.  When set, the DMA Controller resets all its internal registers. SWR is read/write. It is automatically cleared after 1 clock cycle. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DRV_DL</name>
          <description>Drive Delay Control Register</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30000</resetMask>
          <fields>
            <field>
              <name>DAT_DRV_PH_SEL</name>
              <description>Data Drive Phase Select 
0: Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode. 
1: Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DRV_PH_SEL</name>
              <description>Command Drive Phase Select 
0: Command drive phase offset is 90 at SDR mode, 45  at DDR mode, 90 at HS400 mode. 
1: Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Command drive phase offset is 90 at SDR mode, 45  at DDR mode, 90 at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DS_DL</name>
          <description>Data Strobe Delay Control Register</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>DS_DL_CAL_START</name>
              <description>Data Strobe Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_CAL_DONE</name>
              <description>Data Strobe Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in DS_DL. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL</name>
              <description>Data Strobe Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of SMHC`s clock nearly.  This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL_SW_EN</name>
              <description>Sample Delay Software Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_SW</name>
              <description>Data Strobe Delay Software </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EDSD</name>
          <description>eMMC4.5 DDR Start Bit Detection Control Register</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>HS400_MD_EN</name>
              <description>HS400_MD_EN(for SMHC2 only) HS400 Mode Enable  
0: Disable  
1: Enable  It is required to set this bit to '1' before initiating any data transfer CMD in HS400 mode. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  It is required to set this bit to '1' before initiating any data transfer CMD in HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALF_START_BIT</name>
              <description>Control for start bit detection mechanism inside mstorage based on duration of start bit.  For eMMC 4.5, start bit can be:  
0: Full cycle   
1: Less than one full cycle  Set HALF_START_BIT=1 for eMMC 4.5 and above; set to 0 for SD applications. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_cycle</name>
                  <description>Full cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Less</name>
                  <description>Less than one full cycle  Set HALF_START_BIT=1 for eMMC 4.5 and above; set to 0 for SD applications.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EMCE</name>
          <description>Embedded Encrypt and Decrypt Control Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x2000000</resetValue>
          <resetMask>0xFFFF00D3</resetMask>
          <fields>
            <field>
              <name>SEC_SZ</name>
              <description>Sector Size of EMCE. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BM_BLK_SZ</name>
              <description>The size of bitmap-block size. 
0: 512 Byte 
1: 4096 Byte </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512 Byte</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4096</name>
                  <description>4096 Byte</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BM_EN</name>
              <description>0: Disable bitmap. 
1: Enable bitmap.  This bit is valid when EMCE is enable and use DMA transfer.  If this bit is cleared, all data blocks associated with one write/read command will be encrypted/decrypted.  If this bit is set, the data will be divided into many bitmap-blocks aligned to BM_BLK_SZ. The bitmap-blocks are associated with the bits of SMHC_EMCE_BMn register, and will be or will not be encrypted/decrypted determined by these bitmap bits. SMHC can support the last bitmap-block is not aligned to BM_BLK_SZ.  </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bitmap.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bitmap.  This bit is valid when EMCE is enable and use DMA transfer.  If this bit is cleared, all data blocks associated with one write/read command will be encrypted/decrypted.  If this bit is set, the data will be divided into many bitmap-blocks aligned to BM_BLK_SZ. The bitmap-blocks are associated with the bits of SMHC_EMCE_BMn register, and will be or will not be encrypted/decrypted determined by these bitmap bits. SMHC can support the last bitmap-block is not aligned to BM_BLK_SZ.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_ENCR</name>
              <description>0:disabled encrypt and decrypt.Encrypt and decrypt will be bypassed in EMCE 1:enable encrypt and decrypt This bit is only available when EMCE_ENB is 1. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AC_MD</name>
              <description>Access Mode 
0: Sector mode. The data address to access device is in sector(512 bytes) units. SMHC_CMDARG is a 32bit sector(512 bytes) address. 
1: Byte mode. The data address to access device is in bytes units. SMHC_CMDARG is a 32bit byte address. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sector</name>
                  <description>Sector mode. The data address to access device is in sector(512 bytes) units. SMHC_CMDARG is a 32bit sector(512 bytes) address.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Byte</name>
                  <description>Byte mode. The data address to access device is in bytes units. SMHC_CMDARG is a 32bit byte address.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_ENB</name>
              <description>EMCE Enable 
0: EMCE is disabled.EMCE will be bypass by host controller. 
1: EMCE is enabled. The data of current command shall go through EMCE.Encrypt or decrypt is decided by EMCE_ENCR.  The type and configuration of encryption algorithm are determined by EMCE`s initial process, and out of this specification. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled_point_EMCE</name>
                  <description>EMCE is disabled.EMCE will be bypass by host controller.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>EMCE is enabled. The data of current command shall go through EMCE.Encrypt or decrypt is decided by EMCE_ENCR.  The type and configuration of encryption algorithm are determined by EMCE`s initial process, and out of this specification.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>SMHC_EMCE_BMn[%s]</name>
          <description>SMHC_EMCE_BMn[%s]</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BM</name>
              <description>From LSB to MSB of SMHC_EMCE_BMn, each bit associates with one bitmap-block. 
0: The associated bitmap-block will be bypassed in EMCE. 
1: The associated bitmap-block will be encrypted/decrypted in EMCE.  The total bits of all bitmap registers are 32*32=1024. The size of bitmap-block is determined by SMHC_EMCE BM_BLK_SZ, it may be 512 Byte or 4096 Byte.  The maximum data size indicated by all 32 bitmap registers is 512K Byte or 4M Byte. In other words, the maximum data size of one multi-block write/read command is limited to 512K Byte or 4M Byte. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EMCE_DBG</name>
          <description>Embedded Encrypt and Decrypt Debug Register</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF3FF7</resetMask>
          <fields>
            <field>
              <name>EMCE_FIFO_LVL</name>
              <description>EMCE FIFO level in byte When transmitting data, it shows the number of data in FIFO which received from EMCE , then send from SMHC to device. When receiving dat, it shows the number of data in FIFO which is read from device, then send to EMCE. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BM_BLK_CNT</name>
              <description>Bitmap-block couter This field counts the number of bitmap-block for each write/read command. It is cleared when lunch a new command. </description>
              <bitRange>[13:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BM_BLK_BYPASS</name>
              <description>1: Current bitmap-block is bypassed, and will not be encrypted/decrypted. 
0: Current will be encrypted/decrypted. This bit is valid only when EMCE_ENB is 1 and EMCE_ENCR is 0. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Current_bitmap_minus_block</name>
                  <description>Current bitmap-block is bypassed, and will not be encrypted/decrypted.</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Current_will_be</name>
                  <description>Current will be encrypted/decrypted. This bit is valid only when EMCE_ENB is 1 and EMCE_ENCR is 0.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_FIFO_UN</name>
              <description>When this bit is set, EMCE FIFO is underrun. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMCE_FIFO_OV</name>
              <description>When this bit is set, EMCE FIFO is overflow. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFO</name>
          <description>Read/ Write FIFO</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX/RX_FIFO</name>
              <description>Data FIFO </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFOTH</name>
          <description>FIFO Water Level Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xF0000</resetValue>
          <resetMask>0x70FF00FF</resetMask>
          <fields>
            <field>
              <name>BSIZE_OF_TRANS</name>
              <description>Burst Size of Multiple Transaction 
000: 1 transfers 
001: 4 
010: 8 
011: 16 Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) FIFO_DEPTH = 256 FIFO_SIZE = 256 * 32 = 1K  Recommended: MSize = 16, TX_TL = 240, RX_TL = 15 </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 transfers</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) FIFO_DEPTH = 256 FIFO_SIZE = 256 * 32 = 1K  Recommended: MSize = 16, TX_TL = 240, RX_TL = 15</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TL</name>
              <description>RX Trigger Level 0x0~0xFE: RX Trigger Level is 0~254 
0xFF: Reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA is request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  15 (means greater than 15) </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA is request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  15 (means greater than 15)</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TL</name>
              <description>TX Trigger Level 0x1~0xFF: TX Trigger Level is 1~255 
0x0: no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  240(means less than or equal to 240) </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_trigger</name>
                  <description>no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  240(means less than or equal to 240)</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FUNS</name>
          <description>FIFO Function Select Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ABT_RDATA</name>
              <description>Abort Read Data 
0: Ignored 
1: After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>After</name>
                  <description>After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_WAIT</name>
              <description>Read Wait 
0: Clear SDIO read wait 
1: Assert SDIO read wait </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear SDIO read wait</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert SDIO read wait</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_SEND_MMC_IRQRESQ</name>
              <description>Host Send MMC IRQ Response 
0: Ignored 
1: Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_HWRST</name>
          <description>Hardware Reset Register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HW_RST</name>
              <description>1: Active mode  
0: Reset  These bits cause the cards to enter pre-idle state, which requires them to be re-initialized. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_mode</name>
                  <description>Active mode</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset  These bits cause the cards to enter pre-idle state, which requires them to be re-initialized.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDIE_REG</name>
          <description>SMHC_IDIE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x337</resetMask>
          <fields>
            <field>
              <name>ERR_SUM_INT_ENB</name>
              <description>Card Error summary Interrupt Enable.  When set, it enables the Card Interrupt summary. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_UNAVL_INT_ENB</name>
              <description>Descriptor Unavailable Interrupt.  When set along with Abnormal Interrupt Summary Enable, the Descriptor Unavailable interrupt is enabled. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FERR_INT_ENB</name>
              <description>Fatal Bus Error Enable.  When set with Abnormal Interrupt Summary Enable, the Fatal Bus Error Interrupt is enabled. When reset, Fatal Bus Error Enable Interrupt is disabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_INT_ENB</name>
              <description>Receive Interrupt Enable.  When set with Normal Interrupt Summary Enable, Receive Interrupt is enabled. When reset, Receive Interrupt is disabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT_ENB</name>
              <description>Transmit Interrupt Enable.  When set with Normal Interrupt Summary Enable, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDST_REG</name>
          <description>SMHC_IDST_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF37</resetMask>
          <fields>
            <field>
              <name>DMAC_ERR_STA</name>
              <description>Error Bits.  Indicates the type of error that caused a Bus Error. Valid only with Fatal Bus Error bit (IDSTS[2]) set. This field does not generate an interrupt.  
001: Host Abort received during transmission  
010: Host Abort received during reception  Others: Reserved EB is read-only. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Host_Abort_received_during_transmission</name>
                  <description>Host Abort received during transmission</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Host_Abort_received_during</name>
                  <description>Host Abort received during reception</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ABN_INT_SUM</name>
              <description>Abnormal Interrupt Summary.  Logical OR of the following:  IDSTS[2]: Fatal Bus Interrupt  IDSTS[4]: Descriptor Unavailable bit Interrupt  IDSTS[5]: Card Error Summary Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes AIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NOR_INT_SUM</name>
              <description>Normal Interrupt Summary.  Logical OR of the following:  IDSTS[0]: Transmit Interrupt  IDSTS[1]: Receive Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes NIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ERR_FLAG_SUM</name>
              <description>Card Error Summary.  Indicates the status of the transaction to/from the card; also present in RINTSTS. Indicates the logical OR of the following bits:  
EBE: End Bit Error  RTO: Response Timeout/Boot ACK Timeout  RCRC: Response CRC  SBE: Start Bit Error  DRTO: Data Read Timeout/BDS timeout  DCRC: Data CRC for Receive  RE: Response Error  Writing a 1 clears this bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DES_UNAVL_INT</name>
              <description>Descriptor Unavailable Interrupt.  This bit is set when the descriptor is unavailable due to OWN bit = 0 (DES0[31] =0). Writing a 1 clears this bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FATAL_BERR_INT</name>
              <description>Fatal Bus Error Interrupt.  Indicates that a Bus Error occurred (IDSTS[12:10]). When this bit is set, the DMA disables all its bus accesses. Writing a 1 clears this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_INT</name>
              <description>Receive Interrupt.  Indicates the completion of data reception for a descriptor. Writing a 1 clears this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TX_INT</name>
              <description>Transmit Interrupt.  Indicates that data transmission is finished for a descriptor. Writing a `1` clears this bit. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_INTMASK</name>
          <description>Interrupt Mask Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL_INT_EN</name>
              <description>Card Removed Interrupt Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_INSERT_INT_EN</name>
              <description>Card Inserted Interrupt Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INT_EN</name>
              <description>SDIO Interrupt Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEE_INT_EN</name>
              <description>Data End-bit Error Interrupt Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACD_INT_EN</name>
              <description>Auto Command Done Interrupt Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSE_BC_INT_EN</name>
              <description>Data Start Error Interrupt Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_IW_INT_EN</name>
              <description>Command Busy and Illegal Write Interrupt Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FU_FO_INT_EN</name>
              <description>FIFO Underrun/Overflow Interrupt Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSTO_VSD_INT_EN</name>
              <description>Data Starvation Timeout/V1.8 Switch Done Interrupt Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTO_BDS_INT_EN</name>
              <description>Data Timeout/Boot Data Start Interrupt Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_BACK_INT_EN</name>
              <description>Response Timeout/Boot ACK Received Interrupt Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE_INT_EN</name>
              <description>Data CRC Error Interrupt Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCE_INT_EN</name>
              <description>Response CRC Error Interrupt Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRR_INT_EN</name>
              <description>Data Receive Request Interrupt Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR_INT_EN</name>
              <description>Data Transmit Request Interrupt Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTC_INT_EN</name>
              <description>Data Transfer Complete Interrupt Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC_INT_EN</name>
              <description>Command Complete Interrupt Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_INT_EN</name>
              <description>Response Error Interrupt Enable   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_MINTSTS</name>
          <description>Masked interrupt Status Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>M_CARD_REMOVAL_INT</name>
              <description>Card Removed </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CARD_INSERT</name>
              <description>Card Inserted </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_SDIO_INT</name>
              <description>SDIO Interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DEE_INT</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken or received CRC status taken is negative. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACD_INT</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSE_BC_INT</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CB_IW_INT</name>
              <description>Command Busy and Illegal Write </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_FU_FO_INT</name>
              <description>FIFO Underrun/Overflow </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSTO_VSD_INT</name>
              <description>Data Starvation Timeout/V1.8 Switch Done </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTO_BDS_INT</name>
              <description>Data Timeout/Boot Data Start </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RTO_BACK_INT</name>
              <description>Response Timeout/Boot ACK Received </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DCE_INT</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RCE_INT</name>
              <description>Response CRC Error </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DRR_INT</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTR_INT</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTC_INT</name>
              <description>Data Transfer Complete </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CC_INT</name>
              <description>Command Complete </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RE_INT</name>
              <description>Response Error When set, Transmit Bit error or End Bit error or CMD Index error may occurs. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP0</name>
          <description>Response 0 Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP0</name>
              <description>Response 0 Bit[31:0] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP1</name>
          <description>Response 1 Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP1</name>
              <description>Response 1 Bit[63:31] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP2</name>
          <description>Response 2 Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP2</name>
              <description>Response 2 Bit[95:64] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP3</name>
          <description>Response 3 Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP3</name>
              <description>Response 3 Bit[127:96] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP_CRC</name>
          <description>SMHC_RESP_CRC</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RESP_CRC</name>
              <description>Response CRC Response CRC from device. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RINTSTS</name>
          <description>Raw Interrupt Status Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL</name>
              <description>Card Removed This is write-1-to-clear bits. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CARD_INSERT</name>
              <description>Card Inserted This is write-1-to-clear bits. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SDIOI_INT</name>
              <description>SDIO Interrupt This is write-1-to-clear bits. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DEE</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken. This is write-1-to-clear bits. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ACD</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. This is write-1-to-clear bits. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSE_BC</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. This is write-1-to-clear bits. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CB_IW</name>
              <description>Command Busy and Illegal Write This is write-1-to-clear bits. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FU_FO</name>
              <description>FIFO Underrun/Overflow This is write-1-to-clear bits. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSTO_VSD</name>
              <description>Data Starvation Timeout/V1.8 Switch Done This is write-1-to-clear bits. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTO_BDS</name>
              <description>Data Timeout/Boot Data Start This is write-1-to-clear bits. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RTO_BACK</name>
              <description>Response Timeout/Boot ACK Received This is write-1-to-clear bits. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DCE</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. This is write-1-to-clear bits. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RCE</name>
              <description>Response CRC Error This is write-1-to-clear bits. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DRR</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. This is write-1-to-clear bits. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. This is write-1-to-clear bits. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTC</name>
              <description>Data Transfer Complete This is write-1-to-clear bits. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CC</name>
              <description>Command Complete This is write-1-to-clear bits. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RE</name>
              <description>Response Error When set, Transmit Bit error or End Bit error or CMD Index error may occurs. This is write-1-to-clear bits. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_SAMP_DL</name>
          <description>SMHC_SAMP_DL</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>SAMP_DL_CAL_START</name>
              <description>Sample Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_CAL_DONE</name>
              <description>Sample Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in SAMP_DL. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL</name>
              <description>Sample Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of card clock nearly.  Generally, it is necessary to do drive delay calibration when card clock is changed. This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL_SW_EN</name>
              <description>Sample Delay Software Enable When set, enable sample delay specified at SAMP_DL_SW </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_SW</name>
              <description>Sample Delay Software The relative delay between clock line and command line, data lines. It can be determined according to the value of SAMP_DL, the cycle of card clock and device`s input timing requirement. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_STATUS</name>
          <description>Status Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x83FFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_REQ</name>
              <description>DMA Request DMA request signal state </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_LEVEL</name>
              <description>FIFO Level Number of filled locations in FIFO </description>
              <bitRange>[25:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RESP_IDX</name>
              <description>Response Index Index of previous response, including any auto-stop sent by controller </description>
              <bitRange>[16:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSM_BUSY</name>
              <description>Data FSM Busy Data transmit or receive state-machine is busy </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CARD_BUSY</name>
              <description>Card data busy Inverted version of DATA[0] 
0: card data not busy 
1: card data busy </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_data_not_busy</name>
                  <description>card data not busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_data_busy</name>
                  <description>card data busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_PRESENT</name>
              <description>Data[3] status level of DATA[3], checks whether card is present 
0: card not present 
1: card present </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_not_present</name>
                  <description>card not present</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_present</name>
                  <description>card present</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_STA</name>
              <description>Command FSM States 
0000: Idle 
0001: Send init sequence 
0010: TX CMD start bit 
0011: TX CMD TX bit 
0100: TX CMD index + argument 
0101: TX CMD CRC7 
0110: TX CMD end bit 
0111: RX response start bit 
1000: RX response IRQ response 
1001: RX response TX bit 
1010: RX response CMD index 
1011: RX response data 
1100: RX response CRC7 
1101: RX response end bit 
1110: CMD path wait NCC 
1111: Wait; CMD-to-response turnaround </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO Full  
1: FIFO full 
0: FIFO not full </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_full</name>
                  <description>FIFO full</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO Empty 
1: FIFO Empty 
0: FIFO not Empty </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_Empty</name>
                  <description>FIFO Empty</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_not_Empty</name>
                  <description>FIFO not Empty</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_TX_LEVEL</name>
              <description>FIFO TX Water Level Flag 
0: FIFO didn`t reach transmit trigger level 
1: FIFO reached transmit trigger level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach transmit trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached transmit trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_RX_LEVEL</name>
              <description>FIFO TX Water Level Flag 
0: FIFO didn`t reach receive trigger level 
1: FIFO reached receive trigger level </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach receive trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached receive trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC0</name>
          <description>SMHC_TBC0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC0</name>
              <description>Transferred Count 0 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC1</name>
          <description>SMHC_TBC1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC1</name>
              <description>Transferred Count 1 Number of bytes transferred between Host/DMA memory and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_THLD</name>
          <description>Card Threshold Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0007</resetMask>
          <fields>
            <field>
              <name>CARD_RD_THLD</name>
              <description>Card Read Threshold Size </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_WR_THLD_ENB</name>
              <description>(only for SMHC2) Card Write Threshold Enable(HS400)  
0: Card write threshold disable  
1: Card write threshold enabled  Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_write_threshold_disable</name>
                  <description>Card write threshold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_write_threshold</name>
                  <description>Card write threshold enabled  Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCIG</name>
              <description>(only for SMHC2) Busy Clear Interrupt Generation  
0: Busy Clear Interrupt disabled  
1: Busy Clear Interrupt Enabled  The application can disable this feature if it does not want to wait for a Busy Clear Interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_disabled</name>
                  <description>Busy Clear Interrupt disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Enabled</name>
                  <description>Busy Clear Interrupt Enabled  The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_RD_THLD_ENB</name>
              <description>Card Read Threshold Enable 
0: Card Read Threshold Disable 
1: Card Read Threshold Enable Host controller initiates Read Transfer only if CARD_RD_THLD amount of space is available in receive FIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Disable</name>
                  <description>Card Read Threshold Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Enable</name>
                  <description>Card Read Threshold Enable Host controller initiates Read Transfer only if CARD_RD_THLD amount of space is available in receive FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TMOUT</name>
          <description>Time Out Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xFFFFFF40</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DTO_LMT</name>
              <description>Data Timeout Limit </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_LMT</name>
              <description>Response Timeout Limit </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SMHC1</name>
      <description>SMHC1</description>
      <groupName>generic</groupName>
      <baseAddress>0x4021000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SMHC_BLKSIZ</name>
          <description>Block Size Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BLK_SZ</name>
              <description>Block Size </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BYTCNT</name>
          <description>Byte Count Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BYTE_CNT</name>
              <description>Byte counter Number of bytes to be transferred; should be integer multiple of Block Size for block transfers. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CLKDIV</name>
          <description>Clock Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800300FF</resetMask>
          <fields>
            <field>
              <name>MASK_DATA0</name>
              <description>0: Do not mask data0 when update clock  
1: Mask data0 when update clock </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_mask</name>
                  <description>Do not mask data0 when update clock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask data0 when update clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_CTRL</name>
              <description>Card Clock Output Control 0 : Card clock always on 1 : Turn off card clock when FSM in IDLE state </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCLK_ENB</name>
              <description>Card Clock Enable 
0: Card Clock off 
1: Card Clock on </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Clock_off</name>
                  <description>Card Clock off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Clock_on</name>
                  <description>Card Clock on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_DIV</name>
              <description>Card clock divider n: Source clock is divided by 2*n.(n=0~255) when HS400_MD_EN is set, this field must be cleared. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMD</name>
          <description>Command Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F20FFFF</resetMask>
          <fields>
            <field>
              <name>CMD_LOAD</name>
              <description>Start Command. This bit is auto cleared when current command is sent. If there is no any response error happened, a command complete interrupt bit (CMD_OVER) will be set in interrupt register. You should not write any other command before this bit is cleared, or a command busy interrupt bit (CMD_BUSY) will be set in interrupt register. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_SW</name>
              <description>Voltage Switch 
0: normal command 
1: Voltage switch command, set for CMD11 only </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Voltage</name>
                  <description>Voltage switch command, set for CMD11 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_ABT</name>
              <description>Boot Abort Setting this bit will terminate the boot operation. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXP_BOOT_ACK</name>
              <description>Expect Boot Acknowledge.  When Software sets this bit along in mandatory boot operation, controller expects a boot acknowledge start pattern of 0-1-0 from the selected card. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_MOD</name>
              <description>Boot Mode 
00: Normal command 
01: Mandatory Boot operation 
10: Alternate Boot operation 
11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mandatory</name>
                  <description>Mandatory Boot operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Alternate</name>
                  <description>Alternate Boot operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRG_CLK</name>
              <description>Change Clock 
0: Normal command 
1: Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Change</name>
                  <description>Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEND_INIT_SEQ</name>
              <description>Send Initialization 
0: Normal command sending 
1: Send initialization sequence before sending this command. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send initialization sequence before sending this command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_ABT_CMD</name>
              <description>Stop Abort Command 
0: Normal command sending 
1: Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR) </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_PRE_OVER</name>
              <description>Wait Data Transfer Over 
0: Send command at once, do not care of data transferring 
1: Wait for data transfer completion before sending current command </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send command at once, do not care of data transferring</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wait</name>
                  <description>Wait for data transfer completion before sending current command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_CMD_FLAG</name>
              <description>Send Stop CMD Automatically (CMD12) 
0: Do not send stop command at end of data transfer 
1: Send stop command automatically at end of data transfer </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_send</name>
                  <description>Do not send stop command at end of data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send stop command automatically at end of data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_MODE</name>
              <description>Transfer Mode 
0: Block data transfer command 
1: Stream data transfer command </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Block_data</name>
                  <description>Block data transfer command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stream_data</name>
                  <description>Stream data transfer command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_DIR</name>
              <description>Transfer Direction 
0: Read operation 
1: Write operation </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write operation</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_TRANS</name>
              <description>Data Transfer 
0: without data transfer 
1: with data transfer </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>without_data</name>
                  <description>without data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>with_data</name>
                  <description>with data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHK_RESP_CRC</name>
              <description>Check Response CRC 
0: Do not check response CRC 
1: Check response CRC </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_check</name>
                  <description>Do not check response CRC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Check</name>
                  <description>Check response CRC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LONG_RESP</name>
              <description>Response Type 0:Short Response (48 bits) 1:Long Response (136 bits) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESP_RCV</name>
              <description>Response Receive 
0: Command without Response 
1: Command with Response </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command_without_Response</name>
                  <description>Command without Response</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Command_with_Response</name>
                  <description>Command with Response</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_IDX</name>
              <description>CMD Index Command index value </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMDARG</name>
          <description>Command Argument Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_ARG</name>
              <description>Command argument </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CRC_STA</name>
          <description>CRC Status from Device in Write Operation</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CRC_STA</name>
              <description>CRC Status CRC status from device in write operation  Positive CRC status token: 3`b010 Negative CRC status token: 3`b101 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CSDC</name>
          <description>CRC Status Detect Control Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CRC_DET_PARA</name>
              <description>110: HS400 speed mode 
011: Other speed mode </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTRL</name>
          <description>Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x80001D37</resetMask>
          <fields>
            <field>
              <name>FIFO_AC_MOD</name>
              <description>FIFO Access Mode 
1: AHB bus 
0: DMA bus </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AHB</name>
                  <description>AHB bus</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA bus</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_CMD</name>
              <description>Time unit for command line Time unit used to calculate command line time out value defined in RTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_DAT</name>
              <description>Time unit for data line Time unit used to calculate data line time out value defined in DTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_MOD_SEL</name>
              <description>DDR Mode Select Although eMMC`s HS400 speed mode is 8-bit DDR, this filed should be cleared when HS400_MD_EN is set. 
0: SDR mode 
1: DDR mode </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDR_mode</name>
                  <description>SDR mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DDR_mode</name>
                  <description>DDR mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CD_DBC_ENB</name>
              <description>Card Detect (Data[3] status) De-bounce Enable 
0: Disable de-bounce 
1: Enable de-bounce </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable de-bounce</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable de-bounce</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_ENB</name>
              <description>DMA Global Enable 
0: Disable DMA to transfer data, using AHB bus 
1: Enable DMA to transfer data </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable DMA to transfer data, using AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable DMA to transfer data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_ENB</name>
              <description>Global Interrupt Enable 
0: Disable interrupts 
1: Enable interrupts </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupts</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_RST</name>
              <description>FIFO Reset 
0: No change 
1: Reset FIFO This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset FIFO This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Software Reset 
0: No change 
1: Reset SD/MMC controller This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset SD/MMC controller This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTYPE</name>
          <description>Bus Width Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CARD_WID</name>
              <description>Card Width 
00: 1-bit width 
01: 4-bit width 
1x: 8-bit width </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_bit</name>
                  <description>1-bit width</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_bit</name>
                  <description>4-bit width</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit width</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT0_CRC</name>
          <description>SMHC_DAT0_CRC</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT0_CRC</name>
              <description>Data[0] CRC CRC in data[0] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT1_CRC</name>
          <description>SMHC_DAT1_CRC</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT1_CRC</name>
              <description>Data[1] CRC CRC in data[1] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT2_CRC</name>
          <description>SMHC_DAT2_CRC</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT2_CRC</name>
              <description>Data[2] CRC CRC in data[2] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT3_CRC</name>
          <description>SMHC_DAT3_CRC</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT3_CRC</name>
              <description>Data[3] CRC CRC in data[3] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT4_CRC</name>
          <description>SMHC_DAT4_CRC</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT4_CRC</name>
              <description>Data[4] CRC CRC in data[4] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT5_CRC</name>
          <description>SMHC_DAT5_CRC</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT5_CRC</name>
              <description>Data[5] CRC CRC in data[5] from device. In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT6_CRC</name>
          <description>SMHC_DAT6_CRC</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT6_CRC</name>
              <description>Data[6] CRC CRC in data[6] from device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT7_CRC</name>
          <description>SMHC_DAT7_CRC</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT7_CRC</name>
              <description>Data[7] CRC CRC in data[7] from device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DLBA_REG</name>
          <description>SMHC_DLBA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_BASE_ADDR</name>
              <description>Start of Descriptor List.  Contains the base address of the First Descriptor. The LSB bits [1:0] are ignored and taken as all-zero by the IDMAC internally. Hence these LSB bits are read-only. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DMAC</name>
          <description>DMA Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800007FF</resetMask>
          <fields>
            <field>
              <name>DES_LOAD_CTRL</name>
              <description>When DMAC fetches a descriptor, if the valid bit of a descriptor is not set, DMAC FSM will go to the suspend state. Setting this bit will make DMAC re-fetch descriptor again and do the transfer normally. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IDMAC_ENB</name>
              <description>IDMAC Enable.  When set, the IDMAC is enabled. DE is read/write. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_BUST_CTRL</name>
              <description>Fixed Burst.  Controls whether the AHB Master interface performs fixed burst transfers or not. When set, the AHB will use only SINGLE, INCR4, INCR8 during start of normal burst transfers. When reset, the AHB will use SINGLE and INCR burst transfer operations.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMAC_RST</name>
              <description>DMA Reset.  When set, the DMA Controller resets all its internal registers. SWR is read/write. It is automatically cleared after 1 clock cycle. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DRV_DL</name>
          <description>Drive Delay Control Register</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30000</resetMask>
          <fields>
            <field>
              <name>DAT_DRV_PH_SEL</name>
              <description>Data Drive Phase Select 
0: Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode. 
1: Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DRV_PH_SEL</name>
              <description>Command Drive Phase Select 
0: Command drive phase offset is 90 at SDR mode, 45  at DDR mode, 90 at HS400 mode. 
1: Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Command drive phase offset is 90 at SDR mode, 45  at DDR mode, 90 at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DS_DL</name>
          <description>Data Strobe Delay Control Register</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>DS_DL_CAL_START</name>
              <description>Data Strobe Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_CAL_DONE</name>
              <description>Data Strobe Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in DS_DL. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL</name>
              <description>Data Strobe Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of SMHC`s clock nearly.  This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL_SW_EN</name>
              <description>Sample Delay Software Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_SW</name>
              <description>Data Strobe Delay Software </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EDSD</name>
          <description>eMMC4.5 DDR Start Bit Detection Control Register</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>HS400_MD_EN</name>
              <description>HS400_MD_EN(for SMHC2 only) HS400 Mode Enable  
0: Disable  
1: Enable  It is required to set this bit to '1' before initiating any data transfer CMD in HS400 mode. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  It is required to set this bit to '1' before initiating any data transfer CMD in HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALF_START_BIT</name>
              <description>Control for start bit detection mechanism inside mstorage based on duration of start bit.  For eMMC 4.5, start bit can be:  
0: Full cycle   
1: Less than one full cycle  Set HALF_START_BIT=1 for eMMC 4.5 and above; set to 0 for SD applications. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_cycle</name>
                  <description>Full cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Less</name>
                  <description>Less than one full cycle  Set HALF_START_BIT=1 for eMMC 4.5 and above; set to 0 for SD applications.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EMCE</name>
          <description>Embedded Encrypt and Decrypt Control Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x2000000</resetValue>
          <resetMask>0xFFFF00D3</resetMask>
          <fields>
            <field>
              <name>SEC_SZ</name>
              <description>Sector Size of EMCE. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BM_BLK_SZ</name>
              <description>The size of bitmap-block size. 
0: 512 Byte 
1: 4096 Byte </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512 Byte</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4096</name>
                  <description>4096 Byte</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BM_EN</name>
              <description>0: Disable bitmap. 
1: Enable bitmap.  This bit is valid when EMCE is enable and use DMA transfer.  If this bit is cleared, all data blocks associated with one write/read command will be encrypted/decrypted.  If this bit is set, the data will be divided into many bitmap-blocks aligned to BM_BLK_SZ. The bitmap-blocks are associated with the bits of SMHC_EMCE_BMn register, and will be or will not be encrypted/decrypted determined by these bitmap bits. SMHC can support the last bitmap-block is not aligned to BM_BLK_SZ.  </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bitmap.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bitmap.  This bit is valid when EMCE is enable and use DMA transfer.  If this bit is cleared, all data blocks associated with one write/read command will be encrypted/decrypted.  If this bit is set, the data will be divided into many bitmap-blocks aligned to BM_BLK_SZ. The bitmap-blocks are associated with the bits of SMHC_EMCE_BMn register, and will be or will not be encrypted/decrypted determined by these bitmap bits. SMHC can support the last bitmap-block is not aligned to BM_BLK_SZ.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_ENCR</name>
              <description>0:disabled encrypt and decrypt.Encrypt and decrypt will be bypassed in EMCE 1:enable encrypt and decrypt This bit is only available when EMCE_ENB is 1. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AC_MD</name>
              <description>Access Mode 
0: Sector mode. The data address to access device is in sector(512 bytes) units. SMHC_CMDARG is a 32bit sector(512 bytes) address. 
1: Byte mode. The data address to access device is in bytes units. SMHC_CMDARG is a 32bit byte address. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sector</name>
                  <description>Sector mode. The data address to access device is in sector(512 bytes) units. SMHC_CMDARG is a 32bit sector(512 bytes) address.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Byte</name>
                  <description>Byte mode. The data address to access device is in bytes units. SMHC_CMDARG is a 32bit byte address.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_ENB</name>
              <description>EMCE Enable 
0: EMCE is disabled.EMCE will be bypass by host controller. 
1: EMCE is enabled. The data of current command shall go through EMCE.Encrypt or decrypt is decided by EMCE_ENCR.  The type and configuration of encryption algorithm are determined by EMCE`s initial process, and out of this specification. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled_point_EMCE</name>
                  <description>EMCE is disabled.EMCE will be bypass by host controller.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>EMCE is enabled. The data of current command shall go through EMCE.Encrypt or decrypt is decided by EMCE_ENCR.  The type and configuration of encryption algorithm are determined by EMCE`s initial process, and out of this specification.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>SMHC_EMCE_BMn[%s]</name>
          <description>SMHC_EMCE_BMn[%s]</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BM</name>
              <description>From LSB to MSB of SMHC_EMCE_BMn, each bit associates with one bitmap-block. 
0: The associated bitmap-block will be bypassed in EMCE. 
1: The associated bitmap-block will be encrypted/decrypted in EMCE.  The total bits of all bitmap registers are 32*32=1024. The size of bitmap-block is determined by SMHC_EMCE BM_BLK_SZ, it may be 512 Byte or 4096 Byte.  The maximum data size indicated by all 32 bitmap registers is 512K Byte or 4M Byte. In other words, the maximum data size of one multi-block write/read command is limited to 512K Byte or 4M Byte. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EMCE_DBG</name>
          <description>Embedded Encrypt and Decrypt Debug Register</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF3FF7</resetMask>
          <fields>
            <field>
              <name>EMCE_FIFO_LVL</name>
              <description>EMCE FIFO level in byte When transmitting data, it shows the number of data in FIFO which received from EMCE , then send from SMHC to device. When receiving dat, it shows the number of data in FIFO which is read from device, then send to EMCE. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BM_BLK_CNT</name>
              <description>Bitmap-block couter This field counts the number of bitmap-block for each write/read command. It is cleared when lunch a new command. </description>
              <bitRange>[13:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BM_BLK_BYPASS</name>
              <description>1: Current bitmap-block is bypassed, and will not be encrypted/decrypted. 
0: Current will be encrypted/decrypted. This bit is valid only when EMCE_ENB is 1 and EMCE_ENCR is 0. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Current_bitmap_minus_block</name>
                  <description>Current bitmap-block is bypassed, and will not be encrypted/decrypted.</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Current_will_be</name>
                  <description>Current will be encrypted/decrypted. This bit is valid only when EMCE_ENB is 1 and EMCE_ENCR is 0.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_FIFO_UN</name>
              <description>When this bit is set, EMCE FIFO is underrun. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMCE_FIFO_OV</name>
              <description>When this bit is set, EMCE FIFO is overflow. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFO</name>
          <description>Read/ Write FIFO</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX/RX_FIFO</name>
              <description>Data FIFO </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFOTH</name>
          <description>FIFO Water Level Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xF0000</resetValue>
          <resetMask>0x70FF00FF</resetMask>
          <fields>
            <field>
              <name>BSIZE_OF_TRANS</name>
              <description>Burst Size of Multiple Transaction 
000: 1 transfers 
001: 4 
010: 8 
011: 16 Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) FIFO_DEPTH = 256 FIFO_SIZE = 256 * 32 = 1K  Recommended: MSize = 16, TX_TL = 240, RX_TL = 15 </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 transfers</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) FIFO_DEPTH = 256 FIFO_SIZE = 256 * 32 = 1K  Recommended: MSize = 16, TX_TL = 240, RX_TL = 15</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TL</name>
              <description>RX Trigger Level 0x0~0xFE: RX Trigger Level is 0~254 
0xFF: Reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA is request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  15 (means greater than 15) </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA is request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  15 (means greater than 15)</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TL</name>
              <description>TX Trigger Level 0x1~0xFF: TX Trigger Level is 1~255 
0x0: no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  240(means less than or equal to 240) </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_trigger</name>
                  <description>no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  240(means less than or equal to 240)</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FUNS</name>
          <description>FIFO Function Select Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ABT_RDATA</name>
              <description>Abort Read Data 
0: Ignored 
1: After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>After</name>
                  <description>After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_WAIT</name>
              <description>Read Wait 
0: Clear SDIO read wait 
1: Assert SDIO read wait </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear SDIO read wait</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert SDIO read wait</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_SEND_MMC_IRQRESQ</name>
              <description>Host Send MMC IRQ Response 
0: Ignored 
1: Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_HWRST</name>
          <description>Hardware Reset Register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HW_RST</name>
              <description>1: Active mode  
0: Reset  These bits cause the cards to enter pre-idle state, which requires them to be re-initialized. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_mode</name>
                  <description>Active mode</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset  These bits cause the cards to enter pre-idle state, which requires them to be re-initialized.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDIE_REG</name>
          <description>SMHC_IDIE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x337</resetMask>
          <fields>
            <field>
              <name>ERR_SUM_INT_ENB</name>
              <description>Card Error summary Interrupt Enable.  When set, it enables the Card Interrupt summary. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_UNAVL_INT_ENB</name>
              <description>Descriptor Unavailable Interrupt.  When set along with Abnormal Interrupt Summary Enable, the Descriptor Unavailable interrupt is enabled. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FERR_INT_ENB</name>
              <description>Fatal Bus Error Enable.  When set with Abnormal Interrupt Summary Enable, the Fatal Bus Error Interrupt is enabled. When reset, Fatal Bus Error Enable Interrupt is disabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_INT_ENB</name>
              <description>Receive Interrupt Enable.  When set with Normal Interrupt Summary Enable, Receive Interrupt is enabled. When reset, Receive Interrupt is disabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT_ENB</name>
              <description>Transmit Interrupt Enable.  When set with Normal Interrupt Summary Enable, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDST_REG</name>
          <description>SMHC_IDST_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF37</resetMask>
          <fields>
            <field>
              <name>DMAC_ERR_STA</name>
              <description>Error Bits.  Indicates the type of error that caused a Bus Error. Valid only with Fatal Bus Error bit (IDSTS[2]) set. This field does not generate an interrupt.  
001: Host Abort received during transmission  
010: Host Abort received during reception  Others: Reserved EB is read-only. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Host_Abort_received_during_transmission</name>
                  <description>Host Abort received during transmission</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Host_Abort_received_during</name>
                  <description>Host Abort received during reception</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ABN_INT_SUM</name>
              <description>Abnormal Interrupt Summary.  Logical OR of the following:  IDSTS[2]: Fatal Bus Interrupt  IDSTS[4]: Descriptor Unavailable bit Interrupt  IDSTS[5]: Card Error Summary Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes AIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NOR_INT_SUM</name>
              <description>Normal Interrupt Summary.  Logical OR of the following:  IDSTS[0]: Transmit Interrupt  IDSTS[1]: Receive Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes NIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ERR_FLAG_SUM</name>
              <description>Card Error Summary.  Indicates the status of the transaction to/from the card; also present in RINTSTS. Indicates the logical OR of the following bits:  
EBE: End Bit Error  RTO: Response Timeout/Boot ACK Timeout  RCRC: Response CRC  SBE: Start Bit Error  DRTO: Data Read Timeout/BDS timeout  DCRC: Data CRC for Receive  RE: Response Error  Writing a 1 clears this bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DES_UNAVL_INT</name>
              <description>Descriptor Unavailable Interrupt.  This bit is set when the descriptor is unavailable due to OWN bit = 0 (DES0[31] =0). Writing a 1 clears this bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FATAL_BERR_INT</name>
              <description>Fatal Bus Error Interrupt.  Indicates that a Bus Error occurred (IDSTS[12:10]). When this bit is set, the DMA disables all its bus accesses. Writing a 1 clears this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_INT</name>
              <description>Receive Interrupt.  Indicates the completion of data reception for a descriptor. Writing a 1 clears this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TX_INT</name>
              <description>Transmit Interrupt.  Indicates that data transmission is finished for a descriptor. Writing a `1` clears this bit. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_INTMASK</name>
          <description>Interrupt Mask Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL_INT_EN</name>
              <description>Card Removed Interrupt Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_INSERT_INT_EN</name>
              <description>Card Inserted Interrupt Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INT_EN</name>
              <description>SDIO Interrupt Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEE_INT_EN</name>
              <description>Data End-bit Error Interrupt Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACD_INT_EN</name>
              <description>Auto Command Done Interrupt Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSE_BC_INT_EN</name>
              <description>Data Start Error Interrupt Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_IW_INT_EN</name>
              <description>Command Busy and Illegal Write Interrupt Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FU_FO_INT_EN</name>
              <description>FIFO Underrun/Overflow Interrupt Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSTO_VSD_INT_EN</name>
              <description>Data Starvation Timeout/V1.8 Switch Done Interrupt Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTO_BDS_INT_EN</name>
              <description>Data Timeout/Boot Data Start Interrupt Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_BACK_INT_EN</name>
              <description>Response Timeout/Boot ACK Received Interrupt Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE_INT_EN</name>
              <description>Data CRC Error Interrupt Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCE_INT_EN</name>
              <description>Response CRC Error Interrupt Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRR_INT_EN</name>
              <description>Data Receive Request Interrupt Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR_INT_EN</name>
              <description>Data Transmit Request Interrupt Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTC_INT_EN</name>
              <description>Data Transfer Complete Interrupt Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC_INT_EN</name>
              <description>Command Complete Interrupt Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_INT_EN</name>
              <description>Response Error Interrupt Enable   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_MINTSTS</name>
          <description>Masked interrupt Status Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>M_CARD_REMOVAL_INT</name>
              <description>Card Removed </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CARD_INSERT</name>
              <description>Card Inserted </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_SDIO_INT</name>
              <description>SDIO Interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DEE_INT</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken or received CRC status taken is negative. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACD_INT</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSE_BC_INT</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CB_IW_INT</name>
              <description>Command Busy and Illegal Write </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_FU_FO_INT</name>
              <description>FIFO Underrun/Overflow </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSTO_VSD_INT</name>
              <description>Data Starvation Timeout/V1.8 Switch Done </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTO_BDS_INT</name>
              <description>Data Timeout/Boot Data Start </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RTO_BACK_INT</name>
              <description>Response Timeout/Boot ACK Received </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DCE_INT</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RCE_INT</name>
              <description>Response CRC Error </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DRR_INT</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTR_INT</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTC_INT</name>
              <description>Data Transfer Complete </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CC_INT</name>
              <description>Command Complete </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RE_INT</name>
              <description>Response Error When set, Transmit Bit error or End Bit error or CMD Index error may occurs. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP0</name>
          <description>Response 0 Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP0</name>
              <description>Response 0 Bit[31:0] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP1</name>
          <description>Response 1 Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP1</name>
              <description>Response 1 Bit[63:31] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP2</name>
          <description>Response 2 Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP2</name>
              <description>Response 2 Bit[95:64] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP3</name>
          <description>Response 3 Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP3</name>
              <description>Response 3 Bit[127:96] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP_CRC</name>
          <description>SMHC_RESP_CRC</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RESP_CRC</name>
              <description>Response CRC Response CRC from device. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RINTSTS</name>
          <description>Raw Interrupt Status Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL</name>
              <description>Card Removed This is write-1-to-clear bits. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CARD_INSERT</name>
              <description>Card Inserted This is write-1-to-clear bits. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SDIOI_INT</name>
              <description>SDIO Interrupt This is write-1-to-clear bits. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DEE</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken. This is write-1-to-clear bits. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ACD</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. This is write-1-to-clear bits. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSE_BC</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. This is write-1-to-clear bits. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CB_IW</name>
              <description>Command Busy and Illegal Write This is write-1-to-clear bits. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FU_FO</name>
              <description>FIFO Underrun/Overflow This is write-1-to-clear bits. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSTO_VSD</name>
              <description>Data Starvation Timeout/V1.8 Switch Done This is write-1-to-clear bits. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTO_BDS</name>
              <description>Data Timeout/Boot Data Start This is write-1-to-clear bits. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RTO_BACK</name>
              <description>Response Timeout/Boot ACK Received This is write-1-to-clear bits. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DCE</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. This is write-1-to-clear bits. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RCE</name>
              <description>Response CRC Error This is write-1-to-clear bits. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DRR</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. This is write-1-to-clear bits. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. This is write-1-to-clear bits. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTC</name>
              <description>Data Transfer Complete This is write-1-to-clear bits. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CC</name>
              <description>Command Complete This is write-1-to-clear bits. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RE</name>
              <description>Response Error When set, Transmit Bit error or End Bit error or CMD Index error may occurs. This is write-1-to-clear bits. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_SAMP_DL</name>
          <description>SMHC_SAMP_DL</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>SAMP_DL_CAL_START</name>
              <description>Sample Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_CAL_DONE</name>
              <description>Sample Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in SAMP_DL. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL</name>
              <description>Sample Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of card clock nearly.  Generally, it is necessary to do drive delay calibration when card clock is changed. This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL_SW_EN</name>
              <description>Sample Delay Software Enable When set, enable sample delay specified at SAMP_DL_SW </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_SW</name>
              <description>Sample Delay Software The relative delay between clock line and command line, data lines. It can be determined according to the value of SAMP_DL, the cycle of card clock and device`s input timing requirement. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_STATUS</name>
          <description>Status Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x83FFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_REQ</name>
              <description>DMA Request DMA request signal state </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_LEVEL</name>
              <description>FIFO Level Number of filled locations in FIFO </description>
              <bitRange>[25:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RESP_IDX</name>
              <description>Response Index Index of previous response, including any auto-stop sent by controller </description>
              <bitRange>[16:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSM_BUSY</name>
              <description>Data FSM Busy Data transmit or receive state-machine is busy </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CARD_BUSY</name>
              <description>Card data busy Inverted version of DATA[0] 
0: card data not busy 
1: card data busy </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_data_not_busy</name>
                  <description>card data not busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_data_busy</name>
                  <description>card data busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_PRESENT</name>
              <description>Data[3] status level of DATA[3], checks whether card is present 
0: card not present 
1: card present </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_not_present</name>
                  <description>card not present</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_present</name>
                  <description>card present</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_STA</name>
              <description>Command FSM States 
0000: Idle 
0001: Send init sequence 
0010: TX CMD start bit 
0011: TX CMD TX bit 
0100: TX CMD index + argument 
0101: TX CMD CRC7 
0110: TX CMD end bit 
0111: RX response start bit 
1000: RX response IRQ response 
1001: RX response TX bit 
1010: RX response CMD index 
1011: RX response data 
1100: RX response CRC7 
1101: RX response end bit 
1110: CMD path wait NCC 
1111: Wait; CMD-to-response turnaround </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO Full  
1: FIFO full 
0: FIFO not full </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_full</name>
                  <description>FIFO full</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO Empty 
1: FIFO Empty 
0: FIFO not Empty </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_Empty</name>
                  <description>FIFO Empty</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_not_Empty</name>
                  <description>FIFO not Empty</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_TX_LEVEL</name>
              <description>FIFO TX Water Level Flag 
0: FIFO didn`t reach transmit trigger level 
1: FIFO reached transmit trigger level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach transmit trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached transmit trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_RX_LEVEL</name>
              <description>FIFO TX Water Level Flag 
0: FIFO didn`t reach receive trigger level 
1: FIFO reached receive trigger level </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach receive trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached receive trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC0</name>
          <description>SMHC_TBC0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC0</name>
              <description>Transferred Count 0 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC1</name>
          <description>SMHC_TBC1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC1</name>
              <description>Transferred Count 1 Number of bytes transferred between Host/DMA memory and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_THLD</name>
          <description>Card Threshold Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0007</resetMask>
          <fields>
            <field>
              <name>CARD_RD_THLD</name>
              <description>Card Read Threshold Size </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_WR_THLD_ENB</name>
              <description>(only for SMHC2) Card Write Threshold Enable(HS400)  
0: Card write threshold disable  
1: Card write threshold enabled  Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_write_threshold_disable</name>
                  <description>Card write threshold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_write_threshold</name>
                  <description>Card write threshold enabled  Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCIG</name>
              <description>(only for SMHC2) Busy Clear Interrupt Generation  
0: Busy Clear Interrupt disabled  
1: Busy Clear Interrupt Enabled  The application can disable this feature if it does not want to wait for a Busy Clear Interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_disabled</name>
                  <description>Busy Clear Interrupt disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Enabled</name>
                  <description>Busy Clear Interrupt Enabled  The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_RD_THLD_ENB</name>
              <description>Card Read Threshold Enable 
0: Card Read Threshold Disable 
1: Card Read Threshold Enable Host controller initiates Read Transfer only if CARD_RD_THLD amount of space is available in receive FIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Disable</name>
                  <description>Card Read Threshold Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Enable</name>
                  <description>Card Read Threshold Enable Host controller initiates Read Transfer only if CARD_RD_THLD amount of space is available in receive FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TMOUT</name>
          <description>Time Out Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xFFFFFF40</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DTO_LMT</name>
              <description>Data Timeout Limit </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_LMT</name>
              <description>Response Timeout Limit </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SMHC2</name>
      <description>SMHC2</description>
      <groupName>generic</groupName>
      <baseAddress>0x4022000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SMHC_BLKSIZ</name>
          <description>Block Size Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BLK_SZ</name>
              <description>Block Size </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BYTCNT</name>
          <description>Byte Count Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BYTE_CNT</name>
              <description>Byte counter Number of bytes to be transferred; should be integer multiple of Block Size for block transfers. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CLKDIV</name>
          <description>Clock Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800300FF</resetMask>
          <fields>
            <field>
              <name>MASK_DATA0</name>
              <description>0: Do not mask data0 when update clock  
1: Mask data0 when update clock </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_mask</name>
                  <description>Do not mask data0 when update clock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask data0 when update clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_CTRL</name>
              <description>Card Clock Output Control 0 : Card clock always on 1 : Turn off card clock when FSM in IDLE state </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCLK_ENB</name>
              <description>Card Clock Enable 
0: Card Clock off 
1: Card Clock on </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Clock_off</name>
                  <description>Card Clock off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Clock_on</name>
                  <description>Card Clock on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_DIV</name>
              <description>Card clock divider n: Source clock is divided by 2*n.(n=0~255) when HS400_MD_EN is set, this field must be cleared. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMD</name>
          <description>Command Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F20FFFF</resetMask>
          <fields>
            <field>
              <name>CMD_LOAD</name>
              <description>Start Command. This bit is auto cleared when current command is sent. If there is no any response error happened, a command complete interrupt bit (CMD_OVER) will be set in interrupt register. You should not write any other command before this bit is cleared, or a command busy interrupt bit (CMD_BUSY) will be set in interrupt register. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_SW</name>
              <description>Voltage Switch 
0: normal command 
1: Voltage switch command, set for CMD11 only </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Voltage</name>
                  <description>Voltage switch command, set for CMD11 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_ABT</name>
              <description>Boot Abort Setting this bit will terminate the boot operation. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXP_BOOT_ACK</name>
              <description>Expect Boot Acknowledge.  When Software sets this bit along in mandatory boot operation, controller expects a boot acknowledge start pattern of 0-1-0 from the selected card. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_MOD</name>
              <description>Boot Mode 
00: Normal command 
01: Mandatory Boot operation 
10: Alternate Boot operation 
11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mandatory</name>
                  <description>Mandatory Boot operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Alternate</name>
                  <description>Alternate Boot operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRG_CLK</name>
              <description>Change Clock 
0: Normal command 
1: Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Change</name>
                  <description>Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEND_INIT_SEQ</name>
              <description>Send Initialization 
0: Normal command sending 
1: Send initialization sequence before sending this command. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send initialization sequence before sending this command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_ABT_CMD</name>
              <description>Stop Abort Command 
0: Normal command sending 
1: Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR) </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_PRE_OVER</name>
              <description>Wait Data Transfer Over 
0: Send command at once, do not care of data transferring 
1: Wait for data transfer completion before sending current command </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send command at once, do not care of data transferring</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wait</name>
                  <description>Wait for data transfer completion before sending current command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_CMD_FLAG</name>
              <description>Send Stop CMD Automatically (CMD12) 
0: Do not send stop command at end of data transfer 
1: Send stop command automatically at end of data transfer </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_send</name>
                  <description>Do not send stop command at end of data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send stop command automatically at end of data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_MODE</name>
              <description>Transfer Mode 
0: Block data transfer command 
1: Stream data transfer command </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Block_data</name>
                  <description>Block data transfer command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stream_data</name>
                  <description>Stream data transfer command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_DIR</name>
              <description>Transfer Direction 
0: Read operation 
1: Write operation </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write operation</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_TRANS</name>
              <description>Data Transfer 
0: without data transfer 
1: with data transfer </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>without_data</name>
                  <description>without data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>with_data</name>
                  <description>with data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHK_RESP_CRC</name>
              <description>Check Response CRC 
0: Do not check response CRC 
1: Check response CRC </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_check</name>
                  <description>Do not check response CRC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Check</name>
                  <description>Check response CRC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LONG_RESP</name>
              <description>Response Type 0:Short Response (48 bits) 1:Long Response (136 bits) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESP_RCV</name>
              <description>Response Receive 
0: Command without Response 
1: Command with Response </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command_without_Response</name>
                  <description>Command without Response</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Command_with_Response</name>
                  <description>Command with Response</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_IDX</name>
              <description>CMD Index Command index value </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMDARG</name>
          <description>Command Argument Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_ARG</name>
              <description>Command argument </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CRC_STA</name>
          <description>CRC Status from Device in Write Operation</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CRC_STA</name>
              <description>CRC Status CRC status from device in write operation  Positive CRC status token: 3`b010 Negative CRC status token: 3`b101 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CSDC</name>
          <description>CRC Status Detect Control Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CRC_DET_PARA</name>
              <description>110: HS400 speed mode 
011: Other speed mode </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTRL</name>
          <description>Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x80001D37</resetMask>
          <fields>
            <field>
              <name>FIFO_AC_MOD</name>
              <description>FIFO Access Mode 
1: AHB bus 
0: DMA bus </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AHB</name>
                  <description>AHB bus</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA bus</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_CMD</name>
              <description>Time unit for command line Time unit used to calculate command line time out value defined in RTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_DAT</name>
              <description>Time unit for data line Time unit used to calculate data line time out value defined in DTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_MOD_SEL</name>
              <description>DDR Mode Select Although eMMC`s HS400 speed mode is 8-bit DDR, this filed should be cleared when HS400_MD_EN is set. 
0: SDR mode 
1: DDR mode </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDR_mode</name>
                  <description>SDR mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DDR_mode</name>
                  <description>DDR mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CD_DBC_ENB</name>
              <description>Card Detect (Data[3] status) De-bounce Enable 
0: Disable de-bounce 
1: Enable de-bounce </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable de-bounce</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable de-bounce</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_ENB</name>
              <description>DMA Global Enable 
0: Disable DMA to transfer data, using AHB bus 
1: Enable DMA to transfer data </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable DMA to transfer data, using AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable DMA to transfer data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_ENB</name>
              <description>Global Interrupt Enable 
0: Disable interrupts 
1: Enable interrupts </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupts</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_RST</name>
              <description>FIFO Reset 
0: No change 
1: Reset FIFO This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset FIFO This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Software Reset 
0: No change 
1: Reset SD/MMC controller This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset SD/MMC controller This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTYPE</name>
          <description>Bus Width Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CARD_WID</name>
              <description>Card Width 
00: 1-bit width 
01: 4-bit width 
1x: 8-bit width </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_bit</name>
                  <description>1-bit width</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_bit</name>
                  <description>4-bit width</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit width</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT0_CRC</name>
          <description>SMHC_DAT0_CRC</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT0_CRC</name>
              <description>Data[0] CRC CRC in data[0] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT1_CRC</name>
          <description>SMHC_DAT1_CRC</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT1_CRC</name>
              <description>Data[1] CRC CRC in data[1] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT2_CRC</name>
          <description>SMHC_DAT2_CRC</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT2_CRC</name>
              <description>Data[2] CRC CRC in data[2] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT3_CRC</name>
          <description>SMHC_DAT3_CRC</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT3_CRC</name>
              <description>Data[3] CRC CRC in data[3] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT4_CRC</name>
          <description>SMHC_DAT4_CRC</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT4_CRC</name>
              <description>Data[4] CRC CRC in data[4] from device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT5_CRC</name>
          <description>SMHC_DAT5_CRC</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT5_CRC</name>
              <description>Data[5] CRC CRC in data[5] from device. In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT6_CRC</name>
          <description>SMHC_DAT6_CRC</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT6_CRC</name>
              <description>Data[6] CRC CRC in data[6] from device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DAT7_CRC</name>
          <description>SMHC_DAT7_CRC</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT7_CRC</name>
              <description>Data[7] CRC CRC in data[7] from device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DLBA_REG</name>
          <description>SMHC_DLBA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_BASE_ADDR</name>
              <description>Start of Descriptor List.  Contains the base address of the First Descriptor. The LSB bits [1:0] are ignored and taken as all-zero by the IDMAC internally. Hence these LSB bits are read-only. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DMAC</name>
          <description>DMA Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800007FF</resetMask>
          <fields>
            <field>
              <name>DES_LOAD_CTRL</name>
              <description>When DMAC fetches a descriptor, if the valid bit of a descriptor is not set, DMAC FSM will go to the suspend state. Setting this bit will make DMAC re-fetch descriptor again and do the transfer normally. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IDMAC_ENB</name>
              <description>IDMAC Enable.  When set, the IDMAC is enabled. DE is read/write. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_BUST_CTRL</name>
              <description>Fixed Burst.  Controls whether the AHB Master interface performs fixed burst transfers or not. When set, the AHB will use only SINGLE, INCR4, INCR8 during start of normal burst transfers. When reset, the AHB will use SINGLE and INCR burst transfer operations.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMAC_RST</name>
              <description>DMA Reset.  When set, the DMA Controller resets all its internal registers. SWR is read/write. It is automatically cleared after 1 clock cycle. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DRV_DL</name>
          <description>Drive Delay Control Register</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30000</resetMask>
          <fields>
            <field>
              <name>DAT_DRV_PH_SEL</name>
              <description>Data Drive Phase Select 
0: Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode. 
1: Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DRV_PH_SEL</name>
              <description>Command Drive Phase Select 
0: Command drive phase offset is 90 at SDR mode, 45  at DDR mode, 90 at HS400 mode. 
1: Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Command drive phase offset is 90 at SDR mode, 45  at DDR mode, 90 at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 0 at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DS_DL</name>
          <description>Data Strobe Delay Control Register</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>DS_DL_CAL_START</name>
              <description>Data Strobe Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_CAL_DONE</name>
              <description>Data Strobe Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in DS_DL. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL</name>
              <description>Data Strobe Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of SMHC`s clock nearly.  This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL_SW_EN</name>
              <description>Sample Delay Software Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_SW</name>
              <description>Data Strobe Delay Software </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EDSD</name>
          <description>eMMC4.5 DDR Start Bit Detection Control Register</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>HS400_MD_EN</name>
              <description>HS400_MD_EN(for SMHC2 only) HS400 Mode Enable  
0: Disable  
1: Enable  It is required to set this bit to '1' before initiating any data transfer CMD in HS400 mode. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  It is required to set this bit to '1' before initiating any data transfer CMD in HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALF_START_BIT</name>
              <description>Control for start bit detection mechanism inside mstorage based on duration of start bit.  For eMMC 4.5, start bit can be:  
0: Full cycle   
1: Less than one full cycle  Set HALF_START_BIT=1 for eMMC 4.5 and above; set to 0 for SD applications. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_cycle</name>
                  <description>Full cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Less</name>
                  <description>Less than one full cycle  Set HALF_START_BIT=1 for eMMC 4.5 and above; set to 0 for SD applications.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EMCE</name>
          <description>Embedded Encrypt and Decrypt Control Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x2000000</resetValue>
          <resetMask>0xFFFF00D3</resetMask>
          <fields>
            <field>
              <name>SEC_SZ</name>
              <description>Sector Size of EMCE. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BM_BLK_SZ</name>
              <description>The size of bitmap-block size. 
0: 512 Byte 
1: 4096 Byte </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512 Byte</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4096</name>
                  <description>4096 Byte</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BM_EN</name>
              <description>0: Disable bitmap. 
1: Enable bitmap.  This bit is valid when EMCE is enable and use DMA transfer.  If this bit is cleared, all data blocks associated with one write/read command will be encrypted/decrypted.  If this bit is set, the data will be divided into many bitmap-blocks aligned to BM_BLK_SZ. The bitmap-blocks are associated with the bits of SMHC_EMCE_BMn register, and will be or will not be encrypted/decrypted determined by these bitmap bits. SMHC can support the last bitmap-block is not aligned to BM_BLK_SZ.  </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable bitmap.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable bitmap.  This bit is valid when EMCE is enable and use DMA transfer.  If this bit is cleared, all data blocks associated with one write/read command will be encrypted/decrypted.  If this bit is set, the data will be divided into many bitmap-blocks aligned to BM_BLK_SZ. The bitmap-blocks are associated with the bits of SMHC_EMCE_BMn register, and will be or will not be encrypted/decrypted determined by these bitmap bits. SMHC can support the last bitmap-block is not aligned to BM_BLK_SZ.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_ENCR</name>
              <description>0:disabled encrypt and decrypt.Encrypt and decrypt will be bypassed in EMCE 1:enable encrypt and decrypt This bit is only available when EMCE_ENB is 1. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AC_MD</name>
              <description>Access Mode 
0: Sector mode. The data address to access device is in sector(512 bytes) units. SMHC_CMDARG is a 32bit sector(512 bytes) address. 
1: Byte mode. The data address to access device is in bytes units. SMHC_CMDARG is a 32bit byte address. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sector</name>
                  <description>Sector mode. The data address to access device is in sector(512 bytes) units. SMHC_CMDARG is a 32bit sector(512 bytes) address.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Byte</name>
                  <description>Byte mode. The data address to access device is in bytes units. SMHC_CMDARG is a 32bit byte address.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_ENB</name>
              <description>EMCE Enable 
0: EMCE is disabled.EMCE will be bypass by host controller. 
1: EMCE is enabled. The data of current command shall go through EMCE.Encrypt or decrypt is decided by EMCE_ENCR.  The type and configuration of encryption algorithm are determined by EMCE`s initial process, and out of this specification. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled_point_EMCE</name>
                  <description>EMCE is disabled.EMCE will be bypass by host controller.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>EMCE is enabled. The data of current command shall go through EMCE.Encrypt or decrypt is decided by EMCE_ENCR.  The type and configuration of encryption algorithm are determined by EMCE`s initial process, and out of this specification.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>SMHC_EMCE_BMn[%s]</name>
          <description>SMHC_EMCE_BMn[%s]</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BM</name>
              <description>From LSB to MSB of SMHC_EMCE_BMn, each bit associates with one bitmap-block. 
0: The associated bitmap-block will be bypassed in EMCE. 
1: The associated bitmap-block will be encrypted/decrypted in EMCE.  The total bits of all bitmap registers are 32*32=1024. The size of bitmap-block is determined by SMHC_EMCE BM_BLK_SZ, it may be 512 Byte or 4096 Byte.  The maximum data size indicated by all 32 bitmap registers is 512K Byte or 4M Byte. In other words, the maximum data size of one multi-block write/read command is limited to 512K Byte or 4M Byte. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EMCE_DBG</name>
          <description>Embedded Encrypt and Decrypt Debug Register</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF3FF7</resetMask>
          <fields>
            <field>
              <name>EMCE_FIFO_LVL</name>
              <description>EMCE FIFO level in byte When transmitting data, it shows the number of data in FIFO which received from EMCE , then send from SMHC to device. When receiving dat, it shows the number of data in FIFO which is read from device, then send to EMCE. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BM_BLK_CNT</name>
              <description>Bitmap-block couter This field counts the number of bitmap-block for each write/read command. It is cleared when lunch a new command. </description>
              <bitRange>[13:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BM_BLK_BYPASS</name>
              <description>1: Current bitmap-block is bypassed, and will not be encrypted/decrypted. 
0: Current will be encrypted/decrypted. This bit is valid only when EMCE_ENB is 1 and EMCE_ENCR is 0. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Current_bitmap_minus_block</name>
                  <description>Current bitmap-block is bypassed, and will not be encrypted/decrypted.</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Current_will_be</name>
                  <description>Current will be encrypted/decrypted. This bit is valid only when EMCE_ENB is 1 and EMCE_ENCR is 0.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMCE_FIFO_UN</name>
              <description>When this bit is set, EMCE FIFO is underrun. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMCE_FIFO_OV</name>
              <description>When this bit is set, EMCE FIFO is overflow. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFO</name>
          <description>Read/ Write FIFO</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX/RX_FIFO</name>
              <description>Data FIFO </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFOTH</name>
          <description>FIFO Water Level Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xF0000</resetValue>
          <resetMask>0x70FF00FF</resetMask>
          <fields>
            <field>
              <name>BSIZE_OF_TRANS</name>
              <description>Burst Size of Multiple Transaction 
000: 1 transfers 
001: 4 
010: 8 
011: 16 Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) FIFO_DEPTH = 256 FIFO_SIZE = 256 * 32 = 1K  Recommended: MSize = 16, TX_TL = 240, RX_TL = 15 </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 transfers</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) FIFO_DEPTH = 256 FIFO_SIZE = 256 * 32 = 1K  Recommended: MSize = 16, TX_TL = 240, RX_TL = 15</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TL</name>
              <description>RX Trigger Level 0x0~0xFE: RX Trigger Level is 0~254 
0xFF: Reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA is request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  15 (means greater than 15) </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA is request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  15 (means greater than 15)</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TL</name>
              <description>TX Trigger Level 0x1~0xFF: TX Trigger Level is 1~255 
0x0: no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  240(means less than or equal to 240) </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_trigger</name>
                  <description>no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual.  Recommended:  240(means less than or equal to 240)</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FUNS</name>
          <description>FIFO Function Select Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ABT_RDATA</name>
              <description>Abort Read Data 
0: Ignored 
1: After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>After</name>
                  <description>After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_WAIT</name>
              <description>Read Wait 
0: Clear SDIO read wait 
1: Assert SDIO read wait </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear SDIO read wait</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert SDIO read wait</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_SEND_MMC_IRQRESQ</name>
              <description>Host Send MMC IRQ Response 
0: Ignored 
1: Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_HWRST</name>
          <description>Hardware Reset Register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HW_RST</name>
              <description>1: Active mode  
0: Reset  These bits cause the cards to enter pre-idle state, which requires them to be re-initialized. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_mode</name>
                  <description>Active mode</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset  These bits cause the cards to enter pre-idle state, which requires them to be re-initialized.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDIE_REG</name>
          <description>SMHC_IDIE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x337</resetMask>
          <fields>
            <field>
              <name>ERR_SUM_INT_ENB</name>
              <description>Card Error summary Interrupt Enable.  When set, it enables the Card Interrupt summary. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_UNAVL_INT_ENB</name>
              <description>Descriptor Unavailable Interrupt.  When set along with Abnormal Interrupt Summary Enable, the Descriptor Unavailable interrupt is enabled. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FERR_INT_ENB</name>
              <description>Fatal Bus Error Enable.  When set with Abnormal Interrupt Summary Enable, the Fatal Bus Error Interrupt is enabled. When reset, Fatal Bus Error Enable Interrupt is disabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_INT_ENB</name>
              <description>Receive Interrupt Enable.  When set with Normal Interrupt Summary Enable, Receive Interrupt is enabled. When reset, Receive Interrupt is disabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT_ENB</name>
              <description>Transmit Interrupt Enable.  When set with Normal Interrupt Summary Enable, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDST_REG</name>
          <description>SMHC_IDST_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF37</resetMask>
          <fields>
            <field>
              <name>DMAC_ERR_STA</name>
              <description>Error Bits.  Indicates the type of error that caused a Bus Error. Valid only with Fatal Bus Error bit (IDSTS[2]) set. This field does not generate an interrupt.  
001: Host Abort received during transmission  
010: Host Abort received during reception  Others: Reserved EB is read-only. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Host_Abort_received_during_transmission</name>
                  <description>Host Abort received during transmission</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Host_Abort_received_during</name>
                  <description>Host Abort received during reception</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ABN_INT_SUM</name>
              <description>Abnormal Interrupt Summary.  Logical OR of the following:  IDSTS[2]: Fatal Bus Interrupt  IDSTS[4]: Descriptor Unavailable bit Interrupt  IDSTS[5]: Card Error Summary Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes AIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NOR_INT_SUM</name>
              <description>Normal Interrupt Summary.  Logical OR of the following:  IDSTS[0]: Transmit Interrupt  IDSTS[1]: Receive Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes NIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ERR_FLAG_SUM</name>
              <description>Card Error Summary.  Indicates the status of the transaction to/from the card; also present in RINTSTS. Indicates the logical OR of the following bits:  
EBE: End Bit Error  RTO: Response Timeout/Boot ACK Timeout  RCRC: Response CRC  SBE: Start Bit Error  DRTO: Data Read Timeout/BDS timeout  DCRC: Data CRC for Receive  RE: Response Error  Writing a 1 clears this bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DES_UNAVL_INT</name>
              <description>Descriptor Unavailable Interrupt.  This bit is set when the descriptor is unavailable due to OWN bit = 0 (DES0[31] =0). Writing a 1 clears this bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FATAL_BERR_INT</name>
              <description>Fatal Bus Error Interrupt.  Indicates that a Bus Error occurred (IDSTS[12:10]). When this bit is set, the DMA disables all its bus accesses. Writing a 1 clears this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_INT</name>
              <description>Receive Interrupt.  Indicates the completion of data reception for a descriptor. Writing a 1 clears this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TX_INT</name>
              <description>Transmit Interrupt.  Indicates that data transmission is finished for a descriptor. Writing a `1` clears this bit. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_INTMASK</name>
          <description>Interrupt Mask Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL_INT_EN</name>
              <description>Card Removed Interrupt Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_INSERT_INT_EN</name>
              <description>Card Inserted Interrupt Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INT_EN</name>
              <description>SDIO Interrupt Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEE_INT_EN</name>
              <description>Data End-bit Error Interrupt Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACD_INT_EN</name>
              <description>Auto Command Done Interrupt Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSE_BC_INT_EN</name>
              <description>Data Start Error Interrupt Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_IW_INT_EN</name>
              <description>Command Busy and Illegal Write Interrupt Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FU_FO_INT_EN</name>
              <description>FIFO Underrun/Overflow Interrupt Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSTO_VSD_INT_EN</name>
              <description>Data Starvation Timeout/V1.8 Switch Done Interrupt Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTO_BDS_INT_EN</name>
              <description>Data Timeout/Boot Data Start Interrupt Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_BACK_INT_EN</name>
              <description>Response Timeout/Boot ACK Received Interrupt Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE_INT_EN</name>
              <description>Data CRC Error Interrupt Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCE_INT_EN</name>
              <description>Response CRC Error Interrupt Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRR_INT_EN</name>
              <description>Data Receive Request Interrupt Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR_INT_EN</name>
              <description>Data Transmit Request Interrupt Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTC_INT_EN</name>
              <description>Data Transfer Complete Interrupt Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC_INT_EN</name>
              <description>Command Complete Interrupt Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_INT_EN</name>
              <description>Response Error Interrupt Enable   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_MINTSTS</name>
          <description>Masked interrupt Status Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>M_CARD_REMOVAL_INT</name>
              <description>Card Removed </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CARD_INSERT</name>
              <description>Card Inserted </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_SDIO_INT</name>
              <description>SDIO Interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DEE_INT</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken or received CRC status taken is negative. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACD_INT</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSE_BC_INT</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CB_IW_INT</name>
              <description>Command Busy and Illegal Write </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_FU_FO_INT</name>
              <description>FIFO Underrun/Overflow </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSTO_VSD_INT</name>
              <description>Data Starvation Timeout/V1.8 Switch Done </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTO_BDS_INT</name>
              <description>Data Timeout/Boot Data Start </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RTO_BACK_INT</name>
              <description>Response Timeout/Boot ACK Received </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DCE_INT</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RCE_INT</name>
              <description>Response CRC Error </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DRR_INT</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTR_INT</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTC_INT</name>
              <description>Data Transfer Complete </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CC_INT</name>
              <description>Command Complete </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RE_INT</name>
              <description>Response Error When set, Transmit Bit error or End Bit error or CMD Index error may occurs. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP0</name>
          <description>Response 0 Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP0</name>
              <description>Response 0 Bit[31:0] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP1</name>
          <description>Response 1 Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP1</name>
              <description>Response 1 Bit[63:31] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP2</name>
          <description>Response 2 Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP2</name>
              <description>Response 2 Bit[95:64] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP3</name>
          <description>Response 3 Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP3</name>
              <description>Response 3 Bit[127:96] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP_CRC</name>
          <description>SMHC_RESP_CRC</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RESP_CRC</name>
              <description>Response CRC Response CRC from device. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RINTSTS</name>
          <description>Raw Interrupt Status Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL</name>
              <description>Card Removed This is write-1-to-clear bits. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CARD_INSERT</name>
              <description>Card Inserted This is write-1-to-clear bits. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SDIOI_INT</name>
              <description>SDIO Interrupt This is write-1-to-clear bits. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DEE</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken. This is write-1-to-clear bits. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ACD</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. This is write-1-to-clear bits. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSE_BC</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. This is write-1-to-clear bits. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CB_IW</name>
              <description>Command Busy and Illegal Write This is write-1-to-clear bits. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FU_FO</name>
              <description>FIFO Underrun/Overflow This is write-1-to-clear bits. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSTO_VSD</name>
              <description>Data Starvation Timeout/V1.8 Switch Done This is write-1-to-clear bits. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTO_BDS</name>
              <description>Data Timeout/Boot Data Start This is write-1-to-clear bits. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RTO_BACK</name>
              <description>Response Timeout/Boot ACK Received This is write-1-to-clear bits. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DCE</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. This is write-1-to-clear bits. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RCE</name>
              <description>Response CRC Error This is write-1-to-clear bits. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DRR</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. This is write-1-to-clear bits. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. This is write-1-to-clear bits. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTC</name>
              <description>Data Transfer Complete This is write-1-to-clear bits. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CC</name>
              <description>Command Complete This is write-1-to-clear bits. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RE</name>
              <description>Response Error When set, Transmit Bit error or End Bit error or CMD Index error may occurs. This is write-1-to-clear bits. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_SAMP_DL</name>
          <description>SMHC_SAMP_DL</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>SAMP_DL_CAL_START</name>
              <description>Sample Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_CAL_DONE</name>
              <description>Sample Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in SAMP_DL. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL</name>
              <description>Sample Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of card clock nearly.  Generally, it is necessary to do drive delay calibration when card clock is changed. This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL_SW_EN</name>
              <description>Sample Delay Software Enable When set, enable sample delay specified at SAMP_DL_SW </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_SW</name>
              <description>Sample Delay Software The relative delay between clock line and command line, data lines. It can be determined according to the value of SAMP_DL, the cycle of card clock and device`s input timing requirement. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_STATUS</name>
          <description>Status Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x83FFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_REQ</name>
              <description>DMA Request DMA request signal state </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_LEVEL</name>
              <description>FIFO Level Number of filled locations in FIFO </description>
              <bitRange>[25:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RESP_IDX</name>
              <description>Response Index Index of previous response, including any auto-stop sent by controller </description>
              <bitRange>[16:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSM_BUSY</name>
              <description>Data FSM Busy Data transmit or receive state-machine is busy </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CARD_BUSY</name>
              <description>Card data busy Inverted version of DATA[0] 
0: card data not busy 
1: card data busy </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_data_not_busy</name>
                  <description>card data not busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_data_busy</name>
                  <description>card data busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_PRESENT</name>
              <description>Data[3] status level of DATA[3], checks whether card is present 
0: card not present 
1: card present </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_not_present</name>
                  <description>card not present</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_present</name>
                  <description>card present</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_STA</name>
              <description>Command FSM States 
0000: Idle 
0001: Send init sequence 
0010: TX CMD start bit 
0011: TX CMD TX bit 
0100: TX CMD index + argument 
0101: TX CMD CRC7 
0110: TX CMD end bit 
0111: RX response start bit 
1000: RX response IRQ response 
1001: RX response TX bit 
1010: RX response CMD index 
1011: RX response data 
1100: RX response CRC7 
1101: RX response end bit 
1110: CMD path wait NCC 
1111: Wait; CMD-to-response turnaround </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO Full  
1: FIFO full 
0: FIFO not full </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_full</name>
                  <description>FIFO full</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO Empty 
1: FIFO Empty 
0: FIFO not Empty </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_Empty</name>
                  <description>FIFO Empty</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_not_Empty</name>
                  <description>FIFO not Empty</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_TX_LEVEL</name>
              <description>FIFO TX Water Level Flag 
0: FIFO didn`t reach transmit trigger level 
1: FIFO reached transmit trigger level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach transmit trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached transmit trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_RX_LEVEL</name>
              <description>FIFO TX Water Level Flag 
0: FIFO didn`t reach receive trigger level 
1: FIFO reached receive trigger level </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach receive trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached receive trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC0</name>
          <description>SMHC_TBC0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC0</name>
              <description>Transferred Count 0 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC1</name>
          <description>SMHC_TBC1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC1</name>
              <description>Transferred Count 1 Number of bytes transferred between Host/DMA memory and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_THLD</name>
          <description>Card Threshold Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0007</resetMask>
          <fields>
            <field>
              <name>CARD_RD_THLD</name>
              <description>Card Read Threshold Size </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_WR_THLD_ENB</name>
              <description>(only for SMHC2) Card Write Threshold Enable(HS400)  
0: Card write threshold disable  
1: Card write threshold enabled  Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_write_threshold_disable</name>
                  <description>Card write threshold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_write_threshold</name>
                  <description>Card write threshold enabled  Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCIG</name>
              <description>(only for SMHC2) Busy Clear Interrupt Generation  
0: Busy Clear Interrupt disabled  
1: Busy Clear Interrupt Enabled  The application can disable this feature if it does not want to wait for a Busy Clear Interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_disabled</name>
                  <description>Busy Clear Interrupt disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Enabled</name>
                  <description>Busy Clear Interrupt Enabled  The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_RD_THLD_ENB</name>
              <description>Card Read Threshold Enable 
0: Card Read Threshold Disable 
1: Card Read Threshold Enable Host controller initiates Read Transfer only if CARD_RD_THLD amount of space is available in receive FIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Disable</name>
                  <description>Card Read Threshold Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Enable</name>
                  <description>Card Read Threshold Enable Host controller initiates Read Transfer only if CARD_RD_THLD amount of space is available in receive FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TMOUT</name>
          <description>Time Out Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xFFFFFF40</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DTO_LMT</name>
              <description>Data Timeout Limit </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_LMT</name>
              <description>Response Timeout Limit </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>Spinlock</name>
      <description>Spinlock</description>
      <groupName>generic</groupName>
      <baseAddress>0x3004000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>SPINLOCKN_LOCK_REG[%s]</name>
          <description>SPINLOCKN_LOCK_REG[%s]</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TAKEN</name>
              <description>Lock State. Read 0x0: The lock was previously Not Taken (free).The requester is granted the lock. Write 0x0: Set the lock to Not Taken (free). Read 0x1: The lock was previously Taken. The requester is not granted the lock and must retry. Write 0x1: No update to the lock value. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPINLOCK_STATUS_REG</name>
          <description>Spinlock Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOCK_REG_STATUS__31</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__30</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__29</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__28</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__27</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__26</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__25</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__24</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__23</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__22</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__21</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__20</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__19</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__18</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__17</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__16</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__15</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__14</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__13</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__12</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__11</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__10</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__9</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__8</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__7</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__6</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__5</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__4</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__3</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__2</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__1</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__0</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPINLOCK_SYSTATUS_REG</name>
          <description>Spinlock System Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0x30000100</resetMask>
          <fields>
            <field>
              <name>LOCKS_NUM</name>
              <description>Number of lock registers implemented. 
00: This instance has 32 lock registers. 
01: This instance has 64 lock registers. 
10: This instance has 128 lock registers. 
11: This instance has 256 lock registers. </description>
              <bitRange>[29:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>This_instance_has_32</name>
                  <description>This instance has 32 lock registers.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_64</name>
                  <description>This instance has 64 lock registers.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_128</name>
                  <description>This instance has 128 lock registers.</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_256</name>
                  <description>This instance has 256 lock registers.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IU0</name>
              <description>In-Use flag0, covering lock register0-31. 
0: All lock register 0-31 are in the NotTaken state. 
1: At least one of the lock register 0-31 is in the Taken state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>All</name>
                  <description>All lock register 0-31 are in the NotTaken state.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>At</name>
                  <description>At least one of the lock register 0-31 is in the Taken state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI0</name>
      <description>SPI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x5010000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SPI_BATC</name>
          <description>SPI_BATC</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xA0</resetValue>
          <resetMask>0xC33F3FEF</resetMask>
          <fields>
            <field>
              <name>TCE_TRANSFER</name>
              <description>TCE Transfer Control Enable In master mode, it is used to start to transfer the serial bits frame, it is only valid when Work Mode Select==0x10/0x11.  
0: Idle 
1: Initiates transfer.  Writing `1` to this bit will start to transfer serial bits frame(the value comes from the SPI TX Bit Register or SPI RX Bit Register ), and will auto clear after the bursts transfer completely. Writing `0` to this bit has no effect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Initiates</name>
                  <description>Initiates transfer.  Writing `1` to this bit will start to transfer serial bits frame(the value comes from the SPI TX Bit Register or SPI RX Bit Register ), and will auto clear after the bursts transfer completely. Writing `0` to this bit has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSMS_MASTER</name>
              <description>MSMS Master Sample Standard 
1: Standard Sample Mode 
0: Delay Sample Mode In Standard Sample Mode, SPI master samples the data at the standard   rising edge of SCLK for each SPI mode; In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the standard rising edge of SCLK defined in respective SPI mode. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Standard</name>
                  <description>Standard Sample Mode</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay Sample Mode In Standard Sample Mode, SPI master samples the data at the standard   rising edge of SCLK for each SPI mode; In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the standard rising edge of SCLK defined in respective SPI mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TBC_TRANSFER</name>
              <description>TBC Transfer Bits Completed When set, this bit indicates that the last bit of the serial data frame in SPI TX Bit Register SPI RX Bit Register has been transferred completely. Writing 1 to this bit clears it. 
0: Busy 
1: Transfer Completed It is only valid when Work Mode Select==0x10/0x11. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer Completed It is only valid when Work Mode Select==0x10/0x11.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TBC_INT_EN_TRANSFER</name>
              <description>TBC_INT_EN Transfer Bits Completed Interrupt Enable 
0: Disable 
1: Enable It is only valid when Work Mode Select==0x10/0x11.  </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable It is only valid when Work Mode Select==0x10/0x11.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_BURST_LEN</name>
              <description>Configure the length of serial data frame(burst) of RX  
000000: 0bit 
000001: 1bit ... 
100000: 32bits Other values: reserved  It is only valid when Work Mode Select==0x10/0x11, and can`t be written when TCE=1. </description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0bit</name>
                  <description>0bit</description>
                  <value>0b000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1bit</name>
                  <description>1bit ...</description>
                  <value>0b000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32bits</name>
                  <description>32bits Other values: reserved  It is only valid when Work Mode Select==0x10/0x11, and can`t be written when TCE=1.</description>
                  <value>0b100000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_BURST_LEN</name>
              <description>Configure the length of serial data frame(burst) of TX  
000000: 0bit 
000001: 1bit ... 
100000: 32bits Other values: reserved   It is only valid when Work Mode Select==0x10/0x11, and can`t be written when TCE=1. </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0bit</name>
                  <description>0bit</description>
                  <value>0b000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1bit</name>
                  <description>1bit ...</description>
                  <value>0b000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32bits</name>
                  <description>32bits Other values: reserved   It is only valid when Work Mode Select==0x10/0x11, and can`t be written when TCE=1.</description>
                  <value>0b100000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_LEVEL</name>
              <description>SS_LEVEL When control SS signal manually , set this bit to `1` or `0` to control the level of SS signal. 
0: set SS to low 
1: set SS to high It is only valid when Work Mode Select==0x10/0x11, and only work in Mode0 , can`t be written when TCE=1. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>set_SS_to_low</name>
                  <description>set SS to low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>set_SS_to_high</name>
                  <description>set SS to high It is only valid when Work Mode Select==0x10/0x11, and only work in Mode0 , can`t be written when TCE=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_OWNER_SS</name>
              <description>SS_OWNER SS Output Owner Select Usually, controller sends SS signal automatically with data together. When this bit is set to 1, software must manually write SPI_CTL_REG.SS_LEVEL to 1 or 0 to control the level of SS signal. 
0: SPI controller 
1: Software It is only valid when Work Mode Select==0x10/0x11, and only work in Mode0 , can`t be written when TCE=1. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI</name>
                  <description>SPI controller</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Software</name>
                  <description>Software It is only valid when Work Mode Select==0x10/0x11, and only work in Mode0 , can`t be written when TCE=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL_SPI</name>
              <description>SPOL SPI Chip Select Signal Polarity Control 
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle) It is only valid when Work Mode Select==0x10/0x11, and only work in Mode0 , can`t be written when TCE=1. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle) It is only valid when Work Mode Select==0x10/0x11, and only work in Mode0 , can`t be written when TCE=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_SEL_SPI</name>
              <description>SS_SEL SPI Chip Select Select one of four external SPI Master/Slave Devices 
00: SPI_SS0 will be asserted 
01: SPI_SS1 will be asserted 
10: SPI_SS2 will be asserted 
11: SPI_SS3 will be asserted It is only valid when Work Mode Select= =0x10/0x11, and only work in Mode0 , can`t be written when TCE=1. </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SS0</name>
                  <description>SPI_SS0 will be asserted</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS1</name>
                  <description>SPI_SS1 will be asserted</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS2</name>
                  <description>SPI_SS2 will be asserted</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS3</name>
                  <description>SPI_SS3 will be asserted It is only valid when Work Mode Select= =0x10/0x11, and only work in Mode0 , can`t be written when TCE=1.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WORK_MODE</name>
              <description>Work Mode Select 
00: Data frame is byte aligned in Standard SPI, Dual-Output/Dual Input SPI, Dual IO SPI and Quad-Output/Quad-Input SPI.  
01: Reserve 
10: Data frame is bit aligned in 3-Wire SPI 
11: Data frame is bit aligned in Standard SPI </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_BA_CCR</name>
          <description>SPI_BA_CCR</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CDR_N</name>
              <description>Clock Divide Rate (Master Mode Only) The SPI_SCLK is determined according to the following equation: SPI_CLK = Source_CLK / (2*(CDR_N + 1)). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_BCC</name>
          <description>SPI Burst Control register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>QUAD_EN</name>
              <description>Quad_Mode_EN 
0: Quad mode disable 
1: Quad mode enable Quad mode includes Quad-Input and Quad-Output.   </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Quad mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Quad mode enable Quad mode includes Quad-Input and Quad-Output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRM</name>
              <description>Master Dual Mode RX Enable 
0: RX use single-bit mode 
1: RX use dual mode 1. Can`t be written when XCH=1; 2. It is only valid when Quad_Mode_EN=0. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_use_single_bit</name>
                  <description>RX use single-bit mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_use_dual</name>
                  <description>RX use dual mode 1. Can`t be written when XCH=1; 2. It is only valid when Quad_Mode_EN=0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBC</name>
              <description>Master Dummy Burst Counter In master mode, this field specifies the burst number that should be sent before receive in dual SPI mode. The data does not care by the device. 
0: 0 burst 
1: 1 burst ... N: N bursts Can`t be written when XCH=1 </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STC</name>
              <description>Master Single Mode Transmit Counter In master mode, this field specifies the burst number that should be sent in single mode before automatically sending dummy burst. This is the first transmit counter in all bursts. 
0: 0 burst 
1: 1 burst ... N: N bursts Can`t be written when XCH=1 </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_CCR</name>
          <description>SPI Clock Rate Control register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>DRS</name>
              <description>Divide Rate Select (Master Mode Only) 
0: Select Clock Divide Rate 1 
1: Select Clock Divide Rate 2 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_1</name>
                  <description>Select Clock Divide Rate 1</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_2</name>
                  <description>Select Clock Divide Rate 2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CDR1_M</name>
              <description>Clock Divide Rate 1 (Master Mode Only) The SPI_SCLK is determined according to the following equation: SPI_CLK = Source_CLK / (2^CDR1_M). </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CDR2_N</name>
              <description>Clock Divide Rate 2 (Master Mode Only) The SPI_SCLK is determined according to the following equation: SPI_CLK = Source_CLK / (2*(CDR2_N + 1)). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FCR</name>
          <description>SPI FIFO Control register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x400001</resetValue>
          <resetMask>0xC1FFC1FF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_RST</name>
              <description>TX FIFO Reset Writing `1` to this bit will reset the control portion of the TX FIFO and auto clear to `0` when completing reset operation, writing to `0` has no effect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TF_TEST_ENB</name>
              <description>TX Test Mode Enable 
0: disable 
1: enable In normal mode, TX FIFO can only be read by SPI controller, writing `1` to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable In normal mode, TX FIFO can only be read by SPI controller, writing `1` to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_DRQ_EN</name>
              <description>TX FIFO DMA Request Enable 
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TRIG_LEVEL</name>
              <description>TX FIFO Empty Request Trigger Level </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_RST</name>
              <description>RXFIFO Reset Writing `1` to this bit will reset the control portion of the receiver FIFO, and auto clear to `0` when completing reset operation, writing `0` to this bit has no effect.  </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_TEST</name>
              <description>RX Test Mode Enable 
0: Disable 
1: Enable In normal mode, RX FIFO can only be written by SPI controller, writing `1` to this bit will switch RX FIFO read and write function to AHB bus. This bit is used to test the RX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time.  </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable In normal mode, RX FIFO can only be written by SPI controller, writing `1` to this bit will switch RX FIFO read and write function to AHB bus. This bit is used to test the RX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_DRQ_EN</name>
              <description>RX FIFO DMA Request Enable 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TRIG_LEVEL</name>
              <description>RX FIFO Ready Request Trigger Level </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FSR</name>
          <description>SPI FIFO Status register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0FFF0FF</resetMask>
          <fields>
            <field>
              <name>TB_WR</name>
              <description>TX FIFO Write Buffer Write Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TB_CNT</name>
              <description>TX FIFO Write Buffer Counter These bits indicate the number of words in TX FIFO Write Buffer </description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TF_CNT</name>
              <description>TX FIFO Counter These bits indicate the number of words in TX FIFO 
0: 0 byte in TX FIFO 
1: 1 byte in TX FIFO ... 64 64 bytes in TX FIFO other: Reserved </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RB_WR</name>
              <description>RX FIFO Read Buffer Write Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RB_CNT</name>
              <description>RX FIFO Read Buffer Counter These bits indicate the number of words in RX FIFO Read Buffer </description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RF_CNT</name>
              <description>RX FIFO Counter These bits indicate the number of words in RX FIFO 
0: 0 byte in RX FIFO 
1: 1 byte in RX FIFO ... 
64: 64 bytes in RX FIFO other: Reserved </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 bytes in RX FIFO other: Reserved</description>
                  <value>64</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_GCR</name>
          <description>SPI Global Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x80000083</resetMask>
          <fields>
            <field>
              <name>SRST</name>
              <description>Soft reset Writing `1` to this bit will clear the SPI controller, and auto clear to `0` when reset operation completes Writing `0` has no effect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TP_EN</name>
              <description>Transmit Pause Enable In master mode, it is used to control transmit state machine to stop smart burst sending when RX FIFO is full. 
1: stop transmit data when RXFIFO full 
0: normal operation, ignore RXFIFO status Can`t be written when XCH=1 </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>stop</name>
                  <description>stop transmit data when RXFIFO full</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal operation, ignore RXFIFO status Can`t be written when XCH=1</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>SPI Function Mode Select 
0: Slave Mode 
1: Master Mode Can`t be written when XCH=1 </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Slave</name>
                  <description>Slave Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Master</name>
                  <description>Master Mode Can`t be written when XCH=1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN</name>
              <description>SPI Module Enable Control 
0: Disable 
1: Enable After transforming from bit_mode to byte_mode, it must Enable the SPI Module again.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable After transforming from bit_mode to byte_mode, it must Enable the SPI Module again.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_IER</name>
          <description>SPI Interrupt Control register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F77</resetMask>
          <fields>
            <field>
              <name>SS_INT_EN</name>
              <description>SSI Interrupt Enable Chip Select Signal (SSx) from valid state to invalid state 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TC_INT_EN</name>
              <description>Transfer Completed Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDR_INT_EN</name>
              <description>TXFIFO Underrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF_INT_EN</name>
              <description>TX FIFO Overflow Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_UDR_INT_EN</name>
              <description>RXFIFO Underrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_OVF_INT_EN</name>
              <description>RX FIFO Overflow Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_FUL_INT_EN</name>
              <description>TX FIFO Full Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP_INT_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_ERQ_INT_EN</name>
              <description>TX FIFO Empty Request Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_FUL_INT_EN</name>
              <description>RX FIFO Full Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP_INT_EN</name>
              <description>RX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_RDY_INT_EN</name>
              <description>RX FIFO Ready Request Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_ISR</name>
          <description>SPI Interrupt Status register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x32</resetValue>
          <resetMask>0x3F77</resetMask>
          <fields>
            <field>
              <name>SSI</name>
              <description>SS Invalid Interrupt When SSI is 1, it indicates that SS has changed from valid state to invalid state. Writing 1 to this bit clears it. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TC</name>
              <description>Transfer Completed In master mode, it indicates that all bursts specified by BC has been exchanged. In other condition, When set, this bit indicates that all the data in TXFIFO has been loaded in the Shift register, and the Shift register has shifted out all the bits. Writing 1 to this bit clears it.  
0: Busy 
1: Transfer Completed </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer Completed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDF</name>
              <description>TXFIFO Underrun This bit is set when if the TXFIFO is underrun. Writing 1 to this bit clears it. 
0: TXFIFO is not underrun 
1: TXFIFO is underrun </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_underrun</name>
                  <description>TXFIFO is not underrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underrun</name>
                  <description>TXFIFO is underrun</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF</name>
              <description>TXFIFO Overflow This bit is set when if the TXFIFO is overflow. Writing 1 to this bit clears it. 
0: TXFIFO is not overflow 
1: TXFIFO is overflowed </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>TXFIFO is not overflow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflowed</name>
                  <description>TXFIFO is overflowed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UDF</name>
              <description>RXFIFO Underrun When set, this bit indicates that RXFIFO has underrun. Writing 1 to this bit clears it. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_OVF</name>
              <description>RXFIFO Overflow When set, this bit indicates that RXFIFO has overflowed. Writing 1 to this bit clears it. 
0: RXFIFO is available. 
1: RXFIFO has overflowed. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>RXFIFO is available.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_has</name>
                  <description>RXFIFO has overflowed.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FULL</name>
              <description>TXFIFO Full This bit is set when if the TXFIFO is full . Writing 1 to this bit clears it. 
0: TXFIFO is not Full 
1: TXFIFO is Full </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_Full</name>
                  <description>TXFIFO is not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>TXFIFO is Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP</name>
              <description>TXFIFO Empty This bit is set if the TXFIFO is empty. Writing 1 to this bit clears it. 
0: TXFIFO contains one or more words. 
1: TXFIFO is empty </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_contains</name>
                  <description>TXFIFO contains one or more words.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>TXFIFO is empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_READY</name>
              <description>TXFIFO Ready 
0: TX_WL &gt; TX_TRIG_LEVEL 
1: TX_WL &lt;= TX_TRIG_LEVEL  This bit is set any time if TX_WL &lt;= TX_TRIG_LEVEL. Writing `1` to this bit clears it. Where TX_WL is the water level of RXFIFO </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_WL__gt_</name>
                  <description>TX_WL &gt; TX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_WL__lt__equals_</name>
                  <description>TX_WL &lt;= TX_TRIG_LEVEL  This bit is set any time if TX_WL &lt;= TX_TRIG_LEVEL. Writing `1` to this bit clears it. Where TX_WL is the water level of RXFIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FULL</name>
              <description>RXFIFO Full This bit is set when the RXFIFO is full . Writing 1 to this bit clears it. 
0: Not Full 
1: Full </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_Full</name>
                  <description>Not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP</name>
              <description>RXFIFO Empty This bit is set when the RXFIFO is empty . Writing 1 to this bit clears it. 
0: Not empty 
1: empty </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_empty</name>
                  <description>Not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RDY</name>
              <description>RXFIFO Ready 
0: RX_WL &lt; RX_TRIG_LEVEL 
1: RX_WL &gt;= RX_TRIG_LEVEL This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing `1` to this bit clears it. Where RX_WL is the water level of RXFIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_WL__lt_</name>
                  <description>RX_WL &lt; RX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_WL__gt__equals_</name>
                  <description>RX_WL &gt;= RX_TRIG_LEVEL This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing `1` to this bit clears it. Where RX_WL is the water level of RXFIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MBC</name>
          <description>SPI Burst Counter register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBC</name>
              <description>Master Burst Counter In master mode, this field specifies the total burst number. 
0: 0 burst 
1: 1 burst ... N: N bursts NOTE Total transfer data, include the TXD, RXD and dummy burst.  </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_MTC</name>
          <description>SPI Transmit Counter Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MWTC</name>
              <description>Master Write Transmit Counter In master mode, this field specifies the burst number that should be sent to TXFIFO before automatically sending dummy burst. For saving bus bandwidth, the dummy burst (all zero bits or all one bits) is sent by SPI Controller automatically. 
0: 0 burst 
1: 1 burst ... N: N bursts </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_NDMA_MODE_CTL</name>
          <description>SPI Normal DMA Mode Control Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xE5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DMA_ACK_EN</name>
              <description>DMA_ACK_EN
0: active fall do not care ack  
1: active fall must after detect ack is high </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_fall_do_not_care</name>
                  <description>active fall do not care ack</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_fall_must_after</name>
                  <description>active fall must after detect ack is high</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DELAY_CYCLES_THE_COUNTS_OF_HOLD</name>
              <description>The delay cycles The counts of hold cycles from DMA last signal high to dma_active high </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_RBR</name>
          <description>SPI RX Bit Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VRB</name>
              <description>The Value of the Receive Bits This register is used to store the value of the received serial data frame.  In the process of transmission, the LSB is transmitted first.  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_RXD</name>
          <description>SPI RX Data register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RDATA</name>
              <description>Receive Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are data in RXFIFO, the top word is returned and the RXFIFO depth is decreased by 1. In half-word accessing method, two SPI bursts are returned and the RXFIFO depth is decrease by 2. In word accessing method, the four SPI bursts are returned and the RXFIFO depth is decreased by 4. NOTE This address is readable- address is readable and writable to test the RX FIFO through the AHB bus. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TBR</name>
          <description>SPI TX Bit Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VTB</name>
              <description>The Value of the Transmit Bits This register is used to store the value of the transmitted serial data frame.  Note: In the process of transmission, the LSB is transmitted first. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TCR</name>
          <description>SPI Transfer Control register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x87</resetValue>
          <resetMask>0x80007FFF</resetMask>
          <fields>
            <field>
              <name>XCH</name>
              <description>Exchange Burst In master mode it is used to start SPI burst 
0: Idle 
1: Initiates exchange. Writing `1` to this bit will start the SPI burst, and will auto clear after finishing the bursts transfer specified by BC. Writing `1` to SRST will also clear this bit. Writing `0` to this bit has no effect. Can`t be written when XCH=1. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Initiates</name>
                  <description>Initiates exchange. Writing `1` to this bit will start the SPI burst, and will auto clear after finishing the bursts transfer specified by BC. Writing `1` to SRST will also clear this bit. Writing `0` to this bit has no effect. Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDDM</name>
              <description>Sending Data Delay Mode 0:normal sending 1:delay sending Set the bit to"1" to make the data that should be sent with a delay of half cycle of SPI_CLK in dual IO mode for SPI mode 0. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM</name>
              <description>Master Sample Data Mode 
1: Normal Sample Mode 
0: Delay Sample Mode In Normal Sample Mode, SPI master samples the data at the correct edge for each SPI mode; In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the correct edge defined in respective SPI mode. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Sample Mode</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay Sample Mode In Normal Sample Mode, SPI master samples the data at the correct edge for each SPI mode; In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the correct edge defined in respective SPI mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FBS</name>
              <description>First Transmit Bit Select 
0: MSB first 
1: LSB first Can`t be written when XCH=1. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDC</name>
              <description>Master Sample Data Control Set this bit to `1` to make the internal read sample point with a delay of half cycle of SPI_CLK. It is used in high speed read operation to reduce the error caused by the time delay of SPI_CLK propagating between master and slave. 
0: normal operation, do not delay internal read sample point 
1: delay internal read sample point Can`t be written when XCH=1. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal operation, do not delay internal read sample point</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>delay</name>
                  <description>delay internal read sample point Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPSM</name>
              <description>Rapids Mode Select Select rapid mode for high speed write. 
0: normal write mode 
1: rapid write mode Can`t be written when XCH=1. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal write mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>rapid</name>
                  <description>rapid write mode Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDB</name>
              <description>Dummy Burst Type 
0: The bit value of dummy SPI burst is zero 
1: The bit value of dummy SPI burst is one Can`t be written when XCH=1. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>zero</name>
                  <description>The bit value of dummy SPI burst is zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>one</name>
                  <description>The bit value of dummy SPI burst is one Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DHB</name>
              <description>Discard Hash Burst In master mode it controls whether discarding unused SPI bursts 
0: Receiving all SPI bursts in BC period 
1: Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC. Can`t be written when XCH=1. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiving</name>
                  <description>Receiving all SPI bursts in BC period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Discard</name>
                  <description>Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC. Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_LEVEL</name>
              <description>When control SS signal manually (SPI_CTRL_REG.SS_CTRL==1), set this bit to `1` or `0` to control the level of SS signal. 
0: set SS to low 
1: set SS to high Can`t be written when XCH=1. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>set_SS_to_low</name>
                  <description>set SS to low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>set_SS_to_high</name>
                  <description>set SS to high Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_OWNER</name>
              <description>SS Output Owner Select Usually, controller sends SS signal automatically with data together. When this bit is set to 1, software must manually write SPI_CTL_REG.SS_LEVEL to 1 or 0 to control the level of SS signal. 
0: SPI controller 
1: Software Can`t be written when XCH=1. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI</name>
                  <description>SPI controller</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Software</name>
                  <description>Software Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_SEL</name>
              <description>SPI Chip Select Select one of four external SPI Master/Slave Devices 
00: SPI_SS0 will be asserted 
01: SPI_SS1 will be asserted 
10: SPI_SS2 will be asserted 
11: SPI_SS3 will be asserted Can`t be written when XCH=1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SS0</name>
                  <description>SPI_SS0 will be asserted</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS1</name>
                  <description>SPI_SS1 will be asserted</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS2</name>
                  <description>SPI_SS2 will be asserted</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS3</name>
                  <description>SPI_SS3 will be asserted Can`t be written when XCH=1.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSCTL</name>
              <description>In master mode, this bit selects the output wave form for the SPI_SSx signal. Only valid when SS_OWNER = 0. 
0: SPI_SSx remains asserted between SPI bursts 
1: Negate SPI_SSx between SPI bursts Can`t be written when XCH=1. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SSx</name>
                  <description>SPI_SSx remains asserted between SPI bursts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negate</name>
                  <description>Negate SPI_SSx between SPI bursts Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL</name>
              <description>SPI Chip Select Signal Polarity Control 
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle) Can`t be written when XCH=1. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle) Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPOL</name>
              <description>SPI Clock Polarity Control 
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle) Can`t be written when XCH=1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle) Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPHA</name>
              <description>SPI Clock/Data Phase Control 
0: Phase 0 (Leading edge for sample data) 
1: Phase 1 (Leading edge for setup data) Can`t be written when XCH=1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Phase_0</name>
                  <description>Phase 0 (Leading edge for sample data)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Phase_1</name>
                  <description>Phase 1 (Leading edge for setup data) Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXD</name>
          <description>SPI TX Data register</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TDATA</name>
              <description>Transmit Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are rooms in TXFIFO, one burst data is written to TXFIFO and the depth is increased by 1. In half-word accessing method, two SPI burst data are written and the TXFIFO depth is increase by 2. In word accessing method, four SPI burst data are written and the TXFIFO depth is increased by 4. NOTE This address is writable-only if TF_TE address is readable and writable to test the TX FIFO through the AHB bus. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_WCR</name>
          <description>SPI Wait Clock Counter register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>SWC</name>
              <description>Dual mode direction switch wait clock counter (for master mode only). 
0: No wait states inserted n: n SPI_SCLK wait states inserted These bits control the number of wait states to be inserted before start dual data transfer in dual SPI mode. The SPI module counts SPI_SCLK by SWC for delaying next word data transfer. Can`t be written when XCH=1. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WCC</name>
              <description>Wait Clock Counter (In Master mode) These bits control the number of wait states to be inserted in data transfers. The SPI module counts SPI_SCLK by WCC for delaying next word data transfer. 
0: No wait states inserted N: N SPI_SCLK wait states inserted </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI1</name>
      <description>SPI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x5011000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>Thermal Sensor</name>
      <description>Thermal Sensor</description>
      <groupName>generic</groupName>
      <baseAddress>0x5070400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>THS01_CDATA</name>
          <description>THS0&amp;1 Calibration Data</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x8000800</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>THS1_CDATA</name>
              <description>Thermal Sensor1 calibration data</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS0_CDATA</name>
              <description>Thermal Sensor0 calibration data </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS01_SHUTDOWN_CTRL</name>
          <description>THS0&amp;1 Alarm threshold Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x4E904E9</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>SHUT1_T_HOT</name>
              <description>Thermal Sensor1 Shutdown Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHUT0_T_HOT</name>
              <description>Thermal Sensor0 Shutdown Threshold for hot temperature </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_ALARM_CTRL</name>
          <description>THS0 Alarm threshold Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_T_HOT</name>
              <description>Thermal Sensor0 Alarm Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM0_T_HYST</name>
              <description>Thermal Sensor0 Alarm threshold for hysteresis temperature  </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_DATA</name>
          <description>THS0 Data Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS0_DATA</name>
              <description>Temperature measurement data of sensor0 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_ALARM_CTRL</name>
          <description>THS1 Alarm threshold Control Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM1_T_HOT</name>
              <description>Thermal sensor1 Alarm Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM1_T_HYST</name>
              <description>Thermal sensor1 Alarm threshold for hysteresis temperature  </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_DATA</name>
          <description>THS1 Data Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS1_DATA</name>
              <description>Temperature measurement data of sensor1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_ALARMO_INTS</name>
          <description>THS Alarm off Interrupt Status Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>ALARM_OFF1_STS</name>
              <description>Alarm interrupt off pending for sensor1 Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ALARM_OFF0_STS</name>
              <description>Alarm interrupt off pending for sensor0 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_ALARM_INTC</name>
          <description>THS Alarm Interrupt Control Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>ALARM_INT1_EN</name>
              <description>Selects alarm interrupt for sensor1  0:Disable 1:Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM_INT0_EN</name>
              <description>Selects alarm interrupt for sensor0  0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_ALARM_INTS</name>
          <description>THS Alarm Interrupt Status Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>ALARM_INT1_STS</name>
              <description>Alarm interrupt pending for sensor1 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ALARM_INT0_STS</name>
              <description>Alarm interrupt pending for sensor0 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL</name>
          <description>THS Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1DF0000</resetValue>
          <resetMask>0xFFFF0000</resetMask>
          <fields>
            <field>
              <name>SENSOR_ACQ</name>
              <description>Sensor acquire time CLK_IN/(N+1)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_DATA_INTC</name>
          <description>THS Data Interrupt Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>THS1_DATA_IRQ_EN</name>
              <description>Selects temperature measurement data of sensor1 0:Disable 1:Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS0_DATA_IRQ_EN</name>
              <description>Selects temperature measurement data of sensor0  0:Disable 1:Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_DATA_INTS</name>
          <description>THS Data Interrupt Status Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>THS1_DATA_IRQ</name>
              <description>_STS Data interrupt status for sensor1  Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS0_DATA_IRQ</name>
              <description>_STS Data interrupt status for sensor0  Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_EN</name>
          <description>THS Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>SENSE1_EN</name>
              <description>Enable temperature measurement sensor1  0:Disable 1:Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE0_EN</name>
              <description>Enable temperature measurement sensor0  0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_FILTER</name>
          <description>THS Median Filter Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FILTER_EN</name>
              <description>Filter Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTER_TYPE</name>
              <description>Average Filter Type 
00: 2 
01: 4 
10: 8 
11: 16 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_PER</name>
          <description>THS Period Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x3A000</resetValue>
          <resetMask>0xFFFFF000</resetMask>
          <fields>
            <field>
              <name>THERMAL_PER</name>
              <description>4096*(n+1)/CLK_IN</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_SHUT_INTC</name>
          <description>THS Shut Interrupt Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>SHUT_INT1_EN</name>
              <description>Selects shutdown interrupt for sensor1 0:Disable 1:Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHUT_INT0_EN</name>
              <description>Selects shutdown interrupt for sensor0 0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_SHUT_INTS</name>
          <description>THS Shut Interrupt Status Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>SHUT_INT1_STS</name>
              <description>Shutdown interrupt status for sensor1 Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SHUT_INT0_STS</name>
              <description>Shutdown interrupt status for sensor0 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TSC</name>
      <description>TSC</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <name>TSC</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSC_KLAD_INDEX</name>
            <description>TSC KLAD Index Register</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x771</resetMask>
            <fields>
              <field>
                <name>TSD</name>
                <description>Index The index of the TSD to setup key. 000 : TSD0 001 : TSD1 010 : TSD2 011 : TSD3 100 : TSD4 Others: Reserved </description>
                <bitRange>[10:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>KEY</name>
                <description>Key Index Setup key to write. 000 : Key0 001 : Key1 010 : Key2 011 : Key3 100 : Key4 101 : Key5 110 : Key6 111 : Key7 </description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ODD/EVEN</name>
                <description>Odd/Even Key Select Select Odd Key or Even Key. 0 : Odd Key 1 : Even Key </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_PCTLR</name>
            <description>TSC Port Control Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0xE</resetValue>
            <resetMask>0xF</resetMask>
            <fields>
              <field>
                <name>TS_IN_PORT3_CTRL</name>
                <description>TSInPort3Ctrl TS Input Port3 Control 0 : Reserved 1 : SSI It is not allowed to write 0 to this bit. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TS_IN_PORT2_CTRL</name>
                <description>TSInPort2Ctrl TS Input Port2 Control 0 : Reserved 1 : SSI </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TS_IN_PORT1_CTRL</name>
                <description>TSInPort1Ctrl TS Input Port1 Control 0 : Reserved 1 : SSI It is not allowed to write 0 to this bit. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TS_IN_PORT0_CTRL</name>
                <description>TSInPort0Ctrl TS Input Port0 Control 0 : SPI 1 : SSI </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_PPARR</name>
            <description>TSC Port Parameter Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1F1F1F1F</resetMask>
            <fields>
              <field>
                <name>TS_INPUT_PORT3_SSI_DATA</name>
                <description>TS Input Port3 SSI Data Order 
0: MSB first for one byte data 
1: LSB first for one byte data </description>
                <bitRange>[28:28]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MSB</name>
                    <description>MSB first for one byte data</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>LSB</name>
                    <description>LSB first for one byte data</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT3_CLOCK_SIGNAL</name>
                <description>TS Input Port3 CLOCK Signal Polarity 0 : Rise edge capturing 
1: Fall edge capturing  </description>
                <bitRange>[27:27]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Fall_edge</name>
                    <description>Fall edge capturing</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT3_ERROR_SIGNAL</name>
                <description>TS Input Port3 ERROR Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT3_DVALID_SIGNAL</name>
                <description>TS Input Port3 DVALID Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT3_PSYNC_SIGNAL</name>
                <description>TS Input Port3 PSYNC Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT2_SSI_DATA</name>
                <description>TS Input Port2 SSI Data Order 
0: MSB first for one byte data 
1: LSB first for one byte data </description>
                <bitRange>[20:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MSB</name>
                    <description>MSB first for one byte data</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>LSB</name>
                    <description>LSB first for one byte data</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT2_CLOCK_SIGNAL</name>
                <description>TS Input Port2 CLOCK Signal Polarity 0 : Rise edge capturing 
1: Fall edge capturing  </description>
                <bitRange>[19:19]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Fall_edge</name>
                    <description>Fall edge capturing</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT2_ERROR_SIGNAL</name>
                <description>TS Input Port2 ERROR Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT2_DVALID_SIGNAL</name>
                <description>TS Input Port2 DVALID Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[17:17]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT2_PSYNC_SIGNAL</name>
                <description>TS Input Port2 PSYNC Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT1_SSI_DATA</name>
                <description>TS Input Port1 SSI Data Order 
0: MSB first for one byte data 
1: LSB first for one byte data </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MSB</name>
                    <description>MSB first for one byte data</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>LSB</name>
                    <description>LSB first for one byte data</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT1_CLOCK_SIGNAL</name>
                <description>TS Input Port1 CLOCK Signal Polarity 0 : Rise edge capturing 
1: Fall edge capturing  </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Fall_edge</name>
                    <description>Fall edge capturing</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT1_ERROR_SIGNAL</name>
                <description>TS Input Port1 ERROR Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT1_DVALID_SIGNAL</name>
                <description>TS Input Port1 DVALID Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT1_PSYNC_SIGNAL</name>
                <description>TS Input Port1 PSYNC Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT0_SSI_DATA</name>
                <description>TS Input Port0 SSI Data Order 
0: MSB first for one byte data 
1: LSB first for one byte data </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MSB</name>
                    <description>MSB first for one byte data</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>LSB</name>
                    <description>LSB first for one byte data</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT0_CLOCK_SIGNAL</name>
                <description>TS Input Port0 CLOCK Signal Polarity 0 : Rise edge capturing 
1: Fall edge capturing  </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Fall_edge</name>
                    <description>Fall edge capturing</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT0_ERROR_SIGNAL</name>
                <description>TS Input Port0 ERROR Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT0_DVALID_SIGNAL</name>
                <description>TS Input Port0 DVALID Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_INPUT_PORT0_PSYNC_SIGNAL</name>
                <description>TS Input Port0 PSYNC Signal Polarity 
0: High level active 
1: Low level active </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>High_level</name>
                    <description>High level active</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Low_level</name>
                    <description>Low level active</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_TSFMUXR</name>
            <description>TSC TSF Input Multiplex Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFF</resetMask>
            <fields>
              <field>
                <name>TSF4_INPUT_MUX_CTRL</name>
                <description>TSF4InputMuxCtrl TSF4 Input Multiplex Control 0000 : Data from TSG 0001 : Data from TS IN Port0 0010 : Data from TS IN Port1 0011 : Data from TS IN Port2 0100 : Data from TS IN Port3 Others : Reserved  </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF3_INPUT_MUX_CTRL</name>
                <description>TSF3InputMuxCtrl TSF3 Input Multiplex Control 0000 : Data from TSG 0001 : Data from TS IN Port2 0010 : Data from TS IN Port3 Others : Reserved  </description>
                <bitRange>[15:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF2_INPUT_MUX_CTRL</name>
                <description>TSF2InputMuxCtrl TSF2 Input Multiplex Control 0000 : Data from TSG 0001 : Data from TS IN Port2 Others : Reserved  </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF1_INPUT_MUX_CTRL</name>
                <description>TSF1InputMuxCtrl TSF1 Input Multiplex Control 0000 : Data from TSG 0001 : Data from TS IN Port0  0010 : Data from TS IN Port1  Others : Reserved  </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF0_INPUT_MUX_CTRL</name>
                <description>TSF0InputMuxCtrl TSF0 Input Multiplex Control 0000 : Data from TSG 0001 : Data from TS IN Port0  Others : Reserved  </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSD</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSD_CTLR</name>
            <description>TSD Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x10003</resetMask>
            <fields>
              <field>
                <name>TS</name>
                <description>Descramble Flag Clear 
0: Clear 
1: Not clear </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Clear</name>
                    <description>Clear</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Not_clear</name>
                    <description>Not clear</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DESC_ARITH</name>
                <description>DescArith Descramble Arithmetic 
00: DVB CSA V1.1 
01: DVB CSA V2.1 Others: Reserved </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DVB_CSA_V1_point_1</name>
                    <description>DVB CSA V1.1</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>DVB_CSA_V2_point_1</name>
                    <description>DVB CSA V2.1 Others: Reserved</description>
                    <value>0b01</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWIR</name>
            <description>TSD Control Word Index Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7F</resetMask>
            <fields>
              <field>
                <name>CWI</name>
                <description>Control Word Index This value is the Control index for Control word access.  Range is from 0x00 to 0x7. </description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CWII</name>
                <description>Control Word Internal Index 0000 : Odd Control Word 1ST 32-bit, OCW[31:0]; 0001 : Odd Control Word 2ND 32-bit, OCW[63:32]; 0010 : Odd Control Word 3TH 32-bit, OCW[95:64]; 0011 : Odd Control Word 4TH 32-bit, OCW[127:96]; 0100 : Even Control Word 1ST 32-bit, ECW[31:0]; 0101 : Even Control Word 2ND 32-bit, ECW[63:32]; 0110 : Even Control Word 3TH 32-bit, ECW[95:64]; 0111 : Even Control Word 4TH 32-bit, ECW[127:96]; </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWR</name>
            <description>TSD Control Word Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>CWD</name>
                <description>Content of Control Word corresponding to the TSD_CWIR value </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSF</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSF_CBBAR</name>
            <description>TSF Channel Buffer Base Address Register</description>
            <addressOffset>0x50</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSF_BUF_B_ADDR</name>
                <description>TSFBufBAddr Data Buffer Base Address for Channel It is 4-word (16Bytes) align address. The LSB four bits should be zero. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBRPR</name>
            <description>TSF Channel Buffer Read Pointer Register</description>
            <addressOffset>0x5C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFRDPTR</name>
                <description>BufRdPtr Data Buffer Read Pointer (in Bytes) This pointer should be changed by software after the data of buffer is readed. </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBSZR</name>
            <description>TSF Channel Buffer Size Register</description>
            <addressOffset>0x54</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x31FFFFF</resetMask>
            <fields>
              <field>
                <name>CHDMA_INT_THD</name>
                <description>CHDMAIntThd DMA Interrupt Threshold for Channel The unit is TS packet size. When received packet (has also stored in DRAM) size is beyond (&gt;=) threshold value, the corresponding channel interrupt is generated to CPU. TSC should count the new received packet again, when exceed the specified threshold value, one new interrupt is generated again. 
00: 1/2 data buffer packet size 
01: 1/4 data buffer packet size 
10: 1/8 data buffer packet size 
11: 1/16 data buffer packet size </description>
                <bitRange>[25:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1_slash_2_data</name>
                    <description>1/2 data buffer packet size</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_4_data</name>
                    <description>1/4 data buffer packet size</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_8_data</name>
                    <description>1/8 data buffer packet size</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_16_data</name>
                    <description>1/16 data buffer packet size</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CH_BUF_PKT_SZ</name>
                <description>CHBufPktSz Data Buffer Packet Size for Channel The exact buffer size of buffer is N+1 bytes.  The maximum buffer size is 2MB.  This size should be 4-word (16Bytes) aligned. The LSB four bits should be zero. </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBWPR</name>
            <description>TSF Channel Buffer Write Pointer Register</description>
            <addressOffset>0x58</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFWRPTR</name>
                <description>BufWrPtr Data Buffer Write Pointer (in Bytes) This value is changed by hardware, when data is filled into buffer, this pointer is increased.  And this pointer can be set by software, but it should not be changed by software during the corresponding channel is enable. </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CCWIR</name>
            <description>TSF Channel CW Index Register</description>
            <addressOffset>0x48</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>CWIND</name>
                <description>Related Control Word Index Index to the control word used by this channel when Descramble Enable of this channel enable. This value is useless when the corresponding Descramble Enable is `0`. </description>
                <bitRange>[2:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CDER</name>
            <description>TSF Channel Descramble Enable Register</description>
            <addressOffset>0x38</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DESCEN</name>
                <description>DescEn Descramble Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CENR</name>
            <description>TSF Channel Enable Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILTEREN_FILTER_ENABLE_FOR_CHANNEL</name>
                <description>FilterEn Filter Enable for Channel 0~31 
0: Disable 
1: Enable From Disable to Enable, internal status of the corresponding filter channel will be reset. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CINDR</name>
            <description>TSF Channel Index Register</description>
            <addressOffset>0x3C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1F</resetMask>
            <fields>
              <field>
                <name>CHIND</name>
                <description>Channel Index This value is the channel index for channel private registers access.  Range is from 0x00 to 0x1f. Address range of channel private registers is 0x40~0x7f. </description>
                <bitRange>[4:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPER</name>
            <description>TSF Channel PES Enable Register</description>
            <addressOffset>0x34</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PESEN</name>
                <description>PESEn PES Packet Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPIDR</name>
            <description>TSF Channel PID Register</description>
            <addressOffset>0x4C</addressOffset>
            <resetValue>0x1FFF0000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PIDMSK</name>
                <description>Filter PID Mask for Channel </description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PIDVAL</name>
                <description>Filter PID value for Channel </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_DIER</name>
            <description>TSF DMA Interrupt Enable Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIE</name>
                <description>DMA Interrupt Enable DMA interrupt enable bits for channel 0~31. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_DISR</name>
            <description>TSF DMA Interrupt Status Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIS</name>
                <description>DMA Interrupt Status DMA interrupt Status bits for channel 0~31. Set by hardware, and can be cleared by software writing `1`. When both these bits and the corresponding DMA Interrupt Enable bits set, the TSF interrupt will generate.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OIER</name>
            <description>TSF Overlap Interrupt Enable Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIE</name>
                <description>Overlap Interrupt Enable Overlap interrupt enable bits for channel 0~31. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OISR</name>
            <description>TSF Overlap Interrupt Status Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIS</name>
                <description>Overlap Interrupt Status Overlap interrupt Status bits for channel 0~31. Set by hardware, and can be cleared by software writing `1`. When both these bits and the corresponding Overlap Interrupt Enable bits set, the TSF interrupt will generate. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRCR</name>
            <description>TSF PCR Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x11F01</resetMask>
            <fields>
              <field>
                <name>PCRDE</name>
                <description>PCR Detecting Enable 
0: Disable 
1: Enable </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PCRCIND</name>
                <description>Channel Index m for Detecting PCR packet (m from 0 to 31) </description>
                <bitRange>[12:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PCRLSB</name>
                <description>PCR Contest LSB 1 bit--PCR[0]. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRDR</name>
            <description>TSF PCR Data Register</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PCRMSB</name>
                <description>PCR Data High 32 bits--PCR[33:1]. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PPR</name>
            <description>TSF Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFFFF0383</resetMask>
            <fields>
              <field>
                <name>LOST_SYNC_THD</name>
                <description>LostSyncThd Lost Sync Packet Threshold It is used for packet sync lost by checking the value of sync byte. </description>
                <bitRange>[31:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCTHD</name>
                <description>SyncThd Sync Packet Threshold It is used for packet sync by checking the value of sync byte. </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNC_BYTE_VAL</name>
                <description>SyncByteVal Sync Byte Value This is the value of sync byte used in the TS Packet. </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCMTHD</name>
                <description>SyncMthd Packet Sync Method 
00: By PSYNC signal 
01: By sync byte 
10: By both PSYNC and Sync Byte 
11: Reserved </description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>By_PSYNC</name>
                    <description>By PSYNC signal</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_sync</name>
                    <description>By sync byte</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_both</name>
                    <description>By both PSYNC and Sync Byte</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SYNC_BYTE_POS</name>
                <description>SyncBytePos Sync Byte Position 
0: the 1st byte position 
1: the 5th byte position This bit is only used for 192 bytes packet size. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>the 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>the 5th byte position This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>PktSize Packet Size Byte Size for one TS packet 
00: 188 bytes 
01: 192 bytes 
10: 204 bytes 
11: Reserved </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_188</name>
                    <description>188 bytes</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_192</name>
                    <description>192 bytes</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_204</name>
                    <description>204 bytes</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSG</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSG_BBAR</name>
            <description>TSG Buffer Base Address Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_BASE</name>
                <description>TSGBufBase Buffer Base Address This value is a start address of TSG buffer.  This value should be 4-word (16Bytes) align, and the lowest 4-bit of this value should be zero. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BPR</name>
            <description>TSG Buffer Pointer Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_PTR</name>
                <description>TSGBufPtr Data Buffer Pointer for TS Generator Current TS generator data buffer read pointer (in byte unit) </description>
                <bitRange>[23:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BSZR</name>
            <description>TSG Buffer Size Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_SIZE</name>
                <description>TSGBufSize Data Buffer Size for TS Generator It is in byte unit.  The size should be 4-word (16Bytes) align, and the lowest 4 bits should be zero. </description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_CCR</name>
            <description>TSG Clock Control Register</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSGCDF_N</name>
                <description>TSG Clock Divide Factor (N) The Numerator part of TSG Clock Divisor Factor.  </description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSGCDF_D</name>
                <description>TSG Clock Divide Factor (D) The Denominator part of TSG Clock Divisor Factor. Frequency of output clock: Fo = (Fi*(N+1))/(8*(D+1)). Fi is the input special clock of TSC, and D must not less than N. </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_PPR</name>
            <description>TSG Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFF0083</resetMask>
            <fields>
              <field>
                <name>SYNC_BYTE_VAL</name>
                <description>SyncByteVal Sync Byte Value This is the value of sync byte used in the TS Packet. </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNC_BYTE_POS</name>
                <description>SyncBytePos Sync Byte Position 
0: the 1st byte position 
1: the 5th byte position This bit is only used for 192 bytes packet size. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>the 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>the 5th byte position This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>PktSize Packet Size Byte Size for one TS packet 
0: 188 bytes Others: Reserved </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TSC_INT_STATUS</name>
          <description>TSC_INT_STATUS</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1001F</resetMask>
          <fields>
            <field>
              <name>TSG</name>
              <description>Interrupt Global Status When all TSG interrupt status bits are cleared ,this bit will be cleared by hardware. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSF4</name>
              <description>Interrupt Global Status When all TSF4 interrupt status bits are cleared ,this bit will be cleared by hardware. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSF3</name>
              <description>Interrupt Global Status When all TSF3 interrupt status bits are cleared ,this bit will be cleared by hardware. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSF2</name>
              <description>Interrupt Global Status When all TSF2 interrupt status bits are cleared ,this bit will be cleared by hardware. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSF1</name>
              <description>Interrupt Global Status When all TSF1 interrupt status bits are cleared ,this bit will be cleared by hardware. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSF0</name>
              <description>Interrupt Global Status When all TSF0 interrupt status bits are cleared ,this bit will be cleared by hardware. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSF_CSR</name>
          <description>TSF_CSR</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x105</resetMask>
          <fields>
            <field>
              <name>CHANNEL</name>
              <description>Channel Change PID Request This bit is used to send a request to hardware for changing the PID of the channel.It will be cleared by hardware when the channel changing finish.  Writing `0` has no effect. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSF</name>
              <description>Enable 
00: Disable TSF Input 
01: Enable TSF Input </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R/W</name>
              <description>0 TSFGSRF TSF Global Soft Reset Writing `1` by software will reset all status and state machine of TSF. And it is cleared by hardware after finish reset. Writing `0` by software has no effect. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSF_IESR</name>
          <description>TSF_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSFFOIE</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFPPDIE</name>
              <description>TS PCR Packet Detect Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCOIE</name>
              <description>TS PID Filter (TSF) Channel Overlap Interrupt Global Enable 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCDIE</name>
              <description>TS PID Filter (TSF) Channel DMA Interrupt Global Enable 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFFOIS</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Status Write `1` to clear. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TSFPPDIS</name>
              <description>TS PCR Packet Found Status When it is `1`, one TS PCR Packet is found. Write `1` to clear. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TSFCOIS</name>
              <description>TS PID Filter (TSF) Channel Overlap Status It is global status for 32 channel. It would clear to zero after all channels status bits are cleared. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSFCDIS</name>
              <description>TS PID Filter (TSF) Channel DMA Status It is global status for 32 channel. It would clear to zero after all channels status bits are cleared. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSG_CSR</name>
          <description>TSG_CSR</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000307</resetMask>
          <fields>
            <field>
              <name>TSGSTS</name>
              <description>TSGSts Status for TS Generator 
00: IDLE state 
01: Running state 
10: PAUSE state Others: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>IDLE state</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Running</name>
                  <description>Running state</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAUSE</name>
                  <description>PAUSE state Others: Reserved</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGL_BUF_MODE</name>
              <description>TSGLBufMode Loop Buffer Mode When set to `1`, the TSG external buffer is in loop mode. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_SYNC_BYTE_CHK_EN</name>
              <description>TSGSyncByteChkEn Sync Byte Check Enable Enable/ Disable check SYNC byte for receiving new packet 
0: Disable 
1: Enable If enable check SYNC byte and an error SYNC byte is receiver, TS Generator would come into PAUSE state. If the correspond interrupt is enabled, the interrupt would happen. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If enable check SYNC byte and an error SYNC byte is receiver, TS Generator would come into PAUSE state. If the correspond interrupt is enabled, the interrupt would happen.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_PAUSE_BIT</name>
              <description>TSGPauseBit Pause Bit for TS Generator Write `1` to pause TS Generator. TS Generator would stop fetch new data from DRAM. After finishing this operation, this bit will clear to zero by hardware. In PAUSE state, write `1` to resume this state. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_STOP_BIT</name>
              <description>TSGStopBit Stop Bit for TS Generator Write `1` to stop TS Generator. TS Generator would stop fetch new data from DRAM. The data already in its FIFO should be sent to TS filter. After finishing this operation, this bit will clear to zero by hardware.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_START_BIT</name>
              <description>TSGStartBit Start Bit for TS Generator Write `1` to start TS Generator. TS Generator would fetch data from DRAM and generate SPI stream to TS filter. This bit will clear to zero by hardware after TS Generator is running. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSG_IESR</name>
          <description>TSG_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSGENDIE</name>
              <description>TSGEndIE TS Generator (TSG) End Interrupt Enable 
0: Disable 
1: Enable If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGFFIE</name>
              <description>TS Generator (TSG) Full Finish Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGHFIE</name>
              <description>TS Generator (TSG) Half Finish Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_ERR_SYNC_BYTE_IE</name>
              <description>TSGErrSyncByteIE TS Generator (TSG) Error Sync Byte Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_END_STS</name>
              <description>TSGEndSts TS Generator (TSG) End Status Write `1` to clear. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TSGFFSTS</name>
              <description>TSGFFSts TS Generator (TSG) Full Finish Status Write `1` to clear. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TSGHFSTS</name>
              <description>TSGHFSts TS Generator (TSG) Half Finish Status Write `1` to clear. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TSG_ERR_SYNC_BYTE_STS</name>
              <description>TSGErrSyncByteSts TS Generator (TSG) Error Sync Byte Status Write `1` to clear. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSG</name>
      <description>TSG</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060040</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF0</name>
      <description>TSF0</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060100</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD0</name>
      <description>TSD0</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060180</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF1</name>
      <description>TSF1</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060200</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD1</name>
      <description>TSD1</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060280</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF2</name>
      <description>TSF2</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060300</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD2</name>
      <description>TSD2</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060380</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF3</name>
      <description>TSF3</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD3</name>
      <description>TSD3</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060480</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF4</name>
      <description>TSF4</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060500</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD4</name>
      <description>TSD4</description>
      <groupName>generic</groupName>
      <baseAddress>0x5060580</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>TCON_TV0</name>
      <description>TCON_TV0</description>
      <groupName>generic</groupName>
      <baseAddress>0x6515000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x140</addressOffset>
          <register>
            <name>TV_CEU_COEF_RANG_REG</name>
            <description>TV CEU Coefficient Register2(N=0,1,2)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3FF03FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>unsigned 10bit value, range of [0,1023] </description>
                <bitRange>[25:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU_COEF_RANGE_MAX</name>
                <description>unsigned 10bit value, range of [0,1023] </description>
                <bitRange>[9:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TV_FILL_BEGIN_REG</name>
            <description>TV Fill Data Begin Register(N=0,1,2)</description>
            <addressOffset>0x1C4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_BEGIN</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TV_FILL_DATA_REG</name>
            <description>TV_FILL_DATA_REG</description>
            <addressOffset>0x1CC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3FFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_VALUE</name>
                <description></description>
                <bitRange>[29:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TV_FILL_END_REG</name>
            <description>TV Fill Data End Register(N=0,1,2)</description>
            <addressOffset>0x1C8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_END</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TV0_CTL_REG</name>
          <description>TV0_CTL_REG</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TV_SRC_SEL</name>
              <description>000: DE 
001: Color Check 
010: Grayscale Check 
011: Black by White Check 
100: Reserved 
101: Reserved 
111: Gridding Check  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DE</name>
                  <description>DE</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Color</name>
                  <description>Color Check</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Grayscale</name>
                  <description>Grayscale Check</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Black</name>
                  <description>Black by White Check</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Gridding</name>
                  <description>Gridding Check</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_BASIC0_REG</name>
          <description>TV Basic Timing Register0</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>XI</name>
              <description>source width is X+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YI</name>
              <description>source height is Y+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_BASIC1_REG</name>
          <description>TV Basic Timing Register1</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>LS_XO</name>
              <description>width is LS_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS_YO</name>
              <description>width is LS_YO+1 this version LS_YO =  TV_YI </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_BASIC2_REG</name>
          <description>TV Basic Timing Register2</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TV_XO</name>
              <description>width is TV_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TV_YO</name>
              <description>height is TV_YO+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_BASIC3_REG</name>
          <description>TV Basic Timing Register3</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>horizontal total time  Thcycle = (HT+1) * Thdclk  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch  Thbp = (HBP +1) * Thdclk </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_BASIC4_REG</name>
          <description>TV Basic Timing Register4</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>horizontal total time (in HD line) Tvt = VT/2 * Th  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>horizontal back porch (in HD line) Tvbp = (VBP +1) * Th </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_BASIC5_REG</name>
          <description>TV Basic Timing Register5</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>horizontal Sync Pulse Width (in dclk) Thspw = (HSPW+1) * Tdclk HT&gt;  (HSPW+1) </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>vertical Sync Pulse Width (in lines) Tvspw = (VSPW+1) * Th VT/2 &gt;  (VSPW+1) </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_CEU_COEF_MUL_REG_0</name>
          <description>TV CEU Coefficient Register0(N=0,1,2,4,5,6,8,9,10)</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x100</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>1. CEU_Coef_Mul_Value only can be 0 or 1 2. REG Map: N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TV_CEU_COEF_MUL_REG_0">
          <name>TV_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TV_CEU_CTL_REG</name>
          <description>TV CEU Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: bypass 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_CTL_REG</name>
          <description>TV Control Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800001F2</resetMask>
          <fields>
            <field>
              <name>TV_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>START_DELAY</name>
              <description>This is for DE0 and DE1 </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TV_SRC_SEL</name>
              <description>0: reserved 
1: BLUE data The priority of this bit is higher than TV_SRC_SEL(bit[2:0]) in TV_SRC_CTL_REG. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLUE_data</name>
                  <description>BLUE data The priority of this bit is higher than TV_SRC_SEL(bit[2:0]) in TV_SRC_CTL_REG.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_DATA_IO_POL0_REG</name>
          <description>TCON Data IO Polarity Control 0</description>
          <addressOffset>0x330</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>R/CB_CHANNEL_DATA_INV</name>
              <description>0: normal polarity 
1: invert the specify output </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G/Y_CHANNEL_DATA_INV</name>
              <description>0: normal polarity 
1: invert the specify output </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_DATA_IO_POL1_REG</name>
          <description>TCON Data IO Polarity Control 1</description>
          <addressOffset>0x334</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF0000</resetMask>
          <fields>
            <field>
              <name>B/CR_CHANNEL_DATA_INV</name>
              <description>0: normal polarity 
1: invert the specify output </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_DATA_IO_TRI0_REG</name>
          <description>TV_DATA_IO_TRI0_REG</description>
          <addressOffset>0x338</addressOffset>
          <resetValue>0x3FF03FF</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>R/CB_CHANNEL_DATA_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable Only high 6-bit is valid. </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>G/Y_CHANNEL_DATA_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable Only high 6-bit is valid. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_DATA_IO_TRI1_REG</name>
          <description>TV_DATA_IO_TRI1_REG</description>
          <addressOffset>0x33C</addressOffset>
          <resetValue>0x3FF0000</resetValue>
          <resetMask>0x3FF0000</resetMask>
          <fields>
            <field>
              <name>B/CR_CHANNEL_DATA_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable Only high 6-bit is valid. </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_DEBUG_REG</name>
          <description>TV Debug Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50002FFF</resetMask>
          <fields>
            <field>
              <name>TV_FIFO_UNDER_FLOW</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TV_FIELD_POLARITY</name>
              <description>0: second field 
1: first field </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>second</name>
                  <description>second field</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>first</name>
                  <description>first field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LINE_BUF_BYPASS</name>
              <description>0: used 
1: bypass </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used</name>
                  <description>used</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV_CURRENT_LINE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_FILL_CTL_REG</name>
          <description>TV Fill Data Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TV_FILL_EN</name>
              <description>0: bypass 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_GCTL_REG</name>
          <description>TV Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TV_EN</name>
              <description>0: disable 
1: enable When it`s disabled, the module will be reset to idle state. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_GINT0_REG</name>
          <description>TV Global Interrupt Register0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TV_VB_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV_LINE_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TV_LINE_INT_FLAG</name>
              <description>trigger when SY1 match the current TV scan line Write 0 to clear it. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_GINT1_REG</name>
          <description>TV Global Interrupt Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TV_LINE_INT_NUM</name>
              <description>scan line for TV line trigger(including inactive lines) Setting it for the specified line for trigger 1. SY1 is writable only when LINE_TRG1 disable. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_IO_POL_REG</name>
          <description>TV SYNC Signal Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000000</resetMask>
          <fields>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_IO_TRI_REG</name>
          <description>TV ISYNC Signal IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xF000000</resetValue>
          <resetMask>0xF000000</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_PIXELDEPTH_MODE_REG</name>
          <description>TV Pixeldepth Mode Control Register</description>
          <addressOffset>0x340</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>COLORBAR</name>
              <description>Colorbar Pixeldepth mode(Only valid for Colorbar output) 
0: 8-bit mode  
1: 10-bit mode  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit_mode</name>
                  <description>8-bit mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10_bit_mode</name>
                  <description>10-bit mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TV_SAFE_PERIOD_REG</name>
          <description>TV Safe Period Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>000: unsafe 
001: safe 
010: safe at line_buf_curr_num &gt; safe_period_fifo_num 
011: safe at 2 and safe at sync active 
100: safe at line </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>ATE_TV Encoder</name>
      <description>ATE_TV Encoder</description>
      <groupName>generic</groupName>
      <baseAddress>0x4000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TVE_BACK_PORCH</name>
          <description>TV Encoder Back Porch Register</description>
          <addressOffset>0x16</addressOffset>
          <resetValue>0x76</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>BACK_PORCH</name>
              <description>Back Porch Specify the width of the back porch in encoder clock cycles. Min value is (burst_width+breeze_way+17). 8 bit unsigned integer. Default value is 118 </description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_BLACK_LEVEL</name>
          <description>TV Encoder Black Level Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x11A</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>BLACK_LEVEL</name>
              <description>Black Level Specify the black level setting. 10 bit unsigned integer. Allowed range is 240 to 1023. Default value is 282 </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_BLANK_LEVEL</name>
          <description>TV Encoder Blank Level Register</description>
          <addressOffset>0x22</addressOffset>
          <resetValue>0xF0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>BLANK_LEVEL</name>
              <description>Blank Level Specify the blank level setting for active lines. 10 bit unsigned integer. Allowed range 0 to 1023. Default value is hexF0(dec240). </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_BURST_FRQ1</name>
          <description>TV Encoder Burst Frequency 1 Register</description>
          <addressOffset>0x12</addressOffset>
          <resetValue>0x21F0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BURST_FRQ_31_16</name>
              <description>Specify the ratio between the color burst frequency. 32 bit unsigned fraction. Default value is h21f07c1f, which is compatible with NTSC specs. 3.5795455MHz (X`21F07C1F`): NTSC-M, NTSC-J 4.43361875 MHz(X`2A098ACB`): PAL-B, D, G, H,I, N 3.582056 MHz (X`21F69446`):PAL-N(Argentina) 3.579611 MHz (X`21E6EFE3`): PAL-M </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_CTL0</name>
          <description>TV Encoder Control 0 Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F01</resetMask>
          <fields>
            <field>
              <name>EN</name>
              <description>TV Encoder enable, default disable, write 1 to take it out of the reset state </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_CTL1</name>
          <description>TV Encoder Control 1 Register</description>
          <addressOffset>0x2</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000</resetMask>
          <fields>
            <field>
              <name>CLK_DISABLE</name>
              <description>TV Encoder clock gate disable 
1: disable 
0: enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_DAC_CFG0</name>
          <description>TV Encoder DAC Configuration 0 Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>DAC_EN</name>
              <description>DAC Enable 0:disable 1:enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_DAC_CFG1</name>
          <description>TV Encoder DAC Configuration 1 Register</description>
          <addressOffset>0xA</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>TVE_FIRST_ACTIVE</name>
          <description>TV Encoder First Active Line Register</description>
          <addressOffset>0x1E</addressOffset>
          <resetValue>0x16</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIRST_VIDEO_LINE</name>
              <description>First Video Line Specify the index of the first line in a field/frame to have active video. 8 bit unsigned integer.  For interlaced video: When VSync5=B`0`, FirstVideoLine is restricted to be greater than 7. When VSync5=B`1`, FirstVideoLine is restricted to be greater than 9. Default value is 21. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_FRONT_PORCH</name>
          <description>TV Encoder Front Porch Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>FRONT_PORCH</name>
              <description>Front Porch must be even specify the width of the front porch in encoder clock cycles. 6 bit unsigned even integer. Allowed range is 10 to 62. Default value is 32. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_CTL0</name>
          <description>TVE_IF_CTL0</description>
          <addressOffset>0x1000</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1333</resetMask>
          <fields>
            <field>
              <name>PROGRESSIVE_MODE</name>
              <description>0: interlaced 
1: progressive </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interlaced</name>
                  <description>interlaced</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>progressive</name>
                  <description>progressive</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYUV_INPUT_FORMAT</name>
              <description>000: YUV 
001: YVU 
010: UYV 
011: UVY 
100: VYU 
101: VUY Others: reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCIR656_INPUT_FORMAT</name>
              <description>00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTERFACE_SEL</name>
              <description>0 : CCIR656 input interface 1 : Serial YUV input interface </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_STATUS</name>
          <description>TV Encoder Interface Status Register</description>
          <addressOffset>0x1018</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFBFF</resetMask>
          <fields>
            <field>
              <name>DE_STATUS</name>
              <description>Internal DE signal status </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>F_STATUS</name>
              <description>Internal F signal status </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>V_STATUS</name>
              <description>Internal V signal status </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>H_STATUS</name>
              <description>Internal H signal status </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CCIR_P_ERROR</name>
              <description>If CCIR code P3-P0 is not equal to H V F XOR result, this bit is set`1`, write `1` to clear this bit. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>H_LINE_NUM</name>
              <description>Indecate total H signal cycle number in a Frame time. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_SYNC0</name>
          <description>TV Encoder Interface SYNC 0 Register</description>
          <addressOffset>0x1010</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8377</resetMask>
          <fields>
            <field>
              <name>INPUT_BYPASS_TO_DAC</name>
              <description>0: normal 
1: D[7:0] - DAC[7:0], HSYNC - DAC[8], VSYNC-DAC[9] </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>D[7_colon_0]</name>
                  <description>D[7:0] - DAC[7:0], HSYNC - DAC[8], VSYNC-DAC[9]</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>V_OUTPUT</name>
              <description>0: VSYNC IO normal mode, as input 
1: internal V signal output to VSYNC IO </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VSYNC</name>
                  <description>VSYNC IO normal mode, as input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>internal_V</name>
                  <description>internal V signal output to VSYNC IO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>H_OUTPUT</name>
              <description>0: HSYNC IO normal mode, as input 
1: internal H signal output to HSYNC IO </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HSYNC</name>
                  <description>HSYNC IO normal mode, as input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>internal</name>
                  <description>internal H signal output to HSYNC IO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>V_SEL</name>
              <description>0 : internal V signal from sync CCIR reference codes 1 : internal V signal from sync IO generator Node that internal DE signal is generate from internal V and H signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>H_SEL</name>
              <description>0 : internal H signal from sync CCIR reference codes 1 : internal H signal from sync IO generator that internal DE signal is generated from internal V and H signal </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLOCK_POLARITY</name>
              <description>0: latch data from clock falling edge 
1: latch data from clock rising edge </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>latch_data_from_clock_falling_edge</name>
                  <description>latch data from clock falling edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>latch_data_from_clock_rising_edge</name>
                  <description>latch data from clock rising edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VSYNC_POLARITY</name>
              <description>0: active 0 
1: active 1 </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_0</name>
                  <description>active 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_1</name>
                  <description>active 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSYNC_POLARITY</name>
              <description>0: active 0 
1: active 1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_0</name>
                  <description>active 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_1</name>
                  <description>active 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_SYNC1</name>
          <description>TV Encoder Interface SYNC 1 Register</description>
          <addressOffset>0x1012</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RESYNC_INTERVAL_TIME</name>
              <description>000 : Disable 001 : once at start 010 : every 4 vsync 011 : every 8 vsync 100 : every 16 vsync Others : Disable  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_SYNC2</name>
          <description>TV Encoder Interface SYNC 2 Register</description>
          <addressOffset>0x1014</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>RESYNC_DELAY_LINE</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESYNC_DELAY_PIXLE</name>
              <description>Count by dclk </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_TIM0</name>
          <description>TV Encoder Interface Timing 0 Register</description>
          <addressOffset>0x1008</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>HBP</name>
              <description>horizontal back porch T = HBP&#215;T </description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_TIM1</name>
          <description>TV Encoder Interface Timing 1 Register</description>
          <addressOffset>0x100A</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>HACT</name>
              <description>Horizontal active cycle T = H_HACT&#215;T </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_TIM2</name>
          <description>TV Encoder Interface Timing 2 Register</description>
          <addressOffset>0x100C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>VBP_ODD</name>
              <description>Vertical back porch in line T = VBP&#215;T </description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_TIM3</name>
          <description>TV Encoder Interface Timing 3 Register</description>
          <addressOffset>0x100E</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>VACT</name>
              <description>Vertical active in line T = VACT&#215;T </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_IF_TIM4</name>
          <description>TV Encoder Interface Timing 4 Register</description>
          <addressOffset>0x1016</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>VBP_EVEN</name>
              <description>Vertical back porch in line T = VBP&#215;T </description>
              <bitRange>[8:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_MOD0</name>
          <description>TV Encoder Mode 0 Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x301</resetMask>
          <fields>
            <field>
              <name>COLOR_BAR_TYPE</name>
              <description>Color Bar Type 
0:  NTSC: 75/7.5/75/7.5 PAL:  100/0/75/0 
1:  NTSC: 100/7.5/100/7.5 PAL:  100/0/100/0 </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NTSC_colon__75_slash_7_point_5_slash_75_slash_7_point_5</name>
                  <description>NTSC: 75/7.5/75/7.5 PAL:  100/0/75/0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NTSC_colon__100_slash_7_point_5_slash_100_slash_7_point_5</name>
                  <description>NTSC: 100/7.5/100/7.5 PAL:  100/0/100/0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COLOR_BAR_MOD</name>
              <description>Color Bar Mode Standard Color bar input selection This bit selects whether the Video Encoder video data input is replaced by an internal standard color bar generator or not. 
0: The Video Encoder input is coming from the Display Engineer 
1: The Video Encoder input is coming from an internal standard color bar generator. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>coming_from_the_Display</name>
                  <description>The Video Encoder input is coming from the Display Engineer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>coming_from_an</name>
                  <description>The Video Encoder input is coming from an internal standard color bar generator.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV_MOD</name>
              <description>TV Mode Select 
0: NTSC 
1: PAL Changing this register value will cause some relative register setting to relative value. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NTSC</name>
                  <description>NTSC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAL</name>
                  <description>PAL Changing this register value will cause some relative register setting to relative value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_MOD1</name>
          <description>TV Encoder Mode 1 Register</description>
          <addressOffset>0x6</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1018</resetMask>
          <fields>
            <field>
              <name>DAC_TEST_MOD</name>
              <description>0: TV mode, DAC using tvclk 
1: DAC test mode DAC using AHB clock </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TV</name>
                  <description>TV mode, DAC using tvclk</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC</name>
                  <description>DAC test mode DAC using AHB clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>C_SEQ</name>
              <description>Cb/Cr sequence for 422 mode 
0: Cb first 
1: Cr first </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cb</name>
                  <description>Cb first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cr</name>
                  <description>Cr first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>C_MODE</name>
              <description>Chroma Mode 
0: 444 
1: 422 </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_444</name>
                  <description>444</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_422</name>
                  <description>422</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_DEBOUNCE</name>
          <description>TV Encoder Plug Detect De-Bounce Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DAC_DE_BNC</name>
              <description>DAC debounce times </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_EN</name>
          <description>TV Encoder Plug Detect Enable Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>AUTO_DET_EN</name>
              <description>Auto Detection Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_IRQ_EN</name>
          <description>TV Encoder Plug Detect Interrupt Enable Register</description>
          <addressOffset>0x32</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>AUTO_DET_IRQ_EN</name>
              <description>Auto Detection Interrupt Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_IRQ_STA</name>
          <description>TV Encoder Plug Detect Interrupt Status Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>AUTO_DET_IRQ_STA</name>
              <description>Auto detection interrupt active flag, write 1 to inactive DAC0 auto detection interrupt. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_PULSE_LEVEL</name>
          <description>TV Encoder Plug Detect Pulse Level Register</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>DETECT_PULSE_LEVEL</name>
              <description>Use for DAC data input at auto detect pluse </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_PULSE_PERIOD</name>
          <description>TV Encoder Auto Detect Pulse Period Register</description>
          <addressOffset>0xFA</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>DETECT_PULSE_PERIOD</name>
              <description>Use 32K clock </description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_PULSE_START</name>
          <description>TV Encoder Plug Detect Pulse Start Register</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>DETECT_PULSE_START</name>
              <description></description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_PLUG_STA</name>
          <description>TV Encoder Plug Detect Status Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>AUTO_DET_STA</name>
              <description>DAC Status 
00: Unconnected  
01: Connected 
11: Short to ground 
10: Reserved </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_TOTAL_LINE</name>
          <description>TV Encoder Total Line Number Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x20D</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>NUM_LINES</name>
              <description>Number Lines  Specify the total number of lines in a video frame. 11 bit unsigned integer. Allowed range is 0 to 2048. Default value is 525. For interlaced video: When NTSC, and FirstVideoLine is greater than 20, then NumLines is restricted to be greater than 2*(FirstVideoLine+18). When NTSC, and FirstVideoLine is not greater than 20, then NumLines is restricted to be greater than 77. When PAL, and FirstVideoLine is greater than 22, then NumLines is restricted to be greater than 2*(FirstVideoLine+18). When PAL, and FirstVideoLine is not greater than 22, then NumLines is restricted to be greater than 81. If NumLines is even, then it is restricted to be divisible by 4. If NumLines is odd, then it is restricted to be divisible by 4 with a remainder of 1. </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_YC_DELAY</name>
          <description>TV Encoder YC Delay Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7700</resetMask>
          <fields>
            <field>
              <name>Y_DELAY</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_DELAY</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_YC_FILTER</name>
          <description>TV Encoder YC Filter Register</description>
          <addressOffset>0xE</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0xB71F</resetMask>
          <fields>
            <field>
              <name>LUMA_FILTER_LTI_ENABLE</name>
              <description>Luma filter lti enable 0:disable Luma filter lti 1:enable Luma filter lti </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UPSAMPLE_FOR_DAC_OUT</name>
              <description>upsample for dac Out up sample 0:27M 1:54M 2:108M 3:216M </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FILTERS_SELECT</name>
              <description>Filters_Select 
0: enable new peaking filter 
1: enable new reduction filter </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable_new_peaking</name>
                  <description>enable new peaking filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable_new_reduction</name>
                  <description>enable new reduction filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NEW_LUMINANCE_PEAKING_FILTER</name>
              <description>New luminance peaking filter selection </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_FIELD1_BP_CHROMA_FILTER_STAGE</name>
              <description>C_FIELD1_BP Chroma Filter Stage 1  0 : Chroma Filter stage 1 Enable 
1: Chroma Filter stage 1 bypass </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma Filter stage 1 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>C_FIELD2_BP_CHROMA_FILTER_STAGE</name>
              <description>C_FIELD2_BP Chroma Filter Stage 2 Bypass 0 : Chroma Filter stage 2 Enable 
1: Chroma Filter stage 2 bypass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma Filter stage 2 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>C_FILTER3_BP_CHROMA_FILTER_STAGE</name>
              <description>C_FILTER3_BP Chroma Filter Stage 3 Bypass 0 : Chroma Filter stage 3 Enable 
1: Chroma Filter stage 3 bypass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma Filter stage 3 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Y_FIELD_BP_LUMA_FILTER_BYPASS</name>
              <description>Y_FIELD_BP Luma Filter Bypass 
0: Luma Filter enable 
1: Luma Filter bypass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Luma_Filter_enable</name>
                  <description>Luma Filter enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma_Filter</name>
                  <description>Luma Filter bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOTCH_EN_NOTCH_ENABLE_LUMA</name>
              <description>NOTCH_EN Notch Enable Luma notch filter on/off selection This bit selects if the luma notch filter is operating or bypassed. 
0: The luma notch filter is bypassed 
1: The luma notch filter is operating </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypassed</name>
                  <description>The luma notch filter is bypassed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>operating</name>
                  <description>The luma notch filter is operating</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TWI0</name>
      <description>TWI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x5002000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TWI_ADDR</name>
          <description>TWI Slave address</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLA</name>
              <description>Slave Address 7-bit addressing SLA6, SLA5, SLA4, SLA3, SLA2, SLA1, SLA0  10-bit addressing 1, 1, 1, 1, 0, SLAX[9:8] </description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GCE</name>
              <description>General Call Address Enable 
0: Disable 
1: Enable  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_CCR</name>
          <description>TWI Clock control register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>CLK_M</name>
              <description></description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_N</name>
              <description>The TWI bus is sampled by the TWI at the frequency defined by F0: Fsamp = F 0 = Fin / 2^CLK_N  The TWI OSCL output frequency, in master mode, is F1 / 10: F1 = F0 / (CLK_M + 1) Foscl = F1 / 10 = Fin / (2^CLK_N * (CLK_M + 1)*10) For Example  Fin = 48MHz (APB clock input) For 400kHz full speed 2Wire, CLK_N = 2, CLK_M=2 F0 = 48MHz/2^2=12MHz, F1= F0/(10*(2+1)) = 0.4MHz  For 100kHz standard speed 2Wire, CLK_N=2, CLK_M=11 F0=48MHz/2^2=12MHz, F1=F0/(10*(11+1)) = 0.1MHz </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_CNTR</name>
          <description>TWI Control register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFC</resetMask>
          <fields>
            <field>
              <name>INT_EN</name>
              <description>Interrupt Enable 
0: The interrupt line always low 
1: The interrupt line will go high when INT_FLAG is set. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interrupt_line_always_low</name>
                  <description>The interrupt line always low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>interrupt_line_will_go</name>
                  <description>The interrupt line will go high when INT_FLAG is set.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_EN</name>
              <description>TWI Bus Enable 
0: The TWI bus inputs ISDA/ISCL are ignored and the TWI Controller will not respond to any address on the bus 
1: The TWI will respond to calls to its slave address - and to the general call address if the GCE bit in the ADDR register is set. NOTE . </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TWI_bus</name>
                  <description>The TWI bus inputs ISDA/ISCL are ignored and the TWI Controller will not respond to any address on the bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI_will_respond</name>
                  <description>The TWI will respond to calls to its slave address - and to the general call address if the GCE bit in the ADDR register is set. NOTE .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M_STA</name>
              <description>Master Mode Start When M_STA is set to `1`, TWI Controller enters master mode and will transmit a START condition on the bus when the bus is free. If the M_STA bit is set to `1` when the TWI Controller is already in master mode and one or more bytes have been transmitted, then a repeated START condition will be sent. If the M_STA bit is set to `1` when the TWI is being accessed in slave mode, the TWI will complete the data transfer in slave mode then enter master mode when the bus has been released.  The M_STA bit is cleared automatically after a START condition has been sent: writing a `0` to this bit has no effect. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_STP</name>
              <description>Master Mode Stop If M_STP is set to `1` in master mode, a STOP condition is transmitted on the TWI bus. If the M_STP bit is set to `1` in slave mode, the TWI will behave as if a STOP condition has been received, but no STOP condition will be transmitted on the TWI bus. If both M_STA and M_STP bits are set, the TWI will first transmit the STOP condition (if in master mode) then transmit the START condition.  The M_STP bit is cleared automatically: writing a `0` to this bit has no effect. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>INT_FLAG</name>
              <description>Interrupt Flag INT_FLAG is automatically set to `1` when any of 28 (out of the possible 29) states is entered (see `STAT Register` below). The only state that does not set INT_FLAG is state F8h. If the INT_EN bit is set, the interrupt line goes high when IFLG is set to `1`. If the TWI is operating in slave mode, data transfer is suspended when INT_FLAG is set and the low period of the TWI bus clock line (SCL) is stretched until `1` is written to INT_FLAG. The TWI clock line is then released and the interrupt line goes low. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>A_ACK</name>
              <description>Assert Acknowledge When A_ACK is set to `1`, an Acknowledge (low level on SDA) will be sent during the acknowledge clock pulse on the TWI bus if: 1. Either the whole of a matching 7-bit slave address or the first or the second byte of a matching 10-bit slave address has been received.  2. The general call address has been received and the GCE bit in the ADDR register is set to `1`.  3. A data byte has been received in master or slave mode. When A_ACK is `0`, a Not Acknowledge (high level on SDA) will be sent when a data byte is received in master or slave mode.  If A_ACK is cleared to `0` in slave transmitter mode, the byte in the DATA register is assumed to be the `last byte`. After this byte has been transmitted, the TWI will enter state C8h then return to the idle state (status code F8h) when INT_FLAG is cleared.  The TWI will not respond as a slave unless A_ACK is set. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_DATA</name>
          <description>TWI Data byte</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TWI_DATA</name>
              <description>Data byte for transmitting or received </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_EFR</name>
          <description>TWI Enhance Feature register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>DBN</name>
              <description>Data Byte number follow Read Command Control 00 : No Data Byte to be wrote after read command 01 : Only 1 byte data to be wrote after read command 10 : Bytes data can be wrote after read command 11 : Bytes data can be wrote after read command </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_LCR</name>
          <description>TWI Line Control register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x3A</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>SCL_STATE</name>
              <description>Current State of TWI_SCL 0 : Low 1 : High </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SDA_STATE</name>
              <description>Current State of TWI_SDA 0 : Low 1 : High </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_CTL</name>
              <description>TWI_SCL Line State Control Bit When line control mode is enabled (bit[2] set), value of this bit decide the output level of TWI_SCL 0 : Output low level 1 : Output high level </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_CTL_EN</name>
              <description>TWI_SCL Line State Control Enable When this bit is set, the state of TWI_SCL is control by the value of bit[3]. 0 : Disable TWI_SCL line control mode 1 : Enable TWI_SCL line control mode </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_CTL</name>
              <description>TWI_SDA Line State Control Bit When line control mode is enabled (bit[0] set), value of this bit decide the output level of TWI_SDA 0 : Output low level 1 : Output high level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_CTL_EN</name>
              <description>TWI_SDA Line State Control Enable When this bit is set, the state of TWI_SDA is control by the value of bit[1]. 0 : Disable TWI_SDA line control mode 1 : Enable TWI_SDA line control mode </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_SRST</name>
          <description>TWI Software reset</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>SOFT_RST</name>
              <description>Soft Reset Write `1` to this bit to reset the TWI and clear to `0` when completing Soft Reset operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_STAT</name>
          <description>TWI Status register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0xF8</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA</name>
              <description>Status Information Byte Code Status 
0x00: Bus error 
0x08: START condition transmitted 
0x10: Repeated START condition transmitted 
0x18: Address + Write bit transmitted, ACK received 
0x20: Address + Write bit transmitted, ACK not received 
0x28: Data byte transmitted in master mode, ACK received 
0x30: Data byte transmitted in master mode, ACK not received 
0x38: Arbitration lost in address or data byte 
0x40: Address + Read bit transmitted, ACK received 
0x48: Address + Read bit transmitted, ACK not received 
0x50: Data byte received in master mode, ACK transmitted 
0x58: Data byte received in master mode, not ACK transmitted 
0x60: Slave address + Write bit received, ACK transmitted 
0x68: Arbitration lost in address as master, slave address + Write bit received, ACK transmitted 
0x70: General Call address received, ACK transmitted 
0x78: Arbitration lost in address as master, General Call address received, ACK transmitted 
0x80: Data byte received after slave address received, ACK transmitted 
0x88: Data byte received after slave address received, not ACK transmitted 
0x90: Data byte received after General Call received, ACK transmitted 
0x98: Data byte received after General Call received, not ACK transmitted 
0xA0: STOP or repeated START condition received in slave mode 
0xA8: Slave address + Read bit received, ACK transmitted 
0xB0: Arbitration lost in address as master, slave address + Read bit received, ACK transmitted 
0xB8: Data byte transmitted in slave mode, ACK received 
0xC0: Data byte transmitted in slave mode, ACK not received 
0xC8: Last byte transmitted in slave mode, ACK received 
0xD0: Second Address byte + Write bit transmitted, ACK received 
0xD8: Second Address byte + Write bit transmitted, ACK not received 
0xF8: No relevant status information, INT_FLAG=0 Others: Reserved </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_XADDR</name>
          <description>TWI Extended slave address</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLAX</name>
              <description>Extend Slave Address SLAX[7:0] </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="TWI0">
      <name>TWI1</name>
      <description>TWI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x5002400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TWI0">
      <name>TWI2</name>
      <description>TWI2</description>
      <groupName>generic</groupName>
      <baseAddress>0x5002800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TWI0">
      <name>R-TWI</name>
      <description>R-TWI</description>
      <groupName>generic</groupName>
      <baseAddress>0x7081400</baseAddress>
      <access>read-write</access>
    </peripheral>
  </peripherals>
</device>
