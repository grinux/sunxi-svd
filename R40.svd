<?xml version="1.0" encoding="utf-8"?><device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.3" xsi:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>Allwinner</vendor>
  <vendorID>sunxi</vendorID>
  <name>R40</name>
  <series>R40</series>
  <version>0.1</version>
  <description>R40</description>
  <licenseText>questionable</licenseText>
  <cpu>
    <name>CA7</name>
    <revision>0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>true</fpuPresent>
    <fpuDP>true</fpuDP>
    <nvicPrioBits>0</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>64</width>
  <size>32</size>
  <access>read-write</access>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>CCU</name>
      <description>CCU</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AC97_CLK_REG</name>
          <description>AC97 Clock Register</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8x) 
01: PLL_AUDIO(4X) 
10: PLL_AUDIO(2X) 
11: PLL_AUDIO(1X)</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8x_closingparen_</name>
                  <description>PLL_AUDIO(8x)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_4X_closingparen_</name>
                  <description>PLL_AUDIO(4X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_2X_closingparen_</name>
                  <description>PLL_AUDIO(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_1X_closingparen_</name>
                  <description>PLL_AUDIO(1X)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB1_APB1_CFG_REG</name>
          <description>AHB1/APB1 Configuration Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x1010</resetValue>
          <resetMask>0x33F0</resetMask>
          <fields>
            <field>
              <name>AHB1_CLK_SRC_SEL</name>
              <description>00: LOSC 
01: OSC24M 
10: AXI 
11: PLL_PERIPH0(1X)/AHB1_PRE_DIV.</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AXI</name>
                  <description>AXI</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen__slash_AHB1_PRE_DIV</name>
                  <description>PLL_PERIPH0(1X)/AHB1_PRE_DIV.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APB1_CLK_RATIO</name>
              <description>APB1 Clock Divide Ratio. APB1 clock source is AHB1 clock. 
00: /2 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB1_PRE_DIV</name>
              <description>AHB1 Clock Pre Divide Ratio  
00: /1 
01: /2 
10: /3 
11: /4.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB1_CLK_DIV_RATIO</name>
              <description>AHB1 Clock Divide Ratio. 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>APB2_CFG_REG</name>
          <description>APB2_CFG_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x303001F</resetMask>
          <fields>
            <field>
              <name>APB2_CLK_SRC_SEL</name>
              <description>APB2 Clock Source Select 
00: LOSC 
01: OSC24M 
1X: PLL_PERIPH0(2X). This clock is used for some special module apbclk(UART, TWI, PS2). Because these modules need special clock rate even if the apb1clk changed.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X). This clock is used for some special module apbclk(UART, TWI, PS2). Because these modules need special clock rate even if the apb1clk changed.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_RAT_N</name>
              <description>Clock Per Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_RAT_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 32.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AUDIO_CODEC_CLK_REG</name>
          <description>AUDIO_CODEC_CLK_REG</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>SCLK_1X_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = 1X Clock Output.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = 1X Clock Output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CLK_REG</name>
          <description>AVS Clock Register</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK= OSC24M.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG0</name>
          <description>Bus Clock Gating Register 0</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFE6F62</resetMask>
          <fields>
            <field>
              <name>USBOHCI2_GATING</name>
              <description>Gating Clock for USB OHCI1 
0: Mask 
1: Pass</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI1_GATING</name>
              <description>Gating Clock for USB OHCI1 
0: Mask 
1: Pass</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI0_GATING</name>
              <description>Gating Clock for USB OHCI0 
0: Mask 
1: Pass</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI2_GATING</name>
              <description>Gating Clock for USB EHCI1 
0: Mask 
1: Pass</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI1_GATING</name>
              <description>Gating Clock for USB EHCI1 
0: Mask 
1: Pass</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI0_GATING</name>
              <description>Gating Clock for USB EHCI0 
0: Mask 
1: Pass</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOTG_GATING</name>
              <description>Gating Clock for USB OTG 
0: Mask 
1: Pass</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SATA_GATING</name>
              <description>Gating Clock for SATA 
0: Mask 
1: Pass.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI3_GATING</name>
              <description>Gating Clock for SPI3 
0: Mask 
1: Pass.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI2_GATING</name>
              <description>Gating Clock for SPI2 
0: Mask 
1: Pass.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI1_GATING</name>
              <description>Gating Clock for SPI1 
0: Mask 
1: Pass.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_GATING</name>
              <description>Gating Clock for SPI0 
0: Mask 
1: Pass.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSTMR_GATING</name>
              <description>Gating Clock for High Speed Timer 
0: Mask 
1: Pass.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TS_GATING</name>
              <description>Gating Clock for TS 
0: Mask 
1: Pass</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_GATING</name>
              <description>Gating Clock for EMAC 
0: Mask 
1: Pass</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_GATING</name>
              <description>Gating Clock for DRAM 
0: Mask 
1: Pass.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_GATING</name>
              <description>Gating Clock for NAND 
0: Mask 
1: Pass.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC3_GATING</name>
              <description>Gating Clock for SMHC3 
0: Mask 
1: Pass.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC2_GATING</name>
              <description>Gating Clock for SMHC2 
0: Mask 
1: Pass.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC1_GATING</name>
              <description>Gating Clock for SMHC1 
0: Mask 
1: Pass.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC0_GATING</name>
              <description>Gating Clock for SMHC0 
0: Mask 
1: Pass.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_GATING</name>
              <description>Gating Clock for DMA 
0: Mask 
1: Pass.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_GATING</name>
              <description>Gating Clock for CE 
0: Mask 
1: Pass.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIPIDSI_GATING</name>
              <description>Gating Clock for MIPI DSI 
0: Mask 
1: Pass</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG1</name>
          <description>Bus Clock Gating Register 1</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF2FF25</resetMask>
          <fields>
            <field>
              <name>TCON_TOP_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV1_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV0_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_LCD1_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_LCD0_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_TOP_GATING</name>
              <description>0:Mask 1:Pass</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVD3_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD2_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD1_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD0_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPU_GATING</name>
              <description>Gating Clock for GPU  
0: Mask 
1: Pass.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GMAC_GATING</name>
              <description>Gating Clock for GMAC  
0: Mask 
1: Pass.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE_TOP_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE1_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE0_GATING</name>
              <description>0: Mask 
1: Pass</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DE_GATING</name>
              <description>Gating Clock For DE  
0: Mask 
1: Pass.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI1_GATING</name>
              <description>0: Mask 
1: Pass.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI0_GATING</name>
              <description>0: Mask 
1: Pass.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI1_GATING</name>
              <description>Gating Clock for CSI1 
0: Mask 
1: Pass.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI0_GATING</name>
              <description>Gating Clock for CSI0 
0: Mask 
1: Pass.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DI_GATING</name>
              <description>Gating Clock for DEINTERLACE 
0: Mask 
1: Pass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MP_GATING</name>
              <description>Gating Clock for MP 
0: Mask 
1: Pass</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_GATING</name>
              <description>Gating Clock for VE 
0: Mask 
1: Pass.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG2</name>
          <description>Bus Clock Gating Register 2</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x75E7</resetMask>
          <fields>
            <field>
              <name>I2S/PCM2_GATING</name>
              <description>Gating Clock for I2S/PCM2 
0: Mask 
1: Pass.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM1_GATING</name>
              <description>Gating Clock for I2S/PCM1 
0: Mask 
1: Pass.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM0_GATING</name>
              <description>Gating Clock for I2S/PCM0 
0: Mask 
1: Pass.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYPAD_GATING</name>
              <description>Gating Clock for KEYPAD 
0: Mask 
1: Pass.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_GATING</name>
              <description>Gating Clock for THS  
0: Mask 
1: Pass</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIR1_GATING</name>
              <description>Gating Clock for CIR1 
0: Mask 
1: Pass</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIR0_GATING</name>
              <description>Gating Clock for CIR0 
0: Mask 
1: Pass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO_GATING</name>
              <description>Gating Clock for PIO  
0: Mask 
1: Pass.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC97_GATING</name>
              <description>Gating Clock for AC97 
0: Mask 
1: Pass</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OWA_GATING</name>
              <description>Gating Clock for OWA  
0: Mask 
1: Pass</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC_DIG_GATING</name>
              <description>Gating Clock for AC Digital 
0: Mask 
1: Pass</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG3</name>
          <description>Bus Clock Gating Register 3</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF80FF</resetMask>
          <fields>
            <field>
              <name>UART7_GATING</name>
              <description>Gating Clock for UART7  
0: Mask 
1: Pass.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART6_GATING</name>
              <description>Gating Clock for UART6  
0: Mask 
1: Pass.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART5_GATING</name>
              <description>Gating Clock for UART5  
0: Mask 
1: Pass.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART4_GATING</name>
              <description>Gating Clock for UART4  
0: Mask 
1: Pass.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART3_GATING</name>
              <description>Gating Clock for UART3 
0: Mask 
1: Pass.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_GATING</name>
              <description>Gating Clock for UART2 
0: Mask 
1: Pass.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_GATING</name>
              <description>Gating Clock for UART1  
0: Mask 
1: Pass.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_GATING</name>
              <description>Gating Clock for UART0 
0: Mask 
1: Pass.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI4_GATING</name>
              <description>Gating Clock for TWI4 
0: Mask 
1: Pass.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PS2_1_GATING</name>
              <description>Gating Clock for PS2_1 
0: Mask 
1: Pass</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PS2_0_GATING</name>
              <description>Gating Clock for PS2_0 
0: Mask 
1: Pass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR_GATING</name>
              <description>Gating Clock for SCR 
0: Mask 
1: Pass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI3_GATING</name>
              <description>Gating Clock for TWI3 
0: Mask 
1: Pass.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_GATING</name>
              <description>Gating Clock for TWI2 
0: Mask 
1: Pass.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_GATING</name>
              <description>Gating Clock for TWI1 
0: Mask 
1: Pass.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_GATING</name>
              <description>Gating Clock for TWI0 
0: Mask 
1: Pass.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG4</name>
          <description>Bus Clock Gating Register 4</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80</resetMask>
          <fields>
            <field>
              <name>DBGSYS_GATING</name>
              <description>Gating Clock for DBGSYS 
0: Mask 
1: Pass</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG0</name>
          <description>Bus Software Reset Register 0</description>
          <addressOffset>0x2C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFE6F62</resetMask>
          <fields>
            <field>
              <name>USBOHCI2_RST</name>
              <description>Gating Clock for USB OHCI2 
0: Assert 
1: De-assert.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI1_RST</name>
              <description>Gating Clock for USB OHCI1 
0: Assert 
1: De-assert.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI0_RST</name>
              <description>Gating Clock for USB OHCI0 
0: Assert 
1: De-assert.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI2_RST</name>
              <description>Gating Clock for USB EHCI2 
0: Assert 
1: De-assert.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI1_RST</name>
              <description>Gating Clock for USB EHCI1 
0: Assert 
1: De-assert.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI0_RST</name>
              <description>Gating Clock for USB EHCI0 
0: Assert 
1: De-assert.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOTG_RST</name>
              <description>Gating Clock for USB OTG 
0: Assert 
1: De-assert.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SATA_RST</name>
              <description>Gating Clock for SATA 
0: Assert 
1: De-assert.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI3_RST</name>
              <description>Gating Clock for SPI3 
0: Assert 
1: De-assert.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI2_RST</name>
              <description>SPI2 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI1_RST</name>
              <description>SPI1 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_RST</name>
              <description>SPI0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSTMR_RST</name>
              <description>HSTMR Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TS_RST</name>
              <description>TS Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RST</name>
              <description>EMAC Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRAM_RST</name>
              <description>SDRAM AHB Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_RST</name>
              <description>NAND Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC3_RST</name>
              <description>SMHC3 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC2_RST</name>
              <description>SMHC2 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC1_RST</name>
              <description>SMHC1 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC0_RST</name>
              <description>SMHC0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_RST</name>
              <description>CE Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIPI_DSI_RST</name>
              <description>MIPI DSI Reset 
0: Assert 
1: De-assert</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG1</name>
          <description>Bus Software Reset Register 1</description>
          <addressOffset>0x2C4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF2FF25</resetMask>
          <fields>
            <field>
              <name>DCU_RST</name>
              <description>DCU Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TOP_RST</name>
              <description>TCON_TOP Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV1_RST</name>
              <description>TCON_TV1 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV0_RST</name>
              <description>TCON_TV0 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_LCD1_RST</name>
              <description>TCON_LCD1 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_LCD0_RST</name>
              <description>TCON_LCD0 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_TOP_RST</name>
              <description>TVD_TOP Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD3_RST</name>
              <description>TVD3 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD2_RST</name>
              <description>TVD2 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD1_RST</name>
              <description>TVD1 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD0_RST</name>
              <description>TVD0 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPU_RST</name>
              <description>GPU Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GMAC_RST</name>
              <description>GMAC Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE_TOP_RST</name>
              <description>TVE_TOP Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE1_RST</name>
              <description>TVE1 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE0_RST</name>
              <description>TVE0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DE_RST</name>
              <description>DE Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI1_RST</name>
              <description>HDMI1 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI0_RST</name>
              <description>HDMI0 Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI1_RST</name>
              <description>CSI0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI0_RST</name>
              <description>CSI0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DI_RST</name>
              <description>DEINTERLACE Reset. 
0: Assert 1:De-assert</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert 1:De-assert</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MP_RST</name>
              <description>MP Reset 
0: Assert 1:De-assert</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert 1:De-assert</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_RST</name>
              <description>VE Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG2</name>
          <description>Bus Software Reset Register 2</description>
          <addressOffset>0x2C8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>LVDS_RST</name>
              <description>LVDS Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG3</name>
          <description>Bus Software Reset Register 3</description>
          <addressOffset>0x2D0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x75C7</resetMask>
          <fields>
            <field>
              <name>I2S/PCM2_RST</name>
              <description>I2S/PCM2 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM1_RST</name>
              <description>I2S/PCM1 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM0_RST</name>
              <description>I2S/PCM0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEY_RST</name>
              <description>KEY Reset 0:Assert 1:De-assert</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS_RST</name>
              <description>THS Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIR1_RST</name>
              <description>CIR1 Reset 
0: Assert 
1: De-assert</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIR0_RST</name>
              <description>CIR0 Reset 
0: Assert 
1: De-assert</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC97_RST</name>
              <description>AC97 Reset 
0: Assert 
1: De-assert</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>C</name>
              <description>C</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AC_RST</name>
              <description>AC Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG4</name>
          <description>Bus Software Reset Register 4</description>
          <addressOffset>0x2D8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF80FF</resetMask>
          <fields>
            <field>
              <name>UART7_RST</name>
              <description>UART7 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART6_RST</name>
              <description>UART6 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART5_RST</name>
              <description>UART5 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART4_RST</name>
              <description>UART4 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART3_RST</name>
              <description>UART3 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_RST</name>
              <description>UART2 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_RST</name>
              <description>UART1 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_RST</name>
              <description>UART0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI4_RST</name>
              <description>TWI4 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PS2_1_RST</name>
              <description>PS2_1 Reset 
0: Assert 
1: De-assert</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PS2_0_RST</name>
              <description>PS2_0 Reset 
0: Assert 
1: De-assert</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR_RST</name>
              <description>SCR Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI3_RST</name>
              <description>TWI3 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_RST</name>
              <description>TWI2 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_RST</name>
              <description>TWI1 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_RST</name>
              <description>TWI0 Reset. 
0: Assert 
1: De-assert.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CLK_REG</name>
          <description>CE Clock Register</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 400MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select    
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR0_CLK_REG</name>
          <description>CIR0 Clock Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 100MHz) 
0: Clock is OFF 
1: Clock is ON The special clock = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON The special clock = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: LOSC.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock pre-divide ratio (n) The select clock source is pre-divided by 2^n. The divider is 1/2/4/8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR1_CLK_REG</name>
          <description>CIR1 Clock Register</description>
          <addressOffset>0xD4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 100MHz) 
0: Clock is OFF 
1: Clock is ON The special clock = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON The special clock = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: LOSC.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock pre-divide ratio (n) The select clock source is pre-divided by 2^n. The divider is 1/2/4/8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_OUTA_REG</name>
          <description>Clock Output A Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83301F00</resetMask>
          <fields>
            <field>
              <name>CLK_OUT_EN</name>
              <description>Clock Output Enable 
0: Disable 
1: Clock Output Enable OutputA = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clock</name>
                  <description>Clock Output Enable OutputA = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_OUT_SRC_SEL</name>
              <description>00: OSC24MHz/750=32KHz 
01: LOSC 
10: OSC24MHz 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24MHz_slash_750_equals_32KHz</name>
                  <description>OSC24MHz/750=32KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24MHz</name>
                  <description>OSC24MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIVIDER_N</name>
              <description>Clock Output Divide Factor N 
00: /1 
01: /2 
10: /4 
11: /8</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIVIDER_M</name>
              <description>Clock Output Divide Factor M 
00000: /1 
00001: /2 
00010: /3 ... 
11111: /32</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3 ...</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b11111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_OUTB_REG</name>
          <description>Clock Output B Register</description>
          <addressOffset>0x1F4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83301F00</resetMask>
          <fields>
            <field>
              <name>CLK_OUT_EN</name>
              <description>Clock Output Enable 
0: Disable 
1: Clock Output Enable OutputB = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clock</name>
                  <description>Clock Output Enable OutputB = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_OUT_SRC_SEL</name>
              <description>00: OSC24MHz/750=32KHz 
01: LOSC 
10: OSC24MHz 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24MHz_slash_750_equals_32KHz</name>
                  <description>OSC24MHz/750=32KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24MHz</name>
                  <description>OSC24MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIVIDER_N</name>
              <description>Clock Output Divide Factor N 
00: /1 
01: /2 
10: /4 
11: /8</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIVIDER_M</name>
              <description>Clock Output Divide Factor M 
00000: /1 
00001: /2 
00010: /3 ... 
11111: /32</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3 ...</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b11111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_AXI_CFG_REG</name>
          <description>CPUX/AXI Configuration Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30003</resetMask>
          <fields>
            <field>
              <name>CPUX_CLK_SRC_SEL</name>
              <description>CPUX Clock Source Select. CPUX Clock = Clock Source 
00: LOSC 
01: OSC24M 
1X: PLL_CPUX If the clock source is changed, there need to wait for 8 present running clock cycles at most.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_CPUX</name>
                  <description>PLL_CPUX If the clock source is changed, there need to wait for 8 present running clock cycles at most.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AXI_CLK_DIV_RATIO</name>
              <description>AXI Clock Divide Ratio. AXI Clock source is CPU clock source. 
00: /1 
01: /2 
10: /3 
11: /4.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_CLK_REG</name>
          <description>CSI Clock Register</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x870F871F</resetMask>
          <fields>
            <field>
              <name>CSI_SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_SRC_SEL</name>
              <description>Special Clock Source Select 
000: PLL_PERIPH0(1X) 
001: PLL_PERIPH1(1X) Others: /.</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /.</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_SCLK_DIV_M</name>
              <description>CSI Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_MCLK0_GATING</name>
              <description>Gating Master Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = / .</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLK0_SRC_SEL</name>
              <description>Master Clock Source Select 
000: OSC24M 
001: PLL_VIDEO1(1X) 
010: PLL_PERIPH1(1X) Others: /</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_MCLK0_DIV_M</name>
              <description>CSI Master Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 32.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_MCLK_CLK_REG</name>
          <description>CSI_MCLK_CLK_REG</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x871F</resetMask>
          <fields>
            <field>
              <name>CSI_MCLK1_GATING</name>
              <description>Gating Master Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = / .</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLK1_SRC_SEL</name>
              <description>Master Clock Source Select 
000: OSC24M 
001: PLL_VIDEO1(1X) 
010: PLL_PERIPH1(1X) Others: /</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_MCLK1_DIV_M</name>
              <description>CSI Master Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 32.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DEINTERLACE_CLK_REG</name>
          <description>DEINTERLACE_CLK_REG</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = /</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = /</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_PERIPH0(1X) 
001: PLL_PERIPH1(1X) Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DE_CLK_REG</name>
          <description>DE Clock Register</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON This special clock = Clock Source/Divider M.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This special clock = Clock Source/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_PERIPH0(2X) 
001: PLL_DE Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DE_MP_CLK_REG</name>
          <description>DE_MP Clock Register</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON This special clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This special clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_PERIPH0(2X) 
001: PLL_DE Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_CFG_REG</name>
          <description>DRAM Configuration Register</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80310003</resetMask>
          <fields>
            <field>
              <name>DRAM_CTR_RST</name>
              <description>DRAM Controller Reset for S_CLK Domain. 
0: Assert 
1: De-assert.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_SRC_SELECT</name>
              <description>00: PLL_DDR0 
01: PLL_DDR1 
1X: /.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR1</name>
                  <description>PLL_DDR1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRCLK_UPD</name>
              <description>SDRCLK Configuration 0 Update.  
0: Invalid 
1: Valid. Note: Setting this bit will validate Configuration 0. It will be automatically cleared after the Configuration 0 is valid. The DRAMCLK Source is from PLL_DDR.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid</name>
                  <description>Valid. Note: Setting this bit will validate Configuration 0. It will be automatically cleared after the Configuration 0 is valid. The DRAMCLK Source is from PLL_DDR.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_DIV_M</name>
              <description>DRAMCLK Divider of Configuration. The clock is divided by (m+1). The divider should be from 1 to 4.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_CLK_GATING_REG</name>
          <description>DRAM Clock Gating Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>DI_DCLK_GATING</name>
              <description>Gating DRAM for DE-INTERLACE 
0: Mask 
1: Pass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MP_DCLK_GATING</name>
              <description>Gating DRAM for MP 
0: Mask 
1: Pass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_DCLK_GATING</name>
              <description>Gating DRAM for TVD 
0: Mask 
1: Pass</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TS_DCLK_GATING</name>
              <description>Gating DRAM for TS 
0: Mask 
1: Pass</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI1_DCLK_GATING</name>
              <description>Gating DRAM Clock for CSI1 
0: Mask 
1: Pass.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI0_DCLK_GATING</name>
              <description>Gating DRAM Clock for CSI0 
0: Mask 
1: Pass.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_DCLK_GATING</name>
              <description>Gating DRAM Clock for VE 
0: Mask 
1: Pass.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_CLK_REG</name>
          <description>GMAC Clock Register</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>TXC_DIV_CFG</name>
              <description>Clock pre-divide ratio(n) External transmit clock (125 MHz) is pre-divided by as follows for RGMII. 
00: /1,generate 125 MHz 
01: /5,generate 25 MHz 
10: /50,generate 2.5 MHz 
11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1_comma_generate</name>
                  <description>/1,generate 125 MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_5_comma_generate</name>
                  <description>/5,generate 25 MHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_50_comma_generate</name>
                  <description>/50,generate 2.5 MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GRXDC</name>
              <description>Configure GMAC Receive Clock Delay Chian. 
000: 
001: ... 
111:</description>
              <bitRange>[7:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_000</name>
                  <description>0b000</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_001</name>
                  <description>...</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_111</name>
                  <description>0b111</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GRXIE</name>
              <description>Enable GMAC Receive Clock Invertor. 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GTXIE</name>
              <description>Enable GMAC Transmit Clock Invertor. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPIT</name>
              <description>GMAC PHY Interface Type 
0: MII 
1: RGMII</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MII</name>
                  <description>MII</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII</name>
                  <description>RGMII</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GTCS</name>
              <description>GMAC Transmit Clock Source 
00: Transmit clock source for MII 
01: External transmit clock source(125 MHz) for RGMII 
10: Internal transmit clock source for RGMII 
11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmit</name>
                  <description>Transmit clock source for MII</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External transmit clock source(125 MHz) for RGMII</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal transmit clock source for RGMII</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPU_CLK_REG</name>
          <description>GPU Clock Register</description>
          <addressOffset>0x1A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000007</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>0: Clock is OFF 
1: Clock is ON. SCLK= PLL_GPU/ .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= PLL_GPU/ .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock pre-divide ratio (N) The select clock source is pre-divided by (n+1). The divider is from 1 to 8.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_CLK_REG</name>
          <description>HDMI Clock Register</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK= / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK= / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>Special Clock Source Select 
00: PLL_VIDEO0(1X) 
01: PLL_VIDEO1(1X) Others: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X) Others: /</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_SLOW_CLK_REG</name>
          <description>HDMI Slow Clock Register</description>
          <addressOffset>0x154</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>HDMI_DDC_CLK_GATING</name>
              <description>0: Clock is OFF 
1: Clock is ON SCLK = OSC24M.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM0_CLK_REG</name>
          <description>I2S_PCM0_CLK_REG</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO (8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM1_CLK_REG</name>
          <description>I2S_PCM1_CLK_REG</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen_</name>
                  <description>PLL_AUDIO(8X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_2</name>
                  <description>PLL_AUDIO(8X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_4</name>
                  <description>PLL_AUDIO(8X)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM2_CLK_REG</name>
          <description>I2S_PCM2_CLK_REG</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO (8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTOSC_32K_CLK_AUTO_CALI_REG</name>
          <description>INTOSC_32K_CLK_AUTO_CALI_REG</description>
          <addressOffset>0x314</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>RC_CALIBRATION_ENABLE</name>
              <description>RC Calibration Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RC_CALIBRATION_FUNCTION_ENABLE</name>
              <description>RC Calibration Function Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYPAD_CLK_REG</name>
          <description>KEYPAD Clock Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x1F</resetValue>
          <resetMask>0x8303001F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 100MHz) 
0: Clock is OFF 
1: Clock is ON This special clock = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This special clock = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: / 
10: LOSC 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_RATIO_N</name>
              <description>Clock pre-divide ratio (n) The select clock source is pre-divided by 2^n. The divider is 1/2/4/8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 32.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_CLK_REG</name>
          <description>MBUS Clock Register</description>
          <addressOffset>0x15C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>MBUS_SCLK_GATING</name>
              <description>Gating Clock for MBUS 
0: Clock is OFF 
1: Clock is ON. MBUS_CLOCK = /</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. MBUS_CLOCK = /</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBUS_SCLK_SRC</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_DDR0 
11: /.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBUS_SCLK_RATIO_N</name>
              <description>Clock Pre-divide Ratio (N) The select clock source is pre-divided by 2^N. The divider is 1/2/4/8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MBUS_SCLK_RATIO_M</name>
              <description>Clock Divide Ratio (M) The divided clock is divided by (M+1). The divider is from 1 to 16. The divide ratio must be changed smoothly. Note: If the clock has been changed ,it must wait for at least 16 cycles.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_RST_REG</name>
          <description>MBUS Reset Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x80000000</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>MBUS_RESET</name>
              <description>0: Assert 
1: De-assert.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MIPI_DSI_CLK_REG</name>
          <description>MIPI_DSI Clock Register</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x830F</resetMask>
          <fields>
            <field>
              <name>DSI_DPHY_GATING</name>
              <description>Gating DSI DPHY Clock  
0: Clock is OFF 
1: Clock is ON. This DSI DPHY clock = / .</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This DSI DPHY clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSI_DPHY_SRC_SEL</name>
              <description>DSI DPHY Clock Source Select. 
00: PLL_VIDEO0(1X) 
01: PLL_VIDEO1(1X) 
10: PLL_PERIPH0(1X) 
11: /</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DPHY_CLK_DIV_M</name>
              <description>DSI DPHY Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NAND_CLK_REG</name>
          <description>NAND Clock Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: /.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_CLK_REG</name>
          <description>OWA Clock Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen_</name>
                  <description>PLL_AUDIO(8X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_2</name>
                  <description>PLL_AUDIO(8X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_4</name>
                  <description>PLL_AUDIO(8X)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_BIAS_REG</name>
          <description>PLL_AUDIO Bias Register</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_CTRL_REG</name>
          <description>PLL_AUDIO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x35514</resetValue>
          <resetMask>0x910F7F1F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL is for Audio. The PLL_AUDIO= (24MHz*N)/(M*P). The PLL_AUDIO(8X) = (24MHz*N*2)/M Note: 3&lt;=N/M&lt;=21. (24MHz*N)/P must be in the range of 72MHz~504MHz . PLL_AUDIO default is 24.571MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL is for Audio. The PLL_AUDIO= (24MHz*N)/(M*P). The PLL_AUDIO(8X) = (24MHz*N*2)/M Note: 3&lt;=N/M&lt;=21. (24MHz*N)/P must be in the range of 72MHz~504MHz . PLL_AUDIO default is 24.571MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. In this case, the only low 4 bits of are valid (N: The range is from 1 to 16).</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In this case, the only low 4 bits of are valid (N: The range is from 1 to 16).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_POSTDIV_P</name>
              <description>Post-div factor (P= Factor+1) The range is from 1 to 16.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 ... Factor=127, N=128.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor(M = Factor+1). The range is from 1 to 32.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_PAT_CTRL_REG</name>
          <description>PLL_AUDIO Pattern Control Register</description>
          <addressOffset>0x284</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_BIAS_REG</name>
          <description>PLL_CPUX Bias Register</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x8100200</resetValue>
          <resetMask>0x9F1F070F</resetMask>
          <fields>
            <field>
              <name>VCO_RST</name>
              <description>VCO reset in.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXG_MODE</name>
              <description>Exchange Mode. Note: CPU PLL source will select PLL_PERIPH instead of PLL_CPU</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[3:0].</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK_CTRL</name>
              <description>PLL Lock Time Control[2:0].</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACT_CTRL</name>
              <description>PLL Damping Factor Control[3:0].</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_CTRL_REG</name>
          <description>PLL_CPUX Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x91031F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL _CPUX = ((24MHz/K)*N)/(M*P). The PLL output is for the CPUX Clock. Note: 10&lt;=N*K&lt;=88. 24MHz*N*K must be in the range of 240MHz~2.1GHz. The default value of PLL _CPUX is 408MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL _CPUX = ((24MHz/K)*N)/(M*P). The PLL output is for the CPUX Clock. Note: 10&lt;=N*K&lt;=88. 24MHz*N*K must be in the range of 240MHz~2.1GHz. The default value of PLL _CPUX is 408MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPUX_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_OUT_EXT_DIV_P</name>
              <description>PLL Output External Divider P 
00: /1 
01: /2 
10: /4 
11: /.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K. (K=Factor + 1) The range is from 1 to 4.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M. (M=Factor + 1) The range is from 1 to 4.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_PAT_CTRL_REG</name>
          <description>PLL_CPUX Pattern Control Register</description>
          <addressOffset>0x280</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_TUN_REG</name>
          <description>PLL_CPUX Tuning Register</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0xA101000</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_BAND_WID_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL_EN</name>
              <description>VCO Gain Control Enable. 
0: Disable 
1: Enable.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL</name>
              <description>VCO Gain Control Bits[2:0].</description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INIT_FREQ_CTRL</name>
              <description>PLL Initial Frequency Control[6:0].</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD</name>
              <description>C-Reg-Od For Verify.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_IN</name>
              <description>C-B-In[6:0] For Verify.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD1</name>
              <description>C-Reg-Od1 For Verify.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_OUT</name>
              <description>C-B-Out[6:0] For Verify.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_BIAS_REG</name>
          <description>PLL_DDR0 Bias Register</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x81104000</resetValue>
          <resetMask>0xF31F700F</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[3:0].</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_GAIN_CTRL_EN</name>
              <description>PLL VCO Gain Control Enable. 
0: Disable 
1: Enable.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_GAIN_CTRL</name>
              <description>PLL VCO Gain Control Bit[2:0].</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[3:0].</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_CTRL_REG</name>
          <description>PLL_DDR0 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x91101F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_DDR0 = (24MHz*N*K)/M. Note: 10&lt;=N*K&lt;=77 (24MHz*N*K) must be in the range of 240MHz~1.8GHz. The default value of PLL_DDR0 is 408MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_DDR0 = (24MHz*N*K)/M. Note: 10&lt;=N*K&lt;=77 (24MHz*N*K) must be in the range of 240MHz~1.8GHz. The default value of PLL_DDR0 is 408MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DDR0_CFG_UPDATE</name>
              <description>PLL_DDR0 Configuration Update. When PLL_DDR0 has been changed, this bit should be set to 1 to validate the PLL, otherwise the change would be invalid. And this bit would be cleared automatically after the PLL change is valid. 
0: No effect 
1: Validating the PLL_DDR0.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Validating</name>
                  <description>Validating the PLL_DDR0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M.(M = Factor + 1 ) The range is from 1 to 4.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_PAT_CTRL_REG</name>
          <description>PLL_DDR0 Pattern Control Register</description>
          <addressOffset>0x290</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_TUN_REG</name>
          <description>PLL_DDR0 Tuning Register</description>
          <addressOffset>0x260</addressOffset>
          <resetValue>0x14880000</resetValue>
          <resetMask>0x17FFFFFF</resetMask>
          <fields>
            <field>
              <name>VREG1_OUT_EN</name>
              <description>Vreg1 Out Enable. 
0: Disable 
1: Enable.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_LTIME_CTRL</name>
              <description>PLL Lock Time Control[2:0].</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VCO_RST</name>
              <description>VCO Reset In.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INIT_FREQ_CTRL</name>
              <description>PLL Initial Frequency Control[6:0].</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OD1</name>
              <description>Reg-od1 for Verify.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>B_IN</name>
              <description>B-in[6:0] for Verify.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OD</name>
              <description>Reg-od for Verify.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>B_OUT</name>
              <description>B-out[6:0] for Verify.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_BIAS_REG</name>
          <description>PLL_DDR1 Bias Register</description>
          <addressOffset>0x24C</addressOffset>
          <resetValue>0x10010000</resetValue>
          <resetMask>0x1F1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_CFG_REG</name>
          <description>PLL_DDR1 Configuration Register</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0xCCCA000</resetValue>
          <resetMask>0x9FFFF07F</resetMask>
          <fields>
            <field>
              <name>PLL_DDR1_MODE</name>
              <description>0: Normal Mode 
1: Continuously Frequency Scale</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Continuously</name>
                  <description>Continuously Frequency Scale</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SSC</name>
              <description>The amplitude of must be the integer times of (2^ ). Spread Frequency Amplitude =( Amplitude +2^ )*24/(2^17),the unit is MHz</description>
              <bitRange>[28:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DDR1_PHASE_COMPENSATE</name>
              <description>The value of bit[6:4] is based on 24M clock, then the default PLL_DDR phase compensate is (3/24000000) s.</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DDR1_STEP</name>
              <description>0000: 0.00439MHz/us (576/2^17) 
0001: 0.00879MHz/us (576/2^16) 
0010: 0.01758MHz/us (576/2^15) 
0011: 0.03516MHz/us (576/2^14) 
0100: 0.07031MHz/us (576/2^13) 
0101: 0.14062MHz/us (576/2^12) 
0110: 0.28125MHz/us (576/2^11) 
0111: 0.56250MHz/us (576/2^10) 
1000: 1.12500MHz/us (576/2^9) 
1001: 2.25000MHz/us (576/2^8) 
1010: 4.50000Mhz/us (576/2^7) 
1011: 9.00000Mhz/us (576/2^6) Others: 0.00439MHz/us (576/2^17)</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_00439MHz_slash_us</name>
                  <description>0.00439MHz/us (576/2^17)</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_00879MHz_slash_us</name>
                  <description>0.00879MHz/us (576/2^16)</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_01758MHz_slash_us</name>
                  <description>0.01758MHz/us (576/2^15)</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_03516MHz_slash_us</name>
                  <description>0.03516MHz/us (576/2^14)</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_07031MHz_slash_us</name>
                  <description>0.07031MHz/us (576/2^13)</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_14062MHz_slash_us</name>
                  <description>0.14062MHz/us (576/2^12)</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_28125MHz_slash_us</name>
                  <description>0.28125MHz/us (576/2^11)</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_56250MHz_slash_us</name>
                  <description>0.56250MHz/us (576/2^10)</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_12500MHz_slash_us</name>
                  <description>1.12500MHz/us (576/2^9)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_25000MHz_slash_us</name>
                  <description>2.25000MHz/us (576/2^8)</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_point_50000Mhz_slash_us</name>
                  <description>4.50000Mhz/us (576/2^7)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9_point_00000Mhz_slash_us</name>
                  <description>9.00000Mhz/us (576/2^6) Others: 0.00439MHz/us (576/2^17)</description>
                  <value>0b1011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_CTRL_REG</name>
          <description>PLL_DDR1 Control Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x1800</resetValue>
          <resetMask>0xD000FF03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_DDR1 = 24MHz*N/M. Note: 16&lt;=N&lt;=75. 24MHz*N/M must be in the range of 192 MHz ~ 1.6 GHz. Its default value is 600 MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_DDR1 = 24MHz*N/M. Note: 16&lt;=N&lt;=75. 24MHz*N/M must be in the range of 192 MHz ~ 1.6 GHz. Its default value is 600 MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRPLL_UPD</name>
              <description>SDRPLL Configuration Update. Note: When PLL_DDR1 has changed, this bit should be set to 1 to validate the PLL, otherwise the change is invalid. It will be automatically cleared after the PLL is valid. 
0: No effect 
1: To validate the PLL_DDR1.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>To_validate</name>
                  <description>To validate the PLL_DDR1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>N_MODE</name>
              <description>0: New mode 
1: Original mode If new mode, avoid config N=0 mistake.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>New_mode</name>
                  <description>New mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Original_mode</name>
                  <description>Original mode If new mode, avoid config N=0 mistake.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>N= Factor +1. The range is from 0 to 127</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>M= Factor +1. The range is from 0 to 4</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_PAT_CTRL_REG0</name>
          <description>PLL_DDR1 Pattern Control Register0</description>
          <addressOffset>0x2AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: / 
11: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_PAT_CTRL_REG1</name>
          <description>PLL_DDR1 Pattern Control Register1</description>
          <addressOffset>0x2B0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR_AUX_REG</name>
          <description>PLL_DDR Auxiliary Register</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x11</resetMask>
          <fields>
            <field>
              <name>PLL_DDR1_CLK_OPTION</name>
              <description>0: 24M_SYS 
1: 24M_PLL_DDR1</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24M_SYS</name>
                  <description>24M_SYS</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24M_PLL_DDR1</name>
                  <description>24M_PLL_DDR1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DDR1_RST</name>
              <description>PLL DDR1 reset 
0: Assert 
1: De-assert</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_BIAS_REG</name>
          <description>PLL_DE Bias Register</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0].</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_CTRL_REG</name>
          <description>PLL_DE Control Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, The PLL_DE = (24MHz*N)/M. In the fractional mode, the PLL Output is selected by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. The default value of PLL_DE is 297MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, The PLL_DE = (24MHz*N)/M. In the fractional mode, the PLL Output is selected by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. The default value of PLL_DE is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when =0( factor must be set to 0); no meaning when =1. 
0: PLL Output=270MHz 
1: PLL Output =297MHz.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Pre Divider M should be set to 0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Pre Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=0x7F,N=128.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Per Divider (M = Factor+1). The range is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_PAT_CTRL_REG</name>
          <description>PLL_DE Pattern Control Register</description>
          <addressOffset>0x2A8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_BIAS_REG</name>
          <description>PLL_GPU Bias Register</description>
          <addressOffset>0x23C</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0].</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_CTRL_REG</name>
          <description>PLL_GPU Control Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, The PLL_GPU = (24MHz*N)/M. In the fractional mode, the PLL Output is selected by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192 MHz ~ 600 MHz. The default value of PLL_GPU is 297 MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, The PLL_GPU = (24MHz*N)/M. In the fractional mode, the PLL Output is selected by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192 MHz ~ 600 MHz. The default value of PLL_GPU is 297 MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when =0( factor must be set to 0); no meaning when =1. 
0: PLL Output=270MHz 
1: PLL Output=297MHz.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output_equals_297MHz</name>
                  <description>PLL Output=297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode. 
1: Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=127,N=128.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Pre Divider (M = Factor+1). The range is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_PAT_CTRL_REG</name>
          <description>PLL_GPU Pattern Control Register</description>
          <addressOffset>0x29C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_LOCK_CTRL_REG</name>
          <description>PLL Lock Control Register</description>
          <addressOffset>0x320</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F71FFF</resetMask>
          <fields>
            <field>
              <name>DBG_EN</name>
              <description>Debug Enable 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBG_SEL</name>
              <description>Debug Select 
0000: PLL_CPUX 
0001: PLL_AUDIO 
0010: PLL_VIDEO0 
0011: PLL_VE 
0100: PLL_DDR0 
0101: PLL_PERIPH0 
0110: PLL_VIDEO1 
0111: PLL_GPU 
1000: PLL_MIPI 
1001: PLL_SATA 
1010: PLL_DE 
1011: PLL_DDR1 
1100: PLL_PERIPH1 Others: /</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_CPUX</name>
                  <description>PLL_CPUX</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0</name>
                  <description>PLL_VIDEO0</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VE</name>
                  <description>PLL_VE</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0</name>
                  <description>PLL_PERIPH0</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1</name>
                  <description>PLL_VIDEO1</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_GPU</name>
                  <description>PLL_GPU</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_SATA</name>
                  <description>PLL_SATA</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR1</name>
                  <description>PLL_DDR1</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1</name>
                  <description>PLL_PERIPH1 Others: /</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_LEVEL</name>
              <description>Unlock Level  
00: 21~29 Clock Cycles 
01: 22~28 Clock Cycles 
1X: 20~30 Clock Cycles</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_21_tilde_29</name>
                  <description>21~29 Clock Cycles</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_tilde_28</name>
                  <description>22~28 Clock Cycles</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_tilde_30</name>
                  <description>20~30 Clock Cycles</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_LEVEL</name>
              <description>Lock Level  
0: 24~26 Clock Cycles 
1: 23~27 Clock Cycles</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24_tilde_26</name>
                  <description>24~26 Clock Cycles</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_23_tilde_27</name>
                  <description>23~27 Clock Cycles</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_EN</name>
              <description>Lock Enable Bit12: PLL_PERIPH1 Bit11: PLL_DDR1 Bit10: PLL_DE Bit9: PLL_SATA Bit8: PLL_MIPI Bit7: PLL_GPU Bit6: PLL_VIDEO1 Bit5: PLL_PERIPH0 Bit4: PLL_DDR0 Bit3: PLL_VE Bit2: PLL_VIDEO0 Bit1: PLL_AUDIO Bit0: PLL_CPUX</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_BIAS_REG</name>
          <description>PLL_MIPI_BIAS_REG</description>
          <addressOffset>0x240</addressOffset>
          <resetValue>0xF8100400</resetValue>
          <resetMask>0xFF1F0701</resetMask>
          <fields>
            <field>
              <name>VCO_RST</name>
              <description>VCO Reset In.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLLVDD_LDO_OUT_CTRL</name>
              <description>PLLVDD LDO Output Control. =1    =0 
000: 1.00V            000: 1.20V 
001: 1.02V            001: 1.225V 
010: 1.04V            010: 1.25V 
011: 1.06V            011: 1.275V 
100: 1.08V            100: 1.30V 
101: 1.10V            101: 1.325V 
110: 1.12V            110: 1.35V 
111: 1.14V.            111: 1.375V The bit is in the PLL_MIPI Tuning Register.</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_point_00V</name>
                  <description>1.00V</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_20V</name>
                  <description>1.20V</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_02V</name>
                  <description>1.02V</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_225V</name>
                  <description>1.225V</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_04V</name>
                  <description>1.04V</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_25V</name>
                  <description>1.25V</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_06V</name>
                  <description>1.06V</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_275V</name>
                  <description>1.275V</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_08V</name>
                  <description>1.08V</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_30V</name>
                  <description>1.30V</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_10V</name>
                  <description>1.10V</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_325V</name>
                  <description>1.325V</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_12V</name>
                  <description>1.12V</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_35V</name>
                  <description>1.35V</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_14V</name>
                  <description>1.14V.</description>
                  <value>0b111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_375V</name>
                  <description>1.375V The bit is in the PLL_MIPI Tuning Register.</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control [3:0].</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK_CTRL</name>
              <description>PLL Lock Time Control[2:0].</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACT_CTRL</name>
              <description>PLL Damping Factor Control</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_CTRL_REG</name>
          <description>PLL_MIPI Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x515</resetValue>
          <resetMask>0x9EF30F3F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_MIPI= (PLL_VIDEO0(1X)*N*K)/M when =0 (MIPI mode). When VFB_SEL=1, the PLL Output is depend on these bits: sint_frac,sdiv2, s6p25_7p5 , pll_feedback_div.6 Note: K&#8805;2; M/N&lt;=3; (PLL_VIDEO0)/M&#8805;24MHz; PLL_MIPI must be in the range of 500 MHz ~ 1.4 GHz. The default value of PLL_MIPI is 594 MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_MIPI= (PLL_VIDEO0(1X)*N*K)/M when =0 (MIPI mode). When VFB_SEL=1, the PLL Output is depend on these bits: sint_frac,sdiv2, s6p25_7p5 , pll_feedback_div.6 Note: K&#8805;2; M/N&lt;=3; (PLL_VIDEO0)/M&#8805;24MHz; PLL_MIPI must be in the range of 500 MHz ~ 1.4 GHz. The default value of PLL_MIPI is 594 MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SINT_FRAC</name>
              <description>When =1, PLL mode control, otherwise no meaning. 
0: Integer Mode 
1: Fractional Mode.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIV2</name>
              <description>PLL clock output when =1; no meaning when =0 
0: PLL Output 
1: PLL Output X2.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S6P25_7P5</name>
              <description>PLL Output is selected by this bit when =1 and =1, otherwise no meaning. 
0: PLL Output=PLL Input*6.25 
1: PLL Output= PLL Input *7.5.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_PLL</name>
                  <description>PLL Output=PLL Input*6.25</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output_equals_</name>
                  <description>PLL Output= PLL Input *7.5.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LDO1_EN</name>
              <description>On-chip LDO1 Enable.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO2_EN</name>
              <description>On-chip LDO2 Enable.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_SRC</name>
              <description>PLL Source Select. 
0: VIDEO0 PLL 
1: /.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VIDEO0</name>
                  <description>VIDEO0 PLL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FEEDBACK_DIV</name>
              <description>PLL feed-back divider control. PLL clock output when =1; no meaning when =0 
0: Divided by 5 
1: Divided by 7.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divided_by_5</name>
                  <description>Divided by 5</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divided_by_7</name>
                  <description>Divided by 7.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VFB_SEL</name>
              <description>0: MIPI Mode(N, K, M valid) 
1: HDMI Mode(sint_frac,sdiv2,s6p25_7p5 , pll_feedback_div valid)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MIPI</name>
                  <description>MIPI Mode(N, K, M valid)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HDMI</name>
                  <description>HDMI Mode(sint_frac,sdiv2,s6p25_7p5 , pll_feedback_div valid)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 ... Factor=15,N=16;</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 2 to 4.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Pre Divider (M = Factor+1). The range is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_PAT_CTRL_REG</name>
          <description>PLL_MIPI_PAT_CTRL_REG</description>
          <addressOffset>0x2A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_TUN_REG</name>
          <description>PLL_MIPI_TUN_REG</description>
          <addressOffset>0x270</addressOffset>
          <resetValue>0x8A002000</resetValue>
          <resetMask>0xBFBFBFBF</resetMask>
          <fields>
            <field>
              <name>PLL_INPUT_POWER_SEL</name>
              <description>0: 2.5V 
1: 3.0V</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_point_5V</name>
                  <description>2.5V</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_point_0V</name>
                  <description>3.0V</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREG_OUT_EN</name>
              <description>For Verify</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BAND_WID_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL_EN</name>
              <description>VCO Gain Control Enable. 
0: Disable 
1: Enable.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL</name>
              <description>VCO Gain Control Bits[2:0].</description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_INT</name>
              <description>For Verify[5:0].</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD</name>
              <description>C-reg-od for Verify</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_IN</name>
              <description>C-B-in[5:0] for Verify</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD1</name>
              <description>C-reg-od1 for Verify</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_OUT</name>
              <description>C-B-out[5:0] for Verify</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH0_BIAS_REG</name>
          <description>PLL_PERIPH0 Bias Register</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x10100010</resetValue>
          <resetMask>0x1F1F0013</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[1:0].</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH0_CTRL_REG</name>
          <description>PLL_PERIPH0 Control Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x41811</resetValue>
          <resetMask>0x93071F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. For SATA module, the output is: The PLL_PERIPH0 = 24MHz*N*K/(M*6). For other modules, the output is: The PLL_PERIPH0(1X) = 24MHz*N*K/2. The PLL_PERIPH0(2X) = 24MHz*N*K. Note: 21&lt;=N*K&lt;=58 The PLL_PERIPH0(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K clock must be in the range of 504MHz~1.4GHz. The default value of PLL_PERIPH0(2X) is 1.2GHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. For SATA module, the output is: The PLL_PERIPH0 = 24MHz*N*K/(M*6). For other modules, the output is: The PLL_PERIPH0(1X) = 24MHz*N*K/2. The PLL_PERIPH0(2X) = 24MHz*N*K. Note: 21&lt;=N*K&lt;=58 The PLL_PERIPH0(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K clock must be in the range of 504MHz~1.4GHz. The default value of PLL_PERIPH0(2X) is 1.2GHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BYPASS_EN</name>
              <description>PLL Output Bypass Enable. 
0: Disable 
1: Enable. If the bypass is enabled, the PLL output is 24MHz.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. If the bypass is enabled, the PLL output is 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CLK_OUT_EN</name>
              <description>PLL clock output enable.(Just for the SATA Phy) 
0: Disable 
1: Enable.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_OUT_EN</name>
              <description>PLL 24MHz Output Enable. 
0: Disable 
1: Enable. When 25MHz crystal used, this PLL can output 24MHz.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. When 25MHz crystal used, this PLL can output 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_POST_DIV</name>
              <description>PLL 24M Output Clock Post Divider (When 25MHz crystal used). 1/2/3/4.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>The range is from 1 to 4.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_BIAS_REG</name>
          <description>PLL_PERIPH1 Bias Register</description>
          <addressOffset>0x21C</addressOffset>
          <resetValue>0x10100010</resetValue>
          <resetMask>0x1F1F0013</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[1:0].</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_CTRL_REG</name>
          <description>PLL_PERIPH1 Control Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x41811</resetValue>
          <resetMask>0x93171F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_PERIPH1(1X) = 24MHz*N*K/2. The PLL_PERIPH1(2X) = 24MHz*N*K. Note: 21&lt;=N*K&lt;=58 PLL_PERIPH1(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K must be in the range of 504MHz~1.4GHz. The default value of PLL_PERIPH1(2X) is 1.2GHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_PERIPH1(1X) = 24MHz*N*K/2. The PLL_PERIPH1(2X) = 24MHz*N*K. Note: 21&lt;=N*K&lt;=58 PLL_PERIPH1(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K must be in the range of 504MHz~1.4GHz. The default value of PLL_PERIPH1(2X) is 1.2GHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BYPASS_EN</name>
              <description>PLL Output Bypass Enable. 
0: Disable 
1: Enable. If the bypass is enabled, the PLL output is 24MHz.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. If the bypass is enabled, the PLL output is 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CLK_OUT_EN</name>
              <description>PLL clock output enable.(Just for the SATA Phy) 
0: Disable 
1: Enable.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_OUT_EN</name>
              <description>PLL 24MHz Output Enable. 
0: Disable 
1: Enable. When 25MHz crystal used, this PLL can output 24MHz.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. When 25MHz crystal used, this PLL can output 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_POST_DIV</name>
              <description>PLL 24M Output Clock Post Divider (When 25MHz crystal used). 1/2/3/4.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>The range is from 1 to 4.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_PAT_CTRL_REG</name>
          <description>PLL_PERIPH1 Pattern Control Register</description>
          <addressOffset>0x27C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_SATA_BIAS_REG</name>
          <description>PLL_SATA Bias Register</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_SATA_CTRL_REG</name>
          <description>PLL_SATA Control Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x1811</resetValue>
          <resetMask>0xD0005F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_SATA = 24MHz*N*K/(M*6). The PLL should be in the range of 8 MHz ~ 300 MHz. The default value is 100 MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_SATA = 24MHz*N*K/(M*6). The PLL should be in the range of 8 MHz ~ 300 MHz. The default value is 100 MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_OUTPUT_SEL</name>
              <description>0: PLL output from SATA_PLL 
1: PLL output from PLL_PERIPH0</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_output_from_SATA_PLL</name>
                  <description>PLL output from SATA_PLL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_output_from_PLL_PERIPH0</name>
                  <description>PLL output from PLL_PERIPH0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SATA_CLK_EN</name>
              <description>SATA Clock Output Enable. 
0: Disable 
1: Enable.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32.</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>(M=Factor + 1 ) The range is from 1 to 4.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_BIAS_REG</name>
          <description>PLL_VE Bias Register</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0].</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_CTRL_REG</name>
          <description>PLL_VE Control Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, The PLL_VE = (24MHz*N)/M. In the fractional mode, the PLL Output is select by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. The default value of PLL_VE is 297MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, The PLL_VE = (24MHz*N)/M. In the fractional mode, the PLL Output is select by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. The default value of PLL_VE is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when =0( factor must be set to 0); No meaning when =1. 
0: PLL Output = 270MHz 
1: PLL Output = 297MHz.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output__equals__270MHz</name>
                  <description>PLL Output = 270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output__equals__297MHz</name>
                  <description>PLL Output = 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Pre Divider M should be set to 0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Pre Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32 ... Factor=127,N=128.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor(M = Factor+1). The range is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_PAT_CTRL_REG</name>
          <description>PLL_VE Pattern Control Register</description>
          <addressOffset>0x28C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_BIAS_REG</name>
          <description>PLL_VIDEO0 Bias Register</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0].</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_CTRL_REG</name>
          <description>PLL_VIDEO0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, PLL_VIDEO0(1X) = (24MHz*N)/M. PLL_VIDEO0(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is select by bit 25. Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_VIDEO0(1X) default is 297MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, PLL_VIDEO0(1X) = (24MHz*N)/M. PLL_VIDEO0(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is select by bit 25. Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_VIDEO0(1X) default is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when =0( factor must be set to 0); No meaning when =1. 
0: PLL Output=270MHz 
1: PLL Output =297MHz.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Pre Divider M should be set to 0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Pre Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=127,N=128.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor(M = Factor+1). The range is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_PAT_CTRL_REG</name>
          <description>PLL_VIDEO0 Pattern Control Register</description>
          <addressOffset>0x288</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_BIAS_REG</name>
          <description>PLL_VIDEO1 Bias Register</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0].</description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0].</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_CTRL_REG</name>
          <description>PLL_VIDEO1 Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, PLL_VIDEO1(1X) = (24MHz*N)/M. PLL_VIDEO1(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is selected by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. The default value of PLL_VIDEO1(1X) is 297MHz.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, PLL_VIDEO1(1X) = (24MHz*N)/M. PLL_VIDEO1(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is selected by . Note: 8&lt;=N/M&lt;=25 (24MHz*N)/M must be in the range of 192MHz~600MHz. The default value of PLL_VIDEO1(1X) is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when =0( factor must be set to 0); No meaning when =1. 
0: PLL Output=270MHz 
1: PLL Output =297MHz.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=127,N=128.</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor(M = Factor+1). The range is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_PAT_CTRL_REG</name>
          <description>PLL_VIDEO1 Pattern Control Register</description>
          <addressOffset>0x298</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular.</description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step.</description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz.</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom.</description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS_CNT_REG</name>
          <description>PS Counter Register</description>
          <addressOffset>0x304</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PS_CNT</name>
              <description>PS Counter.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS_CTRL_REG</name>
          <description>PS Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>DEC_SEL</name>
              <description>Device Select</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DET_FIN</name>
              <description>Detect Finish. 
0: Unfinished 
1: Finished Setting 1 to this bit will clear it.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unfinished</name>
                  <description>Unfinished</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Finished</name>
                  <description>Finished Setting 1 to this bit will clear it.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLY_SEL</name>
              <description>Delay Select 
0: 1 Cycle 
1: 2 Cycles</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_Cycle</name>
                  <description>1 Cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 Cycles</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OSC_SEL</name>
              <description>OSC Select. 
00: IDLE 
01: SVT 
10: LVT 
11: ULVT</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>IDLE</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SVT</name>
                  <description>SVT</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVT</name>
                  <description>LVT</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ULVT</name>
                  <description>ULVT</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_DET</name>
              <description>Time Detect. 
000: 0.5/4 us 
001: 0.5/2 us 
010: 0.5/1 us 
011: 0.5*2us ........... 111:0.5*2^5us</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_5_slash_4</name>
                  <description>0.5/4 us</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_slash_2</name>
                  <description>0.5/2 us</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_slash_1</name>
                  <description>0.5/1 us</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_times_2us</name>
                  <description>0.5*2us ........... 111:0.5*2^5us</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MOD_EN</name>
              <description>Module Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SATA_CLK_REG</name>
          <description>SATA Clock Register</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_GATING</name>
              <description>Clock Source Select 
0: PLL_SATA for SATA(100MHz) 
1: External Clock</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_SATA</name>
                  <description>PLL_SATA for SATA(100MHz)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External Clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SDMMC0_CLK_REG</name>
          <description>SDMMC0 Clock Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /.</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC1_CLK_REG</name>
          <description>SMHC1_CLK_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC2_CLK_REG</name>
          <description>SMHC2_CLK_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC3_CLK_REG</name>
          <description>SMHC3_CLK_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1    
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI0_CLK_REG</name>
          <description>SPI0 Clock Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI1_CLK_REG</name>
          <description>SPI1 Clock Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON SCLK= / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK= / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI2_CLK_REG</name>
          <description>SPI2 Clock Register</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON SCLK= / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK= / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI3_CLK_REG</name>
          <description>SPI3 Clock Register</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON SCLK= / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK= / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYS_32K_CLK_REG</name>
          <description>System 32K Clock Control Register</description>
          <addressOffset>0x310</addressOffset>
          <resetValue>0xF</resetValue>
          <resetMask>0xFFFF011F</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field. This field should be filled with 0x16AA, and then the bit 8 can be written with the new value.</description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>SYS_32K_SEL</name>
              <description>System 32K Select. 
0: System internal 32K. 
1: LOSC(from RTC) System internal 32K = 2M / .</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>System</name>
                  <description>System internal 32K.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LOSC_openingparen_from</name>
                  <description>LOSC(from RTC) System internal 32K = 2M / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYS_INTERNAL_RC_DIV</name>
              <description>System internal RC divide. Note: System internal RC = 2M. 
00000: 1 
00001: 2 
00010: 3 ...... 
11111: 31</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3</name>
                  <description>3 ......</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31</name>
                  <description>31</description>
                  <value>0b11111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_LCD_CLK_REG</name>
          <description>TCON0_LCD_CLK_REG</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x87000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) 
100: PLL_MIPI Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI Others: /</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_TV_CLK_REG</name>
          <description>TCON0_TV_CLK_REG</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. TV0 clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. TV0 clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) 
100: PLL_MIPI Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI Others: /</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_LCD_CLK_REG</name>
          <description>TCON1_LCD_CLK_REG</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x87000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) 
100: PLL_MIPI Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI Others: /</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_TV_CLK_REG</name>
          <description>TCON1_TV_CLK_REG</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. TV1 clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. TV1 clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) 
100: PLL_MIPI Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI Others: /</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CLK_REG</name>
          <description>THS Clock Register</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000003</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock. 
0: Clock is OFF 
1: Clock is ON This special clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This special clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M Others: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M Others: /</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_CLK_DIV_RATIO</name>
              <description>THS clock divide ratio. 
00: /1 
01: /2 
10: /4 
11: /8</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TS_CLK_REG</name>
          <description>TS Clock Register</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F03000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating of SCLK (Max Clock = 200MHz). 
0: Clock is OFF 
1: Clock is ON SCLK = / / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = / / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0000: OSC24M 
0001: PLL_PERIPH0(1X) Others: /</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X) Others: /</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock pre-divide ratio (n) The select clock source is pre-divided by 2^n. The divider is 1/2/4/8.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD0_CLK_REG</name>
          <description>TVD0 Clock Register</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>TVD0_GATING</name>
              <description>Gating TVD0 Clock  
0: Clock is OFF 
1: Clock is ON. This TVD0 clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This TVD0 clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD0_SRC_SEL</name>
              <description>TVD0 Clock Source Select. 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X) Others: /</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD0_CLK_DIV_M</name>
              <description>TVE0 Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD1_CLK_REG</name>
          <description>TVD1 Clock Register</description>
          <addressOffset>0x18C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>TVD1_GATING</name>
              <description>Gating TVD0 Clock  
0: Clock is OFF 
1: Clock is ON. This TVD1 clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This TVD1 clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD1_SRC_SEL</name>
              <description>TVD1 Clock Source Select. 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X) Others: /</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD1_CLK_DIV_M</name>
              <description>TVE1 Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD2_CLK_REG</name>
          <description>TVD2 Clock Register</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>TVD2_GATING</name>
              <description>Gating TVD0 Clock  
0: Clock is OFF 
1: Clock is ON. This TVD2 clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This TVD2 clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD2_SRC_SEL</name>
              <description>TVD2 Clock Source Select. 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X) Others: /</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD2_CLK_DIV_M</name>
              <description>TVE2 Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD3_CLK_REG</name>
          <description>TVD3 Clock Register</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>TVD3_GATING</name>
              <description>Gating TVD0 Clock  
0: Clock is OFF 
1: Clock is ON. This TVD3 clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This TVD3 clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD3_SRC_SEL</name>
              <description>TVD3 Clock Source Select. 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X) Others: /</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD3_CLK_DIV_M</name>
              <description>TVE3 Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE0_CLK_REG</name>
          <description>TVE0 Clock Register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>TVE0_GATING</name>
              <description>Gating TVE0 Clock  
0: Clock is OFF 
1: Clock is ON. This TVE0 clock = /</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This TVE0 clock = /</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE0_SRC_SEL</name>
              <description>TVE0 Clock Source Select. 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) 
100: PLL_MIPI Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI Others: /</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE0_CLK_DIV_M</name>
              <description>TVE0 Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE1_CLK_REG</name>
          <description>TVE1 Clock Register</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>TVE1_GATING</name>
              <description>Gating TVE0 Clock  
0: Clock is OFF 
1: Clock is ON. This TVE1 clock = / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This TVE1 clock = / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE1_SRC_SEL</name>
              <description>TVE1 Clock Source Select. 
000: PLL_VIDEO0(1X) 
001: PLL_VIDEO1(1X) 
010: PLL_VIDEO0(2X) 
011: PLL_VIDEO1(2X) 
100: PLL_MIPI Others: /</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO1(2X)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI Others: /</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE1_CLK_DIV_M</name>
              <description>TVE1 Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBPHY_CFG_REG</name>
          <description>USBPHY Configuration Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F70707</resetMask>
          <fields>
            <field>
              <name>OHCI2_12M_SRC_SEL</name>
              <description>OHCI2 12M Source Select  
00: 12M divided from 48M 
01: 12M divided from 24M 
10: LOSC 
11: /</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OHCI1_12M_SRC_SEL</name>
              <description>OHCI1 12M Source Select  
00: 12M divided from 48M 
01: 12M divided from 24M 
10: LOSC 
11: /</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OHCI0_12M_SRC_SEL</name>
              <description>OHCI0 12M Source Select  
00: 12M divided from 48M 
01: 12M divided from 24M 
10: LOSC 
11: /</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_GATING_OHCI2</name>
              <description>Gating Special Clock for OHCI2(48M and 12M)  
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_OHCI1</name>
              <description>Gating Special Clock for OHCI1(48M and 12M)  
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_OHCI0</name>
              <description>Gating Special Clock for OHCI0(48M and 12M)  
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY2</name>
              <description>Gating Special Clock for USB PHY2 
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY1</name>
              <description>Gating Special Clock for USB PHY1 
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY0</name>
              <description>Gating Special Clock for USB PHY0 
0: Clock is OFF 
1: Clock is ON</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY2_RST</name>
              <description>USB PHY2 Reset Control 
0: Assert 
1: De-assert</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY1_RST</name>
              <description>USB PHY1 Reset Control 
0: Assert 
1: De-assert</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY0_RST</name>
              <description>USB PHY0 Reset Control 
0: Assert 
1: De-assert</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VE_CLK_REG</name>
          <description>VE Clock Register</description>
          <addressOffset>0x13C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80070000</resetMask>
          <fields>
            <field>
              <name>VE_SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = PLL_VE / .</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = PLL_VE / .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (N) The select clock source is pre-divided by n+1. The divider is from 1 to 8.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>Audio Codec</name>
      <description>Audio Codec</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AC_ADC_CNT</name>
          <description>ADC RX FIFO Counter Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample Counter The audio sample number of writing into RXFIFO. When one sample is written by Digital Audio Engine, the RX sample counter register increases by one. The RX sample counter register can be set to any initial valve at any time. After been updated by the initial value, the counter register should count on base of this initial value Note: It is used for Audio/ Video Synchronization</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DG</name>
          <description>ADC Debug Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1000000</resetMask>
          <fields>
            <field>
              <name>AD_SWP</name>
              <description>ADC Output Channel Swap Enable (for digital filter) 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_CTRL</name>
          <description>ADC DRC Control Register</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0xBFFF</resetMask>
          <fields>
            <field>
              <name>DRC_DELAY_BUFFER_DATA_OUTPUT</name>
              <description>DRC delay buffer data output state when drc delay function is enble and the drc funciton disable. After disable drc function and this bit go to 0, the user should write the drc delay function bit to 0 0 : Not complete 1 : Complete</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIGNAL_DELAY_TIME</name>
              <description>Signal delay time setting 6'h00 : (8x1)fs 6'h01 : (8x2)fs 6'h02 : (8x3)fs ---------------------------------------- 6'h2e : (8*47)fs 6'h2f : (8*48)fs 6'h30 -- 6'h3f : (8*48)fs Delay time = 8*(n+1)fs, n&lt;6'h30; When the delay function is disable, the signal delay time is unused.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_BUFFER_USE_OR_NOT</name>
              <description>The delay buffer use or not when the drc disable and the drc buffer data output completely 0 : Don't use the buffer 1 : Use the buffer</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MAX_LIMIT_ENABLE</name>
              <description>DRC gain max limit enable 0 : Disable 1 : Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MIN_LIMIT_ENABLE</name>
              <description>DRC gain min limit enable. when this fuction enable, it will overwrite the noise detect function 0 : Disable 1 : Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_THE_DRC_TO_DETECT</name>
              <description>Control the drc to detect noise when ET enable  0 : Disable 1 : Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIGNAL_FUNCTION_SELECT</name>
              <description>Signal function Select 0 : RMS filter 1 : Peak filter When Signal function Select Peak filter, the RMS parameter is unused. (AC_DRC_LRMSHAT / AC_DRC_LRMSLAT / AC_DRC_LRMSHAT / AC_DRC_LRMSLAT) When Signal function Select RMS filter, the Peak filter parameter is unused.(AC_DRC_LPFHAT / AC_DRC_LPFLAT / AC_DRC_RPFHAT / AC_DRC_RPFLAT / AC_DRC_LPFHRT / AC_DRC_LPFLRT / AC_DRC_RPFHRT / AC_DRC_RPFLRT)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_FUNCTION_ENABLE</name>
              <description>Delay function enable 0 : Disable 1 : Enable When the bit is disabled, the signal delay time is unused.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_LT_ENABLE</name>
              <description>DRC LT enable 0 : Disable 1 : Enable When the DRC LT is disabled the LT, Kl and OPL parameter is unused.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_ET_ENABLE</name>
              <description>DRC ET enable 0 : Disable 1 : Enable When the DRC ET is disabled the ET, Ke and OPE parameter is unused.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_EPSHC</name>
          <description>ADC DRC Expander Smooth Time High Coef Register</description>
          <addressOffset>0x2AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_EPSLC</name>
          <description>ADC DRC Expander Smooth Time Low Coef Register</description>
          <addressOffset>0x2B0</addressOffset>
          <resetValue>0x640C</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HCT</name>
          <description>ADC DRC Compressor Theshold High Setting Register</description>
          <addressOffset>0x23C</addressOffset>
          <resetValue>0x6A4</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HET</name>
          <description>ADC DRC Expander Theshold High Setting Register</description>
          <addressOffset>0x26C</addressOffset>
          <resetValue>0xBA0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HHPFC</name>
          <description>ADC DRC High HPF Coef Register</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format.</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HKC</name>
          <description>ADC DRC Compressor Slope High Setting Register</description>
          <addressOffset>0x244</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 6.24. (2 : 1)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HKE</name>
          <description>ADC DRC Expander Slope High Setting Register</description>
          <addressOffset>0x274</addressOffset>
          <resetValue>0x500</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HKN</name>
          <description>ADC DRC Linear Slope High Setting Register</description>
          <addressOffset>0x284</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger . The format is 8.24. (1:1)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HKl</name>
          <description>ADC DRC Limiter Slope High Setting Register</description>
          <addressOffset>0x25C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, there, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HLT</name>
          <description>ADC DRC Limiter Theshold High Setting Register</description>
          <addressOffset>0x254</addressOffset>
          <resetValue>0x1A9</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HOPC</name>
          <description>ADC DRC Compressor High Output at Compressor Threshold Register</description>
          <addressOffset>0x24C</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation -OPC/6.0206 The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HOPE</name>
          <description>ADC DRC Expander High Output at Expander Threshold</description>
          <addressOffset>0x27C</addressOffset>
          <resetValue>0xF45F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24 (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_HOPL</name>
          <description>ADC DRC Limiter High Output at Limiter Threshold</description>
          <addressOffset>0x264</addressOffset>
          <resetValue>0xFBD8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24 (-25dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LCT</name>
          <description>ADC DRC Compressor Slope High Setting Register</description>
          <addressOffset>0x240</addressOffset>
          <resetValue>0xD3C0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LET</name>
          <description>ADC DRC Expander Theshold Low Setting Register</description>
          <addressOffset>0x270</addressOffset>
          <resetValue>0x7291</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LHPFC</name>
          <description>ADC DRC Low HPF Coef Register</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0xFAC1</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LKC</name>
          <description>ADC DRC Compressor Slope Low Setting Register</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 6.24. (2 : 1)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LKE</name>
          <description>ADC DRC Expander Slope Low Setting Register</description>
          <addressOffset>0x278</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LKN</name>
          <description>ADC DRC Linear Slope Low Setting Register</description>
          <addressOffset>0x288</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger . The format is 8.24. (1:1)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LKl</name>
          <description>ADC DRC Limiter Slope Low Setting Register</description>
          <addressOffset>0x260</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, there, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LLT</name>
          <description>ADC DRC Limiter Theshold Low Setting Register</description>
          <addressOffset>0x258</addressOffset>
          <resetValue>0x34F0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LOPC</name>
          <description>ADC DRC Compressor Low Output at Compressor Threshold Register</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation OPC/6.0206 The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LOPE</name>
          <description>ADC DRC Expander Low Output at Expander Threshold</description>
          <addressOffset>0x280</addressOffset>
          <resetValue>0x8D6E</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24 (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LOPL</name>
          <description>ADC DRC Limiter Low Output at Limiter Threshold</description>
          <addressOffset>0x268</addressOffset>
          <resetValue>0xFBA7</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24 (-25dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LPFHAT</name>
          <description>ADC DRC Left Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LPFHRT</name>
          <description>ADC DRC Left Peak Filter High Release Time Coef Register</description>
          <addressOffset>0x21C</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LPFLAT</name>
          <description>ADC DRC Left Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LPFLRT</name>
          <description>ADC DRC Left Peak Filter Low Release Time Coef Register</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LRMSHAT</name>
          <description>ADC DRC Left RMS Filter High Coef Register</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_LRMSLAT</name>
          <description>ADC DRC Left RMS Filter Low Coef Register</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_MNGLS</name>
          <description>ADC DRC MIN Gain High Setting Register</description>
          <addressOffset>0x2A8</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting which determine by equation MNG/6.0206. The format is 8.24 and must -60dB &lt;=MNG &lt;= -40dB (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_MXGHS</name>
          <description>ADC DRC MAX Gain High Setting Register</description>
          <addressOffset>0x29C</addressOffset>
          <resetValue>0xFE56</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG&lt; 30dB (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_MXGLS</name>
          <description>ADC DRC MIN Gain Low Setting Register</description>
          <addressOffset>0x2A0</addressOffset>
          <resetValue>0xCB0F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG &lt; 30dB (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_OPT</name>
          <description>ADC DRC Optimum Register</description>
          <addressOffset>0x2B4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_USE_THE_EXPANDER</name>
              <description>The gain smooth use the expander coefficient when the energy in expander range 0 : Use the normal smooth coefficient 1 : Use the expander coefficient</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GAIN_NORMAL_SMOOTH_COEFFICIENT_SELECTION</name>
              <description>The gain normal smooth coefficient selection mode set 0 : Both release and attack coefficient use hysteresis 1 : Only the attack coefficient use hysteresis</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MIN_OF_ENERGY_SET_IN</name>
              <description>The min of energy set in peak detect mode  0 : -120dB   1 : -210dB</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENERGY_MODE_SELECT_IN_RMS</name>
              <description>The energy mode select in rms detect mode 0 : The energy is RMS 1 : The energy is square of RMS</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_DATA_OUTPUT_WHEN_DRC</name>
              <description>DRC data output when DRC disable and DRC delay data output complete. 0 : The output is the input music data 1 : The output is 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_DEFAULT_VALUE</name>
              <description>DRC gain default value setting 
0: The default gain is 1 
1: The default gain is 0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>The default gain is 1</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0</name>
                  <description>The default gain is 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GAIN_SMOOTH_HYSTERESIS</name>
              <description>The hysteresis of the gain smooth filter to use the decay time coefficient or the attack time coefficient. When in the decay time state, if g(n-1)-g(n)&gt;hysteresis, then the state will change to attack time state, and when in the attack time, if g(n)-g(n-1)&gt;hysteresis, then the state will change to decay time state. Note the hysteresis of 0x00 and 0x04 is the same. 
00000: 2^(-20) 
00001: 2^(-19) 
00010: 2^(-18) ----------------- 
10011: 2^(-1) 10100 ~11111: 1 hysteresis = 2^(n-20),except n=0x00, and n less 0x14.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_20_closingparen_</name>
                  <description>2^(-20)</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_19_closingparen_</name>
                  <description>2^(-19)</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_18_closingparen_</name>
                  <description>2^(-18) -----------------</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_1_closingparen_</name>
                  <description>2^(-1) 10100 ~11111: 1 hysteresis = 2^(n-20),except n=0x00, and n less 0x14.</description>
                  <value>0b10011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_RPFHAT</name>
          <description>ADC DRC Right Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_RPFHRT</name>
          <description>ADC DRC Right Peak Filter High Release Time Coef Register</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_RPFLAT</name>
          <description>ADC DRC Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_RPFLRT</name>
          <description>ADC DRC Right Peak Filter Low Release Time Coef Register</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that AT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_RRMSHAT</name>
          <description>ADC DRC Right RMS Filter High Coef Register</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_RRMSLAT</name>
          <description>ADC DRC Right RMS Filter Low Coef Register</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_SFHAT</name>
          <description>ADC DRC Smooth filter Gain High Attack Time Coef Register</description>
          <addressOffset>0x28C</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_SFHRT</name>
          <description>ADC DRC Smooth filter Gain High Release Time Coef Register</description>
          <addressOffset>0x294</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_SFLAT</name>
          <description>ADC DRC Smooth filter Gain Low Attack Time Coef Register</description>
          <addressOffset>0x290</addressOffset>
          <resetValue>0x5600</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_SFLRT</name>
          <description>ADC DRC Smooth filter Gain Low Release Time Coef Register</description>
          <addressOffset>0x298</addressOffset>
          <resetValue>0xF04</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_FIFOC</name>
          <description>ADC FIFO Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0xF00</resetValue>
          <resetMask>0xF1071FDB</resetMask>
          <fields>
            <field>
              <name>ADFS</name>
              <description>Sample Rate of ADC 
000: 48KHz 
010: 24KHz 
100: 12KHz 
110: Reserved 
001: 32KHz 
011: 16KHz 
101: 8KHz 
111: Reserved 44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_48KHz</name>
                  <description>48KHz</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24KHz</name>
                  <description>24KHz</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12KHz</name>
                  <description>12KHz</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16KHz</name>
                  <description>16KHz</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8KHz</name>
                  <description>8KHz</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN_AD</name>
              <description>ADC Digital Part Enable 
0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FIFO_MODE</name>
              <description>RX FIFO Output Mode (Mode 0, 1) 
0: Expanding `0` at LSB of TX FIFO register 
1: Expanding received sample sign bit at MSB of TX FIFO register For 24-bits received audio sample: Mode 0: RXDATA[31:0+ = ,FIFO_O*23:0+, 8`h0- Mode 1: Reserved For 16-bits received audio sample: Mode 0: RXDATA*31:0+ = ,FIFO_O*23:8+, 16`h0- Mode 1: RXDATA[31:0] = {16{FIFO_O[23]}, FIFO_O[23:8]}</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`</name>
                  <description>Expanding `0` at LSB of TX FIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample</name>
                  <description>Expanding received sample sign bit at MSB of TX FIFO register For 24-bits received audio sample: Mode 0: RXDATA[31:0+ = ,FIFO_O*23:0+, 8`h0- Mode 1: Reserved For 16-bits received audio sample: Mode 0: RXDATA*31:0+ = ,FIFO_O*23:8+, 16`h0- Mode 1: RXDATA[31:0] = {16{FIFO_O[23]}, FIFO_O[23:8]}</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADCFDT</name>
              <description>ADC FIFO Delay Time for writing Data after EN_AD 00:5ms 01:10ms 10:20ms 11:30ms</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADCDFEN</name>
              <description>ADC FIFO Delay Function for writing Data after EN_AD 
0: Disable 
1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FIFO_TRG_LEVEL</name>
              <description>RX FIFO Trigger Level (RXTL[4:0]) Interrupt and DMA request trigger level for RX FIFO normal condition IRQ/DRQ Generated when WLEVEL &gt; RXTL[4:0] Notes: WLEVEL represents the number of valid samples in the RX FIFO</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_MONO_EN</name>
              <description>ADC Mono Enable 
0: Stereo, 16 levels FIFO 
1: mono, 32 levels FIFO When set to `1`, Only left channel samples are recorded</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stereo</name>
                  <description>Stereo, 16 levels FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>mono</name>
                  <description>mono, 32 levels FIFO When set to `1`, Only left channel samples are recorded</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_SAMPLE_BITS</name>
              <description>Receiving Audio Sample Resolution 
0: 16 bit 
1: 24 bit</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16 bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24 bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_DRQ_EN</name>
              <description>ADC FIFO Data Available DRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_IRQ_EN</name>
              <description>ADC FIFO Data Available IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_OVERRUN_IRQ_EN</name>
              <description>ADC FIFO Over Run IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_FIFO_FLUSH</name>
              <description>ADC FIFO Flush Write `1` to flush TX FIFO, self clear to `0`</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_FIFOS</name>
          <description>ADC FIFO Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x803F0A</resetMask>
          <fields>
            <field>
              <name>RXA</name>
              <description>RX FIFO Available 
0: No available data in RX FIFO 
1: More than one sample in RX FIFO (&gt;= 1 word)</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one sample in RX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RX FIFO Available Sample Word Counter</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RX FIFO Data Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RX FIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ Write `1` to clear this interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_RXDATA</name>
          <description>ADC RX Data Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_CNT</name>
          <description>DAC TX FIFO Counter Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of sending into TXFIFO. When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial valve at any time. After been updated by the initial value, the counter register should count on base of this initial value. Note: It is used for Audio/ Video Synchronization</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DG</name>
          <description>DAC Debug Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF40</resetMask>
          <fields>
            <field>
              <name>DAC_MODU_SELECT</name>
              <description>DAC Modulator Debug 
0: DAC Modulator Normal Mode 
1: DAC Modulator Debug Mode</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC_Modulator_Normal</name>
                  <description>DAC Modulator Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC_Modulator_Debug</name>
                  <description>DAC Modulator Debug Mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_PATTERN_SELECT</name>
              <description>DAC Pattern Select 
00: Normal (Audio Sample from TX FIFO) 
01: -6 dB Sin wave 
10: -60 dB Sin wave 
11: Silent wave</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal (Audio Sample from TX FIFO)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_6_dB</name>
                  <description>-6 dB Sin wave</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_60_dB</name>
                  <description>-60 dB Sin wave</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Silent</name>
                  <description>Silent wave</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CODEC_CLK_SELECT</name>
              <description>CODEC Clock Source Select 
0: CODEC Clock from PLL 
1: CODEC Clock from OSC (for Debug)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CODEC_Clock_from_PLL</name>
                  <description>CODEC Clock from PLL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CODEC_Clock_from_OSC</name>
                  <description>CODEC Clock from OSC (for Debug)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA_SWP</name>
              <description>DAC output channel swap enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DPC</name>
          <description>DAC Digital Part Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9E07F001</resetMask>
          <fields>
            <field>
              <name>EN_DAC</name>
              <description>DAC Digital Part Enable 0 : Disable 1 : Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODQU</name>
              <description>Internal DAC Quantization Levels Levels=[7*(21+MODQU[3:0])]/128 Default levels=7*21/128=1.15</description>
              <bitRange>[28:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HPF_EN</name>
              <description>High Pass Filter Enable 
0: Disable 
1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DVOL</name>
              <description>Digital Volume Control DVC, ATT=DVC[5:0]*(-1.16Db) 64 steps, -1.16Db/step</description>
              <bitRange>[17:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable 0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_CTRL</name>
          <description>DAC DRC Control Register</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0xBFFF</resetMask>
          <fields>
            <field>
              <name>DRC_DELAY_BUFFER_DATA_OUTPUT</name>
              <description>DRC delay buffer data output state when drc delay function is enble and the drc funciton disable. After disable drc function and this bit go to 0, the user should write the drc delay function bit to 0. 0 : Not complete 1 : Complete</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIGNAL_DELAY_TIME</name>
              <description>Signal delay time setting 6'h00 : (8x1)fs 6'h01 : (8x2)fs 6'h02 : (8x3)fs ---------------------------------------- 6'h2e : (8*47)fs 6'h2f : (8*48)fs 6'h30 -- 6'h3f : (8*48)fs Delay time = 8*(n+1)fs, n&lt;6'h30; When the delay function is disable, the signal delay time is unused.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_BUFFER_USE_OR_NOT</name>
              <description>The delay buffer use or not when the drc disable and the drc buffer data output completely 0 : Don't use the buffer 1 : Use the buffer</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MAX_LIMIT_ENABLE</name>
              <description>DRC gain max limit enable 0 : Disable 1 : Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MIN_LIMIT_ENABLE</name>
              <description>DRC gain min limit enable. when this fuction enable, it will overwrite the noise detect funciton. 0 : Disable 1 : Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_THE_DRC_TO_DETECT</name>
              <description>Control the drc to detect noise when ET enable  0 : Disable 1 : Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIGNAL_FUNCTION_SELECT</name>
              <description>Signal function Select 0 : RMS filter 1 : Peak filter When Signal function Select Peak filter, the RMS parameter is unused. (AC_DRC_LRMSHAT / AC_DRC_LRMSLAT / AC_DRC_LRMSHAT / AC_DRC_LRMSLAT) When Signal function Select RMS filter, the Peak filter parameter is unused.(AC_DRC_LPFHAT / AC_DRC_LPFLAT / AC_DRC_RPFHAT / AC_DRC_RPFLAT / AC_DRC_LPFHRT / AC_DRC_LPFLRT / AC_DRC_RPFHRT / AC_DRC_RPFLRT)</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_FUNCTION_ENABLE</name>
              <description>Delay function enable 0 : Disable 1 : Enable When the Delay function enable is disabled, the Signal delay time is unused.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_LT_ENABLE</name>
              <description>DRC LT enable 0 : Disable 1 : Enable When the DRC LT is disabled the LT, Kl and OPL parameter is unused.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_ET_ENABLE</name>
              <description>DRC ET enable 0 : Disable 1 : Enable When the DRC ET is disabled the ET, Ke and OPE parameter is unused.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_EPSHC</name>
          <description>DAC DRC Expander Smooth Time High Coef Register</description>
          <addressOffset>0x1AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms)</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_EPSLC</name>
          <description>DAC DRC Expander Smooth Time Low Coef Register</description>
          <addressOffset>0x1B0</addressOffset>
          <resetValue>0x640C</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HCT</name>
          <description>DAC DRC Compressor Theshold High Setting Register</description>
          <addressOffset>0x13C</addressOffset>
          <resetValue>0x6A4</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HET</name>
          <description>DAC DRC Expander Theshold High Setting Register</description>
          <addressOffset>0x16C</addressOffset>
          <resetValue>0xBA0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HHPFC</name>
          <description>DAC DRC High HPF Coef Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format.</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HKC</name>
          <description>DAC DRC Compressor Slope High Setting Register</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 6.24. (2 : 1)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HKE</name>
          <description>DAC DRC Expander Slope High Setting Register</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x500</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HKN</name>
          <description>DAC DRC Linear Slope High Setting Register</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger . The format is 6.24. (1:1)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HKl</name>
          <description>DAC DRC Limiter Slope High Setting Register</description>
          <addressOffset>0x15C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1)</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HLT</name>
          <description>DAC DRC Limiter Theshold High Setting Register</description>
          <addressOffset>0x154</addressOffset>
          <resetValue>0x1A9</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HOPC</name>
          <description>DAC DRC Compressor High Output at Compressor Threshold Register</description>
          <addressOffset>0x14C</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation -OPC/6.0206 The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HOPE</name>
          <description>DAC DRC Expander High Output at Expander Threshold</description>
          <addressOffset>0x17C</addressOffset>
          <resetValue>0xF45F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24 (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_HOPL</name>
          <description>DAC DRC Limiter High Output at Limiter Threshold</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0xFBD8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24 (-25dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LCT</name>
          <description>DAC DRC Compressor Slope High Setting Register</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0xD3C0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LET</name>
          <description>DAC DRC Expander Theshold Low Setting Register</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x7291</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LHPFC</name>
          <description>DAC DRC Low HPF Coef Register</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0xFAC1</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LKC</name>
          <description>DAC DRC Compressor Slope Low Setting Register</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 6.24. (2 : 1)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LKE</name>
          <description>DAC DRC Expander Slope Low Setting Register</description>
          <addressOffset>0x178</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LKN</name>
          <description>DAC DRC Linear Slope Low Setting Register</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger . The format is 6.24. (1:1)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LKl</name>
          <description>DAC DRC Limiter Slope Low Setting Register</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, there, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LLT</name>
          <description>DAC DRC Limiter Theshold Low Setting Register</description>
          <addressOffset>0x158</addressOffset>
          <resetValue>0x34F0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LOPC</name>
          <description>DAC DRC Compressor Low Output at Compressor Threshold Register</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation OPC/6.0206 The format is 8.24 (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LOPE</name>
          <description>DAC DRC Expander Low Output at Expander Threshold</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x8D6E</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24 (-70dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LOPL</name>
          <description>DAC DRC Limiter Low Output at Limiter Threshold</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0xFBA7</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24 (-25dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LPFHAT</name>
          <description>DAC DRC Left Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LPFHRT</name>
          <description>DAC DRC Left Peak Filter High Release Time Coef Register</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LPFLAT</name>
          <description>DAC DRC Left Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LPFLRT</name>
          <description>DAC DRC Left Peak Filter Low Release Time Coef Register</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LRMSHAT</name>
          <description>DAC DRC Left RMS Filter High Coef Register</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_LRMSLAT</name>
          <description>DAC DRC Left RMS Filter Low Coef Register</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_MNGHS</name>
          <description>DAC DRC MIN Gain High Setting Register</description>
          <addressOffset>0x1A4</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -60dB &lt;=MNG &lt;= -40dB (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_MNGLS</name>
          <description>DAC DRC MIN Gain Low Setting Register</description>
          <addressOffset>0x1A8</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting which determine by equation MNG/6.0206. The format is 8.24 and must -60dB &lt;=MNG &lt;= -40dB (-40dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_MXGHS</name>
          <description>DAC DRC MAX Gain High Setting Register</description>
          <addressOffset>0x19C</addressOffset>
          <resetValue>0xFE56</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG&lt; 30dB (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_MXGLS</name>
          <description>DAC DRC MAX Gain Low Setting Register</description>
          <addressOffset>0x1A0</addressOffset>
          <resetValue>0xCB0F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG &lt; 30dB (-10dB)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_OPT</name>
          <description>DAC DRC Optimum Register</description>
          <addressOffset>0x1B4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_USE_THE_EXPANDER</name>
              <description>The gain smooth use the expander coiffcient when the energy in expander range 0 : use the normal smooth coeffcient 1 : use the expander coeffcient</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GAIN_NORMAL_SMOOTH_COEFFICEINT_SELECTION</name>
              <description>The gain normal smooth coefficeint selection mode set 0 : both release and attack coeffcient use hysteresis 1 : only the attack coeffcient use hysteresis</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MIN_OF_ENERGY_SET_IN</name>
              <description>The min of energy set in Peak detect mode  0 : -120dB   1 : -210dB</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENERGY_MODE_SELECT_IN_RMS</name>
              <description>The energy mode select in rms detect mode 0 : the energy is RMS 1 : the energy is square of RMS</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_DATA_OUPUT_WHEN_DRC</name>
              <description>DRC data ouput when DRC disable and DRC delay data output complete 0 : the ouput is the input music data; 1 : the output is 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_DEFAUT_VALUE</name>
              <description>DRC gain defaut value setting 
0: The default gain is 1 
1: The default gain is 0</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>The default gain is 1</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0</name>
                  <description>The default gain is 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GAIN_SMOOTH_HYSTERESIS</name>
              <description>The hysteresis of the gain smooth filter to use the decay time coefficient or the attack time coefficient. When in the decay time state, if g(n-1)-g(n)&gt;hysteresis, then the state will change to attack time state, and when in the attack time, if g(n)-g(n-1)&gt;hysteresis, then the state will change to decay time state. Note the hysteresis of 0x00 and 0x04 is the same. 
00000: 2^(-20) 
00001: 2^(-19) 
00010: 2^(-18) ----------------- 
10011: 2^(-1) 10100 ~11111: 1 hysteresis = 2^(n-20) ,except n=0x00, and n less 0x14.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_20_closingparen_</name>
                  <description>2^(-20)</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_19_closingparen_</name>
                  <description>2^(-19)</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_18_closingparen_</name>
                  <description>2^(-18) -----------------</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_circumflex__openingparen__minus_1_closingparen_</name>
                  <description>2^(-1) 10100 ~11111: 1 hysteresis = 2^(n-20) ,except n=0x00, and n less 0x14.</description>
                  <value>0b10011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_RPFHAT</name>
          <description>DAC DRC Right Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_RPFHRT</name>
          <description>DAC DRC Right Peak Filter High Release Time Coef Register</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_RPFLAT</name>
          <description>DAC DRC Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.  (1ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_RPFLRT</name>
          <description>DAC DRC Right Peak Filter Low Release Time Coef Register</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that AT = exp(-2.2Ts/tr). The format is 3.24.  (100ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_RRMSHAT</name>
          <description>DAC DRC Right RMS Filter High Coef Register</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_RRMSLAT</name>
          <description>DAC DRC Right RMS Filter Low Coef Register</description>
          <addressOffset>0x138</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.  (10ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_SFHAT</name>
          <description>DAC DRC Smooth Filter Gain High Attack Time Coef Register</description>
          <addressOffset>0x18C</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_SFHRT</name>
          <description>DAC DRC Smooth Filter Gain High Release Time Coef Register</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms)</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_SFLAT</name>
          <description>DAC DRC Smooth Filter Gain Low Attack Time Coef Register</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x5600</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DRC_SFLRT</name>
          <description>DAC DRC Smooth Filter Gain Low Release Time Coef Register</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0xF04</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_FIFOC</name>
          <description>DAC FIFO Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x4000</resetValue>
          <resetMask>0xF7607FFF</resetMask>
          <fields>
            <field>
              <name>DAC_FS</name>
              <description>Sample Rate Of DAC 
000: 48KHz 
010: 24KHz 
100: 12KHz 
110: 192KHz 
001: 32KHz 
011: 16KHz 
101: 8KHz 
111: 96KHz 44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_48KHz</name>
                  <description>48KHz</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24KHz</name>
                  <description>24KHz</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12KHz</name>
                  <description>12KHz</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192KHz</name>
                  <description>192KHz</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16KHz</name>
                  <description>16KHz</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8KHz</name>
                  <description>8KHz</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96KHz</name>
                  <description>96KHz 44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIR_VER</name>
              <description>FIR Version 
0: 64-Tap FIR 
1: 32-Tap FIR</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64_minus_Tap</name>
                  <description>64-Tap FIR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_minus_Tap</name>
                  <description>32-Tap FIR</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEND_LASAT</name>
              <description>Audio sample select when TX FIFO under run 
0: Sending zero 
1: Sending last audio sample</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sending_zero</name>
                  <description>Sending zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sending_last</name>
                  <description>Sending last audio sample</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_MODE</name>
              <description>For 24-bits transmitted audio sample 00/10: FIFO_I[23:0] = {TXDATA[31:8]} 01/11: Reserved For 16-bits transmitted audio sample: 00/10: FIFO_I*23:0+ = ,TXDATA*31:16+, 8`b0- 01/11: FIFO_I*23:0+ = ,TXDATA*15:0+, 8`b0-</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_DRQ_CLR_CNT</name>
              <description>When TX FIFO Available Room Less Than Or Equal N, DRQ Request Will Be De-Asserted. N Is Defined Here:  
00: IRQ/DRQ De-Asserted When WLEVEL &gt; TXTL 
01: 4 
10: 8 
11: 16</description>
              <bitRange>[22:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_slash_DRQ</name>
                  <description>IRQ/DRQ De-Asserted When WLEVEL &gt; TXTL</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TRIG_LEVEL</name>
              <description>TX FIFO Empty Trigger Level (TXTL[12:0]) Interrupt and DMA request trigger level for TX FIFO normal condition. IRQ/DRQ Generated when WLEVEL &lt;= TXTL Notes: 1. WLEVEL represents the number of valid samples in the TX FIFO 2. Only TXTL[6:0] valid when TXMODE = 0</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDA_LOOP_EN</name>
              <description>ADDA Loop Enable 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_MONO_EN</name>
              <description>DAC Mono Enable 
0: Stereo, 64 Levels FIFO 
1: Mono, 128 Levels FIFO When Enabled, L &amp; R Channel Send Same Data</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stereo</name>
                  <description>Stereo, 64 Levels FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mono</name>
                  <description>Mono, 128 Levels FIFO When Enabled, L &amp; R Channel Send Same Data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_SAMPLE_BITS</name>
              <description>Transmitting Audio Sample Resolution 
0: 16 bits 
1: 24 bits</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bits</name>
                  <description>16 bits</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bits</name>
                  <description>24 bits</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_DRQ_EN</name>
              <description>DAC FIFO Empty DRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_IRQ_EN</name>
              <description>DAC FIFO Empty IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_UNDERRUN_IRQ_EN</name>
              <description>DAC FIFO Under Run IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_OVERRUN_IRQ_EN</name>
              <description>DAC FIFO Over Run IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_FLUSH</name>
              <description>DAC FIFO Flush Write `1` to flush TX FIFO, Self clear to `0`</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_FIFOS</name>
          <description>DAC FIFO Status Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x808008</resetValue>
          <resetMask>0xFFFF0E</resetMask>
          <fields>
            <field>
              <name>TX_EMPTY</name>
              <description>TX FIFO Empty 
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO (&gt;= 1 word)</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word Counter</description>
              <bitRange>[22:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt Write `1` to clear this interrupt or automatically clear if interrupt condition fails</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt Write `1` to clear this interrupt or automatically clear if interrupt condition fails</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Under run Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_TXDATA</name>
          <description>DAC TX Data Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample.</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_PR_CFG</name>
          <description>AC Parameter Configuration Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0x111FFFFF</resetMask>
          <fields>
            <field>
              <name>ADDA_PR_RST</name>
              <description>ADDA_PR Reset. 
0: Assert 
1: De-assert</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADDA_PR_RW</name>
              <description>ADDA_PR Read or Write. 
0: Read 
1: Write</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADDA_PR_ADDR</name>
              <description>ADDA_PR Address[4:0].</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDA_PR_WDAT</name>
              <description>ADDA_PR Write Data [7:0].</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDA_PR_RDAT</name>
              <description>ADDA_PR Read Data[7:0].</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>AC97</name>
      <description>AC97</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AC_CMD</name>
          <description>AC97 Command Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>OP</name>
              <description>Read enable 
0: Command write 
1: Status read</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command</name>
                  <description>Command write</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Status</name>
                  <description>Status read</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CC_ADDR</name>
              <description>Codec command address</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Codec command data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_CS</name>
          <description>AC97 Codec Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFFFF</resetMask>
          <fields>
            <field>
              <name>CS_ADDR</name>
              <description>Codec status address</description>
              <bitRange>[22:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CS</name>
              <description>Codec status data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_CTL</name>
          <description>AC97 Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x703F2</resetMask>
          <fields>
            <field>
              <name>CS_RF</name>
              <description>CODEC Status Register FLAG 
0: Empty 
1: Full</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Empty</name>
                  <description>Empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_RF</name>
              <description>CMD Register FLAG 
0: Empty 
1: Full</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Empty</name>
                  <description>Empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_STATUS</name>
              <description>RX Transfer Status 
0: PCM IN 
1: MIC IN</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM</name>
                  <description>PCM IN</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MIC</name>
                  <description>MIC IN</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_MODE</name>
              <description>RX MODE 
0: PCM IN 
1: MIC IN This bit indicates which mode will be selected when PCM IN and MIC IN slots are available simultaneously</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM</name>
                  <description>PCM IN</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MIC</name>
                  <description>MIC IN This bit indicates which mode will be selected when PCM IN and MIC IN slots are available simultaneously</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASS</name>
              <description>Audio sample select with TX FIFO under run 
0: Sending 0 (invalid frame) 
1: Sending the last audio (valid frame)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sending_0</name>
                  <description>Sending 0 (invalid frame)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sending_the_last</name>
                  <description>Sending the last audio (valid frame)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>0: Disable 
1: Enable This bit is controlled by , we can enable this bit, only after the globe enable bit is enabled.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable This bit is controlled by , we can enable this bit, only after the globe enable bit is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>0: Disable 
1: Enable This bit is controlled by , we can enable this bit, only after the globe enable bit is enabled.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable This bit is controlled by , we can enable this bit, only after the globe enable bit is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC_LINK</name>
              <description>AC-link EN 
0: Disable 
1: Enable(SYNC signal transfer to Codec) This bit is controlled by , we can enable this bit, only after the globe enable is enabled.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable_openingparen_SYNC</name>
                  <description>Enable(SYNC signal transfer to Codec) This bit is controlled by , we can enable this bit, only after the globe enable is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables. 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WARM_RST</name>
              <description>Warm reset 
0: Normal 
1: Wake up codec from power down Note: Self clear to `0`</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wake</name>
                  <description>Wake up codec from power down Note: Self clear to `0`</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_FAT</name>
          <description>AC97 Format Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>TX_AUDIO_MODE</name>
              <description>TX audio mode 
00: 2-channel(PCM l/r main) 
01: 6-channel(PCM l/r main, l/r surround, center, AFE) 
10: Reserved 
11: Reserved</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_minus_channel_openingparen_PCM</name>
                  <description>2-channel(PCM l/r main)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_minus_channel_openingparen_PCM</name>
                  <description>6-channel(PCM l/r main, l/r surround, center, AFE)</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRA_SLOT_SEL</name>
              <description>DRA additional slots select (available in 2-channel mode) 
0: Select slot 10, slot 11 
1: Select slot 7, slot 8</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_slot_10</name>
                  <description>Select slot 10, slot 11</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_slot_7</name>
                  <description>Select slot 7, slot 8</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRA_MODE</name>
              <description>DRA mode 
0: Non-DRA 
1: DRA</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>non_DRA</name>
                  <description>Non-DRA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DRA</name>
                  <description>DRA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VRA_MODE</name>
              <description>VRA Mode 
0: Non-VRA 
1: VRA</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>non_VRA</name>
                  <description>Non-VRA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VRA</name>
                  <description>VRA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_RES</name>
              <description>TX Audio data resolution 
00: 16-bit 
01: 18-bit 
10: 20-bit 
11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_18_bit</name>
                  <description>18-bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RES</name>
              <description>RX Audio data resolution 
00: 16-bit 
01: 18-bit 
10: 20-bit 
11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_18_bit</name>
                  <description>18-bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_FCTL</name>
          <description>AC97 FIFO Control Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x3078</resetValue>
          <resetMask>0x8003FFFF</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio hub enable 
0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TX FIFO, self clear to `0`</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FRX</name>
              <description>Write `1` to flush RX FIFO, self clear to `0`</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO empty Trigger Level Interrupt and DMA request trigger level for TX FIFO normal condition Trigger Level = TXTL</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RX FIFO Trigger Level Interrupt and DMA request trigger level for RX FIFO normal condition Trigger Level =RXTL + 1</description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TX FIFO Input Mode(Mode0, 1) 
0: Valid data at the MSB of AC_TXFIFO register 
1: Valid data at the LSB of AC_TXFIFO register Example for 18-bit transmitted audio sample: Mode 0: FIFO_I*19:0+ = ,TXFIFO*31:14+, 2`h0- Mode 1: FIFO_I*19:0+ = ,TXFIFO*17:0+, 2`h0-</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of AC_TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of AC_TXFIFO register Example for 18-bit transmitted audio sample: Mode 0: FIFO_I*19:0+ = ,TXFIFO*31:14+, 2`h0- Mode 1: FIFO_I*19:0+ = ,TXFIFO*17:0+, 2`h0-</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RX FIFO Output Mode(Mode 0,1,2,3) 
00: Expanding `0` at LSB of AC_RXFIFO register 
01: Expanding received sample sign bit at MSB of AC_RXFIFO register 
10: Truncating received samples at high half-word of AC_RXFIFO register and low half-word of AC_FIFO register is filled by `0` 
11: Truncating received samples at low half-word of AC_RXFIFO register and high half-word of AC_FIFO register is expanded by its sigh bit Example for 18-bit received audio sample: Mode0: RXFIFO*31:0+ = ,FIFO_O*19:2+, 14`h0- Mode 1: RXFIFO[31:0+ = ,14`FIFO_O*19+, FIFO_O*19:2+- Mode 2: RXFIFO*31:0+ = ,FIFO_O*19:4+, 16`h0- Mode 3: RXFIFO*31:0+ = ,16`FIFO_O*19+, FIFO_O*19:4+-</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`_at_LSB_of</name>
                  <description>Expanding `0` at LSB of AC_RXFIFO register</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample_sign_bit</name>
                  <description>Expanding received sample sign bit at MSB of AC_RXFIFO register</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_high</name>
                  <description>Truncating received samples at high half-word of AC_RXFIFO register and low half-word of AC_FIFO register is filled by `0`</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_low</name>
                  <description>Truncating received samples at low half-word of AC_RXFIFO register and high half-word of AC_FIFO register is expanded by its sigh bit Example for 18-bit received audio sample: Mode0: RXFIFO*31:0+ = ,FIFO_O*19:2+, 14`h0- Mode 1: RXFIFO[31:0+ = ,14`FIFO_O*19+, FIFO_O*19:2+- Mode 2: RXFIFO*31:0+ = ,FIFO_O*19:4+, 16`h0- Mode 3: RXFIFO*31:0+ = ,16`FIFO_O*19+, FIFO_O*19:4+-</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_FSTA</name>
          <description>AC97 FIFO Status Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0xC000</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TX FIFO Empty 
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO ( &gt;=1 word )</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO ( &gt;=1 word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word counter</description>
              <bitRange>[14:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RX FIFO Available 
0: No available data in RX FIFO 
1: More than one sample in RX FIFO ( &gt;=1 word )</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one sample in RX FIFO ( &gt;=1 word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RX FIFO Available Sample Word counter</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_INT</name>
          <description>AC97 Interrupt Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F7</resetMask>
          <fields>
            <field>
              <name>CODEC_GPIO_EN</name>
              <description>Codec GPIO interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CREN</name>
              <description>Codec Ready interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DRQ</name>
              <description>TX FIFO Empty DRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RX FIFO Data Available DRQ Enable When set to `1`, RX FIFO DMA Request is asserted if data is available in RX FIFO. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RX FIFO Data Available Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ISTA</name>
          <description>AC97 Interrupt Status Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x373</resetMask>
          <fields>
            <field>
              <name>CODEC_GPIO_INT</name>
              <description>Codec GPIO interrupt 
0: No pending IRQ 
1: Codec GPIO interrupt Write `1` to clear this interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Codec</name>
                  <description>Codec GPIO interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CR_INT</name>
              <description>Codec Ready pending Interrupt 
0: No pending IRQ 
1: Codec Ready Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Codec</name>
                  <description>Codec Ready Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Under run Pending Interrupt 
0: No pending IRQ 
1: FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RX FIFO Overrun Pending Interrupt 
0: FIFO Overrun Pending Write `1` to clear this interrupt.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Write `1` to clear this interrupt.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RX FIFO Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_RXFIFO</name>
          <description>AC_RXFIFO</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>Host can get one sample by reading this register. If in the PCM IN mode, the left channel sample data is first and then the right channel sample</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_RX_CNT</name>
          <description>AC97 RX Counter Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample counter The audio sample number of writing into RX FIFO.  When one sample is written by Codec, the RX sample counter register increases by one. The RX Counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_TXFIFO</name>
          <description>AC_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample.</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_TX_CNT</name>
          <description>AC97 TX Counter Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample counter The audio sample number of writing into TX FIFO.  When one sample is written by DMA or by host IO, the TX sample counter register increases by one. The TX Counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC</name>
      <description>RTC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ALARM0_COUNTER_REG</name>
          <description>Alarm 0 Counter Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_COUNTER</name>
              <description>Alarm 0 Counter is Based on Second.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_CUR_VAL_REG</name>
          <description>ALARM0_CUR_VAL_REG</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_CUR_VLU</name>
              <description>Check Alarm 0 Counter Current Values.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_ENABLE_REG</name>
          <description>Alarm 0 Enable Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALM_0_EN</name>
              <description>Alarm 0 Enable. If this bit is set to `1`, the valid bits of will down count to zero, and the alarm pending bit will be set to `1`. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_EN_REG</name>
          <description>ALARM0_IRQ_EN_REG</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_EN</name>
              <description>Alarm 0 IRQ Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_STA_REG</name>
          <description>Alarm 0 IRQ Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_PEND</name>
              <description>Alarm 0 IRQ Pending bit. 
0: No effect 
1: Pending, alarm 0 counter value is reached If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, alarm 0 counter value is reached If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_EN_REG</name>
          <description>ALARM1_EN_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>WK6_ALM1_EN</name>
              <description>Week 6 (Sunday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 6, the week 6 alarm irq pending bit will be set to `1`.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 6, the week 6 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK5_ALM1_EN</name>
              <description>Week 5 (Saturday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 5, the week 5 alarm irq pending bit will be set to `1`.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 5, the week 5 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK4_ALM1_EN</name>
              <description>Week 4 (Friday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 4, the week 4 alarm irq pending bit will be set to `1`.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 4, the week 4 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK3_ALM1_EN</name>
              <description>Week 3 (Thursday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 3, the week 3 alarm irq pending bit will be set to `1`.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 3, the week 3 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK2_ALM1_EN</name>
              <description>Week 2 (Wednesday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 2, the week 2 alarm irq pending bit will be set to `1`.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 2, the week 2 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK1_ALM1_EN</name>
              <description>Week 1 (Tuesday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 1, the week 1 alarm irq pending bit will be set to `1`.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 1, the week 1 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK0_ALM1_EN</name>
              <description>Week 0 (Monday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 0, the week 0 alarm irq pending bit will be set to `1`.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the valid bits of is equal to the bit[20:0] of and the bit[31:29] of is 0, the week 0 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_EN_REG</name>
          <description>ALARM1_IRQ_EN_REG</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_IRQ_EN</name>
              <description>Alarm 1 IRQ Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_STA_REG</name>
          <description>Alarm 1 IRQ Status Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_WEEK_IRQ_PEND</name>
              <description>Alarm 1 Week (0/1/2/3/4/5/6) IRQ Pending. 
0: No effect 
1: Pending, week counter value is reached If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, week counter value is reached If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_WK_HH_MM_SS</name>
          <description>ALARM1_WK_HH_MM_SS</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F3F3F</resetMask>
          <fields>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23.</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM_CONFIG_REG</name>
          <description>Alarm Configuration Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM_WAKEUP</name>
              <description>Configuration of alarm wake up output. 
0: Disable alarm wake up output 
1: Enable alarm wake up output</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable alarm wake up output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable alarm wake up output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_SOFT_ENT_REG</name>
          <description>CPU Software Entry Register</description>
          <addressOffset>0x1FC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CPU_SOFT_ENT</name>
              <description>CPU software entry register when acting from super standby.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>GP_DATA_REGn[%s]</name>
          <description>GP_DATA_REGn[%s]</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GP_DATA</name>
              <description>Data [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CHARA_REG</name>
          <description>IC Characteristic Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_CHARA</name>
              <description>Key Field. The field should be written to 0x16AA. Writing any other value in this field aborts the write operation.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_DATA</name>
              <description>Return 0x16AA only if the is set as 0x16AA when read those bits, otherwise return 0x0.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTOSC_CLK_AUTO_CALI_REG</name>
          <description>Internal OSC Clock Auto Calibration Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF0003</resetMask>
          <fields>
            <field>
              <name>CALIBRATION_LOCK_COUNT</name>
              <description>32k calibration lock count.</description>
              <bitRange>[25:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RC_CALIBRATION_ENABLE</name>
              <description>RC calibration enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RC_CALIBRATION_FUNCTION_ENABLE</name>
              <description>RC calibration function enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTOSC_CLK_PRESCAL_REG</name>
          <description>Internal OSC Clock Prescalar Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xF</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>INTOSC_CLK_PRESCAL</name>
              <description>Internal OSC Clock Prescalar value N. 
00000: 1 
00001: 2 
00010: 3 ...... 
11111: 512</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3</name>
                  <description>3 ......</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512</description>
                  <value>0b11111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_AUTO_SWT_STA_REG</name>
          <description>LOSC Auto Switch Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>LOSC_AUTO_SWT_PEND</name>
              <description>LOSC auto switch pending. 
0: No effect 
1: Auto switches pending Writing 1 to this bit will clear it.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto switches pending Writing 1 to this bit will clear it.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL_STA</name>
              <description>Checking LOSC Clock Source Status. `N` is the value of Internal OSC Clock Prescalar register. 
0: 32KHz 
1: External 32.768KHz OSC</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768KHz OSC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_CTRL_REG</name>
          <description>Low Oscillator Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x4000</resetValue>
          <resetMask>0xFFFF438D</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field. This field should be filled with 0x16AA, and then the bit 0 can be written with the new value.</description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>LOSC_AUTO_SWT_EN</name>
              <description>LOSC auto switch enable. 
0: Disable 
1: Enable.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALM_DDHHMMSS_ACCE</name>
              <description>ALARM DD-HH-MM-SS access. After wrote the , this bit is set and it will be cleared until the real writing operation is finished.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_HHMMSS_ACCE</name>
              <description>RTC HH-MM-SS access. After wrote the , this bit is set and it will be cleared until the real writing operation is finished. After wrote the , the will be refreshed for at most one second.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_YYMMDD_ACCE</name>
              <description>RTC YY-MM-DD access. After wrote the , this bit is set and it will be cleared until the real writing operation is finished. After wrote the , the will be refreshed for at most one second.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_LOSC_GSM</name>
              <description>External 32768Hz Crystal GSM. 
00: Low 
01: / 
10: / 11 High</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/ 11 High</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL</name>
              <description>LOSC Clock source Select. `N` is the value of Internal OSC Clock Prescalar register. 
0: 32KHz 
1: External 32.768KHz OSC.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768KHz OSC.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_HH_MM_SS_REG</name>
          <description>RTC Hour-Minute-Second Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xE01F3F3F</resetMask>
          <fields>
            <field>
              <name>WK_NO</name>
              <description>Week number. 
000: Monday 
001: Tuesday 
010: Wednesday 
011: Thursday 
100: Friday 
101: Saturday 
110: Sunday 
111: /</description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Monday</name>
                  <description>Monday</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Tuesday</name>
                  <description>Tuesday</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wednesday</name>
                  <description>Wednesday</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Thursday</name>
                  <description>Thursday</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Friday</name>
                  <description>Friday</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Saturday</name>
                  <description>Saturday</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sunday</name>
                  <description>Sunday</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_YY_MM_DD_REG</name>
          <description>RTC Year-Month-Day Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF0F1F</resetMask>
          <fields>
            <field>
              <name>LEAP</name>
              <description>Leap Year. 
0: Not 
1: Leap year. This bit can not set by hardware. It should be set or cleared by software.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Leap</name>
                  <description>Leap year. This bit can not set by hardware. It should be set or cleared by software.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YEAR</name>
              <description>Year. Range from 0~127.</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONTH</name>
              <description>Month. Range from 1~12.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAY</name>
              <description>Day. Range from 1~31.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SuperStandbyFlagRegister</name>
          <description>SuperStandbyFlagRegister</description>
          <addressOffset>0x1F8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SUP_STANDBY_FLAG</name>
              <description>Key Field. Any value can be written and read back in the key field, but if the values are not appropriate, the lower 16 bits will not change in this register. Only fellow the appropriate process, the super standby flag can be written in the lower 16 bits. Refer to Description and Diagram.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUP_STANBY_FLAG_DATA</name>
              <description>Refer to Description and Diagram</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VDD_RTC_REG</name>
          <description>VDD RTC Regulate Register</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>VDD_RTC_REGU</name>
              <description>These bits are useful for regulating the RTC_VIO from 0.7V to 1.4V, and the regulation step is 0.1V. 
000: 0.7V 
001: 0.8V 
010: 0.9V 
011: 1.0V 
100: 1.1V 
101: 1.2V 
110: 1.3V 
111: 1.4V</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_7V</name>
                  <description>0.7V</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_8V</name>
                  <description>0.8V</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9V</name>
                  <description>0.9V</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_0V</name>
                  <description>1.0V</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_1V</name>
                  <description>1.1V</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_2V</name>
                  <description>1.2V</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_3V</name>
                  <description>1.3V</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_4V</name>
                  <description>1.4V</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VDD_SYS_PWROFF_GATING_REG</name>
          <description>VDD_SYS Power Off Gating Register</description>
          <addressOffset>0x1F4</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x11F7</resetMask>
          <fields>
            <field>
              <name>WAIT_MODE_ENABLE</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_GATING_WAIT_TIME_CONTROL_BIT</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_GATING_MODE_BIT</name>
              <description>0: Wait mode 
1: VDD Off clear mode</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Wait_mode</name>
                  <description>Wait mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VDD</name>
                  <description>VDD Off clear mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_RTC_GATING</name>
              <description></description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AVCC_A_GATING</name>
              <description>Gating the corresponding modules to the AVCC_A Power Domain when VDD_SYS power off. 
0: Invalid 
1: Valid Note: This bit should be set to 1 before VDD_SYS power off while it should be set to 0 after the VDD_SYS power on.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid</name>
                  <description>Valid Note: This bit should be set to 1 before VDD_SYS power off while it should be set to 0 after the VDD_SYS power on.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_ZQ_PAD_HOLD</name>
              <description>Hold the pad of DRAM channel 
0: Not hold 
1: Hold DRAM ZQ Pad Note: This bit should be set to 1 before VDD_SYS power off while it should be set to 0 after the VDD_SYS power on.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_hold</name>
                  <description>Not hold</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold</name>
                  <description>Hold DRAM ZQ Pad Note: This bit should be set to 1 before VDD_SYS power off while it should be set to 0 after the VDD_SYS power on.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_CH_PAD_HOLD</name>
              <description>Hold the pad of DRAM channel 
0: Not hold 
1: Hold DRAM Pad Note: This bit should be set to 1 before VDD_SYS power off while it should be set to 0 after the VDD_SYS power on.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_hold</name>
                  <description>Not hold</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold</name>
                  <description>Hold DRAM Pad Note: This bit should be set to 1 before VDD_SYS power off while it should be set to 0 after the VDD_SYS power on.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USB1_HOST</name>
      <description>USB1_HOST</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C19000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ASYNCLISTADDR</name>
          <description>ASYNCLISTADDR</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFE0</resetMask>
          <fields>
            <field>
              <name>LP</name>
              <description>Link Pointer (LP) This field contains the address of the next asynchronous queue head to be executed. These bits correspond to memory address signals [31:5], respectively.</description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPLENGTH</name>
          <description>CAPLENGTH</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CAPLENGTH</name>
              <description>The value in these bits indicates an offset to add to register base to find the beginning of the Operational Register Space.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFIGFLAG</name>
          <description>CONFIGFLAG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CF</name>
              <description>Configure Flag(CF) Host software sets this bit as the last action in its process of configuring the Host Controller. This bit controls the default port-routing control logic as follow: 
0: Port routing control logic default-routs each port to an implementation dependent classic host controller. 
1: Port routing control logic default-routs all ports to this host controller. The default value of this field is `0`.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Port_routing_control_logic_default_minus_routs_each</name>
                  <description>Port routing control logic default-routs each port to an implementation dependent classic host controller.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Port_routing_control_logic_default_minus_routs_all</name>
                  <description>Port routing control logic default-routs all ports to this host controller. The default value of this field is `0`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>FRINDEX</name>
          <description>FRINDEX</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>FRIND</name>
              <description>Frame Index The value in this register increment at the end of each time frame(e.g. micro-frame).Bits[N:3] are used for the Frame List current index. It means that each location of the frame list is accessed 8 times(frames or Micro-frames) before moving to the next index. The following illustrates Values of N based on the value of the Frame List Size field in the USBCMD register. USBCMD[Frame List Size] = 0x00: Number Elements = 1024, N = 12 USBCMD[Frame List Size] = 0x01: Number Elements = 512, N = 11 USBCMD[Frame List Size] = 0x02: Number Elements = 256, N = 10 USBCMD[Frame List Size] = 0x03: Reserved</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCPARAMS</name>
          <description>HCCPARAMS</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xA026</resetValue>
          <resetMask>0xFFF6</resetMask>
          <fields>
            <field>
              <name>EECP</name>
              <description>EHCI Extended Capabilities Pointer This optional field indicates the existence of a capabilities list. A value of 00b indicates no extended capabilities are implemented. A non-zero value in this register indicates the offset in PCI configuration space of the first EHCI extended capability. The pointer value must be 40h or greater if implemented to maintain to consistency of the PCI header defined for this class of device. The value of this field is always `00b`.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IST</name>
              <description>Isochronous Scheduling Threshold This field indicates, relative to the current position of the executing host controller, where software can reliably update the isochronous schedule. When bit[7] is zero, the value of the least significant 3 bits indicates the number of micro-frames a host controller can hold a set of isochronous data structures(one or more) before flushing the state. When bit[7] is a one, then host software assumes the host controller may cache an isochronous data structure for an entire frame.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ASPC</name>
              <description>Asynchronous Schedule Park Capability If this bit is set to a one, then the host controller supports the park feature for high-speed queue heads in the Asynchronous Schedule. The feature can be disabled or enabled and set to a specific level by using the Asynchronous Schedule Park Mode Enable and Asynchronous Schedule Park Mode Count fields in the USBCMD register.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PFLF</name>
              <description>Programmable Frame List Flag If this bit is set to a zero, then system software must use a frame list length of 1024 elements with this host controller. The USBCMD register Frame List Size field is a read-only register and should be set to zero. If set to 1,then system software can specify and use the frame list in the USBCMD register Frame List Size field to configure the host controller. The frame list must always aligned on a 4K page boundary. This requirement ensures that the frame list is always physically contiguous.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCIVERSION</name>
          <description>HCIVERSION</description>
          <addressOffset>0x2</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HCIVERSION</name>
              <description>This is a 16-bit register containing a BCD encoding of the EHCI revision number supported by this host controller. The most significant byte of this register represents a major revision and the least significant byte is the minor revision.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSPARAMS</name>
          <description>HCSPARAMS</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x1101</resetValue>
          <resetMask>0xF0FF8F</resetMask>
          <fields>
            <field>
              <name>DEBUG</name>
              <description>Debug Port Number This register identifies which of the host controller ports is the debug port. The value is the port number (one based) of the debug port. This field will always be `0`.</description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>N_CC</name>
              <description>Number of Companion Controller This field indicates the number of companion controllers associated with this USB2.0 host controller. A zero in this field indicates there are no companion host controllers. And a value larger than zero in this field indicates there are companion USB1.1 host controller(s). This field will always be `0`.</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>N_PCC</name>
              <description>Number of Port per Companion Controller This field indicates the number of ports supported per companion host controller host controller. It is used to indicate the port routing configuration to system software. This field will always fix with `0`.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRR</name>
              <description>Port Routing Rules This field indicates the method used by this implementation for how all ports are mapped to companion controllers. The value of this field has the following interpretation. 
0: The first N_PCC ports are routed to the lowest numbered function  Companion host controller, the next N_PCC port are routed to the  next lowest function companion controller, and so on 
1: The port routing is explicitly enumerated by the first N_PORTS  Elements of the HCSP-PORTTOUTE array. This field will always be `0`.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>first</name>
                  <description>The first N_PCC ports are routed to the lowest numbered function  Companion host controller, the next N_PCC port are routed to the  next lowest function companion controller, and so on</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>port</name>
                  <description>The port routing is explicitly enumerated by the first N_PORTS  Elements of the HCSP-PORTTOUTE array. This field will always be `0`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>N_PORTS</name>
              <description>This field specifies the number of physical downstream ports implemented on this host controller. The value of this field determines how many port registers are addressable in the Operational Register Space. Valid values are in the range of 0x1 to 0x0f. This field is always 1.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSP_PORTROUTE</name>
          <description>HCSP_PORTROUTE</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCSP_PORTROUTE</name>
              <description>This optional field is valid only if Port Routing Rules field in HCSPARAMS register is set to a one. This field is used to allow a host controller implementation to explicitly describe to which companion host controller each implemented port is mapped. This field is a 15-element nibble array (each 4 bit is one array element). Each array location corresponds one-to-one with a physical port provided by the host controller (e.g. PORTROUTE [0] corresponds to the first PORTSC port, PORTROUTE [1] to the second PORTSC port, etc.). The value of each element indicates to which of the companion host controllers this port is routed. Only the first N_PORTS elements have valid information. A value of zero indicates that the port is routed to the lowest numbered function companion host controller. A value of one indicates that the port is routed to the next lowest numbered function companion host controller, and so on.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkCurrentED_BCED_</name>
          <description>HcBulkCurrentED_BCED_</description>
          <addressOffset>0x42C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BULKCURRENTED_31_4</name>
              <description>BulkCurrentED[31:4] This is advanced to the next ED after the HC has served the present one. HC continues processing the list from where it left off in the last Frame. When it reaches the end of the Bulk list, HC checks the ControlListFilled of HcControl. If set, it copies the content of to and clears the bit. If it is not set, it does nothing. HCD is only allowed to modify this register when the BulkListEnable of is cleared. When set, the HCD only reads the instantaneous value of this register. This is initially set to zero to indicate the end of the Bulk list.</description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULK_CURRENT_ED</name>
              <description>BulkCurrentED [3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkHeadED_BHED_</name>
          <description>HcBulkHeadED_BHED_</description>
          <addressOffset>0x428</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BHED_31_4</name>
              <description>BHED[31:4] The HcBulkHeadED register contains the physical address of the first Endpoint Descriptor of the Bulk list. HC traverses the Bulk list starting with the HcBulkHeadED pointer. The content is loaded from HCCA during the initialization of HC.</description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BHED_3_0</name>
              <description>BHED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcCommandStatus</name>
          <description>HcCommandStatus</description>
          <addressOffset>0x408</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000F</resetMask>
          <fields>
            <field>
              <name>SCHEDULING_OVERRUN_COUNT</name>
              <description>SchedulingOverrunCount These bits are incremented on each scheduling overrun error. It is initialized to 00b and wraps around at 11b. This will be incremented when a scheduling overrun is detected even if SchedulingOverrun in has already been set. This is used by HCD to monitor any persistent scheduling problem.</description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OWERSHIP_CHANGE_REQUEST</name>
              <description>OwershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC. When set HC will set the OwnershipChange field in . After the changeover, this bit is cleared and remains so until the next request from OS HCD.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULKL_LIST_FILLED</name>
              <description>BulklListFilled This bit is used to indicate whether there are any TDs on the Bulk list. It is set by HCD whenever it adds a TD to an ED in the Bulk list. When HC begins to process the head of the Bulk list, it checks BLF. As long as BulkListFilled is 0, HC will not start processing the Bulk list. If BulkListFilled is 1, HC will start processing the Bulk list and will set BFL to 0. If HC finds a TD on the list, then HC will set BulkListFilled to 1 causing the Bulk list processing to continue. If no TD is found on the Bulk list, and if HCD does not set BulkListFilled, then BulkListFilled will still be 0 when HC completes processing the Bulk list and Bulk list processing will stop.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_LIST_FILLED</name>
              <description>ControlListFilled This bit is used to indicate whether there are any TDs on the Control list. It is set by HCD whenever it adds a TD to an ED in the Control list. When HC begins to process the head of the Control list, it checks CLF. As long as ControlListFilled is 0, HC will not start processing the Control list. If CLF is 1, HC will start processing the Control list and will set ControlListFilled to 0. If HC finds a TD on the list, then HC will set ControlListFilled to 1 causing the Control list processing to continue. If no TD is found on the Control list, and if the HCD does not set ControlListFilled, then ControlListFilled will still be 0 when HC completes processing the Control list and Control list processing will stop.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET</name>
              <description>HostControllerReset This bit is by HCD to initiate a software reset of HC. Regardless of the functional state of HC, it moves to the USBSuspend state in which most of the operational registers are reset except those stated otherwise; e.g, the InteruptRouting field of HcControl, and no Host bus accesses are allowed. This bit is cleared by HC upon the completion of the reset operation. The reset operation must be completed within 10 ms. This bit, when set, should not cause a reset to the Root Hub and no subsequent reset signaling should be asserted to its downstream ports.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControl</name>
          <description>HcControl</description>
          <addressOffset>0x404</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>REMOTEWAKEUPENABLE_THIS_BIT</name>
              <description>0x0 RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wakeup feature upon the detection of upstream resume signaling. When this bit is set and the ResumeDetected bit in is set, a remote wakeup is signaled to the host system. Setting this bit has no impact on the generation of hardware interrupt.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REMOTEWAKEUPCONNECTED_THIS_BIT</name>
              <description>0x0 RemoteWakeupConnected This bit indicates whether HC supports remote wakeup signaling. If remote wakeup is supported and used by the system, it is the responsibility of system firmware to set this bit during POST. HC clear the bit upon a hardware reset but does not alter it upon a software reset. Remote wakeup signaling of the host system is host-bus-specific and is not described in this specification.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPTROUTING_THIS_BIT_DETERMINES</name>
              <description>0x0 InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus. If clear, all interrupt are routed to the normal host bus interrupt mechanism. If set interrupts are routed to the System Management Interrupt. HCD clears this bit upon a hardware reset, but it does not alter this bit upon a software reset. HCD uses this bit as a tag to indicate the ownership of HC.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOSTCONTROLLERFUNCTIONALSTATE_FOR_USB</name>
              <description>HostControllerFunctionalState for USB 
00: USBReset 
01: USBResume 
10: USBOperational 
11: USBSuspend A transition to USBOperational from another state causes SOF generation to begin 1 ms later. HCD may determine whether HC has begun sending SOFs by reading the StartoFrame field of HcInterruptStatus. This field may be changed by HC only when in the USBSUSPEND state. HC may move from the USBSUSPEND state to the USBRESUME state after detecting the resume signaling from a downstream port. HC enters USBSUSPEND after a software reset, whereas it enters USBRESET after a hardware reset. The latter also resets the Root Hub and asserts subsequent reset signaling to downstream ports.</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>USBReset</name>
                  <description>USBReset</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBResume</name>
                  <description>USBResume</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBOperational</name>
                  <description>USBOperational</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>USBSuspend</name>
                  <description>USBSuspend A transition to USBOperational from another state causes SOF generation to begin 1 ms later. HCD may determine whether HC has begun sending SOFs by reading the StartoFrame field of HcInterruptStatus. This field may be changed by HC only when in the USBSUSPEND state. HC may move from the USBSUSPEND state to the USBRESUME state after detecting the resume signaling from a downstream port. HC enters USBSUSPEND after a software reset, whereas it enters USBRESET after a hardware reset. The latter also resets the Root Hub and asserts subsequent reset signaling to downstream ports.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BULKLISTENABLE_THIS_BIT_IS_SET</name>
              <description>BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame. If cleared by HCD, processing of the Bulk list does not occur after the next SOF. HC checks this bit whenever it determines to process the list. When disabled, HCD may modify the list. If is pointing to an ED to be removed, HCD must advance the pointer by updating before re-enabling processing of the list.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROLLISTENABLE_THIS_BIT_IS_SET</name>
              <description>ControlListEnable This bit is set to enable the processing of the Control list in the next Frame. If cleared by HCD, processing of the Control list does not occur after the next SOF. HC must check this bit whenever it determines to process the list. When disabled, HCD may modify the list. If is pointing to an ED to be removed, HCD must advance the pointer by updating before re-enabling processing of the list.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ISOCHRONOUSENABLE_THIS_BIT_IS_USED</name>
              <description>IsochronousEnable This bit is used by HCD to enable/disable processing of isochronous EDs. While processing the periodic list in a Frame, HC checks the status of this bit when it finds an Isochronous ED (F=1). If set (enabled), HC continues processing the EDs. If cleared (disabled), HC halts processing of the periodic list (which now contains only isochronous EDs) and begins processing the Bulk/Control lists. Setting this bit is guaranteed to take effect in the next Frame (not the current Frame).</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERIODICLISTENABLE_THIS_BIT_IS_SET</name>
              <description>PeriodicListEnable This bit is set to enable the processing of periodic list in the next Frame. If cleared by HCD, processing of the periodic list does not occur after the next SOF. HC must check this bit before it starts processing the list.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROLBULKSERVICERATIO_THIS_SPECIFIES_THE_SERVICE</name>
              <description>ControlBulkServiceRatio This specifies the service ratio between Control and Bulk EDs. Before processing any of the nonperiodic lists, HC must compare the ratio specified with its internal count on how many nonempty Control EDs have been processed, in determining whether to continue serving another Control ED or switching to Bulk EDs. The internal count will be retained when crossing the frame boundary. In case of reset, HCD is responsible for restoring this value. CBSR No. of Control EDs Over Bulk EDs Served 0        1:1 1        2:1 2        3:1 3        4:1 The default value is 0x0.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlCurrentED_CCED_</name>
          <description>HcControlCurrentED_CCED_</description>
          <addressOffset>0x424</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CCED_31_4</name>
              <description>CCED[31:4] The pointer is advanced to the next ED after serving the present one. HC will continue processing the list from where it left off in the last Frame. When it reaches the end of the Control list, HC checks the ControlListFilled of in HcCommandStatus. If set, it copies the content of HcControlHeadED to HcControlCurrentED and clears the bit. If not set, it does nothing. HCD is allowed to modify this register only when the ControlListEnable of HcControl is cleared. When set, HCD only reads the instantaneous value of this register. Initially , this is set to zero to indicate the end of the Control list.</description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCED_3_0</name>
              <description>CCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlHeadED_CHED_</name>
          <description>HcControlHeadED_CHED_</description>
          <addressOffset>0x420</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHED_31_4</name>
              <description>CHED[31:4] The HcControlHeadED register contains the physical address of the first Endpoint Descriptor of the Control list. HC traverse the Control list starting with the HcControlHeadED pointer. The content is loaded from HCCA during the initialization of HC.</description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHED_3_0</name>
              <description>CHED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcDoneHead</name>
          <description>HcDoneHead</description>
          <addressOffset>0x430</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCDONEHEAD_31_4</name>
              <description>HcDoneHead[31:4] When a TD is completed, HC writes the content of to the NextTD field of the TD. HC then overwrites the content of with the address of this TD. This is set to zero whenever HC writes the content of this register to HCCA. It also sets the WritebackDoneHead of .</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HCDONEHEAD_3_0</name>
              <description>HcDoneHead[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmInterval_Register</name>
          <description>HcFmInterval_Register</description>
          <addressOffset>0x434</addressOffset>
          <resetValue>0x2EDF</resetValue>
          <resetMask>0xFFFF3FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_INTERVAL_TOGGLER</name>
              <description>FrameIntervalToggler HCD toggles this bit whenever it loads a new value to FrameInterval.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FS_LARGEST_DATA_PACKET</name>
              <description>FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame. The counter value represents the largest amount of data in bits which can be sent or received by the HC in a single transaction at any given time without causing scheduling overrun. The field value is calculated by the HCD.</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INTERVAL</name>
              <description>FrameInterval This specifies the interval between two consecutive SOFs in bit times. The nominal value is set to be 11,999. HCD should store the current value of this field before resetting HC. By setting the HostControllerReset field of as this will cause the HC to reset this field to its nominal value. HCD may choose to restore the stored value upon the completion of the Reset sequence.</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmNumber</name>
          <description>HcFmNumber</description>
          <addressOffset>0x43C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FRAME_NUMBER</name>
              <description>FrameNumber This is incremented when is re-loaded. It will be rolled over to 0x0 after 0x0ffff. When entering the USBOPERATIONAL state, this will be incremented automatically. The content will be written to HCCA after HC has incremented the FrameNumber at each frame boundary and sent a SOF but before HC reads the first ED in that Frame. After writing to HCCA, HC will set the StartofFrame in</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmRemaining</name>
          <description>HcFmRemaining</description>
          <addressOffset>0x438</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_REMAINING</name>
              <description>FrameRemaining Toggle This bit is loaded from the FrameIntervalToggle field of whenever FrameRemaining reaches 0. This bit is used by HCD for the synchronization between FrameInterval and FrameRemaining.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FRAM_REMAINING</name>
              <description>FramRemaining This counter is decremented at each bit time. When it reaches zero, it is reset by loading the FrameInterval value specified in at the next bit time boundary. When entering the USBOPERATIONAL state, HC re-loads the content with the FrameInterval of and uses the updated value from the next SOF.</description>
              <bitRange>[13:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcHCCA</name>
          <description>HcHCCA</description>
          <addressOffset>0x418</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCCA_31_8</name>
              <description>HCCA[31:8] This is the base address of the Host Controller Communication Area. This area is used to hold the control structures and the Interrupt table that are accessed by both the Host Controller and the Host Controller Driver.</description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HCCA_7_0</name>
              <description>HCCA[7:0] The alignment restriction in HcHCCA register is evaluated by examining the number of zeros in the lower order bits. The minimum alignment is 256 bytes, therefore, bits 0 through 7 must always return 0 when read.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptDisable</name>
          <description>HcInterruptDisable</description>
          <addressOffset>0x414</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A written `0` to this field is ignored by HC. A `1` written to this field disables interrupt generation due events specified in the other bits of this register. This field is set after a hardware or software reset.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Disable 
0: Ignore 
1: Disable interrupt generation due to Root Hub Status Change</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupt generation due to Root Hub Status Change</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Disable 
0: Ignore 
1: Disable interrupt generation due to Frame Number Over Flow</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupt generation due to Frame Number Over Flow</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Disable 
0: Ignore 
1: Disable interrupt generation due to Unrecoverable Error</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupt generation due to Unrecoverable Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Disable 
0: Ignore 
1: Disable interrupt generation due to Resume Detected</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupt generation due to Resume Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Disable 
0: Ignore 
1: Disable interrupt generation due to Start of Flame</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupt generation due to Start of Flame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Disable 
0: Ignore 
1: Disable interrupt generation due to Write back Done Head</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupt generation due to Write back Done Head</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Disable 
0: Ignore 
1: Disable interrupt generation due to Scheduling Overrun</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupt generation due to Scheduling Overrun</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptEnable</name>
          <description>HcInterruptEnable</description>
          <addressOffset>0x410</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A `0` writtern to this field is ignored by HC. A `1` written to this field enables interrupt generation due to events specified in the other bits of this register. This is used by HCD as Master Interrupt Enable.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Enable 
0: Ignore 
1: Enable interrupt generation due to Root Hub Status Change</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt generation due to Root Hub Status Change</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Enable 
0: Ignore 
1: Enable interrupt generation due to Frame Number Over Flow</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt generation due to Frame Number Over Flow</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Enable 
0: Ignore 
1: Enable interrupt generation due to Unrecoverable Error</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt generation due to Unrecoverable Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Enable 
0: Ignore 
1: Enable interrupt generation due to Resume Detected</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt generation due to Resume Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Enable 
0: Ignore 
1: Enable interrupt generation due to Start of Flame</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt generation due to Start of Flame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Enable 
0: Ignore 
1: Enable interrupt generation due to Write back Done Head</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt generation due to Write back Done Head</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Enable 
0: Ignore 
1: Enable interrupt generation due to Scheduling Overrun</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupt generation due to Scheduling Overrun</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptStatus</name>
          <description>HcInterruptStatus</description>
          <addressOffset>0x40C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange This bit is set when the content of or the content of any of [NumberofDownstreamPort] has changed.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow This bit is set when the MSb of (bit 15) changes value, from 0 to 1 or from 1 to 0, and after has been updated.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError This bit is set when HC detects a system error not related to USB. HC should not proceed with any processing nor signaling before the system error has been corrected. HCD clears this bit after HC has been reset.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling. It is the transition from no resume signaling to resume signaling causing this bit to be set. This bit is not set when HCD sets the USBRseume state.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame This bit is set by HC at each start of frame and after the update of HccaFrameNumber. HC also generates a SOF token at the same time.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead This bit is set immediately after HC has written to . Further updates of the will not occur until this bit has been cleared. HCD should only clear this bit after it has saved the content of .</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of . A scheduling overrun will also cause the SchedulingOverrunCount of to be Incremented.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcLSThreshold</name>
          <description>HcLSThreshold</description>
          <addressOffset>0x444</addressOffset>
          <resetValue>0x628</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>LS_THRESHOLD</name>
              <description>LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction. The transaction is started only if FrameRemaining &gt;= this field. The value is calculated by HCD with the consideration of transmission and setup overhead.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodCurrentED</name>
          <description>HcPeriodCurrentED</description>
          <addressOffset>0x41C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PCED_31_4</name>
              <description>PCED[31:4] This is used by HC to point to the head of one of the Periodec list which will be processed in the current Frame. The content of this register is updated by HC after a periodic ED has been processed. HCD may read the content in determining which ED is currently being processed at the time of reading.</description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PCED_3_0</name>
              <description>PCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodicStatus</name>
          <description>HcPeriodicStatus</description>
          <addressOffset>0x440</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PERIODIC_START</name>
              <description>PeriodicStart After a hardware reset, this field is cleared. This is then set by HCD during the HC initialization. The value is calculated roughly as 10% off from .. A typical value will be 0x3e67. When reaches the value specified, processing of the periodic lists will have priority over Control/Bulk processing. HC will therefore start processing the Interrupt list after completing the current Control or Bulk transaction that is in progress.</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRevision</name>
          <description>HcRevision</description>
          <addressOffset>0x400</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>REVISION</name>
              <description>0x10 Revision This read-only field contains the BCD representation of the version of the HCI specification that is implemented by this HC. For example, a value of 0x11 corresponds to version 1.1. All of the HC implementations that are compliant with this specification will have a value of 0x10.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorA</name>
          <description>HcRhDescriptorA</description>
          <addressOffset>0x448</addressOffset>
          <resetValue>0x2001201</resetValue>
          <resetMask>0xFF001FFF</resetMask>
          <fields>
            <field>
              <name>POWERONTOPOWERGOODTIME</name>
              <description>PowerOnToPowerGoodTime[POTPGT] This byte specifies the duration HCD has to wait before accessing a powered-on port of the Root Hub. It is implementation-specific. The unit of time is 2 ms. The duration is calculated as POTPGT * 2ms.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_OVER_CURRENT_PROTECTION</name>
              <description>NoOverCurrentProtection This bit describes how the overcurrent status for the Root Hub ports are reported. When this bit is cleared, the OverCurrentProtectionMode field specifies global or per-port reporting. 
0: Over-current status is reported collectively for all downstream ports 
1: No overcurrent protection supported</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>overcurrent_status</name>
                  <description>Over-current status is reported collectively for all downstream ports</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_overcurrent</name>
                  <description>No overcurrent protection supported</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OVER_CURRENT_PROTECTION_MODE</name>
              <description>OverCurrentProtectionMode This bit describes how the overcurrent status for the Root Hub ports are reported. At reset, these fields should reflect the same mode as PowerSwitchingMode. This field is valid only if the NoOverCurrentProtection field is cleared. 
0: Over-current status is reported collectively for all downstream ports 
1: Over-current status is reported on per-port basis</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>reported_collectively</name>
                  <description>Over-current status is reported collectively for all downstream ports</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>reported_on</name>
                  <description>Over-current status is reported on per-port basis</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEVICE</name>
              <description>Device Type This bit specifies that the Root Hub is not a compound device. The Root Hub is not permitted to be a compound device. This field should always read/write 0.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_SWITCHING_MODE</name>
              <description>PowerSwitchingMode This bit is used to specify how the power switching of the Root Hub ports is controlled. It is implementation-specific. This field is only valid if the NoPowerSwitching field is cleared. 
0: All ports are powered at the same time 
1: Each port is powered individually. This mode allows port power to be controlled by either the global switch or per-port switching. If the PortPowerControlMask bit is set, the port responds only to port power commands (Set/ClearPortPower). If the port mask is cleared, then the port is controlled only by the global power switch (Set/ClearGlobalPower)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>All</name>
                  <description>All ports are powered at the same time</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Each</name>
                  <description>Each port is powered individually. This mode allows port power to be controlled by either the global switch or per-port switching. If the PortPowerControlMask bit is set, the port responds only to port power commands (Set/ClearPortPower). If the port mask is cleared, then the port is controlled only by the global power switch (Set/ClearGlobalPower)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NO_POWER_SWITHCING</name>
              <description>NoPowerSwithcing These bits are used to specify whether power switching is supported or ports are always powered. It is implementation-specific. When this bit is cleared, the PowerSwitchingMode specifies global or per-port switching. 
0: Ports are power switched 
1: Ports are always powered on when the HC is powered on</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ports_are_power</name>
                  <description>Ports are power switched</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Ports_are_always_powered</name>
                  <description>Ports are always powered on when the HC is powered on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NUMBER_DOWNSTREAM_PORTS</name>
              <description>NumberDownstreamPorts These bits specify the number of downstream ports supported by the Root Hub. It is implementation-specific. The minimum number of ports is 1. The maximum number of ports supported.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorB</name>
          <description>HcRhDescriptorB</description>
          <addressOffset>0x44C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_POWER_CONTROL_MASK</name>
              <description>PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set. When set, the port's power state is only affected by per-port power control ( Set/ClearPortPower ). When cleared, the port is controlled by the global power switch ( Set/ClearGlobalPower ). If the device is configured to global switching mode ( PowerSwitchingMode = 0 ), this field is not valid. Bit0: Reserved Bit1: Ganged-power mask on Port #1 Bit2: Ganged-power mask on Port #2 ... Bit15: Ganged-power mask on Port #15</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_REMOVABLE</name>
              <description>DeviceRemovable Each bit is dedicated to a port of the Root Hub. When cleared, the attached device is removable. When set, the attached device is not removable. Bit0: Reserved Bit1: Device attached to Port #1 Bit2: Device attached to Port #2 ... Bit15: Device attached to Port #15</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhPortStatus</name>
          <description>HcRhPortStatus</description>
          <addressOffset>0x454</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x1F031F</resetMask>
          <fields>
            <field>
              <name>PORT_RESET_STATUS_CHANGE</name>
              <description>PortResetStatusChange This bit is set at the end of the 10-ms port reset signal. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 
0: port reset is not complete 
1: port reset is complete</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_complete</name>
                  <description>port reset is not complete</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>complete</name>
                  <description>port reset is complete</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PORT_OVER_CURRENT_INDICATOR_CHANGE</name>
              <description>PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis. This bit is set when Root Hub changes the PortOverCurrentIndicator bit. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 
0: no change in PortOverCurrentIndicator 
1: PortOverCurrentIndicator has changed</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change in PortOverCurrentIndicator</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PortOverCurrentIndicator</name>
                  <description>PortOverCurrentIndicator has changed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PORT_SUSPEND_STATUS_CHANGE</name>
              <description>PortSuspendStatusChange This bit is set when the full resume sequence has been completed. This sequence includes the 20-s resume pulse, LS EOP, and 3-ms resychronization delay. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. This bit is also cleared when ResetStatusChange is set. 
0: resume is not completed 
1: resume completed</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_completed</name>
                  <description>resume is not completed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>resume_completed</name>
                  <description>resume completed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PORT_ENABLE_STATUS_CHANGE</name>
              <description>PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be cleared. Changes from HCD writes do not set this bit. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 
0x0: no change in PortEnableStatus 
0x1: change in PortEnableStatus</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change in PortEnableStatus</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change in PortEnableStatus</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CONNECT_STATUS_CHANGE</name>
              <description>ConnectStatusChange This bit is set whenever a connect or disconnect event occurs. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared when a SetPortReset,SetPortEnable , or SetPortSuspend write occurs, this bit is set to force the driver to re-evaluate the connection status since these writes should not occur if the port is disconnected. 
0: no change in PortEnableStatus 
1: change in PortEnableStatus  Note: If the DeviceRemovable[NDP] bit is set, this bit is set only after a Root Hub reset to inform the system that the device is attached.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change in PortEnableStatus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change in PortEnableStatus  Note: If the DeviceRemovable[NDP] bit is set, this bit is set only after a Root Hub reset to inform the system that the device is attached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_LOW_SPEED_DEVICE_ATTACHED_W_CLEAR_PORT_POWER</name>
              <description>(read)LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port. When set, a Low Speed device is attached to this port. When clear, a Full Speed device is attached to this port. This field is valid only when the CurrentConnectStatus is set. 
0: full speed device attached 
1: low speed device attached (write)ClearPortPower The HCD clears the PortPowerStatus bit by writing a `1` to this bit. Writing a `0` has no effect.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>full speed device attached</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>low</name>
                  <description>low speed device attached (write)ClearPortPower The HCD clears the PortPowerStatus bit by writing a `1` to this bit. Writing a `0` has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_PORT_POWER_STATUS_W_SET_PORT_POWER</name>
              <description>(read)PortPowerStatus This bit reflects the port`s power status, regardless of the type of power switching implemented. This bit is cleared if an overcurrent condition is detected. HCD sets this bit by writing SetPortPower or SetGlobalPower . HCD clears this bit by writing ClearPortPower or ClearGlobalPower . Which power control switches are enabled is determined by PowerSwitchingMode and PortPortControlMask[ NumberDownstreamPort ] . In global switching mode( PowerSwitchingMode =0), only Set/ClearGlobalPower controls this bit. In per-port power switching ( PowerSwitchingMode =1), if the PortPowerControlMask[NDP] bit for the port is set, only Set/ClearPortPower commands are enabled. If the mask is not set, only Set/ClearGlobalPower commands are enabled. When port power is disabled, CurrentConnectStatus , PortEnableStatus , PortSuspendStatus , and PortResetStatus should be reset. 
0: port power is off 
1: port power is on (write)SetPortPower The HCD writes a `1` to set the PortPowerStatus bit. Writing a `0` has no effect. Note: This bit is always reads `1b` if power switching is not supported.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>off</name>
                  <description>port power is off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>on</name>
                  <description>port power is on (write)SetPortPower The HCD writes a `1` to set the PortPowerStatus bit. Writing a `0` has no effect. Note: This bit is always reads `1b` if power switching is not supported.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_PORT_RESET_STATUS_W_SET_PORT_RESET</name>
              <description>(read)PortResetStatus When this bit is set by a write to SetPortReset , port reset signaling is asserted. When reset is completed, this bit is cleared when PortResetStatusChange is set. This bit cannot be set if CurrentConnectStatus is cleared. 
0: port reset signal is not active 
1: port reset signal is active (write)SetPortReset The HCD sets the port reset signaling by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortResetStatus , but instead sets ConnectStatusChange . This informs the driver that it attempted to reset a disconnected port.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_active</name>
                  <description>port reset signal is not active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active</name>
                  <description>port reset signal is active (write)SetPortReset The HCD sets the port reset signaling by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortResetStatus , but instead sets ConnectStatusChange . This informs the driver that it attempted to reset a disconnected port.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_PORT_OVER_CURRENT_INDICATOR_W_CLEAR_SUSPEND_STATUS</name>
              <description>(read)PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis. If per-port overcurrent reporting is not supported, this bit is set to 0. If cleared, all power operations are normal for this port. If set, an overcurrent condition exists on this port. This bit always reflects the overcurrent input signal. 
0: no overcurrent condition 
1: overcurrent condition detected (write)ClearSuspendStatus The HCD writes a `1` to initiate a resume. Writing a `0` has no effect. A resume is initiated only if PortSuspendStatus is set.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overcurrent</name>
                  <description>no overcurrent condition</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overcurrent</name>
                  <description>overcurrent condition detected (write)ClearSuspendStatus The HCD writes a `1` to initiate a resume. Writing a `0` has no effect. A resume is initiated only if PortSuspendStatus is set.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_PORT_SUSPEND_STATUS_W_SET_PORT_SUSPEND</name>
              <description>(read)PortSuspendStatus This bit indicates the port is suspended or in the resume sequence. It is set by a SetSuspendState write and cleared when PortSuspendStatusChange is set at the end of the resume interval. This bit cannot be set if CurrentConnectStatus is cleared. This bit is also cleared when PortResetStatusChange is set at the end of the port reset or when the HC is placed in the USBRESUME state. If an upstream resume is in progress, it should propagate to the HC. 
0: port is not suspended 
1: port is suspended (write)SetPortSuspend The HCD sets the PortSuspendStatus bit by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortSuspendStatus ; instead it sets ConnectStatusChange . This informs the driver that it attempted to suspend a disconnected port.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_suspended</name>
                  <description>port is not suspended</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>suspended</name>
                  <description>port is suspended (write)SetPortSuspend The HCD sets the PortSuspendStatus bit by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortSuspendStatus ; instead it sets ConnectStatusChange . This informs the driver that it attempted to suspend a disconnected port.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_PORT_ENABLE_STATUS_W_SET_PORT_ENABLE</name>
              <description>(read)PortEnableStatus This bit indicates whether the port is enabled or disabled. The Root Hub may clear this bit when an overcurrent condition, disconnect event, switched-off power, or operational bus error such as babble is detected. This change also causes PortEnabledStatusChange to be set. HCD sets this bit by writing SetPortEnable and clears it by writing ClearPortEnable . This bit cannot be set when CurrentConnectStatus is cleared. This bit is also set, if not already, at the completion of a port reset when ResetStatusChange is set or port suspend when SuspendStatusChange is set. 
0: port is disabled 
1: port is enabled (write)SetPortEnable The HCD sets PortEnableStatus by writing a `1`. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortEnableStatus , but instead sets ConnectStatusChange . This informs the driver that it attempted to enable a disconnected Port.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>port is disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>port is enabled (write)SetPortEnable The HCD sets PortEnableStatus by writing a `1`. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortEnableStatus , but instead sets ConnectStatusChange . This informs the driver that it attempted to enable a disconnected Port.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_CURRENT_CONNECT_STATUS_W_CLEAR_PORT_ENABLE</name>
              <description>(read)CurrentConnectStatus This bit reflects the current state of the downstream port. 
0: No device connected 
1: Device connected (write)ClearPortEnable The HCD writes a `1` to clear the PortEnableStatus bit. Writing `0` has no effect. The CurrentConnectStatus is not affected by any write. Note: This bit is always read `1` when the attached device is nonremovalble(DviceRemoveable[NumberDownstreamPor t ]).</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_device</name>
                  <description>No device connected</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Device</name>
                  <description>Device connected (write)ClearPortEnable The HCD writes a `1` to clear the PortEnableStatus bit. Writing `0` has no effect. The CurrentConnectStatus is not affected by any write. Note: This bit is always read `1` when the attached device is nonremovalble(DviceRemoveable[NumberDownstreamPor t ]).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhStatus_Register</name>
          <description>HcRhStatus_Register</description>
          <addressOffset>0x450</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80038003</resetMask>
          <fields>
            <field>
              <name>WRITING_A_CLEARS</name>
              <description>(write)ClearRemoteWakeupEnable Writing a `1` clears DeviceRemoteWakeupEnable. Writing a `0` has no effect.</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVERCURRENTINDICATORCHANG_THIS_BIT_IS_SET</name>
              <description>OverCurrentIndicatorChang This bit is set by hardware when a change has occurred to the OverCurrentIndicator field of this register. The HCD clears this bit by writing a `1`.Writing a `0` has no effect.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STARTUS_CHANGE_W_SET_GLOBAL_POWER</name>
              <description>(read)LocalPowerStartusChange The Root Hub does not support the local power status features, thus, this bit is always read as `0`. (write)SetGlobalPower In global power mode ( PowerSwitchingMode =0), This bit is written to `1` to turn on power to all ports (clear PortPowerStatus ). In per-port power mode, it sets PortPowerStatus only on ports whose PortPowerControlMask bit is not set. Writing a `0` has no effect.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_DEVICE_REMOTE_WAKEUP_ENABLE_W_SET_REMOTE_WAKEUP_ENABLE</name>
              <description>(read)DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt. 
0x0: ConnectStatusChange is not a remote wakeup event 
0x1: ConnectStatusChange is a remote wakeup even (write)SetRemoteWakeupEnable Writing a `1` sets DeviceRemoveWakeupEnable. Writing a `0` has no effect.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_a_remote</name>
                  <description>ConnectStatusChange is not a remote wakeup event</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>a_remote</name>
                  <description>ConnectStatusChange is a remote wakeup even (write)SetRemoteWakeupEnable Writing a `1` sets DeviceRemoveWakeupEnable. Writing a `0` has no effect.</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OVERCURRENTINDICATOR_THIS_BIT_REPORTS_OVERCURRENT</name>
              <description>OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented. When set, an overcurrent condition exists. When cleared, all power operations are normal. If per-port overcurrent protection is implemented this bit is always `0`</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STATUS_W_CLEAR_GLOBAL_POWER</name>
              <description>(Read)LocalPowerStatus When read, this bit returns the LocalPowerStatus of the Root Hub. The Root Hub does not support the local power status feature; thus, this bit is always read as `0`. (Write)ClearGlobalPower When write, this bit is operated as the ClearGlobalPower. In global power mode ( PowerSwitchingMode =0), This bit is written to `1` to turn off power to all ports (clear PortPowerStatus ). In per-port power mode, it clears PortPowerStatus only on ports whose PortPowerControlMask bit is not set. Writing a `0` has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIODICLISTBASE</name>
          <description>PERIODICLISTBASE</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF000</resetMask>
          <fields>
            <field>
              <name>BADDR</name>
              <description>Base Address These bits correspond to memory address signals [31:12], respectively. This register contains the beginning address of the Periodic Frame List in the system memory. System software loads this register prior to starting the schedule execution by the Host Controller. The memory structure referenced by this physical memory pointer is assumed to be 4-K byte aligned. The contents of this register are combined with the Frame Index Register (FRINDEX) to enable the Host Controller to step through the Periodic Frame List in sequence.</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PORTSC</name>
          <description>PORTSC</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0x3F2DFF</resetMask>
          <fields>
            <field>
              <name>WDE</name>
              <description>WKDSCNNT_E Writing this bit to a one enables the port to be sensitive to device disconnects as wake-up events. This field is zero if Port Power is zero. The default value in this field is `0`.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WCE</name>
              <description>WKCNNT_E Writing this bit to a one enable the port to be sensitive to device connects as wake-up events. This field is zero if Port Power is zero. The default value in this field is `0`.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT</name>
              <description>Port Test Control The value in this field specifies the test mode of the port. The encoding of the test mode bits are as follow: 
0x00: The port is NOT operating in a test mode. 
0x01: Test J_STATE 
0x02: Test K_STATE 
0x03: Test SE0_NAK 
0x04: Test Packet 
0x05: Test FORCE_ENABLE Others: Reserved The default value in this field is `0000b`.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>is_NOT_operating</name>
                  <description>The port is NOT operating in a test mode.</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test_J_STATE</name>
                  <description>Test J_STATE</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test_K_STATE</name>
                  <description>Test K_STATE</description>
                  <value>0x02</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test_SE0_NAK</name>
                  <description>Test SE0_NAK</description>
                  <value>0x03</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test_Packet</name>
                  <description>Test Packet</description>
                  <value>0x04</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test_FORCE_ENABLE</name>
                  <description>Test FORCE_ENABLE Others: Reserved The default value in this field is `0000b`.</description>
                  <value>0x05</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PO</name>
              <description>Port Owner This bit unconditionally goes to a 0b when the Configured bit in the CONFIGFLAG register makes a 0b to 1b transition. This bit unconditionally goes to 1b whenever the Configured bit is zero. System software uses this field to release ownership of the port to selected host controller (in the event that the attached device is not a high-speed device).Software writes a one to this bit when the attached device is not a high-speed device. A one in this bit means that a companion host controller owns and controls the port. Default Value = 1b.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS</name>
              <description>Line Status These bits reflect the current logical levels of the D+ (bit11) and D-(bit10) signal lines. These bits are used for detection of low-speed USB devices prior to port reset and enable sequence. This read only field is valid only when the port enable bit is zero and the current connect status bit is set to a one. The encoding of the bits are: 
00: SE0, Not Low-speed device, perform EHCI reset 
01: K-state, Low-speed device, release ownership of port 
10: J-state, Not Low-speed device, perform EHCI reset 
11: Undefined, Not Low-speed device, perform EHCI reset. This value of this field is undefined if Port Power is zero.</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SE0</name>
                  <description>SE0, Not Low-speed device, perform EHCI reset</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>k_state</name>
                  <description>K-state, Low-speed device, release ownership of port</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>j_state</name>
                  <description>J-state, Not Low-speed device, perform EHCI reset</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Undefined</name>
                  <description>Undefined, Not Low-speed device, perform EHCI reset. This value of this field is undefined if Port Power is zero.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PR</name>
              <description>Port Reset 1=Port is in Reset. 0=Port is not in Reset. Default value = 0. When software writes a one to this bit (from a zero), the bus reset sequence as defined in the USB Specification Revision 2.0 is started. Software writes a zero to this bit to terminate the bus reset sequence. Software must keep this bit at a one long enough to ensure the reset sequence, as specified in the USB Specification Revision 2.0, completes. Notes: when software writes this bit to a one , it must also write a zero to the Port Enable bit. Note that when software writes a zero to this bit there may be a delay before the bit status changes to a zero. The bit status will not read as a zero until after the reset has completed. If the port is in high-speed mode after reset is complete, the host controller will automatically enable this port (e.g. set the Port Enable bit to a one). A host controller must terminate the reset and stabilize the state of the port within 2 milliseconds of software transitioning this bit from a one to a zero. For example: if the port detects that the attached device is high-speed during reset, then the host controller must have the port in the enabled state with 2ms of software writing this bit to a zero. The HC Halted bit in the USBSTS register should be a zero before software attempts to use this bit. The host controller may hold Port Reset asserted to a one when the HC Halted bit is a one. This field is zero if Port Power is zero.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUSPEND</name>
              <description>Suspend Port Enabled Bit and Suspend bit of this register define the port states as follows: 
00: Disable 
01: Disable 
10: Enable 
11: Suspend When in suspend state, downstream propagation of data is blocked on this port, except for port reset. The blocking occurs at the end of the current transaction, if a transaction was in progress when this bit was written to 1. In the suspend state, the port is sensitive to resume detection. Not that the bit status does not change until the port is suspend and that there may be a delay in suspending a port if there is a transaction currently in progress on the USB. A write of zero to this bit is ignored by the host controller. The host controller will unconditionally set this bit to a zero when: 1) Software sets the Force Port Resume bit to a zero(from a one). 2) Software sets the Port Reset bit to a one(from a zero). If host software sets this bit to a one when the port is not enabled(i.e. Port enabled bit is a zero), the results are undefined. This field is zero if Port Power is zero. The default value in this field is `0`.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FPR</name>
              <description>Force Port Resume 
1: Resume detected/driven on port. 
0: No resume (K-state) detected/ driven on port. This functionality defined for manipulating this bit depends on the value of the Suspend bit. For example, if the port is not suspended and software transitions this bit to a one, then the effects on the bus are undefined. Software sets this bit to a 1 drive resume signaling. The Host Controller sets this bit to a 1 if a J-to-K transition is detected while the port is in the Suspend state. When this bit transitions to a one because a J-to-K transition is detected, the Port Change Detect bit in the USBSTS register is also set to a one. If software sets this bit to a one, the host controller must not set the Port Change Detect bit. Note that when the EHCI controller owns the port, the resume sequence follows the defined sequence documented in the USB Specification Revision 2.0. The resume signaling (Full-speed `K`) is driven on the port as long as this remains a one. Software must appropriately time the Resume and set this bit to a zero when the appropriate amount of time has elapsed. Writing a zero (from one) causes the port to return high-speed mode (forcing the bus below the port into a high-speed idle). This bit will remain a one until the port has switched to high-speed idle. The host controller must complete this transition within 2 milliseconds of software setting this bit to a zero. This field is zero if Port Power is zero.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Resume</name>
                  <description>Resume detected/driven on port.</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_resume</name>
                  <description>No resume (K-state) detected/ driven on port. This functionality defined for manipulating this bit depends on the value of the Suspend bit. For example, if the port is not suspended and software transitions this bit to a one, then the effects on the bus are undefined. Software sets this bit to a 1 drive resume signaling. The Host Controller sets this bit to a 1 if a J-to-K transition is detected while the port is in the Suspend state. When this bit transitions to a one because a J-to-K transition is detected, the Port Change Detect bit in the USBSTS register is also set to a one. If software sets this bit to a one, the host controller must not set the Port Change Detect bit. Note that when the EHCI controller owns the port, the resume sequence follows the defined sequence documented in the USB Specification Revision 2.0. The resume signaling (Full-speed `K`) is driven on the port as long as this remains a one. Software must appropriately time the Resume and set this bit to a zero when the appropriate amount of time has elapsed. Writing a zero (from one) causes the port to return high-speed mode (forcing the bus below the port into a high-speed idle). This bit will remain a one until the port has switched to high-speed idle. The host controller must complete this transition within 2 milliseconds of software setting this bit to a zero. This field is zero if Port Power is zero.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OCC</name>
              <description>Over-current Change This bit gets set to a one when there is a change to Over-current Active. Software clears this bit by writing a one to this bit position.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>OCA</name>
              <description>Over-current Active 
0: This port does not have an over-current condition. 
1: This port currently has an over-current condition. This bit will automatically transition from a one to a zero when the over current condition is removed. The default value of this bit is `0`.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>This_port_does</name>
                  <description>This port does not have an over-current condition.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_port_currently</name>
                  <description>This port currently has an over-current condition. This bit will automatically transition from a one to a zero when the over current condition is removed. The default value of this bit is `0`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEDC</name>
              <description>Port Enable/Disable Change 
1: Port enabled/disabled status has changed. 
0: No change. For the root hub, this bit gets set to a one only when a port is disabled due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of the USB Specification for the definition of a Port Error). Software clears this bit by writing a 1 to it. This field is zero if Port Power is zero.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Port</name>
                  <description>Port enabled/disabled status has changed.</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change. For the root hub, this bit gets set to a one only when a port is disabled due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of the USB Specification for the definition of a Port Error). Software clears this bit by writing a 1 to it. This field is zero if Port Power is zero.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PED</name>
              <description>Port Enabled/Disabled 
1: Enable 
0: Disable Ports can only be enabled by the host controller as a part of the reset and enable. Software cannot enable a port by writing a one to this field. The host controller will only set this bit to a one when the reset sequence determines that the attached device is a high-speed device. Ports can be disabled by either a fault condition(disconnect event or other fault condition) or by host software. Note that the bit status does not change until the port state actually changes. There may be a delay in disabling or enabling a port due to other host controller and bus events. When the port is disabled, downstream propagation of data is blocked on this port except for reset. The default value of this field is `0`. This field is zero if Port Power is zero.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Ports can only be enabled by the host controller as a part of the reset and enable. Software cannot enable a port by writing a one to this field. The host controller will only set this bit to a one when the reset sequence determines that the attached device is a high-speed device. Ports can be disabled by either a fault condition(disconnect event or other fault condition) or by host software. Note that the bit status does not change until the port state actually changes. There may be a delay in disabling or enabling a port due to other host controller and bus events. When the port is disabled, downstream propagation of data is blocked on this port except for reset. The default value of this field is `0`. This field is zero if Port Power is zero.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSC</name>
              <description>Connect Status Change 
1: Change in Current Connect Status 
0: No change Indicates a change has occurred in the port`s Current Connect Status. The host controller sets this bit for all changes to the port device connect status, even if system software has not cleared an existing connect status change. For example, the insertion status changes twice before system software has cleared the changed condition, hub hardware will be `setting` an already-set bit. Software sets this bit to 0 by writing a 1 to it. This field is zero if Port Power is zero.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Change</name>
                  <description>Change in Current Connect Status</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change Indicates a change has occurred in the port`s Current Connect Status. The host controller sets this bit for all changes to the port device connect status, even if system software has not cleared an existing connect status change. For example, the insertion status changes twice before system software has cleared the changed condition, hub hardware will be `setting` an already-set bit. Software sets this bit to 0 by writing a 1 to it. This field is zero if Port Power is zero.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCS</name>
              <description>Current Connect Status Device is present on port when the value of this field is a one, and no device is present on port when the value of this field is a zero. This value reflects the current state of the port, and may not correspond directly to the event that caused the bit to be set. This field is zero if Port Power zero.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBCMD</name>
          <description>USBCMD</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x80B00</resetValue>
          <resetMask>0xFF0BFF</resetMask>
          <fields>
            <field>
              <name>INTERRUPT_THRESHOLD_CONTROL_THE_VALUE</name>
              <description>Interrupt Threshold Control The value in this field is used by system software to select the maximum rate at which the host controller will issue interrupts. The only valid values are defined below: 
0x00: Reserved 
0x01: 1 micro-frame 
0x02: 2 micro-frame 
0x04: 4 micro-frame 
0x08: 8 micro-frame(default, equates to 1 ms) 
0x10: 16 micro-frame(2ms) 
0x20: 32 micro-frame(4ms) 
0x40: 64 micro-frame(8ms) Any other value in this register yields undefined results. The default value in this field is 0x08 . Software modifications to this bit while HC Halted bit is equal to zero results in undefined behavior.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 micro-frame</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 micro-frame</description>
                  <value>0x02</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 micro-frame</description>
                  <value>0x04</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 micro-frame(default, equates to 1 ms)</description>
                  <value>0x08</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 micro-frame(2ms)</description>
                  <value>0x10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32 micro-frame(4ms)</description>
                  <value>0x20</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 micro-frame(8ms) Any other value in this register yields undefined results. The default value in this field is 0x08 . Software modifications to this bit while HC Halted bit is equal to zero results in undefined behavior.</description>
                  <value>0x40</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_ENABLE</name>
              <description>Asynchronous Schedule Park Mode Enable If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this bit defaults to a 1 and is R/W. Otherwise the bit must be a zero and is Read Only. Software uses this bit to enable or disable Park mode. When this bit is one, Park mode is enabled. When this bit is zero, Park mode is disabled.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_COUNT</name>
              <description>Asynchronous Schedule Park Mode Count Asynchronous Park Capability bit in the HCCPARAMS register is a one, Then this field defaults to 0x3 and is W/R. Otherwise it defaults to zero and is R. It contains a count of the number of successive transactions the host controller is allowed to execute from a high-speed queue head on the Asynchronous schedule before continuing traversal of the Asynchronous schedule. Valid value are 0x1 to 0x3.Software must not write a zero to this bit when Park Mode Enable is a one as it will result in undefined behavior.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LIGHT_HOST_CONTROLLER_RESET_THIS</name>
              <description>Light Host Controller Reset This control bit is not required. If implemented, it allows the driver to reset the EHCI controller without affecting the state of the ports or relationship to the companion host controllers. For example, the PORSTC registers should not be reset to their default values and the CF bit setting should not go to zero (retaining port ownership relationships). A host software read of this bit as zero indicates the Light Host Controller Reset has completed and it si safe for software to re-initialize the host controller. A host software read of this bit as a one indicates the Light Host</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_DOORBELL</name>
              <description>Interrupt on Async Advance Doorbell This bit is used as a doorbell by software to tell the host controller to issue an interrupt the next time it advances asynchronous schedule. Software must write a 1 to this bit to ring the doorbell. When the host controller has evicted all appropriate cached schedule state, it sets the Interrupt on Async Advance status bit in the USBSTS. if the Interrupt on Async Advance Enable bit in the USBINTR register is a one then the host controller will assert an interrupt at the next interrupt threshold. The host controller sets this bit to a zero after it has set the Interrupt on Async Advance status bit in the USBSTS register to a one. Software should not write a one to this bit when the asynchronous schedule is disabled. Doing so will yield undefined results.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Asynchronous Schedule Enable This bit controls whether the host controller skips processing the Asynchronous Schedule. Values mean: 
0x00: Do not process the Asynchronous Schedule. 
0x01: Use the ASYNLISTADDR register to access the Asynchronous schedule. The default value of this field is `0b`.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_process</name>
                  <description>Do not process the Asynchronous Schedule.</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Use_the_ASYNLISTADDR</name>
                  <description>Use the ASYNLISTADDR register to access the Asynchronous schedule. The default value of this field is `0b`.</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PERIODIC_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Periodic Schedule Enable This bit controls whether the host controller skips processing the Periodic Schedule. Values mean: 
0x00: Do not process the Periodic Schedule. 
0x01: Use the PERIODICLISTBASE register to access the Periodic Schedule. The default value of this field is `0b`.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_process</name>
                  <description>Do not process the Periodic Schedule.</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Use_the_PERIODICLISTBASE</name>
                  <description>Use the PERIODICLISTBASE register to access the Periodic Schedule. The default value of this field is `0b`.</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAME_LIST_SIZE_THIS_FIELD</name>
              <description>Frame List Size This field is R/W only if Programmable Frame List Flag in the HCCPARAMS registers is set to a one. This field specifies the size of the Frame list. The size the frame list controls which bits in the Frame Index Register should be used for the Frame List Current index. Values mean: 
0x00: 1024 elements(4096bytes)Default value 
0x01: 512 elements(2048byts) 
0x02: 256 elements(1024bytes)For resource-constrained condition 
0x03: Reserved The default value is `00b`.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1024</name>
                  <description>1024 elements(4096bytes)Default value</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512 elements(2048byts)</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 elements(1024bytes)For resource-constrained condition</description>
                  <value>0x02</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved The default value is `00b`.</description>
                  <value>0x03</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET_THIS_CONTROL</name>
              <description>Host Controller Reset This control bit is used by software to reset the host controller. The effects of this on Root Hub registers are similar to a Chip Hardware Reset. When software writes a one to this bit, the Host Controller resets its internal pipelines, timers, counters, state machines, etc. to their initial value. Any transaction currently in progress on USB is immediately terminated. A USB reset is not driven on downstream ports. All operational registers, including port registers and port state machines are set to their initial values. Port ownership reverts to the companion host controller(s). Software must reinitialize the host controller as described in Section 4.1 of the CHEI Specification in order to return the host controller to an operational state. This bit is set to zero by the Host Controller when the reset process is complete. Software cannot terminate the reset process early by writing a zero to this register. Software should not set this bit to a one when the HC Halted bit in the USBSTS register is a zero. Attempting to reset an actively running host controller will result in undefined behavior.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RUN/STOP_WHEN_SET</name>
              <description>Run/Stop When set to a 1, the Host Controller proceeds with execution of the schedule. When set to 0, the Host Controller completes the current and any actively pipelined transactions on the USB and then halts. The Host Controller must halt within 16 micro-frames after software clears this bit. The HC Halted bit indicates when the Host Controller has finished its pending pipelined transactions and has entered the stopped state. Software must not write a one to this field unless the Host Controller is in the Halt State. The default value is 0x0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBINTR</name>
          <description>USBINTR</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>IAAE</name>
              <description>Interrupt on Async Advance Enable When this bit is 1, and the Interrupt on Async Advance bit in the USBSTS register is 1, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the Interrupt on Async Advance bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSEE</name>
              <description>Host System Error Enable When this bit is 1, and the Host System Error Status bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Host System Error bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLRE</name>
              <description>Frame List Rollover Enable When this bit is 1, and the Frame List Rollover bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Frame List Rollover bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PCIE</name>
              <description>Port Change Interrupt Enable When this bit is 1, and the Port Chang Detect bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Port Chang Detect bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EIE</name>
              <description>USB Error Interrupt Enable When this bit is 1, and the USBERRINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBERRINT bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UIE</name>
              <description>USB Interrupt Enable When this bit is 1, and the USBINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBINT bit.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBSTS</name>
          <description>USBSTS</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0xF03F</resetMask>
          <fields>
            <field>
              <name>ASS</name>
              <description>Asynchronous Schedule Status The bit reports the current real status of Asynchronous Schedule. If this bit is a zero then the status of the Asynchronous Schedule is disabled. If this bit is a one then the status of the Asynchronous Schedule is enabled. The Host Controller is not required to immediately disable or enable the Asynchronous Schedule when software transitions the Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is either enabled (1) or disabled (0).</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PSS</name>
              <description>Periodic Schedule Status The bit reports the current real status of the Periodic Schedule. If this bit is a zero then the status of the Periodic Schedule is disabled. If this bit is a one then the status of the Periodic Schedule is enabled. The Host Controller is not required to disable or enable the Periodic Schedule when software transitions the bit in the USBCMD register. When this bit and the bit are the same value, the Periodic Schedule is either enabled (1) or disabled (0).</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RECL</name>
              <description>Reclamation This is a read-only status bit, which is used to detect an empty asynchronous schedule.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HCH</name>
              <description>HC Halted This bit is a zero whenever the Run/Stop bit is a one. The Host Controller Sets this bit to one after it has stopped executing as a result of the Run/Stop bit being set to 0, either by software or by the Host Controller Hardware (e.g. internal error). The default value is `1`.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IAA</name>
              <description>Interrupt on Async Advance System software can force the host controller to issue an interrupt the next time the host controller advances the asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit in the USBCMD register. This status bit indicates the assertion of that interrupt source.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>HSE</name>
              <description>Host System Error The Host Controller set this bit to 1 when a serious error occurs during a host system access involving the Host Controller module. When this error occurs, the Host Controller clears the Run/Stop bit in the Command register to prevent further execution of the scheduled TDs.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>FLR</name>
              <description>Frame List Rollover The Host Controller sets this bit to a one when the Frame List Index rolls over from its maximum value to zero. The exact value at which the rollover occurs depends on the frame list size. For example, if the frame list size is 1024, the Frame Index Register rolls over every time FRINDEX [13] toggles. Similarly, if the size is 512, the Host Controller sets this bit to a one every time FRINDEX [12] toggles.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>PCD</name>
              <description>Port Change Detect The Host Controller sets this bit to a one when any port for which the Port Owner bit is set to zero has a change bit transition from a zero to a one or a Force Port Resume bit transition from a zero to a one as a result of a J-K transition detected on a suspended port. This bit will also be set as a result of the Connect Status Chang being set to a one after system software has relinquished ownership of a connected port by writing a one to a port`s Port Owner bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>ERRINT</name>
              <description>USB Error Interrupt The Host Controller sets this bit to 1 when completion of USB transaction results in an error condition(e.g. error counter underflow).If the TD on which the error interrupt occurred also had its IOC bit set, both. This bit and USBINT bit are set.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>USBINT</name>
              <description>USB Interrupt The Host Controller sets this bit to a one on the completion of a USB transaction, which results in the retirement of a Transfer Descriptor that had its IOC bit set. The Host Controller also sets this bit to 1 when a short packet is detected (actual number of bytes received was less than the expected number of bytes)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_CTRL</name>
          <description>USB_CTRL</description>
          <addressOffset>0x800</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0x13101F01</resetMask>
          <fields>
            <field>
              <name>DMA_TRANSFER_STATUS_ENABLE</name>
              <description>DMA Transfer Status Enable 
0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OHCI_COUNT_SELECT</name>
              <description>OHCI count select 
0: Normal mode, the counters will count full time 
1: Simulation mode, the counters will be much shorter then real time</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal mode, the counters will count full time</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Simulation</name>
                  <description>Simulation mode, the counters will be much shorter then real time</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIMULATION_MODE</name>
              <description>Simulation mode 
0: No effect 
1: Set PHY in a non-driving mode so the EHCI can detect device connection, this is used only for simulation.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Set</name>
                  <description>Set PHY in a non-driving mode so the EHCI can detect device connection, this is used only for simulation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EHCI_HS_FORCE_SET</name>
              <description>EHCI HS force Set 1 to this field force the ehci enter the high speed mode during bus reset. This field only valid when the bit 1 is set.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PP2VBUS</name>
              <description>PP2VBUS 
0: ULPI wrapper will ignore the difference between power status of root hub and ULPI PHY 
1: ULPI wrapper interface will automatically set or clear DrvVbus register in ULPI PHY according to the port power status form the root hub</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ULPI_wrapper_will_ignore</name>
                  <description>ULPI wrapper will ignore the difference between power status of root hub and ULPI PHY</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ULPI_wrapper_interface</name>
                  <description>ULPI wrapper interface will automatically set or clear DrvVbus register in ULPI PHY according to the port power status form the root hub</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR16_ENABLE</name>
              <description>AHB Master interface INCR16 enable 
0: Do not use INCR16,use other enabled INCRX or unspecified length burst INCR 
1: Use INCR16 when appropriate</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_use_INCR16_comma_use</name>
                  <description>Do not use INCR16,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Use_INCR16</name>
                  <description>Use INCR16 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR8_ENABLE</name>
              <description>AHB Master interface INCR8 enable 
0: Do not use INCR8,use other enabled INCRX or unspecified length burst INCR 
1: Use INCR8 when appropriate</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_use_INCR8_comma_use</name>
                  <description>Do not use INCR8,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Use_INCR8</name>
                  <description>Use INCR8 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_BURST_TYPE</name>
              <description>AHB Master interface burst type INCR4 enable 
0: Do not use INCR4,use other enabled INCRX or unspecified length burst INCR 
1: Use INCR4 when appropriate</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_use_INCR4_comma_use</name>
                  <description>Do not use INCR4,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Use_INCR4</name>
                  <description>Use INCR4 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCRX_ALIGN</name>
              <description>AHB Master interface INCRX align enable 
0: Start burst on any double word boundary 
1: start INCRx burst only on burst x-align address Note: This bit must enable if any bit of bit[11:9] is enabled</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Start_burst</name>
                  <description>Start burst on any double word boundary</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>start_INCRx</name>
                  <description>start INCRx burst only on burst x-align address Note: This bit must enable if any bit of bit[11:9] is enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ULPI_BYPASS_ENABLE</name>
              <description>ULPI Bypass Enable 
0: Enable ULPI interface, disable UTMI interface 
1: Enable UTMI interface, disable ULPI interface</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable_ULPI</name>
                  <description>Enable ULPI interface, disable UTMI interface</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable_UTMI</name>
                  <description>Enable UTMI interface, disable ULPI interface</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="USB1_HOST">
      <name>USB2_HOST</name>
      <description>USB2_HOST</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1C000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>Timer</name>
      <description>Timer</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AVS_CNT0_REG</name>
          <description>0x0084  AVS Counter 0 Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT0</name>
              <description>Counter 0 for Audio/ Video Sync Application The high 32 bits of the internal 33-bits counter register. The initial value of the internal 33-bits counter register can be set by software. The LSB bit of the 33-bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting to `1`. When it is paused, the counter won`t increase.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT1_REG</name>
          <description>0x0088  AVS Counter 1 Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1</name>
              <description>Counter 1 for Audio/ Video Sync Application The high 32 bits of the internal 33-bits counter register. The initial value of the internal 33-bits counter register can be set by software. The LSB bit of the 33-bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting to `1`. When it is paused, the counter will not increase.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_CTL_REG</name>
          <description>0x0080  AVS Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x303</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_PS</name>
              <description>Audio/Video Sync Counter 1 Pause Control 
0: Not pause 
1: Pause Counter 1</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_PS</name>
              <description>Audio/Video Sync Counter 0 Pause Control 
0: Not pause 
1: Pause Counter 0</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT1_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/Disable. The counter source is OSC24M. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/Disable. The counter source is OSC24M. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_DIV_REG</name>
          <description>0x008C  AVS Divisor Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x5DB05DB</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_D</name>
              <description>Divisor N for AVS Counter1 AVS CN1 CLK=24MHz/Divisor_N1. Divisor N1 = Bit[27:16] + 1. The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33-bits counter engine will maintain another 12-bits counter. The 12-bits counter is used for counting the cycle number of one 24MHz clock. When the 12-bits counter reaches (&gt;= N) the divisor value, the internal 33-bits counter register will increase 1 and the 12-bits counter will reset to zero and restart again. Notes: It can be configured by software at any time.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AVS_CNT0_D</name>
              <description>Divisor N for AVS Counter0 AVS CN0 CLK=24MHz/Divisor_N0. Divisor N0 = Bit[11:0] + 1 The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33-bits counter engine will maintain another 12-bits counter. The 12-bits counter is used for counting the cycle number of one 24MHz clock. When the 12-bits counter reaches (&gt;= N) the divisor value, the internal 33-bits counter register will increase 1 and the 12-bits counter will reset to zero and restart again. Notes: It can be configured by software at any time.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CTRL_REG</name>
          <description>0x0010  Timer 0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>TMR0_MODE</name>
              <description>0x0 TMR0_MODE. Timer 0 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_PRES</name>
              <description>0x0 TMR0_CLK_PRES. Select the pre-scale of timer 0 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_SRC</name>
              <description>0x1 TMR0_CLK_SRC. Timer 0 Clock Source. 
00: Low speed OSC, 
01: OSC24M. 
10: PLL_PERIPH0_1X/36 
11: /.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low speed OSC,</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_1X_slash_36</name>
                  <description>PLL_PERIPH0_1X/36</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_RELOAD</name>
              <description>0x0 TMR0_RELOAD. Timer 0 Reload. 
0: No effect 
1: Reload timer 0 Interval value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 0 Interval value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_EN</name>
              <description>0x0 TMR0_EN. Timer 0 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CUR_VALUE_REG</name>
          <description>0x0018  Timer 0 Current Value Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_CUR_VALUE</name>
              <description>Timer 0 Current Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_INTV_VALUE_REG</name>
          <description>0x0014  Timer 0 Interval Value Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_INTV_VALUE</name>
              <description>Timer 0 Interval Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CTRL_REG</name>
          <description>0x0020  Timer 1 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR1_MODE</name>
              <description>Timer 1 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_PRES</name>
              <description>Select the pre-scale of timer 1 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_SRC</name>
              <description>Timer 1 Clock Source. 
00: Low speed OSC 
01: OSC24M. 
10: PLL6/6 
11: /.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low speed OSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL6_slash_6</name>
                  <description>PLL6/6</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_RELOAD</name>
              <description>Timer 1 Reload. 
0: No effect 
1: Reload timer 1 Interval value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 1 Interval value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_EN</name>
              <description>Timer 1 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CUR_VALUE_REG</name>
          <description>0x0028  Timer 1 Current Value Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_CUR_VALUE</name>
              <description>Timer 1 Current Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_INTV_VALUE_REG</name>
          <description>0x0024  Timer 1 Interval Value Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_INTV_VALUE</name>
              <description>Timer 1 Interval Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR2_CTRL_REG</name>
          <description>0x0030  Timer 2 Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR2_MODE</name>
              <description>Timer 2 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR2_CLK_PRES</name>
              <description>Select the pre-scale of timer 2 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR2_CLK_SRC</name>
              <description>Timer 2 Clock Source. 
00: Low speed OSC 
01: OSC24M. 
1x: /.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low speed OSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR2_RELOAD</name>
              <description>Timer 2 Reload. 
0: No effect 
1: Reload timer 2 Interval value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 2 Interval value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR2_EN</name>
              <description>Timer 2 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR2_CUR_VALUE_REG</name>
          <description>0x0038  Timer 2 Current Value Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR2_CUR_VALUE</name>
              <description>Timer 2 Current Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR2_INTV_VALUE_REG</name>
          <description>0x0034  Timer 2 Interval Value Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR2_INTV_VALUE</name>
              <description>Timer 2 Interval Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR3_CTRL_REG</name>
          <description>0x0040  Timer 3 Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1D</resetMask>
          <fields>
            <field>
              <name>TMR3_MODE</name>
              <description>Timer 3 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR3_CLK_PRES</name>
              <description>Select the pre-scale of timer 3 clock source. Timer 3 clock source is the LOSC. 
00: /16 
01: /32 
10: /64 
11: /</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR3_EN</name>
              <description>Timer 3 Enable. 
0: Disable 
1: Enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR3_INTV_VALUE_REG</name>
          <description>0x0044  Timer 3 Interval Value Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR3_INTV_VALUE</name>
              <description>Timer 3 Interval Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR4_CTRL_REG</name>
          <description>0x0050  Timer 4 Control Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR4_MODE</name>
              <description>Timer 4 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR4_CLK_PRES</name>
              <description>Select the pre-scale of timer 4 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR4_CLK_SRC</name>
              <description>Timer 4 Clock Source. 
00: Low speed OSC 
01: OSC24M. 
10: External CLKIN0 
11: /.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low speed OSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External CLKIN0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR4_RELOAD</name>
              <description>Timer 4 Reload. 
0: No effect 
1: Reload timer 4 Interval value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 4 Interval value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR4_EN</name>
              <description>Timer 4 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR4_CUR_VALUE_REG</name>
          <description>0x0058  Timer 4 Current Value Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR4_CUR_VALUE</name>
              <description>Timer 4 Current Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR4_INTV_VALUE_REG</name>
          <description>0x0054  Timer 4 Interval Value Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR4_INTV_VALUE</name>
              <description>Timer 4 Interval Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR5_CTRL_REG</name>
          <description>0x0060  Timer 5 Control Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR5_MODE</name>
              <description>Timer 5 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR5_CLK_PRES</name>
              <description>Select the pre-scale of timer 5 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR5_CLK_SRC</name>
              <description>Timer 5 Clock Source. 
00: Low speed OSC 
01: OSC24M. 
10: External CLKIN1 
11: /.</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low speed OSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External CLKIN1</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR5_RELOAD</name>
              <description>Timer 5 Reload. 
0: No effect 
1: Reload timer 5 Interval value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 5 Interval value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR5_EN</name>
              <description>Timer 5 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 Tcylces, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR5_CUR_VALUE_REG</name>
          <description>0x0068  Timer 5 Current Value Register</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR5_CUR_VALUE</name>
              <description>Timer 5 Current Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR5_INTV_VALUE_REG</name>
          <description>0x0064  Timer 5 Interval Value Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR5_INTV_VALUE</name>
              <description>Timer 5 Interval Value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_EN_REG</name>
          <description>Timer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x13F</resetMask>
          <fields>
            <field>
              <name>WDOG_IRQ_EN</name>
              <description>Watchdog Interrupt Enable. 
0: No effect 
1: Watchdog Interval Value reached interrupt enable.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Watchdog</name>
                  <description>Watchdog Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR5_IRQ_EN</name>
              <description>Timer 5 Interrupt Enable. 
0: No effect 
1: Timer 5 Interval Value reached interrupt enable.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 5 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR4_IRQ_EN</name>
              <description>Timer 4 Interrupt Enable. 
0: No effect 
1: Timer 4 Interval Value reached interrupt enable.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 4 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR3_IRQ_EN</name>
              <description>Timer 3 Interrupt Enable. 
0: No effect 
1: Timer 3 Interval Value reached interrupt enable.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 3 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR2_IRQ_EN</name>
              <description>Timer 2 Interrupt Enable. 
0: No effect 
1: Timer 2 Interval Value reached interrupt enable.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 2 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_IRQ_EN</name>
              <description>Timer 1 Interrupt Enable. 
0: No effect 
1: Timer 1 Interval Value reached interrupt enable.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 1 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_EN</name>
              <description>Timer 0 Interrupt Enable. 
0: No effect 
1: Timer 0 Interval Value reached interrupt enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 0 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_STA_REG</name>
          <description>0x0004  Timer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>WDOG_IRQ_PEND</name>
              <description>0x0 WDOG_IRQ_PEND. Watchdog IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, Watchdog counter value is reached.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, Watchdog counter value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR5_IRQ_PEND</name>
              <description>0x0 TMR5_IRQ_PEND. Timer 5 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, timer 5 counter value is reached.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 5 counter value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR4_IRQ_PEND</name>
              <description>0x0 TMR4_IRQ_PEND. Timer 4 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, timer 4 counter value is reached.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 4 counter value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR3_IRQ_PEND</name>
              <description>0x0 TMR3_IRQ_PEND. Timer 3 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, timer 3 counter value is reached.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 3 counter value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR2_IRQ_PEND</name>
              <description>0x0 TMR2_IRQ_PEND. Timer 2 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, timer 2 counter value is reached.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 2 counter value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_IRQ_PEND</name>
              <description>0x0 TMR1_IRQ_PEND. Timer 1 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 1: Pending, timer 1 interval value is reached.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 1 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_PEND</name>
              <description>0x0 TMR0_IRQ_PEND. Timer 0 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, timer 0 interval value is reached.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 0 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_CTRL_REG</name>
          <description>0x0090  Watchdog Control Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>WDOG_RSTART</name>
              <description>Watchdog Restart. 
0: No effect 
1: Restart the Watchdog.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Restart</name>
                  <description>Restart the Watchdog.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_MODE_REG</name>
          <description>0x0094  Watchdog Mode Register</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7B</resetMask>
          <fields>
            <field>
              <name>WDOG_INTV_VALUE</name>
              <description>Watchdog Interval Value Watchdog clock source is OSC24M. If the OSC24M is turned off, the watchdog will not work. 
0000: 0.5sec 
0001: 1sec 
0010: 2sec 
0011: 3sec 
0100: 4sec 
0101: 5sec 
0110: 6sec 
0111: 8sec 
1000: 10sec 
1001: 12sec 
1010: 14sec 
1011: 16sec 
1100: / 
1101: / 
1110: / 
1111: /</description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_5sec</name>
                  <description>0.5sec</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1sec</name>
                  <description>1sec</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2sec</name>
                  <description>2sec</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3sec</name>
                  <description>3sec</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4sec</name>
                  <description>4sec</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5sec</name>
                  <description>5sec</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6sec</name>
                  <description>6sec</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8sec</name>
                  <description>8sec</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10sec</name>
                  <description>10sec</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12sec</name>
                  <description>12sec</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_14sec</name>
                  <description>14sec</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16sec</name>
                  <description>16sec</description>
                  <value>0b1011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WDOG_RST_EN</name>
              <description>Watchdog Reset Enable. 
0: No effect on the resets 
1: Enables the Watchdog to activate the system reset.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect on the resets</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enables</name>
                  <description>Enables the Watchdog to activate the system reset.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WDOG_EN</name>
              <description>Watchdog Enable. 
0: No effect 
1: Enable the Watchdog.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the Watchdog.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SYS_CTRL</name>
      <description>SYS_CTRL</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C00000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>BOOT_CPU_HP_FLAG_REG</name>
          <description>Boot CPU Hot Plug Flag Register</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT</name>
              <description>Boot CPU software flag when acting from hot plug.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_SOFT_ENT_REG0</name>
          <description>CPU Software Entry Register 0</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BOOT</name>
              <description>Boot CPU software entry register when acting from hot plug or Non-boot CPU software entry register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPU_SRAM_TEST_CTRL_REG</name>
          <description>0x0008  GPU SRAM Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>GPU_SRAM_TEST_CTRL</name>
              <description>GPU sram test control.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>L1_CACHE_CFG_REG</name>
          <description>L1_CACHE_CFG_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x111111</resetValue>
          <resetMask>0x777777</resetMask>
          <fields>
            <field>
              <name>L1TLB_DELAY</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DY_DELAY</name>
              <description></description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DT_DELAY</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DD_DELAY</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1IT_DELAY</name>
              <description></description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1ID_DELAY</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>L2_CFG_REG</name>
          <description>L2 Cache Configuration Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x22220000</resetValue>
          <resetMask>0xFFFF0000</resetMask>
          <fields/>
        </register>
        <register>
          <name>NMI_IRQ_CTRL_REG</name>
          <description>NMI Interrupt Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>NMI_IRQ_SRC_TYPE</name>
              <description>External NMI Interrupt Source Type. External NMI pin will be changed to alarm output if the power of I/O is switched off, and its power source is RTCVDD. 
00: Low level sensitive 
01: Negative edge trigged 
10: High level sensitive 
11: Positive edge sensitive</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low_level</name>
                  <description>Low level sensitive</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative_edge</name>
                  <description>Negative edge trigged</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_level</name>
                  <description>High level sensitive</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Positive_edge</name>
                  <description>Positive edge sensitive</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NMI_IRQ_ENABLE_REG</name>
          <description>NMI Interrupt Enable Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>NMI_IRQ_SRC_ENABLE</name>
              <description>NMI Source Enable and Disable Bit. 
0: NMI interrupt is disable 
1: NMI interrupt is enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>NMI interrupt is disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>NMI interrupt is enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NMI_IRQ_PEND_REG</name>
          <description>NMI Interrupt Pending Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>NMI_IRQ_SRC_PEND</name>
              <description>NMI Source Pending and Clear Bit 
0: NMI interrupt is not pending 
1: NMI interrupt is pending</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_pending</name>
                  <description>NMI interrupt is not pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pending</name>
                  <description>NMI interrupt is pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_CTRL_REG0</name>
          <description>0x0000  SRAM Control Register 0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x7FFFFFFF</resetValue>
          <resetMask>0x7FFFFFFF</resetMask>
          <fields>
            <field>
              <name>SRAM_C1_MAP</name>
              <description>SRAM Area C1 50K Byte Configuration by AHB.  
0: Map to CPU/DMA 
1: Map to VE</description>
              <bitRange>[30:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRAM_CTRL_REG1</name>
          <description>0x0004  SRAM Control Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x1300</resetValue>
          <resetMask>0x80001331</resetMask>
          <fields>
            <field>
              <name>BIST_DMA_CTRL_SEL</name>
              <description>Bist and DMA control select. 
0: DMA 
1: Bist.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bist</name>
                  <description>Bist.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_C3_MAP</name>
              <description>SRAM C3 map configuration. 
0: Map to CPU/BIST 
1: Map to ISP</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Map_to_CPU_slash_BIST</name>
                  <description>Map to CPU/BIST</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Map_to_ISP</name>
                  <description>Map to ISP</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_C2_MAP</name>
              <description>SRAM C2 map configuration. 
00: Map to CPU/BIST 
01: Map to AE 
10: Map to CE 
11: Map to ACE</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Map_to_CPU_slash_BIST</name>
                  <description>Map to CPU/BIST</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Map_to_AE</name>
                  <description>Map to AE</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Map_to_CE</name>
                  <description>Map to CE</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Map_to_ACE</name>
                  <description>Map to ACE</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_A3_A4_MAP</name>
              <description>SRAM Area A3/A4 Configuration by AHB.  
00: Map to CPU/DMA 
01: Map to EMAC 
10: / 
11: /</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Map_to_CPU_slash_DMA</name>
                  <description>Map to CPU/DMA</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Map_to_EMAC</name>
                  <description>Map to EMAC</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAMD_MAP</name>
              <description>SRAM D Area Config. 
0: Map to CPU/DMA 
1: Map to USB0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Map_to_CPU_slash_DMA</name>
                  <description>Map to CPU/DMA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Map_to_USB0</name>
                  <description>Map to USB0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PWM</name>
      <description>PWM</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C23400</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>8</dim>
          <dimIncrement>32</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x60</addressOffset>
          <register>
            <name>CAPTURE_CTR_REG</name>
            <description>CAPTURE_CTR_REG</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>CRLF</name>
                <description>When capture channel captures rising edge, the 16-bit up-counter`s current value is latched to and then this bit is set to 1 by hardware. Write 1 to clear this bit.</description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CFLF</name>
                <description>When capture channel captures falling edge, the 16-bit up-counter`s current value is latched to and then this bit is set to 1 by hardware. Write 1 to clear this bit.</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CAPINV</name>
                <description>Inversing the signal inputted form capture channel before capture channel's 16bit counter. 
0: Not inverse 
1: Inverse</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Not_inverse</name>
                    <description>Not inverse</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Inverse</name>
                    <description>Inverse</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>CAPTURE_FALL_REG</name>
            <description>CAPTURE_FALL_REG</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>CFLR</name>
                <description>When capture channel captures falling edge, the 16-bit up-counter`s current value is latched to this register.</description>
                <bitRange>[15:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CAPTURE_RISE_REG</name>
            <description>CAPTURE_RISE_REG</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>CRLR</name>
                <description>When capture channel captures rising edge, the 16-bit up-counter`s current value is latched to this register.</description>
                <bitRange>[15:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>PWM_CONT_REG</name>
            <description>PWM_CONT_REG</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFF</resetMask>
            <fields>
              <field>
                <name>PWM_PERIOD_RDY</name>
                <description>PWM period register ready. 
0: PWM period register is ready to write 
1: PWM period register is busy.</description>
                <bitRange>[11:11]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>ready</name>
                    <description>PWM period register is ready to write</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>busy</name>
                    <description>PWM period register is busy.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PWM_PUL_START</name>
                <description>PWM pulse output start. 
0: No effect 
1: Output 1 pulse. After finishing configurating for outputting pulse, set this bit once and then PWM would output one pulse. After the pulse is finished, the bit will be cleared automatically.</description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToSet</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Output</name>
                    <description>Output 1 pulse. After finishing configurating for outputting pulse, set this bit once and then PWM would output one pulse. After the pulse is finished, the bit will be cleared automatically.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PWM_MODE</name>
                <description>PWM output mode select. 
0: Cycle mode 
1: Pulse mode.</description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Cycle_mode</name>
                    <description>Cycle mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pulse</name>
                    <description>Pulse mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PWM_ACT_STA</name>
                <description>PWM active state. 
0: Low Level 
1: High Level.</description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Low_Level</name>
                    <description>Low Level</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>High</name>
                    <description>High Level.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PWM_PRESCAL_K</name>
                <description>PWM pre-scale K, actual pre-scale is (K+1). K = 0, actual pre-scale: 1 K = 1, actual pre-scale: 2 K = 2, actual pre-scale: 3 K = 3, actual pre-scale: 4 ... K = 255, actual pre-scale: 256.</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>PWM_CTR_REG</name>
            <description>PWM_CTR_REG</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>ON</name>
                <description>On PWM output or capture input, reading this register could get the current value of the PWM 16bit up-counter.</description>
                <bitRange>[15:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>PWM_PERIOD_REG</name>
            <description>PWM_PERIOD_REG</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PWM_ENTIRE_CYCLE</name>
                <description>Number of the entire cycles in the PWM clock. 0 = 1 cycle 1 = 2 cycles ... N = N+1 cycles If the register need to be modified dynamically, the PCLK should be faster than the PWM CLK .</description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PWM</name>
                <description>_ACT_CYCLE. Number of the active cycles in the PWM clock. 0 = 0 cycle 1 = 1 cycles ... N = N cycles</description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>CAPTURE_ENABLE_REG</name>
          <description>CAPTURE_ENABLE_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CAP7_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel7 is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAP6_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel6 is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAP5_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel5 is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAP4_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel4 is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAP3_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel3 is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAP2_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel2 is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAP1_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel1 is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CAP0_EN</name>
              <description>When enable capture function, the 16-bit up-counter starts working and capture channel is permitted to capture external falling edge or rising edge. 
0: Capture disable 
1: Capture enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_disable</name>
                  <description>Capture disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPTURE_IRQ_ENABLE_REG</name>
          <description>CAPTURE_IRQ_ENABLE_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CFIE7</name>
              <description>If this enable bit is set to 1, when capture channel 7 captures falling edge, it generates a capture channel 7 pending. 
0: Capture channel 7 fall lock interrupt disable 
1: Capture channel 7 fall lock interrupt enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_7_fall_lock_interrupt_disable</name>
                  <description>Capture channel 7 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_7_fall_lock_interrupt_enable</name>
                  <description>Capture channel 7 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE7</name>
              <description>If this enable bit is set to 1, when capture channel 7 captures rising edge, it generates a capture channel 7 pending. 
0: Capture channel 7 rise lock interrupt disable 
1: Capture channel 7 rise lock interrupt enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_7_rise_lock_interrupt_disable</name>
                  <description>Capture channel 7 rise lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_7_rise_lock_interrupt_enable</name>
                  <description>Capture channel 7 rise lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFIE6</name>
              <description>If this enable bit is set to 1, when capture channel 6 captures falling edge, it generates a capture channel 6 pending. 
0: Capture channel 6 fall lock interrupt disable 
1: Capture channel 6 fall lock interrupt enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_6_fall_lock_interrupt_disable</name>
                  <description>Capture channel 6 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_6_fall_lock_interrupt_enable</name>
                  <description>Capture channel 6 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE6</name>
              <description>If this enable bit is set to 1, when capture channel 6 captures rising edge, it generates a capture channel 6 pending. 
0: Capture channel 6 rise lock interrupt disable 
1: Capture channel 6 rise lock interrupt enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_6_rise_lock_interrupt_disable</name>
                  <description>Capture channel 6 rise lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_6_rise_lock_interrupt_enable</name>
                  <description>Capture channel 6 rise lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFIE5</name>
              <description>If this enable bit is set to 1, when capture channel 5 captures falling edge, it generates a capture channel 5 pending. 
0: Capture channel 5 fall lock interrupt disable 
1: Capture channel 5 fall lock interrupt enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_5_fall_lock_interrupt_disable</name>
                  <description>Capture channel 5 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_5_fall_lock_interrupt_enable</name>
                  <description>Capture channel 5 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE5</name>
              <description>If this enable bit is set to 1, when capture channel 5 captures rising edge, it generates a capture channel 5 pending. 
0: Capture channel 5 rise lock interrupt disable 
1: Capture channel 5 rise lock interrupt enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_5_rise_lock_interrupt_disable</name>
                  <description>Capture channel 5 rise lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_5_rise_lock_interrupt_enable</name>
                  <description>Capture channel 5 rise lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFIE4</name>
              <description>If this enable bit is set to 1, when capture channel 4 captures falling edge, it generates a capture channel 4 pending. 
0: Capture channel 4 fall lock interrupt disable 
1: Capture channel 4 fall lock interrupt enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_4_fall_lock_interrupt_disable</name>
                  <description>Capture channel 4 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_4_fall_lock_interrupt_enable</name>
                  <description>Capture channel 4 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE4</name>
              <description>If this enable bit is set to 1, when capture channel 4 captures rising edge, it generates a capture channel 4 pending. 
0: Capture channel 4 rise lock interrupt disable 
1: Capture channel 4 rise lock interrupt enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_4_rise_lock_interrupt_disable</name>
                  <description>Capture channel 4 rise lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_4_rise_lock_interrupt_enable</name>
                  <description>Capture channel 4 rise lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFIE3</name>
              <description>If this enable bit is set to 1, when capture channel 3 captures falling edge, it generates a capture channel 3 pending. 
0: Capture channel 3 fall lock interrupt disable 
1: Capture channel 3 fall lock interrupt enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_3_fall_lock_interrupt_disable</name>
                  <description>Capture channel 3 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_3_fall_lock_interrupt_enable</name>
                  <description>Capture channel 3 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE3</name>
              <description>If this enable bit is set to 1, when capture channel 3 captures rising edge, it generates a capture channel 3 pending. 
0: Capture channel 3 rise lock interrupt disable 
1: Capture channel 3 rise lock interrupt enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_3_rise_lock_interrupt_disable</name>
                  <description>Capture channel 3 rise lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_3_rise_lock_interrupt_enable</name>
                  <description>Capture channel 3 rise lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFIE2</name>
              <description>If this enable bit is set to 1, when capture channel 2 captures falling edge, it generates a capture channel 2 pending. 
0: Capture channel 2 fall lock interrupt disable 
1: Capture channel 2 fall lock interrupt enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_2_fall_lock_interrupt_disable</name>
                  <description>Capture channel 2 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_2_fall_lock_interrupt_enable</name>
                  <description>Capture channel 2 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE2</name>
              <description>If this enable bit is set to 1, when capture channel 2 captures rising edge, it generates a capture channel 2 pending. 
0: Capture channel 2 rise lock interrupt disable 
1: Capture channel 2 rise lock interrupt enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_2_rise_lock_interrupt_disable</name>
                  <description>Capture channel 2 rise lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_2_rise_lock_interrupt_enable</name>
                  <description>Capture channel 2 rise lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFIE1</name>
              <description>If this enable bit is set to 1, when capture channel 1 captures falling edge, it generates a capture channel 1 pending. 
0: Capture channel 1 fall lock interrupt disable 
1: Capture channel 1 fall lock interrupt enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_1_fall_lock_interrupt_disable</name>
                  <description>Capture channel 1 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_1_fall_lock_interrupt_enable</name>
                  <description>Capture channel 1 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE1</name>
              <description>If this enable bit is set 1, when capture channel 1 captures rising edge, it generates a capture channel 1 pending. 
0: Capture channel 1 rise lock Interrupt disable 
1: Capture channel 1 rise lock Interrupt enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_1_rise_lock_Interrupt_disable</name>
                  <description>Capture channel 1 rise lock Interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_1_rise_lock_Interrupt_enable</name>
                  <description>Capture channel 1 rise lock Interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFIE0</name>
              <description>If this enable bit is set to 1, when capture channel 0 captures falling edge, it generates a capture channel 0 pending. 
0: Capture channel 0 fall lock interrupt disable 
1: Capture channel 0 fall lock interrupt enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_0_fall_lock_interrupt_disable</name>
                  <description>Capture channel 0 fall lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_0_fall_lock_interrupt_enable</name>
                  <description>Capture channel 0 fall lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CRIE0</name>
              <description>If this enable bit is set to 1, when capture channel 0 captures rising edge, it generates a capture channel 0 pending. 
0: Capture channel 0 rise lock interrupt disable 
1: Capture channel 0 rise lock interrupt enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capture_channel_0_rise_lock_interrupt_disable</name>
                  <description>Capture channel 0 rise lock interrupt disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture_channel_0_rise_lock_interrupt_enable</name>
                  <description>Capture channel 0 rise lock interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPTURE_IRQ_STATUS_REG</name>
          <description>CAPTURE_IRQ_STATUS_REG</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CFIS7</name>
              <description>Capture channel 7 falling lock interrupt status.  When capture channel 7 captures falling edge, if capture channel 7 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 7 interrupt is not pending.   1: Capture channel 7 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 7 interrupt status.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS7</name>
              <description>Capture channel 7 rising lock interrupt status.  When capture channel 7 captures rising edge, if capture channel 7 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 7 interrupt is not pending.   1: Capture channel 7 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 7 interrupt status.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CFIS6</name>
              <description>Capture channel 6 falling lock interrupt status.  When capture channel 6 captures falling edge, if capture channel 6 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 6 interrupt is not pending.   1: Capture channel 6 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 6 interrupt status.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS6</name>
              <description>Capture channel 6 rising lock interrupt status.  When capture channel 6 captures rising edge, if capture channel 6 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 6 interrupt is not pending.    1: Capture channel 6 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 6 interrupt status.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CFIS5</name>
              <description>Capture channel 5 falling lock interrupt status.  When capture channel 5 captures falling edge, if capture channel 5 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 5 interrupt is not pending.    1: Capture channel 5 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 5 interrupt status.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS5</name>
              <description>Capture channel 5 rising lock interrupt status.  When capture channel 5 captures rising edge, if capture channel 5 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 5 interrupt is not pending.   1: Capture channel 5 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 5 interrupt status.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CFIS4</name>
              <description>Capture channel 4 falling lock interrupt status.  When capture channel 4 captures falling edge, if capture channel 4 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 4 interrupt is not pending.   1: Capture channel 4 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 4 interrupt status.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS4</name>
              <description>Capture channel 4 rising lock interrupt status.  When capture channel 4 captures rising edge, if capture channel 4 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 4 interrupt is not pending.   1: Capture channel 4 interrupt is pending. Writes 0: no effect.    1: Clear capture channel 4 interrupt status.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CFIS3</name>
              <description>Capture channel 3 falling lock interrupt status.  When capture channel 3 captures falling edge, if capture channel 3 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 3 interrupt is not pending.    1: Capture channel 3 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 3 interrupt status.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS3</name>
              <description>Capture channel 3 rising lock interrupt status.  When capture channel 3 captures rising edge, if capture channel 3 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 3 interrupt is not pending.   1: Capture channel 3 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 3 interrupt status.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CFIS2</name>
              <description>Capture channel 2 falling lock interrupt status.  When capture channel 2 captures falling edge, if capture channel 2 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 2 interrupt is not pending.   1: Capture channel 2 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 2 interrupt status.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS2</name>
              <description>Capture channel 2 rising lock interrupt status.  When capture channel 2 captures rising edge, if capture channel 2 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 2 interrupt is not pending.    1: Capture channel 2 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 2 interrupt status.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CFIS1</name>
              <description>Capture channel 1 falling lock interrupt status.  When capture channel 1 captures falling edge, if capture channel 1 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 1 interrupt is not pending.   1: Capture channel 1 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 1 interrupt status.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS1</name>
              <description>Capture channel 1 rising lock interrupt status.  When capture channel 1 captures rising edge, if capture channel 1 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 1 interrupt is not pending.    1: Capture channel 1 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 1 interrupt status.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CFIS0</name>
              <description>Capture channel 0 falling lock interrupt status.  When capture channel 0 captures falling edge, if capture channel 0 fall lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 0 interrupt is not pending.    1: Capture channel 0 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 0 interrupt status.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CRIS0</name>
              <description>Capture channel 0 rising lock interrupt status.  When capture channel 0 captures rising edge, if capture channel 0 rise lock interrupt ( ) is enabled, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: Capture channel 0 interrupt is not pending.   1: Capture channel 0 interrupt is pending. Writes 0: No effect.    1: Clear capture channel 0 interrupt status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM01_CLK_CFG_REG</name>
          <description>PWM01_CLK_CFG_REG</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>PWM01_CLK_SRC</name>
              <description>Select PWM01 clock source. 
00: 24M_PLL 
01: APB1 Others: /</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24M_PLL</name>
                  <description>24M_PLL</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>APB1</name>
                  <description>APB1 Others: /</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM01_CLK_SRC_BYPASS_TO_PWM1</name>
              <description>Bypass PWM01 clock source to PWM1 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM01_CLK_SRC_BYPASS_TO_PWM0</name>
              <description>Bypass PWM01 clock source to PWM0 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM01_CLK_GATING</name>
              <description>Gating clock for PWM01. 
0: Mask 
1: Pass</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM01_CLK_DIV_M</name>
              <description>PWM01 clock divide M 
0000: /1 
0001: /2 
0010: /4 
0011: /8 
0100: /16 
0101: /32 
0110: /64 
0111: /128 
1000: /256 others: /</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_256</name>
                  <description>/256 others: /</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM01_DZ_CTR_REG</name>
          <description>PWM01_DZ_CTR_REG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF01</resetMask>
          <fields>
            <field>
              <name>PDZINTV01</name>
              <description>PWM01 Dead Zone interval value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM01_DZ_EN</name>
              <description>PWM01 Dead Zone enable. 
0: Dead Zone disable 
1: Dead Zone enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dead_Zone_disable</name>
                  <description>Dead Zone disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dead_Zone</name>
                  <description>Dead Zone enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM23_CLK_CFG_REG</name>
          <description>PWM23_CLK_CFG_REG</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>PWM23_CLK_SRC_SEL</name>
              <description>Select PWM23 clock source. 
00: 24M_PLL 
01: APB1 Others: /</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24M_PLL</name>
                  <description>24M_PLL</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>APB1</name>
                  <description>APB1 Others: /</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM23_CLK_SRC_BYPASS_TO_PWM3</name>
              <description>Bypass PWM23 clock source to PWM3 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM23_CLK_SRC_BYPASS_TO_PWM2</name>
              <description>Bypass PWM23 clock source to PWM2 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM23_CLK_GATING</name>
              <description>Gating clock for PWM23. 
0: Mask 
1: Pass</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM23_CLK_DIV_M</name>
              <description>PWM23 clock divide M 
0000: /1 
0001: /2 
0010: /4 
0011: /8 
0100: /16 
0101: /32 
0110: /64 
0111: /128 
1000: /256 others: /</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_256</name>
                  <description>/256 others: /</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM23_DZ_CTR_REG</name>
          <description>PWM23_DZ_CTR_REG</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF01</resetMask>
          <fields>
            <field>
              <name>PWM23_DZ_INTV</name>
              <description>PWM23 Dead Zone interval value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM23_DZ_EN</name>
              <description>PWM23 Dead Zone enable. 
0: Dead Zone disable 
1: Dead Zone enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dead_Zone_disable</name>
                  <description>Dead Zone disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dead_Zone</name>
                  <description>Dead Zone enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM45_CLK_CFG_REG</name>
          <description>PWM45_CLK_CFG_REG</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>PWM45_CLK_SRC_SEL</name>
              <description>Select PWM45 clock source. 
00: 24M_PLL 
01: APB1 Others: /</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24M_PLL</name>
                  <description>24M_PLL</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>APB1</name>
                  <description>APB1 Others: /</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM45_CLK_SRC_BYPASS_TO_PWM5</name>
              <description>Bypass PWM45 clock source to PWM5 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM45_CLK_SRC_BYPASS_TO_PWM4</name>
              <description>Bypass PWM45 clock source to PWM4 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM45_CLK_GATING</name>
              <description>Gating clock for PWM45. 
0: Mask 
1: Pass</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM45_CLK_DIV_M</name>
              <description>PWM45 clock divide M 
0000: /1 
0001: /2 
0010: /4 
0011: /8 
0100: /16 
0101: /32 
0110: /64 
0111: /128 
1000: /256 others: /</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_256</name>
                  <description>/256 others: /</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM45_DZ_CTR_REG</name>
          <description>PWM45_DZ_CTR_REG</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF01</resetMask>
          <fields>
            <field>
              <name>PWM45_DZ_INTV</name>
              <description>PWM45 Dead Zone interval value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM45_DZ_EN</name>
              <description>PWM45 Dead Zone enable. 
0: Dead Zone disable 
1: Dead Zone enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dead_Zone_disable</name>
                  <description>Dead Zone disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dead_Zone</name>
                  <description>Dead Zone enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM67_CLK_CFG_REG</name>
          <description>PWM67_CLK_CFG_REG</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>PWM67_CLK_SRC_SEL</name>
              <description>Select PWM67 clock source. 
00: 24M_PLL 
01: APB1 Others: /</description>
              <bitRange>[8:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24M_PLL</name>
                  <description>24M_PLL</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>APB1</name>
                  <description>APB1 Others: /</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM67_CLK_SRC_BYPASS_TO_PWM7</name>
              <description>Bypass PWM67 clock source to PWM7 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM67_CLK_SRC_BYPASS_TO_PWM6</name>
              <description>Bypass PWM67 clock source to PWM6 output. 
0: Not bypass 
1: Bypass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_bypass</name>
                  <description>Not bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM67_CLK_GATING</name>
              <description>Gating clock for PWM67. 
0: Mask 
1: Pass</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM67_CLK_DIV_M</name>
              <description>PWM67 clock divide M 
0000: /1 
0001: /2 
0010: /4 
0011: /8 
0100: /16 
0101: /32 
0110: /64 
0111: /128 
1000: /256 others: /</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_256</name>
                  <description>/256 others: /</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM67_DZ_CTR_REG</name>
          <description>PWM67_DZ_CTR_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF01</resetMask>
          <fields>
            <field>
              <name>PWM67_DZ_INTV</name>
              <description>PWM67 Dead Zone interval value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM67_DZ_EN</name>
              <description>PWM67 Dead Zone enable. 
0: Dead Zone disable 
1: Dead Zone enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dead_Zone_disable</name>
                  <description>Dead Zone disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dead_Zone</name>
                  <description>Dead Zone enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_ENABLE_REG</name>
          <description>PWM_ENABLE_REG</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>PWM7_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel7 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM6_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel6 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM5_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel5 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM4_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel4 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM3_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel3 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM2_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel2 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM1_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel1 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM0_EN</name>
              <description>When enable PWM, the 16-bit up-counter starts working and PWM channel0 is permitted to output PWM waveform. 
0: PWM disable 
1: PWM enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_disable</name>
                  <description>PWM disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM</name>
                  <description>PWM enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_IRQ_ENABLE_REG</name>
          <description>PWM_IRQ_ENABLE_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>PCIE7</name>
              <description>PWM channel 7 Interrupt Enable. 
0: PWM channel 7 Interrupt Disable 
1: PWM channel 7 Interrupt Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_7_Interrupt_Disable</name>
                  <description>PWM channel 7 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_7_Interrupt_Enable</name>
                  <description>PWM channel 7 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE6</name>
              <description>PWM channel 6 Interrupt Enable. 
0: PWM channel 6 Interrupt Disable 
1: PWM channel 6 Interrupt Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_6_Interrupt_Disable</name>
                  <description>PWM channel 6 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_6_Interrupt_Enable</name>
                  <description>PWM channel 6 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE5</name>
              <description>PWM channel 5 Interrupt Enable. 
0: PWM channel 5 Interrupt Disable 
1: PWM channel 5 Interrupt Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_5_Interrupt_Disable</name>
                  <description>PWM channel 5 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_5_Interrupt_Enable</name>
                  <description>PWM channel 5 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE4</name>
              <description>PWM channel 4 Interrupt Enable. 
0: PWM channel 4 Interrupt Disable 
1: PWM channel 4 Interrupt Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_4_Interrupt_Disable</name>
                  <description>PWM channel 4 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_4_Interrupt_Enable</name>
                  <description>PWM channel 4 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE3</name>
              <description>PWM channel 3 Interrupt Enable. 
0: PWM channel 3 Interrupt Disable 
1: PWM channel 3 Interrupt Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_3_Interrupt_Disable</name>
                  <description>PWM channel 3 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_3_Interrupt_Enable</name>
                  <description>PWM channel 3 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE2</name>
              <description>PWM channel 2 Interrupt Enable. 
0: PWM channel 2 Interrupt Disable 
1: PWM channel 2 Interrupt Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_2_Interrupt_Disable</name>
                  <description>PWM channel 2 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_2_Interrupt_Enable</name>
                  <description>PWM channel 2 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE1</name>
              <description>PWM channel 1 Interrupt Enable. 
0: PWM channel 1 Interrupt Disable 
1: PWM channel 1 Interrupt Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_1_Interrupt_Disable</name>
                  <description>PWM channel 1 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_1_Interrupt_Enable</name>
                  <description>PWM channel 1 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCIE0</name>
              <description>PWM channel 0 Interrupt Enable. 
0: PWM channel 0 Interrupt Disable 
1: PWM channel 0 Interrupt Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PWM_channel_0_Interrupt_Disable</name>
                  <description>PWM channel 0 Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM_channel_0_Interrupt_Enable</name>
                  <description>PWM channel 0 Interrupt Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_IRQ_STATUS_REG</name>
          <description>PWM_IRQ_STATUS_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>PIS7</name>
              <description>PWM channel 7 Interrupt Status. When PWM channel 7 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 7 interrupt is not pending.    1: PWM channel 7 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 7 interrupt status.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PIS6</name>
              <description>PWM channel 6 Interrupt Status. When PWM channel 6 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 6 interrupt is not pending.    1: PWM channel 6 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 6 interrupt status.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PIS5</name>
              <description>PWM channel 5 Interrupt Status. When PWM channel 5 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 5 interrupt is not pending.    1: PWM channel 5 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 5 interrupt status.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PIS4</name>
              <description>PWM channel 4 Interrupt Status. When PWM channel 4 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 4 interrupt is not pending.    1: PWM channel 4 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 4 interrupt status.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PIS3</name>
              <description>PWM channel 3 Interrupt Status. When PWM channel 3 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 3 interrupt is not pending.    1: PWM channel 3 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 3 interrupt status.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PIS2</name>
              <description>PWM channel 2 Interrupt Status. When PWM channel 2 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 2 interrupt is not pending.    1: PWM channel 2 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 2 interrupt status.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PIS1</name>
              <description>PWM channel 1 Interrupt Status. When PWM channel 1 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 1 interrupt is not pending.    1: PWM channel 1 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 1 interrupt status.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>PIS0</name>
              <description>PWM channel 0 Interrupt Status. When PWM channel 0 counter reaches Entire Cycle Value, this bit is set to 1 by hardware. Write 1 to clear this bit. Reads 0: PWM channel 0 interrupt is not pending.    1: PWM channel 0 interrupt is pending. Writes 0: No effect.    1: Clear PWM channel 0 interrupt status.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CE_NS</name>
      <description>CE_NS</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C15000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CE_CDA</name>
          <description>DMA Current Destination Address</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_ADR</name>
              <description>Current destination address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CSA</name>
          <description>DMA Current Source Address</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SRC_ADR</name>
              <description>Current source address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CTL</name>
          <description>Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8</resetMask>
          <fields>
            <field>
              <name>RSA_CLK_GATING</name>
              <description>RSA CLK Gating Enable(only for S world) 
0: RSA clk gating enable 
1: RSA clk gating disable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>RSA clk gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>RSA clk gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIE_ID</name>
              <description>Die Bonding ID</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ESR</name>
          <description>Error Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CH3_ERROR</name>
              <description>Task channel3 error type 
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES. Write `1` to clear it. 
1xxx: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES. Write `1` to clear it.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH2_ERR</name>
              <description>Task channel2 error type  
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES. Write `1` to clear it. 
1xxx: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES. Write `1` to clear it.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH1_ERR</name>
              <description>Task channel1 error type 
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES. Write `1` to clear it. 
1xxx: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES. Write `1` to clear it.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH0_ERR</name>
              <description>Task channel0 error type 
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES. Write `1` to clear it. 
1xxx: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES. Write `1` to clear it.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ICR</name>
          <description>Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK_INT_EN</name>
              <description>Task channel0-3 interrupt enable 
0: interrupt disable 
1: interrupt enable</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ISR</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK_END_PENDING</name>
              <description>Task channel0-3 end pending 
0: Not finished 
1: Finished It indicates if task has been completed . Notes: Write `1` to clear it.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TDA</name>
          <description>Task Descriptor Address</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CE_TDA</name>
              <description>Task Descriptor Address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TLR</name>
          <description>Task Load Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TASK_LOAD</name>
              <description>Task Load When set, CE can load the descriptor of task if task FIFO is not full.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TPR</name>
          <description>Throughput Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>THROUGHPUT</name>
              <description>It indicates the throughput of the last time to this register. Writing 0 to this register will clear it.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TSR</name>
          <description>Task Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TASK_CHANNEL</name>
              <description>Indicate which channel is running 
00: Task channel0 
01: Task channel1 
10: Task channel2 
11: Task channel3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Task_channel0</name>
                  <description>Task channel0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Task_channel1</name>
                  <description>Task channel1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Task_channel2</name>
                  <description>Task channel2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Task_channel3</name>
                  <description>Task channel3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="CE_NS">
      <name>CE_S</name>
      <description>CE_S</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C15800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>CIR0</name>
      <description>CIR0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CIR_CFR</name>
          <description>CIR Configure Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x1828</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SCS2</name>
              <description>Bit2 of Sample Clock Select for CIR This bit is defined by SCS bits below.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATHC</name>
              <description>Active Threshold Control for CIR 
0: ATHR in Unit of (Sample Clock) 
1: ATHR in Unit of (128*Sample Clocks)</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ATHR_in_Unit_of__openingparen_Sample</name>
                  <description>ATHR in Unit of (Sample Clock)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ATHR_in_Unit_of__openingparen_128_times_Sample</name>
                  <description>ATHR in Unit of (128*Sample Clocks)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ATHR</name>
              <description>Active Threshold for CIR These bits control the duration of CIR from Idle to Active State. The duration can be calculated by ((ATHR + 1)*(ATHC? Sample Clock: 128*Sample Clock)).</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITHR</name>
              <description>Idle Threshold for CIR The Receiver uses it to decide whether the CIR command has been received. If there is no CIR signal on the air, the receiver is staying in IDLE status. One active pulse will bring the receiver from IDLE status to Receiving status. After the CIR is end, the inputting signal will keep the specified level (high or low level) for a long time. The receiver can use this idle signal duration to decide that it has received the CIR command. The corresponding flag is asserted. If the corresponding interrupt is enable, the interrupt line is asserted to CPU. When the duration of signal keeps one status (high or low level) for the specified duration ( (ITHR + 1)*128 sample_clk ), this means that the previous CIR command has been finished.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NTHR</name>
              <description>Noise Threshold for CIR When the duration of signal pulse (high or low level) is less than NTHR, the pulse is taken as noise and should be discarded by hardware. 
0: All samples are recorded into RX FIFO 
1: If the signal is only one sample duration, it is taken as noise and discarded. 
2: If the signal is less than (&lt;=) two sample duration, it is taken as noise and discarded. ... 
61: If the signal is less than (&lt;=) sixty-one sample duration, it is taken as noise and discarded.</description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCS</name>
              <description>Sample Clock Select for CIR SCS2 SCS[1] SCS[0] Sample Clock 0 0 0 CIR_CLK/64 0 0 1 CIR_CLK/128 0 1 0 CIR_CLK/256 0 1 1 CIR_CLK/512 1 0 0 CIR_CLK Others Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_CTL</name>
          <description>CIR Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F3</resetMask>
          <fields>
            <field>
              <name>CGPO</name>
              <description>General Program Output (GPO) Control in CIR mode for TX Pin 
0: Low level 
1: High level</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low_level</name>
                  <description>Low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_level</name>
                  <description>High level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACTIVE</name>
              <description>Active Pulse Accept Mode 
00: Start to accept data after detect debounce pulse edge 
01: Start to accept data after detect debounce pulse edge 
10: Start to accept data after detect low voltage debounce pulse 
11: Start to accept data after detect high voltage debounce pulse</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CIR</name>
              <description>ENABLE 00~10: Reserved 
11: CIR mode enable</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mode</name>
                  <description>CIR mode enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Global Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXCFG</name>
          <description>CIR Receiver Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xC</resetMask>
          <fields>
            <field>
              <name>RPA</name>
              <description>Receiver Packet Abort bit. Determines behavior of the RX FIFO upon detection of an illegal symbol. When an illegal symbol is detected, the DDE or CRCE bit in the receiver status register is set. If the RPA bit is set, the RX FIFO pointers are cleared and the receiver starts to search for the PA or STA fields for FIR and MIR mode, respectively. If RPA is cleared, the receiver continues to write to the RX FIFO. 
0: Does not clear the RX FIFO upon detection of an illegal symbol 
1: Clears the RX FIFO upon detection of illegal symbol</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Does</name>
                  <description>Does not clear the RX FIFO upon detection of an illegal symbol</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clears</name>
                  <description>Clears the RX FIFO upon detection of illegal symbol</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPPI</name>
              <description>Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXFIFO</name>
          <description>CIR Receiver FIFO Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>Receiver Byte FIFO</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXINT</name>
          <description>CIR Receiver Interrupt Control Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F32</resetMask>
          <fields>
            <field>
              <name>RAL_RX</name>
              <description>RAL RX FIFO Available Received Byte Level for interrupt and DMA request TRIGGER_LEVEL = RAL + 1</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRQ_EN_RX</name>
              <description>DRQ_EN RX FIFO DMA Enable 
0: Disable 
1: Enable When set to `1`, the Receiver FIFO DRQ is asserted if reaching RAL. The DRQ is de-asserted when the condition fails.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, the Receiver FIFO DRQ is asserted if reaching RAL. The DRQ is de-asserted when the condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAI_EN_RX</name>
              <description>RAI_EN RX FIFO Available Interrupt Enable 
0: Disable 
1: Enable When set to `1`, the Receiver FIFO IRQ is asserted if reaching RAL. The IRQ is de-asserted when the condition fails.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, the Receiver FIFO IRQ is asserted if reaching RAL. The IRQ is de-asserted when the condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPEI_EN_RECEIVER</name>
              <description>RPEI_EN Receiver Packet End Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI_EN</name>
              <description>0x0 ROI_EN Receiver FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXSTA</name>
          <description>CIR Receiver Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F93</resetMask>
          <fields>
            <field>
              <name>RAC</name>
              <description>RX FIFO Available Counter 
0000000: No available data in RX FIFO 
0000001: 1 byte available data in RX FIFO 
0000010: 2 byte available data in RX FIFO ... 
1000000: 64 byte available data in RX FIFO</description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 byte available data in RX FIFO</description>
                  <value>0b0000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 byte available data in RX FIFO ...</description>
                  <value>0b0000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 byte available data in RX FIFO</description>
                  <value>0b1000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STAT</name>
              <description>Status of CIR 
0: Idle 
1: Busy</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RA</name>
              <description>RX FIFO Available 
0: RX FIFO not available according its level 
1: RX FIFO available according its level This bit is cleared by writing a `1`.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_FIFO</name>
                  <description>RX FIFO not available according its level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_FIFO_available</name>
                  <description>RX FIFO available according its level This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPE</name>
              <description>Receiver Packet End Flag 
0: STO was not detected. In CIR mode, one CIR symbol is receiving or not detected. 
1: STO field or packet abort symbol (7`b0000,000 and 8`b0000,0000 for MIR and FIR) is detected. In CIR mode, one CIR symbol is received. This bit is cleared by writing a `1`.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STO_was</name>
                  <description>STO was not detected. In CIR mode, one CIR symbol is receiving or not detected.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STO_field</name>
                  <description>STO field or packet abort symbol (7`b0000,000 and 8`b0000,0000 for MIR and FIR) is detected. In CIR mode, one CIR symbol is received. This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI</name>
              <description>Receiver FIFO Overrun 
0: Receiver FIFO not overrun 
1: Receiver FIFO overrun This bit is cleared by writing a `1`.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiver_FIFO_not_overrun</name>
                  <description>Receiver FIFO not overrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receiver_FIFO_overrun</name>
                  <description>Receiver FIFO overrun This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="CIR0">
      <name>CIR1</name>
      <description>CIR1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21C00</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>CPU Configuration</name>
      <description>CPU Configuration</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C25C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CLOSE_FLAG</name>
          <description>Close Core Flag Register</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CLOSE_CORE_3_0</name>
              <description>CLOSE_CORE[3:0] 
0: Normal 
1: Start to close core Only the corresponding core could set the corresponding bit filed.The bit will be cleared after the corresponding core power-off.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT64_CTRL_REG</name>
          <description>64-bit Counter Control Register</description>
          <addressOffset>0x280</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CNT64_CLK_SRC_SEL</name>
              <description>64-bit Counter Clock Source Select. 
0: OSC24M 
1: /</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CNT64_RL_EN</name>
              <description>64-bit Counter Read Latch Enable. 
0: No effect 
1: Latch the 64-bit counter to the Low/High registers and it will change to zero after the registers are latched.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Latch</name>
                  <description>Latch the 64-bit counter to the Low/High registers and it will change to zero after the registers are latched.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CNT64_CLR_EN</name>
              <description>64-bit Counter Clear Enable. 
0: No effect 
1: Clear the 64-bit Counter Low/High registers and it will change to zero after the registers are cleared. It is not recommended to clear this counter arbitrarily.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear the 64-bit Counter Low/High registers and it will change to zero after the registers are cleared. It is not recommended to clear this counter arbitrarily.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT64_HIGH_REG</name>
          <description>64-bit Counter High Register</description>
          <addressOffset>0x288</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT64_HI</name>
              <description>64-bit Counter [63:32].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CNT64_LOW_REG</name>
          <description>64-bit Counter Low Register</description>
          <addressOffset>0x284</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CNT64_LO</name>
              <description>64-bit Counter [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFIG_DELAY</name>
          <description>Configuration Delay Register</description>
          <addressOffset>0x154</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DELAY_TMR</name>
              <description>Delay time(1~255us) between different steps.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU0_CTRL_REG</name>
          <description>CPU0 Control Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CPU0_CP15_WRITE_DISABLE</name>
              <description>Disable write access to certain CP15 registers. 
0: Enable 
1: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU0_PWR_SWITCH_REG</name>
          <description>CPU0 Power Switch Control Register</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CPU_PWR_SWITCH_7_0</name>
              <description>CPU_PWR_SWITCH[7:0] 
0x00: Power On 
0xFF: Power Off</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Power_On</name>
                  <description>Power On</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Power_Off</name>
                  <description>Power Off</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU0_RST_CTRL</name>
          <description>CPU0 Reset Control</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CPU0_CORE_RESET</name>
              <description>These are the primary reset signals which initialize the processor logic in the processor power domains, not including the debug, breakpoint and watchpoint logic. 
0: Assert 
1: De-assert</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU0_RESET</name>
              <description>CPU0 Reset Assert. These power-on reset signals initialize all the processor logic, including CPU Debug, and breakpoint and watch point logic in the processor power domains. They do not reset debug logic in the debug power domain. 
0: Assert 
1: De-assert</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU0_STATUS</name>
          <description>CPU0_STATUS</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>STANDBYWFI</name>
              <description>Indicates if the processor is in WFI standby mode 
0: Processor is not in WFI standby mode 
1: Processor is in WFI standby mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFI standby mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFI standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STANDBYWFE</name>
              <description>Indicates if the processor is in the WFE standby mode 
0: Processor is not in WFE standby mode 
1: Processor is in WFE standby mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFE standby mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFE standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMP_AMP</name>
              <description>0: AMP mode 
1: SMP mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AMP_mode</name>
                  <description>AMP mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMP_mode</name>
                  <description>SMP mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU1_CTRL_REG</name>
          <description>CPU1 Control Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CPU1_CP15_WRITE_DISABLE</name>
              <description>Disable write access to certain CP15 registers. 
0: Enable 
1: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU1_PWR_SWITCH_REG</name>
          <description>CPU1 Power Switch Control Register</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CPU_PWR_SWITCH_7_0</name>
              <description>CPU_PWR_SWITCH[7:0] 
0x00: Power On 
0xFF: Power Off</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Power_On</name>
                  <description>Power On</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Power_Off</name>
                  <description>Power Off</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU1_RST_CTRL</name>
          <description>CPU1 Reset Control</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CPU1_CORE_RESET</name>
              <description>These are the primary reset signals which initialize the processor logic in the processor power domains, not including the debug, breakpoint and watchpoint logic. 
0: Assert 
1: De-assert</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU1_RESET</name>
              <description>CPU1 Reset Assert. These power-on reset signals initialize all the processor logic, including CPU Debug, and breakpoint and watch point logic in the processor power domains. They do not reset debug logic in the debug power domain. 
0: Assert 
1: De-assert</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU1_STATUS</name>
          <description>CPU1_STATUS</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>STANDBYWFI</name>
              <description>Indicates if the processor is in WFI standby mode 
0: Processor is not in WFI standby mode. 
1: Processor is in WFI standby mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFI standby mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFI standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STANDBYWFE</name>
              <description>Indicates if the processor is in the WFE standby mode 
0: Processor is not in WFE standby mode 
1: Processor is in WFE standby mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFE standby mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFE standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMP_AMP</name>
              <description>0: AMP mode 
1: SMP mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AMP_mode</name>
                  <description>AMP mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMP_mode</name>
                  <description>SMP mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU2_CTRL_REG</name>
          <description>CPU2 Control Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CPU_CP15_WRITE_DISABLE</name>
              <description>Disable write access to certain CP15 registers. 
0: Enable 
1: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU2_RST_CTRL</name>
          <description>CPU2 Reset Control</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CPU2_CORE_RESET</name>
              <description>These are the primary reset signals which initialize the processor logic in the processor power domains, not including the debug, breakpoint and watchpoint logic. 
0: Assert 
1: De-assert</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU2_RESET</name>
              <description>CPU2 Reset Assert. These power-on reset signals initialize all the processor logic, including CPU Debug, and breakpoint and watch point logic in the processor power domains. They do not reset debug logic in the debug power domain. 
0: Assert 
1: De-assert</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU2_STATUS</name>
          <description>CPU2_STATUS</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>STANDBYWFI</name>
              <description>Indicates if the processor is in WFI standby mode 
0: Processor is not in WFI standby mode. 
1: Processor is in WFI standby mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFI standby mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFI standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STANDBYWFE</name>
              <description>Indicates if the processor is in the WFE standby mode 
0: Processor is not in WFE standby mode 
1: Processor is in WFE standby mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFE standby mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFE standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMP_AMP</name>
              <description>0: AMP mode 
1: SMP mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AMP_mode</name>
                  <description>AMP mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMP_mode</name>
                  <description>SMP mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU3_CTRL_REG</name>
          <description>CPU3 Control Register</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CPU_CP15_WRITE_DISABLE</name>
              <description>Disable write access to certain CP15 registers. 
0: Enable 
1: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU3_RST_CTRL</name>
          <description>CPU3 Reset Control</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CPU3_CORE_RESET</name>
              <description>These are the primary reset signals which initialize the processor logic in the processor power domains, not including the debug, breakpoint and watchpoint logic. 
0: Assert 
1: De-assert</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU3_RESET</name>
              <description>CPU3 Reset Assert. These power-on reset signals initialize all the processor logic, including CPU Debug, and breakpoint and watch point logic in the processor power domains. They do not reset debug logic in the debug power domain. 
0: Assert 
1: De-assert</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU3_STATUS</name>
          <description>CPU3_STATUS</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>STANDBYWFI</name>
              <description>Indicates if the processor is in WFI standby mode 
0: Processor is not in WFI standby mode. 
1: Processor is in WFI standby mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFI standby mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFI standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STANDBYWFE</name>
              <description>Indicates if the processor is in the WFE standby mode 
0: Processor is not in WFE standby mode 
1: Processor is in WFE standby mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_in</name>
                  <description>Processor is not in WFE standby mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in</name>
                  <description>Processor is in WFE standby mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMP_AMP</name>
              <description>0: AMP mode 
1: SMP mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AMP_mode</name>
                  <description>AMP mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMP_mode</name>
                  <description>SMP mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUIDLE_EN</name>
          <description>CPUIDLE Enable Control Register</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF0001</resetMask>
          <fields>
            <field>
              <name>KEYFILED</name>
              <description>Only the register can be written with 0x16AAXXXX at first(X means any value),then write 0xAA16000x,the `x`(x stand for 0 or 1) can be written into the bit0.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CPUIDLE_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUX_PWROFF_GATING_REG</name>
          <description>CPUX Power Off Gating(Power clamp) Register</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PWROFF_GATING_3_0</name>
              <description>PWROFF_GATING[3:0] Gating the corresponding modules when the corresponding CPU power off. 
0: Invalid 
1: Valid The corresponding bit should be set to 1 before the corresponding CPU power-off while it should be set to 0 after CPU power-on.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EVENT_IN_REG</name>
          <description>Event Input Register</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>EVENT_IN</name>
              <description>Event input that can wake-up CPUx from WFE standby mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GENER_CTRL_REG</name>
          <description>General Control Register</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x10000020</resetValue>
          <resetMask>0x1000013F</resetMask>
          <fields>
            <field>
              <name>AXI2MBUS_RST</name>
              <description>AXI2MBUS logic circuit reset 
0: Assert 
1: De-assert</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CFGSDISABLE</name>
              <description>Disable write access to some secure GIC registers.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2_RST</name>
              <description>L2 Reset.(SCU global reset) 
0: Apply reset to shared L2 memory system controller. 
1: Do not apply reset to shared L2 memory system controller.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Apply</name>
                  <description>Apply reset to shared L2 memory system controller.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Do_not_apply</name>
                  <description>Do not apply reset to shared L2 memory system controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L2_RST_DISABLE</name>
              <description>Disable automatic L2 cache invalidate at reset 
0: L2 cache is reset by hardware. 
1: L2 cache is not reset by hardware.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>reset</name>
                  <description>L2 cache is reset by hardware.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_reset</name>
                  <description>L2 cache is not reset by hardware.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L1_RST_DISABLE</name>
              <description>L1 Reset Disable[3:0]. 
0: L1 cache is reset by hardware. 
1: L1 cache is not reset by hardware.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IRQ_FIQ_STATUS_CTRL</name>
          <description>IRQ_FIQ Output Status and Control Register</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0F0F0F</resetMask>
          <fields>
            <field>
              <name>FIQ_MASK_3_0</name>
              <description>FIQ_MASK[3:0] FIQ output mask to this module 
0: Normal 
1: Mask</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IRQ_MASK_3_0</name>
              <description>IRQ_MASK[3:0] IRQ output mask to this module 
0: Normal 
1: Mask</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIQ_OUT_3_0</name>
              <description>FIQ_OUT[3:0] FIQ wakeup output 
0: Normal 
1: FIQ Happen</description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>IRQ_OUT_3_0</name>
              <description>IRQ_OUT[3:0] IRQ wakeup output 
0: Normal 
1: IRQ Happen</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_DOWN_CFG</name>
          <description>Power Down Configuration Register</description>
          <addressOffset>0x158</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Set this value to power switch register when CPUx power down.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_SW_DELAY</name>
          <description>Power Switch Operation Delay Register</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0xA</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DELAY_TMR</name>
              <description>Delay time(1~255us) when setting power switch value.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_UP_CFG0</name>
          <description>Power Up Configuration Register0</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0xFE</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Set this value to power switch register when CPUx power up.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_UP_CFG1</name>
          <description>Power Up Configuration Register1</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0xFC</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Set this value to power switch register when CPUx power up.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_UP_CFG2</name>
          <description>Power Up Configuration Register2</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0xF8</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Set this value to power switch register when CPUx power up.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_UP_CFG3</name>
          <description>Power Up Configuration Register3</description>
          <addressOffset>0x16C</addressOffset>
          <resetValue>0xF0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Set this value to power switch register when CPUx power up.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_UP_CFG4</name>
          <description>Power Up Configuration Register4</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0xC0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Set this value to power switch register when CPUx power up.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWR_UP_CFG5</name>
          <description>Power Up Configuration Register5</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET</name>
              <description>Set this value to power switch register when CPUx power up.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CSI0</name>
      <description>CSI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C09000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>4</dim>
          <dimIncrement>256</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x10</addressOffset>
          <register>
            <name>CSI0_BUF_CTL_REG</name>
            <description>CSI Channel_N Output Buffer Control Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>DBN</name>
                <description>Buffer selected at next storing for CSI 
0: Next buffer selection is buffer-A 
1: Next buffer selection is buffer-B</description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>buffer_minus_A</name>
                    <description>Next buffer selection is buffer-A</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>buffer_minus_B</name>
                    <description>Next buffer selection is buffer-B</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DBS</name>
                <description>Output buffer selected status 
0: Selected output buffer-A 
1: Selected output buffer-B</description>
                <bitRange>[1:1]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Selected_output_buffer_minus_A</name>
                    <description>Selected output buffer-A</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Selected_output_buffer_minus_B</name>
                    <description>Selected output buffer-B</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DBE</name>
                <description>Double buffer mode enable 
0: Disable 
1: Enable If the double buffer mode is disabled, the buffer-A will be always selected by CSI module.</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable If the double buffer mode is disabled, the buffer-A will be always selected by CSI module.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_BUF_LEN_REG</name>
            <description>CSI Channel_N Line Buffer Length Register</description>
            <addressOffset>0x38</addressOffset>
            <resetValue>0x280</resetValue>
            <resetMask>0x1FFF</resetMask>
            <fields>
              <field>
                <name>BUF_LEN</name>
                <description>Buffer length of a line. Unit is byte. It is the max of the 3 FIFOs</description>
                <bitRange>[12:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_C0_BUF_STA_REG</name>
            <description>CSI0_C0_BUF_STA_REG</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF03</resetMask>
            <fields>
              <field>
                <name>LUM_STATIS</name>
                <description>luminance statistical value When frame done interrupt flag come, the value is ready and will last until next frame done. For raw data, value = (G&gt;&gt;1+R+G)&gt;&gt;8 For yuv422, value = Y&gt;&gt;8</description>
                <bitRange>[31:8]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>VCAP_STA</name>
                <description>Video capture in progress Indicates the CSI is capturing video image data (multiple frames). The bit is set at the start of the first frame after enabled video capture. When software disables video capture, it clears itself after the last pixel of the current frame is captured.</description>
                <bitRange>[1:1]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SCAP_STA</name>
                <description>Still capture in progress Indicates the CSI is capturing still image data (single frame). The bit is set at the start of the first frame after enabled still frame capture. It clears itself after the last pixel of the first frame is captured. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means filed end.</description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_F0_BUFA_REG</name>
            <description>CSI Channel_N FIFO 0 Output Buffer-A Address Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>C0F0_BUFA</name>
                <description>FIFO 0 output buffer-A address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_F0_BUFB_REG</name>
            <description>CSI Channel_N FIFO 0 Output Buffer-B Address Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>C0F0_BUFB</name>
                <description>FIFO 0 output buffer-B address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_F1_BUFA_REG</name>
            <description>CSI Channel_N FIFO 1 Output Buffer-A Address Register</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>C0F1_BUFA</name>
                <description>FIFO 1 output buffer-A address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_F1_BUFB_REG</name>
            <description>CSI Channel_N FIFO 1 Output Buffer-B Address Register</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>C0F1_BUFB</name>
                <description>FIFO 1 output buffer-B address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_F2_BUFA_REG</name>
            <description>CSI Channel_N FIFO 2 Output Buffer-A Address Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>C0F2_BUFA</name>
                <description>FIFO 2 output buffer-A address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_F2_BUFB_REG</name>
            <description>CSI Channel_N FIFO 2 Output Buffer-B Address Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>C0F2_BUFB</name>
                <description>FIFO 2 output buffer-B address</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_HSIZE_REG</name>
            <description>CSI Channel_N Horizontal Size Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x5000000</resetValue>
            <resetMask>0x1FFF1FFF</resetMask>
            <fields>
              <field>
                <name>HOR_LEN</name>
                <description>Horizontal pixel clock length. Valid pixel clocks of a line.</description>
                <bitRange>[28:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>HOR_START</name>
                <description>Horizontal pixel clock start.Pixel data is valid from this clock.</description>
                <bitRange>[12:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_INT_EN_REG</name>
            <description>CSI Channel_N Interrupt Enable Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xDF</resetMask>
            <fields>
              <field>
                <name>VS_INT_EN</name>
                <description>vsync flag The bit is set when vsync come. And at this time load the buffer address for the coming frame. So after this irq come, change the buffer address could only effect next frame</description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>HB_OF_INT_EN</name>
                <description>Hblank FIFO overflow The bit is set when 3 FIFOs still overflow after the hblank.</description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FIFO2_OF_INT_EN</name>
                <description>FIFO 2 overflow The bit is set when the FIFO 2 become overflow.</description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FIFO1_OF_INT_EN</name>
                <description>FIFO 1 overflow The bit is set when the FIFO 1 become overflow.</description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FIFO0_OF_INT_EN</name>
                <description>FIFO 0 overflow The bit is set when the FIFO 0 become overflow.</description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FD_INT_EN</name>
                <description>Frame done Indicates the CSI has finished capturing an image frame. Applies to video capture mode. The bit is set after each completed frame capturing data is written to buffer as long as video capture remains enabled.</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CD_INT_EN</name>
                <description>Capture done Indicates the CSI has completed capturing the image data. For still capture, the bit is set when one frame data has been written to buffer. For video capture, the bit is set when the last frame has been written to buffer after video capture has been disabled. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means field end.</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_INT_STA_REG</name>
            <description>CSI Channel_N Interrupt Status Register</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xDF</resetMask>
            <fields>
              <field>
                <name>VS_PD</name>
                <description>vsync flag</description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>HB_OF_PD</name>
                <description>Hblank FIFO overflow</description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>FIFO2_OF_PD</name>
                <description>FIFO 2 overflow</description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>FIFO1_OF_PD</name>
                <description>FIFO 1 overflow</description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>FIFO0_OF_PD</name>
                <description>FIFO 0 overflow</description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>FD_PD</name>
                <description>Frame done</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
              <field>
                <name>CD_PD</name>
                <description>Capture done</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
            </fields>
          </register>
          <register>
            <name>CSI0_VSIZE_REG</name>
            <description>CSI Channel_N Vertical Size Register</description>
            <addressOffset>0x34</addressOffset>
            <resetValue>0x1E00000</resetValue>
            <resetMask>0x1FFF1FFF</resetMask>
            <fields>
              <field>
                <name>VER_LEN</name>
                <description>Vertical line length. Valid line number of a frame.</description>
                <bitRange>[28:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>VER_START</name>
                <description>Vertical line start. Data is valid from this line.</description>
                <bitRange>[12:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>CSI0_CAP_REG</name>
          <description>CSI Capture Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>VCAP_ON</name>
              <description>Video capture control: Capture the video image data stream. 
0: Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is written to output FIFO. 
1: Enable video capture The CSI starts capturing image data at the start of the next frame.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is written to output FIFO.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable video capture The CSI starts capturing image data at the start of the next frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCAP_ON</name>
              <description>Still capture control: Capture a single still image frame. 
0: Disable still capture. 
1: Enable still capture The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared, and it always reads as a 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable still capture.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable still capture The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared, and it always reads as a 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_CFG_REG</name>
          <description>CSI Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x300205</resetValue>
          <resetMask>0x7F0F07</resetMask>
          <fields>
            <field>
              <name>INPUT_FMT</name>
              <description>Input data format 
000: RAW stream 
001: reserved 
010: CCIR656(one channel 
011: YUV422 
100: YUV422 16bit data bus 
101: two channel CCIR656 
110: reserved 
111: four channel CCIR656</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTPUT_FMT</name>
              <description>Output data format When the input format is set RAW stream 
0000: pass-through When the input format is set CCIR656 interface 
0000: field planar YCbCr 422 
0001: field planar YCbCr 420 
0010: frame planar YCbCr 420 
0011: frame planar YCbCr 422 
0100: field planar YCbCr 422 UV combined 
0101: field planar YCbCr 420 UV combined 
0110: frame planar YCbCr 420 UV combined 
0111: frame planar YCbCr 422 UV combined 
1111: interlaced interleaved YCbCr422. In this mode, capturing interlaced input and output the interlaced fields from individual ports. Field 1 data will be written to FIFO0 output buffer and field 2 data will be written to FIFO1 output buffer. 
1000: field MB YCbCr 422 
1001: field MB YCbCr 420 
1010: frame MB YCbCr 420 
1011: frame MB YCbCr 422 When the input format is set YUV422 
0000: planar YUV 422 
0001: planar YUV 420 
0100: planar YUV 422 UV combined 
0101: planar YUV 420 UV combined 
1000: MB YUV 422 
1001: MB YUV 420</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>Field selection. Applies to CCIR656 interface only. 
00: start capturing with field 1. 
01: start capturing with field 2. 
10: start capturing with either field. 
11: reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>start_capturing_with_field_1</name>
                  <description>start capturing with field 1.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>start_capturing_with_field_2</name>
                  <description>start capturing with field 2.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>start_capturing_with_either_field</name>
                  <description>start capturing with either field.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_SEQ</name>
              <description>Input data sequence, only valid for YUV422 mode. 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREF_POL</name>
              <description>Vref polarity 
0: negative 
1: positive This register is not applied to CCIR656 interface.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HERF_POL</name>
              <description>Href polarity 
0: negative 
1: positive This register is not applied to CCIR656 interface.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_POL</name>
              <description>Data clock type 
0: active in rising edge 
1: active in falling edge</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_in_rising_edge</name>
                  <description>active in rising edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_in_falling_edge</name>
                  <description>active in falling edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_EN_REG</name>
          <description>CSI Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x31D</resetMask>
          <fields>
            <field>
              <name>PCLK_CNT</name>
              <description>Pclk count per frame</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_EN</name>
              <description>Luma enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NON16_ADD</name>
              <description>Non-16 add 0x00</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_FIFO_EN</name>
              <description>Read fifo [3]fifo enable, fifo address[01c09800~01c09ffc]</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_REV</name>
              <description>CCIR656 field_reverse</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_EN</name>
              <description>Enable 
0: Reset and disable the CSI module 
1: Enable the CSI module</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset_and</name>
                  <description>Reset and disable the CSI module</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the CSI module</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_SCALE_REG</name>
          <description>CSI Scale Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0xF00FFFF</resetValue>
          <resetMask>0xF00FFFF</resetMask>
          <fields>
            <field>
              <name>VER_MASK</name>
              <description>Vertical (line) mask. Every 4-line is a mask group. Bit 24 mask the first line, bit 25 mask the second line, and so on. Mask bit = 0 means discarding this line data.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOR_MASK</name>
              <description>Horizontal (datastream) mask. Every 16-byte is a mask group. Bit 0 masks the first byte, bit 1 masks the second byte, and so on. Mask bit = 0 means discarding this byte from the datastream.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_BUF_CTL_REG</name>
          <description>CSI1_C0_BUF_CTL_REG</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DBN</name>
              <description>Buffer selected at next storing for CSI 
0: Next buffer selection is buffer-A 
1: Next buffer selection is buffer-B</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>buffer_minus_A</name>
                  <description>Next buffer selection is buffer-A</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>buffer_minus_B</name>
                  <description>Next buffer selection is buffer-B</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBS</name>
              <description>output buffer selected status 
0: Selected output buffer-A 
1: Selected output buffer-B</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Selected_output_buffer_minus_A</name>
                  <description>Selected output buffer-A</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Selected_output_buffer_minus_B</name>
                  <description>Selected output buffer-B</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBE</name>
              <description>Double buffer mode enable 
0: Disable 
1: Enable If the double buffer mode is disabled, the buffer-A will be always selected by CSI module.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If the double buffer mode is disabled, the buffer-A will be always selected by CSI module.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_BUF_LEN_REG</name>
          <description>CSI1_C0_BUF_LEN_REG</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x280</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>BUF_LEN</name>
              <description>Buffer length of a line. Unit is byte. It is the max of the 3 FIFOs</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_BUF_STA_REG</name>
          <description>CSI1_C0_BUF_STA_REG</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF03</resetMask>
          <fields>
            <field>
              <name>LUM_STATIS</name>
              <description>Luminance statistical value When frame done interrupt flag come, value is ready and will last until next frame done. For raw data, value = (G&gt;&gt;1+R+G)&gt;&gt;8 For yuv422, value = Y&gt;&gt;8</description>
              <bitRange>[31:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCAP_STA</name>
              <description>Video capture in progress Indicates the CSI is capturing video image data (multiple frames). The bit is set at the start of the first frame after enabling video capture. When software disables video capture, it clears itself after the last pixel of the current frame is captured.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCAP_STA</name>
              <description>Still capture in progress Indicates the CSI is capturing still image data (single frame). The bit is set at the start of the first frame after enabling still frame capture. It clears itself after the last pixel of the first frame is captured. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means filed end.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_F0_BUFA_REG</name>
          <description>CSI1_C0_F0_BUFA_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F0_BUFA</name>
              <description>FIFO 0 output buffer-A address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_F0_BUFB_REG</name>
          <description>CSI1_C0_F0_BUFB_REG</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F0_BUFB</name>
              <description>FIFO 0 output buffer-B address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_F1_BUFA_REG</name>
          <description>CSI1_C0_F1_BUFA_REG</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F1_BUFA</name>
              <description>FIFO 1 output buffer-A address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_F1_BUFB_REG</name>
          <description>CSI1_C0_F1_BUFB_REG</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F1_BUFB</name>
              <description>FIFO 1 output buffer-B address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_F2_BUFA_REG</name>
          <description>CSI1_C0_F2_BUFA_REG</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F2_BUFA</name>
              <description>FIFO 2 output buffer-A address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_F2_BUFB_REG</name>
          <description>CSI1_C0_F2_BUFB_REG</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F2_BUFB</name>
              <description>FIFO 2 output buffer-B address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_HSIZE_REG</name>
          <description>CSI1_C0_HSIZE_REG</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x5000000</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>HOR_LEN</name>
              <description>Horizontal pixel clock length. Valid pixel clocks of a line.</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOR_START</name>
              <description>Horizontal pixel clock start.Pixel data is valid from this clock.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_INT_EN_REG</name>
          <description>CSI1_C0_INT_EN_REG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>VS_INT_EN</name>
              <description>vsync flag The bit is set when vsync come. And at this time load the buffer address for the coming frame. So after this irq come, change the buffer address could only effect next frame</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HB_OF_INT_EN</name>
              <description>Hblank FIFO overflow The bit is set when 3 FIFOs still overflow after the hblank.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO2_OF_INT_EN</name>
              <description>FIFO 2 overflow The bit is set when the FIFO 2 become overflow.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO1_OF_INT_EN</name>
              <description>FIFO 1 overflow The bit is set when the FIFO 1 become overflow.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO0_OF_INT_EN</name>
              <description>FIFO 0 overflow The bit is set when the FIFO 0 become overflow.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FD_INT_EN</name>
              <description>Frame done Indicates the CSI has finished capturing an image frame. Applies to video capture mode. The bit is set after each completed frame capturing data is written to buffer as long as video capture remains enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CD_INT_EN</name>
              <description>Capture done Indicates the CSI has completed capturing the image data. For still capture, the bit is set when one frame data has been written to buffer. For video capture, the bit is set when the last frame has been written to buffer after video capture has been disabled. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means field end.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_INT_STA_REG</name>
          <description>CSI1_C0_INT_STA_REG</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>VS_PD</name>
              <description>vsync flag</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>HB_OF_PD</name>
              <description>Hblank FIFO overflow</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FIFO2_OF_PD</name>
              <description>FIFO 2 overflow</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FIFO1_OF_PD</name>
              <description>FIFO 1 overflow</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FIFO0_OF_PD</name>
              <description>FIFO 0 overflow</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FD_PD</name>
              <description>Frame done</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CD_PD</name>
              <description>Capture done</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_C0_VSIZE_REG</name>
          <description>CSI1_C0_VSIZE_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x1E00000</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>VER_LEN</name>
              <description>Vertical line length. Valid line number of a frame.</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VER_START</name>
              <description>Vertical line start. data is valid from this line.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_CAP_REG</name>
          <description>CSI Capture Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>VCAP_ON</name>
              <description>Video capture control: Capture the video image data stream. 
0: Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is written to output FIFO. 
1: Enable video capture The CSI starts capturing image data at the start of the next frame.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is written to output FIFO.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable video capture The CSI starts capturing image data at the start of the next frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCAP_ON</name>
              <description>Still capture control: Capture a single still image frame. 
0: Disable still capture. 
1: Enable still capture The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared ,and it always reads as a 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable still capture.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable still capture The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared ,and it always reads as a 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_CFG_REG</name>
          <description>CSI Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x300205</resetValue>
          <resetMask>0x7F0F1F</resetMask>
          <fields>
            <field>
              <name>INPUT_FMT</name>
              <description>Input data format 
000: RAW stream 
001: reserved 
010: CCIR656(one channel) 
011: YUV422 
100: YUV444({R, B, G} or {Pr, Pb, Y}) 
101: two channel CCIR656 
110: reserved 
111: four channel CCIR656</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAW</name>
                  <description>RAW stream</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR656_openingparen_one</name>
                  <description>CCIR656(one channel)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV444_openingparen__openingbrace_R</name>
                  <description>YUV444({R, B, G} or {Pr, Pb, Y})</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>two</name>
                  <description>two channel CCIR656</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>four</name>
                  <description>four channel CCIR656</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUTPUT_FMT</name>
              <description>Output data format When the input format is set RAW stream 
0000: pass-through When the input format is set CCIR656 interface 
0000: field planar YCbCr 422 
0001: field planar YCbCr 420 
0010: frame planar YCbCr 420 
0011: frame planar YCbCr 422 
0100: field planar YCbCr 422 UV combined 
0101: field planar YCbCr 420 UV combined 
0110: frame planar YCbCr 420 UV combined 
0111: frame planar YCbCr 422 UV combined 
1111: interlaced interleaved YCbCr422. In this mode, capturing interlaced input and output the interlaced fields from individual ports. Field 1 data will be written to FIFO0 output buffer and field 2 data will be written to FIFO1 output buffer. 
1000: field MB YCbCr 422 
1001: field MB YCbCr 420 
1010: frame MB YCbCr 420 
1011: frame MB YCbCr 422 When the input format is set YUV422 
0000: planar YUV 422 
0001: planar YUV 420 
0100: planar YUV 422 UV combined 
0101: planar YUV 420 UV combined 
1000: MB YUV 422 
1001: MB YUV 420 When the input format is set YUV444 
1100: field planar YUV 444 
1101: field planar YUV 422 UV combined 
1110: frame planar YUV 444 
1111: frame planar YUV 422 UV combined</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>Field selection. Applies to CCIR656 interface only. 
00: start capturing with field 1. 
01: start capturing with field 2. 
10: start capturing with either field. 
11: reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>start_capturing_with_field_1</name>
                  <description>start capturing with field 1.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>start_capturing_with_field_2</name>
                  <description>start capturing with field 2.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>start_capturing_with_either_field</name>
                  <description>start capturing with either field.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_SEQ</name>
              <description>Input data sequence, only valid for YUV422 mode. 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FPS_DS</name>
              <description>Fps down sample 
0: no down sample 
1: 1/2 fps, only receives the first frame every 2 frames</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_down</name>
                  <description>no down sample</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_slash_2</name>
                  <description>1/2 fps, only receives the first frame every 2 frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIELD_POL</name>
              <description>Field polarity 
0: negative(field=0 indicate odd, field=1 indicate even ) 
1: positive(field=1 indicate odd, field=0 indicate even ) This register is not applied to CCIR656 interface.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative_openingparen_field_equals_0</name>
                  <description>negative(field=0 indicate odd, field=1 indicate even )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive_openingparen_field_equals_1</name>
                  <description>positive(field=1 indicate odd, field=0 indicate even ) This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREF_POL</name>
              <description>Vref polarity 
0: negative 
1: positive This register is not applied to CCIR656 interface.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HERF_POL</name>
              <description>Href polarity 
0: negative 
1: positive This register is not applied to CCIR656 interface.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_POL</name>
              <description>Data clock type 
0: active in rising edge 
1: active in falling edge</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_in_rising_edge</name>
                  <description>active in rising edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_in_falling_edge</name>
                  <description>active in falling edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_EN_REG</name>
          <description>CSI Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x31D</resetMask>
          <fields>
            <field>
              <name>PCLK_CNT</name>
              <description>Pclk count per frame</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_EN</name>
              <description>Luma enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NON16_ADD</name>
              <description>Non-16 add 0x00</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_FIFO_EN</name>
              <description>Read fifo [3]fifo enable, fifo address[01c09800~01c09ffc]</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_REV</name>
              <description>CCIR656 field_reverse</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_EN</name>
              <description>Enable 
0: Reset and disable the CSI module 
1: Enable the CSI module</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset_and</name>
                  <description>Reset and disable the CSI module</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the CSI module</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_SCALE_REG</name>
          <description>CSI Scale Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0xF00FFFF</resetValue>
          <resetMask>0xF00FFFF</resetMask>
          <fields>
            <field>
              <name>VER_MASK</name>
              <description>Vertical (line) mask. Every 4-line is a mask group. Bit 24 masks the first line, bit 25 masks the second line, and so on. Mask bit = 0 means discarding this line data.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOR_MASK</name>
              <description>Horizontal (datastream) mask. Every 16-byte is a mask group. Bit 0 masks the first byte, bit 1 masks the second byte, and so on. Mask bit = 0 means discarding this byte from the datastream.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CSI1</name>
      <description>CSI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1D000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CSI1_CAP_REG</name>
          <description>CSI Capture Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>VCAP_ON</name>
              <description>Video capture control: Capture the video image data stream. 
0: Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is written to output FIFO. 
1: Enable video capture The CSI starts capturing image data at the start of the next frame.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is written to output FIFO.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable video capture The CSI starts capturing image data at the start of the next frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCAP_ON</name>
              <description>Still capture control: Capture a single still image frame. 
0: Disable still capture. 
1: Enable still capture The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared ,and it always reads as a 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable still capture.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable still capture The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared ,and it always reads as a 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_CFG_REG</name>
          <description>CSI Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x300205</resetValue>
          <resetMask>0x7F0F1F</resetMask>
          <fields>
            <field>
              <name>INPUT_FMT</name>
              <description>Input data format 
000: RAW stream 
001: reserved 
010: CCIR656(one channel) 
011: YUV422 
100: YUV444({R, B, G} or {Pr, Pb, Y}) 
101: two channel CCIR656 
110: reserved 
111: four channel CCIR656</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAW</name>
                  <description>RAW stream</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR656_openingparen_one</name>
                  <description>CCIR656(one channel)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV444_openingparen__openingbrace_R</name>
                  <description>YUV444({R, B, G} or {Pr, Pb, Y})</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>two</name>
                  <description>two channel CCIR656</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>four</name>
                  <description>four channel CCIR656</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUTPUT_FMT</name>
              <description>Output data format When the input format is set RAW stream 
0000: pass-through When the input format is set CCIR656 interface 
0000: field planar YCbCr 422 
0001: field planar YCbCr 420 
0010: frame planar YCbCr 420 
0011: frame planar YCbCr 422 
0100: field planar YCbCr 422 UV combined 
0101: field planar YCbCr 420 UV combined 
0110: frame planar YCbCr 420 UV combined 
0111: frame planar YCbCr 422 UV combined 
1111: interlaced interleaved YCbCr422. In this mode, capturing interlaced input and output the interlaced fields from individual ports. Field 1 data will be written to FIFO0 output buffer and field 2 data will be written to FIFO1 output buffer. 
1000: field MB YCbCr 422 
1001: field MB YCbCr 420 
1010: frame MB YCbCr 420 
1011: frame MB YCbCr 422 When the input format is set YUV422 
0000: planar YUV 422 
0001: planar YUV 420 
0100: planar YUV 422 UV combined 
0101: planar YUV 420 UV combined 
1000: MB YUV 422 
1001: MB YUV 420 When the input format is set YUV444 
1100: field planar YUV 444 
1101: field planar YUV 422 UV combined 
1110: frame planar YUV 444 
1111: frame planar YUV 422 UV combined</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>Field selection. Applies to CCIR656 interface only. 
00: start capturing with field 1. 
01: start capturing with field 2. 
10: start capturing with either field. 
11: reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>start_capturing_with_field_1</name>
                  <description>start capturing with field 1.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>start_capturing_with_field_2</name>
                  <description>start capturing with field 2.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>start_capturing_with_either_field</name>
                  <description>start capturing with either field.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_SEQ</name>
              <description>Input data sequence, only valid for YUV422 mode. 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FPS_DS</name>
              <description>Fps down sample 
0: no down sample 
1: 1/2 fps, only receives the first frame every 2 frames</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_down</name>
                  <description>no down sample</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_slash_2</name>
                  <description>1/2 fps, only receives the first frame every 2 frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIELD_POL</name>
              <description>Field polarity 
0: negative(field=0 indicate odd, field=1 indicate even ) 
1: positive(field=1 indicate odd, field=0 indicate even ) This register is not applied to CCIR656 interface.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative_openingparen_field_equals_0</name>
                  <description>negative(field=0 indicate odd, field=1 indicate even )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive_openingparen_field_equals_1</name>
                  <description>positive(field=1 indicate odd, field=0 indicate even ) This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREF_POL</name>
              <description>Vref polarity 
0: negative 
1: positive This register is not applied to CCIR656 interface.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HERF_POL</name>
              <description>Href polarity 
0: negative 
1: positive This register is not applied to CCIR656 interface.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not applied to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_POL</name>
              <description>Data clock type 
0: active in rising edge 
1: active in falling edge</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_in_rising_edge</name>
                  <description>active in rising edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_in_falling_edge</name>
                  <description>active in falling edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_EN_REG</name>
          <description>CSI Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x31D</resetMask>
          <fields>
            <field>
              <name>PCLK_CNT</name>
              <description>Pclk count per frame</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_EN</name>
              <description>Luma enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NON16_ADD</name>
              <description>Non-16 add 0x00</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RD_FIFO_EN</name>
              <description>Read fifo [3]fifo enable, fifo address[01c09800~01c09ffc]</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_REV</name>
              <description>CCIR656 field_reverse</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_EN</name>
              <description>Enable 
0: Reset and disable the CSI module 
1: Enable the CSI module</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset_and</name>
                  <description>Reset and disable the CSI module</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the CSI module</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI1_SCALE_REG</name>
          <description>CSI Scale Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0xF00FFFF</resetValue>
          <resetMask>0xF00FFFF</resetMask>
          <fields>
            <field>
              <name>VER_MASK</name>
              <description>Vertical (line) mask. Every 4-line is a mask group. Bit 24 masks the first line, bit 25 masks the second line, and so on. Mask bit = 0 means discarding this line data.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOR_MASK</name>
              <description>Horizontal (datastream) mask. Every 16-byte is a mask group. Bit 0 masks the first byte, bit 1 masks the second byte, and so on. Mask bit = 0 means discarding this byte from the datastream.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON_TOP</name>
      <description>TCON_TOP</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C70000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>12</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON1_FILL_BEGIN_REG</name>
            <description>TCON1 Fill Data Begin Register (N=0,1,2)</description>
            <addressOffset>0x1E8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_BEGIN</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_DATA0_REG</name>
            <description>TCON1 Fill Data Value Register (N=0,1,2)</description>
            <addressOffset>0x1F0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_VALUE</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_END_REG</name>
            <description>TCON1 Fill Data End Register (N=0,1,2)</description>
            <addressOffset>0x1EC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_END</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_ADD_REG</name>
            <description>TCON CEU Coefficient Register1 (N=0,1,2)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc</description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_RANGE_REG</name>
            <description>TCON_CEU_COEF_RANGE_REG</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>unsigned 8bit value, range of [0,255]</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU_COEF_RANGE_MAX</name>
                <description>unsigned 8bit value, range of [0,255]</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_RANG_REG</name>
            <description>TCON CEU Coefficient Register2 (N=0,1,2)</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU</name>
                <description>COEF_RANGE_MAX Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>DE_PORT_SELECT_REG</name>
          <description>DE_PORT_SELECT_REG</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x33</resetMask>
          <fields>
            <field>
              <name>DE_PORT1</name>
              <description>PERH Select. 00:TCON_LCD0 01:TCON_LCD1 10:TCON_TV0 11:TCON_TV1 Note: The priority of DE0 is higher than DE1. If TCON_LCD0 selects DE0 and DE1 as source at the same time, then DE0 will be used for the source of TCON_LCD0.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_PORT0</name>
              <description>PERH Select. 00:TCON_LCD0 01:TCON_LCD1 10:TCON_TV0 11:TCON_TV1 Note: The priority of DE0 is higher than DE1. If TCON_LCD0 selects DE0 and DE1 as source at the same time, then DE0 will be used for the source of TCON_LCD0.</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_LVDS0_ANA_REG</name>
          <description>LCD_LVDS0_ANA_REG</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC1FFF333</resetMask>
          <fields>
            <field>
              <name>LVDS0_EN_MB</name>
              <description>Enable the bias circuit of the LVDS_Ana module</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_EN_LDO</name>
              <description>LVDS0_EN_LDO</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_EN_DRVC</name>
              <description>Enable all circuits working when transmitting the data in channel clock of LVDS_tx0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_EN_DRV</name>
              <description>Enable all circuits working when transmitting the data in channel&lt;3:0&gt; of LVDS_tx0</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_DRAM_TEST</name>
              <description>0:dram test clk disable 1:dram test clk enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_C</name>
              <description>Adjust current flowing through Rload of Rx to change the differential signals amplitude 00:250mV    01:300mV 10:350mV    11:400mV</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_DENC</name>
              <description>Choose data output or PLL test clock output in LVDS_tx</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_DEN</name>
              <description>Choose data output or PLL test clock output in LVDS_tx</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_V</name>
              <description>Adjust common mode voltage of the differential signals in five channels. single signal high level: 00:1.1V    01:1.19V 10:1.3V    11:1.43V</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_PD</name>
              <description>Fine adjust the slew rate of output data</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_PWSLV</name>
              <description>Adjust voltage amplitude of low power in LVDS_Ana</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_PWSMB</name>
              <description>Adjust voltage amplitude of mbias voltage reference in LVDS_Ana</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LCD_LVDS1_ANA_REG</name>
          <description>LCD_LVDS1_ANA_REG</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC1FFF333</resetMask>
          <fields>
            <field>
              <name>LVDS1_EN_MB</name>
              <description>Enable the bias circuit of the LVDS_Ana module</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_EN_LDO</name>
              <description>LVDS1_EN_LDO</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_EN_DRVC</name>
              <description>Enable all circuits working when transmitting the data in channel clock of LVDS_tx0</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_EN_DRV</name>
              <description>Enable all circuits working when transmitting the data in channel&lt;3:0&gt; of LVDS_tx0</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_DRAM_TEST</name>
              <description>0:dram test clk disable 1:dram test clk enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_C</name>
              <description>Adjust current flowing through Road of Rx to change the differential signals amplitude 00:250mV    01:300mV 10:350mV    11:400mV</description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_DENC</name>
              <description>Choose data output or PLL test clock output in LVDS_tx</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_DEN</name>
              <description>Choose data output or PLL test clock output in LVDS_tx</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_V</name>
              <description>Adjust common mode voltage of the differential signals in five channels. single signal high level: 00:1.1V    01:1.19V 10:1.3V    11:1.43V</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_PD</name>
              <description>Fine adjust the slew rate of output data</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_PWSLV</name>
              <description>Adjust voltage amplitude of low power in LVDS_Ana</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS1_REG_PWSMB</name>
              <description>Adjust voltage amplitude of mbias voltage reference in LVDS_Ana</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_3D_FIFO_REG</name>
          <description>TCON0 3D FIFO Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FF3</resetMask>
          <fields>
            <field>
              <name>3D_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_FIFO_HALF_LINE_SIZE</name>
              <description>The number of data in half line=3D_FIFO_HALF_LINE_SIZE+1. Only valid when 3D_FIFO_SETTING set as 2</description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_FIFO</name>
              <description>00: by pass 
01: used as normal FIFO 
10: used as 3D interlace FIFO 
11: reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC0_REG</name>
          <description>TCON0 Basic Timing Register0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON0_X</name>
              <description>Panel width is X+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_Y</name>
              <description>Panel height is Y+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC1_REG</name>
          <description>TCON0 Basic Timing Register1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>Thcycle = (HT+1) * Tdclk Computation 1) parallel:HT = X + BLANK Limitation: 1) parallel :HT &gt;= (HBP +1) + (X+1) +2 2) serial 1: HT &gt;= (HBP +1) + (X+1) *3+2 3) serial 2: HT &gt;= (HBP +1) + (X+1) *3/2+2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch (in dclk) Thbp = (HBP +1) * Tdclk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC2_REG</name>
          <description>TCON0 Basic Timing Register2</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>TVT = (VT)/2 * Thsync Note: VT/2 &gt;= (VBP+1 ) + (Y+1) +2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>Tvbp = (VBP +1) * Thsync</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC3_REG</name>
          <description>TCON0 Basic Timing Register3</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>Thspw = (HSPW+1) * Tdclk Note: HT&gt; (HSPW+1)</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>Tvspw = (VSPW+1) * Thsync Note: VT/2 &gt; (VSPW+1)</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_IF_REG</name>
          <description>TCON0 CPU Panel Interface Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF6C3000F</resetMask>
          <fields>
            <field>
              <name>CPU_MODE</name>
              <description>0000: 18bit/256K mode 
0010: 16bit mode0 
0100: 16bit mode1 
0110: 16bit mode2 
1000: 16bit mode3 
1010: 9bit mode 
1100: 8bit 256K mode 
1110: 8bit 65K mode 
xxx1: 24bit for DSI</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_18bit_slash_256K_mode</name>
                  <description>18bit/256K mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode0</name>
                  <description>16bit mode0</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode1</name>
                  <description>16bit mode1</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode2</name>
                  <description>16bit mode2</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode3</name>
                  <description>16bit mode3</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9bit_mode</name>
                  <description>9bit mode</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_256K_mode</name>
                  <description>8bit 256K mode</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_65K_mode</name>
                  <description>8bit 65K mode</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit_for</name>
                  <description>24bit for DSI</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA</name>
              <description>pin A1 value in 8080 mode auto/flash states</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CA</name>
              <description>pin A1 value in 8080 mode WR/RD execute</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_FLAG</name>
              <description>0:Write operation is finishing 1:Write operation is pending</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_FLAG</name>
              <description>0:Read operation is finishing 1:Read operation is pending</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AUTO</name>
              <description>auto Transfer Mode: If it is 1, all the valid data during this frame are written to panel. Note: This bit is sampled by Vsync</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLUSH</name>
              <description>direct transfer mode If it is enabled, FIFO1 is regardless of the HV timing, pixels data keep being transferred unless the input FIFO was empty. Data output rate control by DCLK.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable Entry addr is 0xFF8</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Entry addr is 0xFF8</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIGGER_FIFO_EN</name>
              <description>0:Enable 1:Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_START</name>
              <description>Write `1` to start a frame flush, writing`0` has no effect. This flag indicated frame flush is running. Software must make sure that write `1` only when this flag is `0`.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
            </field>
            <field>
              <name>TRIGGER_EN</name>
              <description>0: Trigger mode disable 
1: Trigger mode enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Trigger mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Trigger mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD0_REG</name>
          <description>TCON0 CPU Panel Read Data Register0</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_READ0</name>
              <description>Data read on 8080 bus, launch a new read operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD1_REG</name>
          <description>TCON0 CPU Panel Read Data Register1</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_READ1</name>
              <description>Data_READ1 Data read on 8080 bus, without a new read operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI0_REG</name>
          <description>TCON0 CPU Panel Trigger Register0</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_SPACE</name>
              <description>should be set &gt;20*pixel_cycle</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLOCK_SIZE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI1_REG</name>
          <description>TCON0 CPU Panel Trigger Register1</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_CURRENT_NUM</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BLOCK_NUM</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI2_REG</name>
          <description>TCON0 CPU Panel Trigger Register2</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0x200000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>START_DELAY</name>
              <description>Tdly = (Start_Delay +1) * be_clk*8</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_MODE</name>
              <description>0: ecc_fifo+tri_fifo 
1: tri_fifo</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ecc_fifo_plus_tri_fifo</name>
                  <description>ecc_fifo+tri_fifo</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>tri_fifo</name>
                  <description>tri_fifo</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNC_MODE</name>
              <description>0x: auto 
10: 0 
11: 1</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_START_SET</name>
              <description></description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI3_REG</name>
          <description>TCON0 CPU Panel Trigger Register3</description>
          <addressOffset>0x16C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30FFFFFF</resetMask>
          <fields>
            <field>
              <name>TRI_INT_MODE</name>
              <description>00: disable 
01: counter mode 
10: te rising mode 
11: te falling mode when set as 01, Tri_Counter_Int occur in cycle of (Count_N+1)&#215;(Count_M+1)&#215;4 dclk. when set as 10 or 11, io0 is map as TE input.</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_N</name>
              <description></description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_M</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI4_REG</name>
          <description>TCON0 CPU Panel Trigger Register4</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x11FFFFFF</resetMask>
          <fields>
            <field>
              <name>PLUG_MODE_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A1</name>
              <description>Valid in first Block</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in first Block</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI5_REG</name>
          <description>TCON0 CPU Panel Trigger Register5</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>A1</name>
              <description>Valid in Block except first</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in Block except first</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_WRITE_REG</name>
          <description>TCON0 CPU Panel Write Data Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_WRITE</name>
              <description>Data write on 8080 bus, launch a write operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CTL_REG</name>
          <description>TCON0 Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x93F001F7</resetMask>
          <fields>
            <field>
              <name>TCON0_EN</name>
              <description>TCON0_EN  
0: Disable 
1: Enable Note: It executes at the beginning of the first blank line of TCON0 timing.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: It executes at the beginning of the first blank line of TCON0 timing.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_WORK_MODE</name>
              <description>TCON0_WORK_MODE 
0: Normal 
1: Dynamic freq</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dynamic</name>
                  <description>Dynamic freq</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0</name>
              <description>TCON0_IF 
00: HV(Sync+DE) 
01: 8080 I/F 
1x: Reservd</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HV_openingparen_Sync_plus_DE_closingparen_</name>
                  <description>HV(Sync+DE)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8080</name>
                  <description>8080 I/F</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reservd</name>
                  <description>Reservd</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_RB_SWAP</name>
              <description>TCON0_RB_SWAP 
0: Default 
1: Swap RED and BLUE data at FIFO1</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Swap</name>
                  <description>Swap RED and BLUE data at FIFO1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_TEST_VALUE</name>
              <description>TCON0_TEST_VALUE 0:all 0s 1:all 1s</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_FIFO1_RST_WRITING_AND_THEN</name>
              <description>TCON0_FIFO1_RST Writing 1 and then 0 at this bit will reset FIFO 1 Note: 1 holding time must more than 1 DCLK</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_INTERLACE_EN</name>
              <description>TCON0_INTERLACE_EN 0:Disable 1:Enable This flag is valid only when TCON0_EN = 1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_START_DELAY_STA_DELAY_THIS_FLAG</name>
              <description>TCON0_START_DELAY STA delay This flag is valid only when TCON0_EN = 1</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_SRC_SEL</name>
              <description>TCON0_SRC_SEL  
000: DE0 
001: Color Check 
010: Grayscale Check 
011: Black by White Check 
100: Test Data all 0 
101: Test Data all 1 
111: Gridding Check</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_DCLK_REG</name>
          <description>TCON0 Data Clock Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000007F</resetMask>
          <fields>
            <field>
              <name>TCON0_DCLK_EN</name>
              <description>LCLK_EN[3:0] :TCON0 clock enable 4'h0, 'h4,4'h6,4'ha7:dclk_en=0;dclk1_en=0;dclk2_en=0;dclkm2_en=0;       4'h1: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 0;       4'h2: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 1;       4'h3: dclk_en = 1; dclk1_en = 1; dclk2_en = 0; dclkm2_en = 0;       4'h5: dclk_en = 1; dclk1_en = 0; dclk2_en = 1; dclkm2_en = 0;       4'h8,4'h9,4'ha,4'hb,4'hc,4'hd,4'he,4'hf: dclk_en = 1; dclk1_en = 1; dclk2_en = 1; dclkm2_en = 1;</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_DCLK_DIV</name>
              <description>Tdclk = Tsclk * DCLKDIV If dclk1&amp;dclk2 used DCLKDIV &gt;=6 If dclk only DCLKDIV &gt;=1</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_FRM_CTL_REG</name>
          <description>TCON FRM Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000073</resetMask>
          <fields>
            <field>
              <name>TCON0_FRM_EN</name>
              <description>0:Disable 1:Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_FRM_MODE_R</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_G</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_B</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_TEST</name>
              <description>00: FRM 
01: half 5/6bit, half FRM 
10: half 8bit, half FRM 
11: half 8bit, half 5/6bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_SEED_REG[%s]</name>
          <description>TCON FRM Seed Register (N=0,1,2,3,4,5)</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SEED_VALUE</name>
              <description>N=0: Pixel_Seed_R N=1: Pixel_Seed_G N=2: Pixel_Seed_B N=3: Line_Seed_R N=4: Line_Seed_G N=5: Line_Seed_B Note: Avoid to set it to 0</description>
              <bitRange>[24:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_TAB_REG[%s]</name>
          <description>TCON FRM Table Register (N=0,1,2,3)</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRM_TABLE_VALUE</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_HV_IF_REG</name>
          <description>TCON0 HV Panel Interface Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF80000</resetMask>
          <fields>
            <field>
              <name>HV_MODE</name>
              <description>0000: 24bit/1cycle parallel mode 
1000: 8bit/3cycle RGB serial mode(RGB888) 
1010: 8bit/4cycle Dummy RGB(DRGB) 
1011: 8bit/4cycle RGB Dummy(RGBD) 
1100: 8bit/2cycle YUV serial mode(CCIR656)</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24bit_slash_1cycle_parallel_mode</name>
                  <description>24bit/1cycle parallel mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_3cycle_RGB</name>
                  <description>8bit/3cycle RGB serial mode(RGB888)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_Dummy</name>
                  <description>8bit/4cycle Dummy RGB(DRGB)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_RGB</name>
                  <description>8bit/4cycle RGB Dummy(RGBD)</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_2cycle_YUV</name>
                  <description>8bit/2cycle YUV serial mode(CCIR656)</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGB888_SM0</name>
              <description>serial RGB888 mode output sequence at odd lines of the panel (line 1, 3, 5, 7...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RGB888_SM1</name>
              <description>serial RGB888 mode output sequence at even lines of the panel (line 2, 4, 6, 8...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YUV_SM</name>
              <description>serial YUV mode output sequence 2-pixel-pair of every scan line 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YUV</name>
              <description>EAV/SAV F LINE DELAY 00:F toggle right after active video line 01:delay 2 line(CCIR PAL) 10:delay 3 line(CCIR NTSC) 11:reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCIR_CSC_DIS</name>
              <description>0: Enable 
1: Disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_POL_REG</name>
          <description>TCON0 IO Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO_OUTPUT_SEL</name>
              <description>0: normal output 
1: register output when set as `1`, d*23:0+, io0, io1,io3 sync to dclk</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>register</name>
                  <description>register output when set as `1`, d*23:0+, io0, io1,io3 sync to dclk</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCLK_SEL</name>
              <description>000: used DCLK0(normal phase offset) 
001: used DCLK1(1/3 phase offset) 
010: used DCLK2(2/3 phase offset) 
101: DCLK0/2  phase 0 
100: DCLK0/2  phase 90 Others: Reserved</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used_DCLK0_openingparen_normal_phase</name>
                  <description>used DCLK0(normal phase offset)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK1_openingparen_1_slash_3_phase</name>
                  <description>used DCLK1(1/3 phase offset)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK2_openingparen_2_slash_3_phase</name>
                  <description>used DCLK2(2/3 phase offset)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_0</name>
                  <description>DCLK0/2  phase 0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_90</name>
                  <description>DCLK0/2  phase 90 Others: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON0 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_TRI_REG</name>
          <description>TCON0 IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>RGB_ENDIAN</name>
              <description>0: Normal 
1: Bits_invert</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bits_invert</name>
                  <description>Bits_invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON0 output port D[23:0] output enable, with independent bit control: 1s: Disable 0s: Enable</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_LVDS_IF_REG</name>
          <description>TCON0_LVDS_IF_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9C800000</resetMask>
          <fields>
            <field>
              <name>TCON0_LVDS_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_DIR</name>
              <description>1: Normal 
2: Reversed Note: LVDS direction</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_MODE</name>
              <description>0: NS mode 
1: JEIDA mode</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NS_mode</name>
                  <description>NS mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JEIDA_mode</name>
                  <description>JEIDA mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_BITWIDTH</name>
              <description>0: 24bit 
1: 18bit</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24bit</name>
                  <description>24bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_18bit</name>
                  <description>18bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_CORRECT_MODE</name>
              <description>0: Mode0 
1: Mode1</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode0</name>
                  <description>Mode0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode1</name>
                  <description>Mode1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC0_REG</name>
          <description>TCON1 Basic Timing Register0</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XI</name>
              <description>source width is X+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YI</name>
              <description>source height is Y+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC1_REG</name>
          <description>TCON1 Basic Timing Register1</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>LS_XO</name>
              <description>width is LS_XO+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS_YO</name>
              <description>width is LS_YO+1 This version LS_YO = TCON1_YI</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC2_REG</name>
          <description>TCON1 Basic Timing Register2</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XO</name>
              <description>width is TCON1_XO+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YO</name>
              <description>height is TCON1_YO+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC3_REG</name>
          <description>TCON1 Basic Timing Register3</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>horizontal total time Thcycle = (HT+1) * Thdclk</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch Thbp = (HBP +1) * Thdclk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC4_REG</name>
          <description>TCON1 Basic Timing Register4</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>horizontal total time (in HD line) Tvt = VT/2 * Th</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>horizontal back porch (in HD line) Tvbp = (VBP +1) * Th</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC5_REG</name>
          <description>TCON1 Basic Timing Register5</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>horizontal Sync Pulse Width (in dclk) Thspw = (HSPW+1) * Tdclk Note: HT &gt; (HSPW+1)</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>vertical Sync Pulse Width (in lines) Tvspw = (VSPW+1) * Th Note: VT/2 &gt; (VSPW+1)</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CTL_REG</name>
          <description>TCON1 Control Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800001F2</resetMask>
          <fields>
            <field>
              <name>TCON1_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>START_DELAY</name>
              <description>This is for DE0 and DE1</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_SRC_SEL</name>
              <description>0: Reserved 
1: BLUE data(FIFO2 disable, RGB=0000FF) Note The priority of the bit is higher than .</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLUE</name>
                  <description>BLUE data(FIFO2 disable, RGB=0000FF) Note The priority of the bit is higher than .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_FILL_CTL_REG</name>
          <description>TCON1 Fill Data Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TCON1_FILL_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_POL_REG</name>
          <description>TCON1 IO Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON1 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_TRI_REG</name>
          <description>TCON1 IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON1 output port D[23:0] output enable, with independent bit control: 1s: Disable 0s: Enable</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_PS_SYNC_REG</name>
          <description>TCON1 Sync Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_X</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_Y</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_SRC_CTL_REG</name>
          <description>TCON1_SRC_CTL_REG</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TCON1_SRC_SEL</name>
              <description>000: DE 
001: Color Check 
010: Grayscale Check 
011: Black by White Check 
100: Reserved 
101: Reserved 
111: Gridding Check</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DE</name>
                  <description>DE</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Color</name>
                  <description>Color Check</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Grayscale</name>
                  <description>Grayscale Check</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Black</name>
                  <description>Black by White Check</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Gridding</name>
                  <description>Gridding Check</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CEU_COEF_MUL_REG_0</name>
          <description>N*0x04 TCON CEU Coefficient Register0 (N=0,1,2,4,5,6,8,9,10)</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON_CEU_CTL_REG</name>
          <description>TCON CEU Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CLK_GATE_AND_HDMI_SRC_SEL</name>
          <description>TCON_CLK_GATE_AND_HDMI_SRC_SEL</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x31110000</resetMask>
          <fields>
            <field>
              <name>HDMI</name>
              <description>Source select. 00:Disable 01:TCON_TV0 10:TCON_TV1 11:Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON_TV1_CLK_GATE</name>
              <description>0:Disable clk 1:Enable clk</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON_TV0_CLK_GATE</name>
              <description>0:Disable clk 1:Enable clk</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSI_CLK_GATE</name>
              <description>0:Disable clk 1:Enable clk</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_CTL_REG</name>
          <description>TCON Color Map Control register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>COLOR_MAP_EN</name>
              <description>0: bypass 
1: enable This module only work when X is divided by 4</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable This module only work when X is divided by 4</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_FORMAT</name>
              <description>0: 4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3 
1: 2 pixel output mode: Out0 -&gt; Out1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 pixel output mode: Out0 -&gt; Out1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_EVEN0_REG</name>
          <description>TCON Color Map Even Line Register0</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN0</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_EVEN1_REG</name>
          <description>TCON Color Map Even Line Register1</description>
          <addressOffset>0x19C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_ODD0_REG</name>
          <description>TCON Color Map Odd Line Register0</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD0</name>
              <description>bit15-12: Reserved bit11-08: Out_Odd0[23:16] bit07-04: Out_Odd0[15:8] bit03-00: Out_Odd0[7:0] 
0x0: in_b0 
0x1: in_g0 
0x2: in_r0 
0x3: Reserved 
0x4: in_b1 
0x5: in_g1 
0x6: in_r1 
0x7: Reserved 
0x8: in_b2 
0x9: in_g2GIC 0xa: in_r2 0xb: Reserved 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: Reserved</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>in_b0</name>
                  <description>in_b0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g0</name>
                  <description>in_g0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_r0</name>
                  <description>in_r0</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_b1</name>
                  <description>in_b1</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g1</name>
                  <description>in_g1</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_r1</name>
                  <description>in_r1</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_b2</name>
                  <description>in_b2</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g2GIC</name>
                  <description>in_g2GIC 0xa: in_r2 0xb: Reserved 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: Reserved</description>
                  <value>0x9</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_ODD1_REG</name>
          <description>TCON Color Map Odd Line Register1</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_DEBUG_REG</name>
          <description>TCON Debug Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x2000</resetMask>
          <fields>
            <field>
              <name>TCON1_FIFO_UNDER_FLOW</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_FIELD_POLARITY</name>
              <description>0: second field 
1: first field</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>second</name>
                  <description>second field</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>first</name>
                  <description>first field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_BYPASS</name>
              <description>0: used 
1: bypass</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used</name>
                  <description>used</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_CURRENT_LINE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_ECC_FIFO_REG</name>
          <description>TCON ECC FIFO Register</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ECC_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_ERR_FLAG</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_ERR_BITS</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_BLANK_EN</name>
              <description>0: Disable ecc function in blanking 
1: Enable ecc function in blanking ECC function is tent to trigger in blanking area at hv mode, set `0` when in hv mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable ecc function in blanking</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable ecc function in blanking ECC function is tent to trigger in blanking area at hv mode, set `0` when in hv mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO</name>
              <description>bit3 0:Enable 1:Disable</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GCTL_REG</name>
          <description>TCON Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: Disable 
1: Enable When it`s disabled, the module will be reset to idle state.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT0_REG</name>
          <description>TCON Global Interrupt Register0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line Write 0 to clear it.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT1_REG</name>
          <description>TCON Global Interrupt Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_SAFE_PERIOD_REG</name>
          <description>TCON Safe Period Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>000: unsafe 
001: safe 
010: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
011: safe at 2 and safe at sync active 
100: safe at line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_TV_SETUP_REG</name>
          <description>TCON_TV_SETUP_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1111</resetMask>
          <fields>
            <field>
              <name>TCON_TV1_OUTSEL</name>
              <description>0: LCD1 output to GPIOH 
1: TV1 output to GPIOH</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LCD1</name>
                  <description>LCD1 output to GPIOH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TV1</name>
                  <description>TV1 output to GPIOH</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV0_OUTSEL</name>
              <description>0: LCD0 output to GPIOD 
1: TV0 output to GPIOD</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LCD0</name>
                  <description>LCD0 output to GPIOD</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TV0</name>
                  <description>TV0 output to GPIOD</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV1_CLK_SRC</name>
              <description>0: Clock from CCU 
1: Clock from TVE1</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clock_from_CCU</name>
                  <description>Clock from CCU</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clock_from_TVE1</name>
                  <description>Clock from TVE1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_TV0_CLK_SRC</name>
              <description>0: Clock from CCU 
1: Clock from TVE0</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clock_from_CCU</name>
                  <description>Clock from CCU</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Clock_from_TVE0</name>
                  <description>Clock from TVE0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON_LCD0</name>
      <description>TCON_LCD0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C71000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON_CEU_COEF_ADD_REG</name>
            <description>TCON CEU Coefficient Register1 (N=0,1,2)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc</description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_RANG_REG</name>
            <description>TCON CEU Coefficient Register2 (N=0,1,2)</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU</name>
                <description>COEF_RANGE_MAX Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON0_3D_FIFO_REG</name>
          <description>TCON0 3D FIFO Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FF3</resetMask>
          <fields>
            <field>
              <name>3D_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_FIFO_HALF_LINE_SIZE</name>
              <description>The number of data in half line=3D_FIFO_HALF_LINE_SIZE+1. Only valid when 3D_FIFO_SETTING set as 2</description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_FIFO</name>
              <description>00: by pass 
01: used as normal FIFO 
10: used as 3D interlace FIFO 
11: reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC0_REG</name>
          <description>TCON0 Basic Timing Register0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON0_X</name>
              <description>Panel width is X+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_Y</name>
              <description>Panel height is Y+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC1_REG</name>
          <description>TCON0 Basic Timing Register1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>Thcycle = (HT+1) * Tdclk Computation 1) parallel:HT = X + BLANK Limitation: 1) parallel :HT &gt;= (HBP +1) + (X+1) +2 2) serial 1: HT &gt;= (HBP +1) + (X+1) *3+2 3) serial 2: HT &gt;= (HBP +1) + (X+1) *3/2+2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch (in dclk) Thbp = (HBP +1) * Tdclk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC2_REG</name>
          <description>TCON0 Basic Timing Register2</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>TVT = (VT)/2 * Thsync Note: VT/2 &gt;= (VBP+1 ) + (Y+1) +2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>Tvbp = (VBP +1) * Thsync</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC3_REG</name>
          <description>TCON0 Basic Timing Register3</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>Thspw = (HSPW+1) * Tdclk Note: HT&gt; (HSPW+1)</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>Tvspw = (VSPW+1) * Thsync Note: VT/2 &gt; (VSPW+1)</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_IF_REG</name>
          <description>TCON0 CPU Panel Interface Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF6C3000F</resetMask>
          <fields>
            <field>
              <name>CPU_MODE</name>
              <description>0000: 18bit/256K mode 
0010: 16bit mode0 
0100: 16bit mode1 
0110: 16bit mode2 
1000: 16bit mode3 
1010: 9bit mode 
1100: 8bit 256K mode 
1110: 8bit 65K mode 
xxx1: 24bit for DSI</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_18bit_slash_256K_mode</name>
                  <description>18bit/256K mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode0</name>
                  <description>16bit mode0</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode1</name>
                  <description>16bit mode1</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode2</name>
                  <description>16bit mode2</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode3</name>
                  <description>16bit mode3</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9bit_mode</name>
                  <description>9bit mode</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_256K_mode</name>
                  <description>8bit 256K mode</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_65K_mode</name>
                  <description>8bit 65K mode</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit_for</name>
                  <description>24bit for DSI</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA</name>
              <description>pin A1 value in 8080 mode auto/flash states</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CA</name>
              <description>pin A1 value in 8080 mode WR/RD execute</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_FLAG</name>
              <description>0:Write operation is finishing 1:Write operation is pending</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_FLAG</name>
              <description>0:Read operation is finishing 1:Read operation is pending</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AUTO</name>
              <description>auto Transfer Mode: If it is 1, all the valid data during this frame are written to panel. Note: This bit is sampled by Vsync</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLUSH</name>
              <description>direct transfer mode If it is enabled, FIFO1 is regardless of the HV timing, pixels data keep being transferred unless the input FIFO was empty. Data output rate control by DCLK.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable Entry addr is 0xFF8</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Entry addr is 0xFF8</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIGGER_FIFO_EN</name>
              <description>0:Enable 1:Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_START</name>
              <description>Write `1` to start a frame flush, writing`0` has no effect. This flag indicated frame flush is running. Software must make sure that write `1` only when this flag is `0`.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
            </field>
            <field>
              <name>TRIGGER_EN</name>
              <description>0: Trigger mode disable 
1: Trigger mode enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Trigger mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Trigger mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD0_REG</name>
          <description>TCON0 CPU Panel Read Data Register0</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_READ0</name>
              <description>Data read on 8080 bus, launch a new read operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD1_REG</name>
          <description>TCON0 CPU Panel Read Data Register1</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_READ1</name>
              <description>Data_READ1 Data read on 8080 bus, without a new read operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI0_REG</name>
          <description>TCON0 CPU Panel Trigger Register0</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_SPACE</name>
              <description>should be set &gt;20*pixel_cycle</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLOCK_SIZE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI1_REG</name>
          <description>TCON0 CPU Panel Trigger Register1</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_CURRENT_NUM</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BLOCK_NUM</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI2_REG</name>
          <description>TCON0 CPU Panel Trigger Register2</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0x200000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>START_DELAY</name>
              <description>Tdly = (Start_Delay +1) * be_clk*8</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_MODE</name>
              <description>0: ecc_fifo+tri_fifo 
1: tri_fifo</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ecc_fifo_plus_tri_fifo</name>
                  <description>ecc_fifo+tri_fifo</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>tri_fifo</name>
                  <description>tri_fifo</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNC_MODE</name>
              <description>0x: auto 
10: 0 
11: 1</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_START_SET</name>
              <description></description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI3_REG</name>
          <description>TCON0 CPU Panel Trigger Register3</description>
          <addressOffset>0x16C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30FFFFFF</resetMask>
          <fields>
            <field>
              <name>TRI_INT_MODE</name>
              <description>00: disable 
01: counter mode 
10: te rising mode 
11: te falling mode when set as 01, Tri_Counter_Int occur in cycle of (Count_N+1)&#215;(Count_M+1)&#215;4 dclk. when set as 10 or 11, io0 is map as TE input.</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_N</name>
              <description></description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_M</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI4_REG</name>
          <description>TCON0 CPU Panel Trigger Register4</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x11FFFFFF</resetMask>
          <fields>
            <field>
              <name>PLUG_MODE_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A1</name>
              <description>Valid in first Block</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in first Block</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI5_REG</name>
          <description>TCON0 CPU Panel Trigger Register5</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>A1</name>
              <description>Valid in Block except first</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in Block except first</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_WRITE_REG</name>
          <description>TCON0 CPU Panel Write Data Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_WRITE</name>
              <description>Data write on 8080 bus, launch a write operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CTL_REG</name>
          <description>TCON0 Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x93F001F7</resetMask>
          <fields>
            <field>
              <name>TCON0_EN</name>
              <description>TCON0_EN  
0: Disable 
1: Enable Note: It executes at the beginning of the first blank line of TCON0 timing.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: It executes at the beginning of the first blank line of TCON0 timing.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_WORK_MODE</name>
              <description>TCON0_WORK_MODE 
0: Normal 
1: Dynamic freq</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dynamic</name>
                  <description>Dynamic freq</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0</name>
              <description>TCON0_IF 
00: HV(Sync+DE) 
01: 8080 I/F 
1x: Reservd</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HV_openingparen_Sync_plus_DE_closingparen_</name>
                  <description>HV(Sync+DE)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8080</name>
                  <description>8080 I/F</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reservd</name>
                  <description>Reservd</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_RB_SWAP</name>
              <description>TCON0_RB_SWAP 
0: Default 
1: Swap RED and BLUE data at FIFO1</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Swap</name>
                  <description>Swap RED and BLUE data at FIFO1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_TEST_VALUE</name>
              <description>TCON0_TEST_VALUE 0:all 0s 1:all 1s</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_FIFO1_RST_WRITING_AND_THEN</name>
              <description>TCON0_FIFO1_RST Writing 1 and then 0 at this bit will reset FIFO 1 Note: 1 holding time must more than 1 DCLK</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_INTERLACE_EN</name>
              <description>TCON0_INTERLACE_EN 0:Disable 1:Enable This flag is valid only when TCON0_EN = 1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_START_DELAY_STA_DELAY_THIS_FLAG</name>
              <description>TCON0_START_DELAY STA delay This flag is valid only when TCON0_EN = 1</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_SRC_SEL</name>
              <description>TCON0_SRC_SEL  
000: DE0 
001: Color Check 
010: Grayscale Check 
011: Black by White Check 
100: Test Data all 0 
101: Test Data all 1 
111: Gridding Check</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_DCLK_REG</name>
          <description>TCON0 Data Clock Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000007F</resetMask>
          <fields>
            <field>
              <name>TCON0_DCLK_EN</name>
              <description>LCLK_EN[3:0] :TCON0 clock enable 4'h0, 'h4,4'h6,4'ha7:dclk_en=0;dclk1_en=0;dclk2_en=0;dclkm2_en=0;       4'h1: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 0;       4'h2: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 1;       4'h3: dclk_en = 1; dclk1_en = 1; dclk2_en = 0; dclkm2_en = 0;       4'h5: dclk_en = 1; dclk1_en = 0; dclk2_en = 1; dclkm2_en = 0;       4'h8,4'h9,4'ha,4'hb,4'hc,4'hd,4'he,4'hf: dclk_en = 1; dclk1_en = 1; dclk2_en = 1; dclkm2_en = 1;</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_DCLK_DIV</name>
              <description>Tdclk = Tsclk * DCLKDIV If dclk1&amp;dclk2 used DCLKDIV &gt;=6 If dclk only DCLKDIV &gt;=1</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_FRM_CTL_REG</name>
          <description>TCON FRM Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000073</resetMask>
          <fields>
            <field>
              <name>TCON0_FRM_EN</name>
              <description>0:Disable 1:Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_FRM_MODE_R</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_G</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_B</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_TEST</name>
              <description>00: FRM 
01: half 5/6bit, half FRM 
10: half 8bit, half FRM 
11: half 8bit, half 5/6bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_SEED_REG[%s]</name>
          <description>TCON FRM Seed Register (N=0,1,2,3,4,5)</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SEED_VALUE</name>
              <description>N=0: Pixel_Seed_R N=1: Pixel_Seed_G N=2: Pixel_Seed_B N=3: Line_Seed_R N=4: Line_Seed_G N=5: Line_Seed_B Note: Avoid to set it to 0</description>
              <bitRange>[24:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_TAB_REG[%s]</name>
          <description>TCON FRM Table Register (N=0,1,2,3)</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRM_TABLE_VALUE</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_HV_IF_REG</name>
          <description>TCON0 HV Panel Interface Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF80000</resetMask>
          <fields>
            <field>
              <name>HV_MODE</name>
              <description>0000: 24bit/1cycle parallel mode 
1000: 8bit/3cycle RGB serial mode(RGB888) 
1010: 8bit/4cycle Dummy RGB(DRGB) 
1011: 8bit/4cycle RGB Dummy(RGBD) 
1100: 8bit/2cycle YUV serial mode(CCIR656)</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24bit_slash_1cycle_parallel_mode</name>
                  <description>24bit/1cycle parallel mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_3cycle_RGB</name>
                  <description>8bit/3cycle RGB serial mode(RGB888)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_Dummy</name>
                  <description>8bit/4cycle Dummy RGB(DRGB)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_RGB</name>
                  <description>8bit/4cycle RGB Dummy(RGBD)</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_2cycle_YUV</name>
                  <description>8bit/2cycle YUV serial mode(CCIR656)</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGB888_SM0</name>
              <description>serial RGB888 mode output sequence at odd lines of the panel (line 1, 3, 5, 7...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RGB888_SM1</name>
              <description>serial RGB888 mode output sequence at even lines of the panel (line 2, 4, 6, 8...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YUV_SM</name>
              <description>serial YUV mode output sequence 2-pixel-pair of every scan line 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YUV</name>
              <description>EAV/SAV F LINE DELAY 00:F toggle right after active video line 01:delay 2 line(CCIR PAL) 10:delay 3 line(CCIR NTSC) 11:reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCIR_CSC_DIS</name>
              <description>0: Enable 
1: Disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_POL_REG</name>
          <description>TCON0 IO Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO_OUTPUT_SEL</name>
              <description>0: normal output 
1: register output when set as `1`, d*23:0+, io0, io1,io3 sync to dclk</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>register</name>
                  <description>register output when set as `1`, d*23:0+, io0, io1,io3 sync to dclk</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCLK_SEL</name>
              <description>000: used DCLK0(normal phase offset) 
001: used DCLK1(1/3 phase offset) 
010: used DCLK2(2/3 phase offset) 
101: DCLK0/2  phase 0 
100: DCLK0/2  phase 90 Others: Reserved</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used_DCLK0_openingparen_normal_phase</name>
                  <description>used DCLK0(normal phase offset)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK1_openingparen_1_slash_3_phase</name>
                  <description>used DCLK1(1/3 phase offset)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK2_openingparen_2_slash_3_phase</name>
                  <description>used DCLK2(2/3 phase offset)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_0</name>
                  <description>DCLK0/2  phase 0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_90</name>
                  <description>DCLK0/2  phase 90 Others: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON0 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_TRI_REG</name>
          <description>TCON0 IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>RGB_ENDIAN</name>
              <description>0: Normal 
1: Bits_invert</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bits_invert</name>
                  <description>Bits_invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON0 output port D[23:0] output enable, with independent bit control: 1s: Disable 0s: Enable</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CEU_COEF_MUL_REG_0</name>
          <description>N*0x04 TCON CEU Coefficient Register0 (N=0,1,2,4,5,6,8,9,10)</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON_CEU_CTL_REG</name>
          <description>TCON CEU Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_CTL_REG</name>
          <description>TCON Color Map Control register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>COLOR_MAP_EN</name>
              <description>0: bypass 
1: enable This module only work when X is divided by 4</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable This module only work when X is divided by 4</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_FORMAT</name>
              <description>0: 4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3 
1: 2 pixel output mode: Out0 -&gt; Out1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 pixel output mode: Out0 -&gt; Out1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_EVEN0_REG</name>
          <description>TCON Color Map Even Line Register0</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN0</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_EVEN1_REG</name>
          <description>TCON Color Map Even Line Register1</description>
          <addressOffset>0x19C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_ODD0_REG</name>
          <description>TCON Color Map Odd Line Register0</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD0</name>
              <description>bit15-12: Reserved bit11-08: Out_Odd0[23:16] bit07-04: Out_Odd0[15:8] bit03-00: Out_Odd0[7:0] 
0x0: in_b0 
0x1: in_g0 
0x2: in_r0 
0x3: Reserved 
0x4: in_b1 
0x5: in_g1 
0x6: in_r1 
0x7: Reserved 
0x8: in_b2 
0x9: in_g2GIC 0xa: in_r2 0xb: Reserved 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: Reserved</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>in_b0</name>
                  <description>in_b0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g0</name>
                  <description>in_g0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_r0</name>
                  <description>in_r0</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_b1</name>
                  <description>in_b1</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g1</name>
                  <description>in_g1</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_r1</name>
                  <description>in_r1</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_b2</name>
                  <description>in_b2</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g2GIC</name>
                  <description>in_g2GIC 0xa: in_r2 0xb: Reserved 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: Reserved</description>
                  <value>0x9</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_ODD1_REG</name>
          <description>TCON Color Map Odd Line Register1</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_DEBUG_REG</name>
          <description>TCON Debug Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x2000</resetMask>
          <fields>
            <field>
              <name>TCON1_FIFO_UNDER_FLOW</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_FIELD_POLARITY</name>
              <description>0: second field 
1: first field</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>second</name>
                  <description>second field</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>first</name>
                  <description>first field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_BYPASS</name>
              <description>0: used 
1: bypass</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used</name>
                  <description>used</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_CURRENT_LINE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GCTL_REG</name>
          <description>TCON Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: Disable 
1: Enable When it`s disabled, the module will be reset to idle state.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT0_REG</name>
          <description>TCON Global Interrupt Register0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line Write 0 to clear it.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT1_REG</name>
          <description>TCON Global Interrupt Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_SAFE_PERIOD_REG</name>
          <description>TCON Safe Period Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>000: unsafe 
001: safe 
010: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
011: safe at 2 and safe at sync active 
100: safe at line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON_LCD1</name>
      <description>TCON_LCD1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C72000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON_CEU_COEF_ADD_REG</name>
            <description>TCON CEU Coefficient Register1 (N=0,1,2)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc</description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_RANG_REG</name>
            <description>TCON CEU Coefficient Register2 (N=0,1,2)</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU</name>
                <description>COEF_RANGE_MAX Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON0_3D_FIFO_REG</name>
          <description>TCON0 3D FIFO Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FF3</resetMask>
          <fields>
            <field>
              <name>3D_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_FIFO_HALF_LINE_SIZE</name>
              <description>The number of data in half line=3D_FIFO_HALF_LINE_SIZE+1. Only valid when 3D_FIFO_SETTING set as 2</description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_FIFO</name>
              <description>00: by pass 
01: used as normal FIFO 
10: used as 3D interlace FIFO 
11: reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC0_REG</name>
          <description>TCON0 Basic Timing Register0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON0_X</name>
              <description>Panel width is X+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_Y</name>
              <description>Panel height is Y+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC1_REG</name>
          <description>TCON0 Basic Timing Register1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>Thcycle = (HT+1) * Tdclk Computation 1) parallel:HT = X + BLANK Limitation: 1) parallel :HT &gt;= (HBP +1) + (X+1) +2 2) serial 1: HT &gt;= (HBP +1) + (X+1) *3+2 3) serial 2: HT &gt;= (HBP +1) + (X+1) *3/2+2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch (in dclk) Thbp = (HBP +1) * Tdclk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC2_REG</name>
          <description>TCON0 Basic Timing Register2</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>TVT = (VT)/2 * Thsync Note: VT/2 &gt;= (VBP+1 ) + (Y+1) +2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>Tvbp = (VBP +1) * Thsync</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC3_REG</name>
          <description>TCON0 Basic Timing Register3</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>Thspw = (HSPW+1) * Tdclk Note: HT&gt; (HSPW+1)</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>Tvspw = (VSPW+1) * Thsync Note: VT/2 &gt; (VSPW+1)</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_IF_REG</name>
          <description>TCON0 CPU Panel Interface Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF6C3000F</resetMask>
          <fields>
            <field>
              <name>CPU_MODE</name>
              <description>0000: 18bit/256K mode 
0010: 16bit mode0 
0100: 16bit mode1 
0110: 16bit mode2 
1000: 16bit mode3 
1010: 9bit mode 
1100: 8bit 256K mode 
1110: 8bit 65K mode 
xxx1: 24bit for DSI</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_18bit_slash_256K_mode</name>
                  <description>18bit/256K mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode0</name>
                  <description>16bit mode0</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode1</name>
                  <description>16bit mode1</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode2</name>
                  <description>16bit mode2</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode3</name>
                  <description>16bit mode3</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9bit_mode</name>
                  <description>9bit mode</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_256K_mode</name>
                  <description>8bit 256K mode</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_65K_mode</name>
                  <description>8bit 65K mode</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit_for</name>
                  <description>24bit for DSI</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA</name>
              <description>pin A1 value in 8080 mode auto/flash states</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CA</name>
              <description>pin A1 value in 8080 mode WR/RD execute</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_FLAG</name>
              <description>0:Write operation is finishing 1:Write operation is pending</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_FLAG</name>
              <description>0:Read operation is finishing 1:Read operation is pending</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AUTO</name>
              <description>auto Transfer Mode: If it is 1, all the valid data during this frame are written to panel. Note: This bit is sampled by Vsync</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLUSH</name>
              <description>direct transfer mode If it is enabled, FIFO1 is regardless of the HV timing, pixels data keep being transferred unless the input FIFO was empty. Data output rate control by DCLK.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable Entry addr is 0xFF8</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Entry addr is 0xFF8</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIGGER_FIFO_EN</name>
              <description>0:Enable 1:Disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_START</name>
              <description>Write `1` to start a frame flush, writing`0` has no effect. This flag indicated frame flush is running. Software must make sure that write `1` only when this flag is `0`.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
            </field>
            <field>
              <name>TRIGGER_EN</name>
              <description>0: Trigger mode disable 
1: Trigger mode enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Trigger mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Trigger mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD0_REG</name>
          <description>TCON0 CPU Panel Read Data Register0</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_READ0</name>
              <description>Data read on 8080 bus, launch a new read operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD1_REG</name>
          <description>TCON0 CPU Panel Read Data Register1</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_READ1</name>
              <description>Data_READ1 Data read on 8080 bus, without a new read operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI0_REG</name>
          <description>TCON0 CPU Panel Trigger Register0</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_SPACE</name>
              <description>should be set &gt;20*pixel_cycle</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLOCK_SIZE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI1_REG</name>
          <description>TCON0 CPU Panel Trigger Register1</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_CURRENT_NUM</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BLOCK_NUM</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI2_REG</name>
          <description>TCON0 CPU Panel Trigger Register2</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0x200000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>START_DELAY</name>
              <description>Tdly = (Start_Delay +1) * be_clk*8</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_MODE</name>
              <description>0: ecc_fifo+tri_fifo 
1: tri_fifo</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ecc_fifo_plus_tri_fifo</name>
                  <description>ecc_fifo+tri_fifo</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>tri_fifo</name>
                  <description>tri_fifo</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNC_MODE</name>
              <description>0x: auto 
10: 0 
11: 1</description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_START_SET</name>
              <description></description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI3_REG</name>
          <description>TCON0 CPU Panel Trigger Register3</description>
          <addressOffset>0x16C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30FFFFFF</resetMask>
          <fields>
            <field>
              <name>TRI_INT_MODE</name>
              <description>00: disable 
01: counter mode 
10: te rising mode 
11: te falling mode when set as 01, Tri_Counter_Int occur in cycle of (Count_N+1)&#215;(Count_M+1)&#215;4 dclk. when set as 10 or 11, io0 is map as TE input.</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_N</name>
              <description></description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_M</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI4_REG</name>
          <description>TCON0 CPU Panel Trigger Register4</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x11FFFFFF</resetMask>
          <fields>
            <field>
              <name>PLUG_MODE_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A1</name>
              <description>Valid in first Block</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in first Block</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI5_REG</name>
          <description>TCON0 CPU Panel Trigger Register5</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>A1</name>
              <description>Valid in Block except first</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in Block except first</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_WRITE_REG</name>
          <description>TCON0 CPU Panel Write Data Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_WRITE</name>
              <description>Data write on 8080 bus, launch a write operation on 8080 bus</description>
              <bitRange>[23:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CTL_REG</name>
          <description>TCON0 Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x93F001F7</resetMask>
          <fields>
            <field>
              <name>TCON0_EN</name>
              <description>TCON0_EN  
0: Disable 
1: Enable Note: It executes at the beginning of the first blank line of TCON0 timing.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: It executes at the beginning of the first blank line of TCON0 timing.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_WORK_MODE</name>
              <description>TCON0_WORK_MODE 
0: Normal 
1: Dynamic freq</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dynamic</name>
                  <description>Dynamic freq</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0</name>
              <description>TCON0_IF 
00: HV(Sync+DE) 
01: 8080 I/F 
1x: Reservd</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HV_openingparen_Sync_plus_DE_closingparen_</name>
                  <description>HV(Sync+DE)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8080</name>
                  <description>8080 I/F</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reservd</name>
                  <description>Reservd</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_RB_SWAP</name>
              <description>TCON0_RB_SWAP 
0: Default 
1: Swap RED and BLUE data at FIFO1</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Swap</name>
                  <description>Swap RED and BLUE data at FIFO1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_TEST_VALUE</name>
              <description>TCON0_TEST_VALUE 0:all 0s 1:all 1s</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_FIFO1_RST_WRITING_AND_THEN</name>
              <description>TCON0_FIFO1_RST Writing 1 and then 0 at this bit will reset FIFO 1 Note: 1 holding time must more than 1 DCLK</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_INTERLACE_EN</name>
              <description>TCON0_INTERLACE_EN 0:Disable 1:Enable This flag is valid only when TCON0_EN = 1</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_START_DELAY_STA_DELAY_THIS_FLAG</name>
              <description>TCON0_START_DELAY STA delay This flag is valid only when TCON0_EN = 1</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_SRC_SEL</name>
              <description>TCON0_SRC_SEL  
000: DE0 
001: Color Check 
010: Grayscale Check 
011: Black by White Check 
100: Test Data all 0 
101: Test Data all 1 
111: Gridding Check</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_DCLK_REG</name>
          <description>TCON0 Data Clock Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000007F</resetMask>
          <fields>
            <field>
              <name>TCON0_DCLK_EN</name>
              <description>LCLK_EN[3:0] :TCON0 clock enable 4'h0, 'h4,4'h6,4'ha7:dclk_en=0;dclk1_en=0;dclk2_en=0;dclkm2_en=0;       4'h1: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 0;       4'h2: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 1;       4'h3: dclk_en = 1; dclk1_en = 1; dclk2_en = 0; dclkm2_en = 0;       4'h5: dclk_en = 1; dclk1_en = 0; dclk2_en = 1; dclkm2_en = 0;       4'h8,4'h9,4'ha,4'hb,4'hc,4'hd,4'he,4'hf: dclk_en = 1; dclk1_en = 1; dclk2_en = 1; dclkm2_en = 1;</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_DCLK_DIV</name>
              <description>Tdclk = Tsclk * DCLKDIV If dclk1&amp;dclk2 used DCLKDIV &gt;=6 If dclk only DCLKDIV &gt;=1</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_FRM_CTL_REG</name>
          <description>TCON FRM Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000073</resetMask>
          <fields>
            <field>
              <name>TCON0_FRM_EN</name>
              <description>0:Disable 1:Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_FRM_MODE_R</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_G</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_B</name>
              <description>0: 6bit frm output 
1: 5bit frm output</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_TEST</name>
              <description>00: FRM 
01: half 5/6bit, half FRM 
10: half 8bit, half FRM 
11: half 8bit, half 5/6bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_SEED_REG[%s]</name>
          <description>TCON FRM Seed Register (N=0,1,2,3,4,5)</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SEED_VALUE</name>
              <description>N=0: Pixel_Seed_R N=1: Pixel_Seed_G N=2: Pixel_Seed_B N=3: Line_Seed_R N=4: Line_Seed_G N=5: Line_Seed_B Note: Avoid to set it to 0</description>
              <bitRange>[24:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_TAB_REG[%s]</name>
          <description>TCON FRM Table Register (N=0,1,2,3)</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRM_TABLE_VALUE</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_HV_IF_REG</name>
          <description>TCON0 HV Panel Interface Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF80000</resetMask>
          <fields>
            <field>
              <name>HV_MODE</name>
              <description>0000: 24bit/1cycle parallel mode 
1000: 8bit/3cycle RGB serial mode(RGB888) 
1010: 8bit/4cycle Dummy RGB(DRGB) 
1011: 8bit/4cycle RGB Dummy(RGBD) 
1100: 8bit/2cycle YUV serial mode(CCIR656)</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24bit_slash_1cycle_parallel_mode</name>
                  <description>24bit/1cycle parallel mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_3cycle_RGB</name>
                  <description>8bit/3cycle RGB serial mode(RGB888)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_Dummy</name>
                  <description>8bit/4cycle Dummy RGB(DRGB)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_RGB</name>
                  <description>8bit/4cycle RGB Dummy(RGBD)</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_2cycle_YUV</name>
                  <description>8bit/2cycle YUV serial mode(CCIR656)</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGB888_SM0</name>
              <description>serial RGB888 mode output sequence at odd lines of the panel (line 1, 3, 5, 7...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RGB888_SM1</name>
              <description>serial RGB888 mode output sequence at even lines of the panel (line 2, 4, 6, 8...) 
00: R&#8594;G&#8594;B 
01: B&#8594;R&#8594;G 
10: G&#8594;B&#8594;R 
11: R&#8594;G&#8594;B</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YUV_SM</name>
              <description>serial YUV mode output sequence 2-pixel-pair of every scan line 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YUV</name>
              <description>EAV/SAV F LINE DELAY 00:F toggle right after active video line 01:delay 2 line(CCIR PAL) 10:delay 3 line(CCIR NTSC) 11:reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCIR_CSC_DIS</name>
              <description>0: Enable 
1: Disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_POL_REG</name>
          <description>TCON0 IO Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO_OUTPUT_SEL</name>
              <description>0: normal output 
1: register output when set as `1`, d*23:0+, io0, io1,io3 sync to dclk</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>register</name>
                  <description>register output when set as `1`, d*23:0+, io0, io1,io3 sync to dclk</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCLK_SEL</name>
              <description>000: used DCLK0(normal phase offset) 
001: used DCLK1(1/3 phase offset) 
010: used DCLK2(2/3 phase offset) 
101: DCLK0/2  phase 0 
100: DCLK0/2  phase 90 Others: Reserved</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used_DCLK0_openingparen_normal_phase</name>
                  <description>used DCLK0(normal phase offset)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK1_openingparen_1_slash_3_phase</name>
                  <description>used DCLK1(1/3 phase offset)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK2_openingparen_2_slash_3_phase</name>
                  <description>used DCLK2(2/3 phase offset)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_0</name>
                  <description>DCLK0/2  phase 0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_90</name>
                  <description>DCLK0/2  phase 90 Others: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON0 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_TRI_REG</name>
          <description>TCON0 IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>RGB_ENDIAN</name>
              <description>0: Normal 
1: Bits_invert</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bits_invert</name>
                  <description>Bits_invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON0 output port D[23:0] output enable, with independent bit control: 1s: Disable 0s: Enable</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CEU_COEF_MUL_REG_0</name>
          <description>N*0x04 TCON CEU Coefficient Register0 (N=0,1,2,4,5,6,8,9,10)</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON_CEU_CTL_REG</name>
          <description>TCON CEU Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_CTL_REG</name>
          <description>TCON Color Map Control register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>COLOR_MAP_EN</name>
              <description>0: bypass 
1: enable This module only work when X is divided by 4</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable This module only work when X is divided by 4</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_FORMAT</name>
              <description>0: 4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3 
1: 2 pixel output mode: Out0 -&gt; Out1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 pixel output mode: Out0 -&gt; Out1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_EVEN0_REG</name>
          <description>TCON Color Map Even Line Register0</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN0</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_EVEN1_REG</name>
          <description>TCON Color Map Even Line Register1</description>
          <addressOffset>0x19C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_ODD0_REG</name>
          <description>TCON Color Map Odd Line Register0</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD1</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD0</name>
              <description>bit15-12: Reserved bit11-08: Out_Odd0[23:16] bit07-04: Out_Odd0[15:8] bit03-00: Out_Odd0[7:0] 
0x0: in_b0 
0x1: in_g0 
0x2: in_r0 
0x3: Reserved 
0x4: in_b1 
0x5: in_g1 
0x6: in_r1 
0x7: Reserved 
0x8: in_b2 
0x9: in_g2GIC 0xa: in_r2 0xb: Reserved 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: Reserved</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>in_b0</name>
                  <description>in_b0</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g0</name>
                  <description>in_g0</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_r0</name>
                  <description>in_r0</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_b1</name>
                  <description>in_b1</description>
                  <value>0x4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g1</name>
                  <description>in_g1</description>
                  <value>0x5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_r1</name>
                  <description>in_r1</description>
                  <value>0x6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_b2</name>
                  <description>in_b2</description>
                  <value>0x8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>in_g2GIC</name>
                  <description>in_g2GIC 0xa: in_r2 0xb: Reserved 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: Reserved</description>
                  <value>0x9</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CMAP_ODD1_REG</name>
          <description>TCON Color Map Odd Line Register1</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD3</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD2</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_DEBUG_REG</name>
          <description>TCON Debug Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x2000</resetMask>
          <fields>
            <field>
              <name>TCON1_FIFO_UNDER_FLOW</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_FIELD_POLARITY</name>
              <description>0: second field 
1: first field</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>second</name>
                  <description>second field</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>first</name>
                  <description>first field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_BYPASS</name>
              <description>0: used 
1: bypass</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used</name>
                  <description>used</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_CURRENT_LINE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GCTL_REG</name>
          <description>TCON Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: Disable 
1: Enable When it`s disabled, the module will be reset to idle state.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT0_REG</name>
          <description>TCON Global Interrupt Register0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line Write 0 to clear it.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT1_REG</name>
          <description>TCON Global Interrupt Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_SAFE_PERIOD_REG</name>
          <description>TCON Safe Period Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>000: unsafe 
001: safe 
010: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
011: safe at 2 and safe at sync active 
100: safe at line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON_TV0</name>
      <description>TCON_TV0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C73000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>12</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON1_FILL_BEGIN_REG</name>
            <description>TCON1 Fill Data Begin Register (N=0,1,2)</description>
            <addressOffset>0x1E8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_BEGIN</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_DATA0_REG</name>
            <description>TCON1 Fill Data Value Register (N=0,1,2)</description>
            <addressOffset>0x1F0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_VALUE</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_END_REG</name>
            <description>TCON1 Fill Data End Register (N=0,1,2)</description>
            <addressOffset>0x1EC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_END</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_ADD_REG</name>
            <description>TCON CEU Coefficient Register1 (N=0,1,2)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc</description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_RANG_REG</name>
            <description>TCON CEU Coefficient Register2 (N=0,1,2)</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU</name>
                <description>COEF_RANGE_MAX Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON1_BASIC0_REG</name>
          <description>TCON1 Basic Timing Register0</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XI</name>
              <description>source width is X+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YI</name>
              <description>source height is Y+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC1_REG</name>
          <description>TCON1 Basic Timing Register1</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>LS_XO</name>
              <description>width is LS_XO+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS_YO</name>
              <description>width is LS_YO+1 This version LS_YO = TCON1_YI</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC2_REG</name>
          <description>TCON1 Basic Timing Register2</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XO</name>
              <description>width is TCON1_XO+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YO</name>
              <description>height is TCON1_YO+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC3_REG</name>
          <description>TCON1 Basic Timing Register3</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>horizontal total time Thcycle = (HT+1) * Thdclk</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch Thbp = (HBP +1) * Thdclk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC4_REG</name>
          <description>TCON1 Basic Timing Register4</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>horizontal total time (in HD line) Tvt = VT/2 * Th</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>horizontal back porch (in HD line) Tvbp = (VBP +1) * Th</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC5_REG</name>
          <description>TCON1 Basic Timing Register5</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>horizontal Sync Pulse Width (in dclk) Thspw = (HSPW+1) * Tdclk Note: HT &gt; (HSPW+1)</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>vertical Sync Pulse Width (in lines) Tvspw = (VSPW+1) * Th Note: VT/2 &gt; (VSPW+1)</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CTL_REG</name>
          <description>TCON1 Control Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800001F2</resetMask>
          <fields>
            <field>
              <name>TCON1_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>START_DELAY</name>
              <description>This is for DE0 and DE1</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_SRC_SEL</name>
              <description>0: Reserved 
1: BLUE data(FIFO2 disable, RGB=0000FF) Note The priority of the bit is higher than .</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLUE</name>
                  <description>BLUE data(FIFO2 disable, RGB=0000FF) Note The priority of the bit is higher than .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_FILL_CTL_REG</name>
          <description>TCON1 Fill Data Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TCON1_FILL_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_POL_REG</name>
          <description>TCON1 IO Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON1 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_TRI_REG</name>
          <description>TCON1 IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON1 output port D[23:0] output enable, with independent bit control: 1s: Disable 0s: Enable</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_PS_SYNC_REG</name>
          <description>TCON1 Sync Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_X</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_Y</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CEU_COEF_MUL_REG_0</name>
          <description>N*0x04 TCON CEU Coefficient Register0 (N=0,1,2,4,5,6,8,9,10)</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON_CEU_CTL_REG</name>
          <description>TCON CEU Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_DEBUG_REG</name>
          <description>TCON Debug Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x2000</resetMask>
          <fields>
            <field>
              <name>TCON1_FIFO_UNDER_FLOW</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_FIELD_POLARITY</name>
              <description>0: second field 
1: first field</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>second</name>
                  <description>second field</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>first</name>
                  <description>first field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_BYPASS</name>
              <description>0: used 
1: bypass</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used</name>
                  <description>used</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_CURRENT_LINE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_ECC_FIFO_REG</name>
          <description>TCON ECC FIFO Register</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ECC_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_ERR_FLAG</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_ERR_BITS</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_BLANK_EN</name>
              <description>0: Disable ecc function in blanking 
1: Enable ecc function in blanking ECC function is tent to trigger in blanking area at hv mode, set `0` when in hv mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable ecc function in blanking</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable ecc function in blanking ECC function is tent to trigger in blanking area at hv mode, set `0` when in hv mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO</name>
              <description>bit3 0:Enable 1:Disable</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GCTL_REG</name>
          <description>TCON Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: Disable 
1: Enable When it`s disabled, the module will be reset to idle state.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT0_REG</name>
          <description>TCON Global Interrupt Register0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line Write 0 to clear it.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT1_REG</name>
          <description>TCON Global Interrupt Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_SAFE_PERIOD_REG</name>
          <description>TCON Safe Period Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>000: unsafe 
001: safe 
010: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
011: safe at 2 and safe at sync active 
100: safe at line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON_TV1</name>
      <description>TCON_TV1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C74000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>12</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON1_FILL_BEGIN_REG</name>
            <description>TCON1 Fill Data Begin Register (N=0,1,2)</description>
            <addressOffset>0x1E8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_BEGIN</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_DATA0_REG</name>
            <description>TCON1 Fill Data Value Register (N=0,1,2)</description>
            <addressOffset>0x1F0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_VALUE</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_END_REG</name>
            <description>TCON1 Fill Data End Register (N=0,1,2)</description>
            <addressOffset>0x1EC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_END</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_ADD_REG</name>
            <description>TCON CEU Coefficient Register1 (N=0,1,2)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc</description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON_CEU_COEF_RANG_REG</name>
            <description>TCON CEU Coefficient Register2 (N=0,1,2)</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU</name>
                <description>COEF_RANGE_MAX Unsigned 8bit value, range of [0,255]</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON1_BASIC0_REG</name>
          <description>TCON1 Basic Timing Register0</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XI</name>
              <description>source width is X+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YI</name>
              <description>source height is Y+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC1_REG</name>
          <description>TCON1 Basic Timing Register1</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>LS_XO</name>
              <description>width is LS_XO+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS_YO</name>
              <description>width is LS_YO+1 This version LS_YO = TCON1_YI</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC2_REG</name>
          <description>TCON1 Basic Timing Register2</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XO</name>
              <description>width is TCON1_XO+1</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YO</name>
              <description>height is TCON1_YO+1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC3_REG</name>
          <description>TCON1 Basic Timing Register3</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>horizontal total time Thcycle = (HT+1) * Thdclk</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch Thbp = (HBP +1) * Thdclk</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC4_REG</name>
          <description>TCON1 Basic Timing Register4</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>horizontal total time (in HD line) Tvt = VT/2 * Th</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>horizontal back porch (in HD line) Tvbp = (VBP +1) * Th</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC5_REG</name>
          <description>TCON1 Basic Timing Register5</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>horizontal Sync Pulse Width (in dclk) Thspw = (HSPW+1) * Tdclk Note: HT &gt; (HSPW+1)</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>vertical Sync Pulse Width (in lines) Tvspw = (VSPW+1) * Th Note: VT/2 &gt; (VSPW+1)</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CTL_REG</name>
          <description>TCON1 Control Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800001F2</resetMask>
          <fields>
            <field>
              <name>TCON1_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>START_DELAY</name>
              <description>This is for DE0 and DE1</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_SRC_SEL</name>
              <description>0: Reserved 
1: BLUE data(FIFO2 disable, RGB=0000FF) Note The priority of the bit is higher than .</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLUE</name>
                  <description>BLUE data(FIFO2 disable, RGB=0000FF) Note The priority of the bit is higher than .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_FILL_CTL_REG</name>
          <description>TCON1 Fill Data Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TCON1_FILL_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_POL_REG</name>
          <description>TCON1 IO Polarity Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON1 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_TRI_REG</name>
          <description>TCON1 IO Control Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: Disable 
0: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON1 output port D[23:0] output enable, with independent bit control: 1s: Disable 0s: Enable</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_PS_SYNC_REG</name>
          <description>TCON1 Sync Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_X</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_Y</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_CEU_COEF_MUL_REG_0</name>
          <description>N*0x04 TCON CEU Coefficient Register0 (N=0,1,2,4,5,6,8,9,10)</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON_CEU_COEF_MUL_REG_0">
          <name>TCON_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON_CEU_CTL_REG</name>
          <description>TCON CEU Control Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: bypass 
1: enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_DEBUG_REG</name>
          <description>TCON Debug Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x2000</resetMask>
          <fields>
            <field>
              <name>TCON1_FIFO_UNDER_FLOW</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_FIELD_POLARITY</name>
              <description>0: second field 
1: first field</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>second</name>
                  <description>second field</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>first</name>
                  <description>first field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_BYPASS</name>
              <description>0: used 
1: bypass</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used</name>
                  <description>used</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_CURRENT_LINE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_ECC_FIFO_REG</name>
          <description>TCON ECC FIFO Register</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ECC_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_ERR_FLAG</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_ERR_BITS</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_BLANK_EN</name>
              <description>0: Disable ecc function in blanking 
1: Enable ecc function in blanking ECC function is tent to trigger in blanking area at hv mode, set `0` when in hv mode</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable ecc function in blanking</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable ecc function in blanking ECC function is tent to trigger in blanking area at hv mode, set `0` when in hv mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO</name>
              <description>bit3 0:Enable 1:Disable</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GCTL_REG</name>
          <description>TCON Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: Disable 
1: Enable When it`s disabled, the module will be reset to idle state.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT0_REG</name>
          <description>TCON Global Interrupt Register0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line Write 0 to clear it.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_GINT1_REG</name>
          <description>TCON Global Interrupt Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON_SAFE_PERIOD_REG</name>
          <description>TCON Safe Period Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>000: unsafe 
001: safe 
010: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
011: safe at 2 and safe at sync active 
100: safe at line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C02000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>16</dim>
          <dimIncrement>64</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>DMA_BCNT_LEFT_REG</name>
            <description>DMA Channel Byte Counter Left Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_BCNT_LEFT</name>
                <description>DMA Channel Byte Counter Left,read only</description>
                <bitRange>[24:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CFG_REG</name>
            <description>DMA Channel Configuration Register</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x6FF06FF</resetMask>
            <fields>
              <field>
                <name>DMA_DEST_DATA_WIDTH</name>
                <description>DMA Destination Data Width. 
00: 8-bit 
01: 16-bit 
10: 32-bit 
11: 64-bit</description>
                <bitRange>[26:25]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8_bit</name>
                    <description>8-bit</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16_bit</name>
                    <description>16-bit</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32_bit</name>
                    <description>32-bit</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_64_bit</name>
                    <description>64-bit</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_DEST_BLOCK_SIZE</name>
                <description>DMA Destination Block Size. 
00: 1 
01: 4 
10: 8 
11: 16</description>
                <bitRange>[23:22]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1</name>
                    <description>1</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4</name>
                    <description>4</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_ADDR_MODE</name>
                <description>DMA Destination Address Mode 
0: Linear Mode 
1: IO Mode</description>
                <bitRange>[21:21]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Linear</name>
                    <description>Linear Mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>IO</name>
                    <description>IO Mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_DEST_DRQ_TYPE</name>
                <description>DMA Destination DRQ Type The details refer to .</description>
                <bitRange>[20:16]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DMA_SRC_DATA_WIDTH</name>
                <description>DMA Source Data Width. 
00: 8-bit 
01: 16-bit 
10: 32-bit 
11: 64-bit</description>
                <bitRange>[10:9]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8_bit</name>
                    <description>8-bit</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16_bit</name>
                    <description>16-bit</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32_bit</name>
                    <description>32-bit</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_64_bit</name>
                    <description>64-bit</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_BLOCK_SIZE</name>
                <description>DMA Source Block Size. 
00: 1 
01: 4 
10: 8 
11: 16</description>
                <bitRange>[7:6]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1</name>
                    <description>1</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4</name>
                    <description>4</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_ADDR_MODE</name>
                <description>DMA Source Address Mode 
0: Linear Mode 
1: IO Mode</description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Linear</name>
                    <description>Linear Mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>IO</name>
                    <description>IO Mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_DRQ_TYPE</name>
                <description>DMA Source DRQ Type The details refer to .</description>
                <bitRange>[4:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CUR_DEST_REG</name>
            <description>DMA Channel Current Destination Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_CUR_DEST</name>
                <description>DMA Channel Current Destination Address, read only.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CUR_SRC_REG</name>
            <description>DMA Channel Current Source Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_CUR_SRC</name>
                <description>DMA Channel Current Source Address, read only.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_DESC_ADDR_REG</name>
            <description>DMA Channel Start Address Register</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_DESC_ADDR</name>
                <description>DMA Channel Descriptor Address. The Descriptor Address must be word-aligned.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_EN_REG</name>
            <description>DMA Channel Enable Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>DMA_EN</name>
                <description>DMA Channel Enable 
0: Disable 
1: Enable</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_FDESC_ADDR_REG</name>
            <description>DMA Former Descriptor Address Register</description>
            <addressOffset>0x2C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_FDESC_ADDR</name>
                <description>This register is used to storing the former value of DMA Channel Descriptor Address Register.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_MODE_REG</name>
            <description>DMA Mode Register</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xC</resetMask>
            <fields>
              <field>
                <name>DMA_DST_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode.</description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode.</description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PARA_REG</name>
            <description>DMA Channel Parameter Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF</resetMask>
            <fields>
              <field>
                <name>WAIT_CYC</name>
                <description>Wait Clock Cycles</description>
                <bitRange>[7:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PAU_REG</name>
            <description>DMA Channel Pause Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>DMA_PAUSE</name>
                <description>Pausing DMA Channel Transfer Data. 
0: Resume Transferring 
1: Pause Transferring</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Resume</name>
                    <description>Resume Transferring</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pause</name>
                    <description>Pause Transferring</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PKG_NUM_REG</name>
            <description>DMA Package Number Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_PKG_NUM</name>
                <description>This register will record the number of packages which has been completed in one transmission.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>DMA_AUTO_GATE_REG</name>
          <description>DMA Auto Gating Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DMA_MCLK_CIRCUIT</name>
              <description>DMA MCLK interface circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_COMMON_CIRCUIT</name>
              <description>DMA common circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_CHAN_CIRCUIT</name>
              <description>DMA channel circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_EN_REG0</name>
          <description>DMA IRQ Enable Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_EN</name>
              <description>DMA 7 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_EN</name>
              <description>DMA 7 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_EN</name>
              <description>DMA 7 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_EN</name>
              <description>DMA 6 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_EN</name>
              <description>DMA 6 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_EN</name>
              <description>DMA 6 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_EN</name>
              <description>DMA 5 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_EN</name>
              <description>DMA 5 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_EN</name>
              <description>DMA 5 Half package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_EN</name>
              <description>DMA 4 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_EN</name>
              <description>DMA 4 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_EN</name>
              <description>DMA 4 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_EN</name>
              <description>DMA 3 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_EN</name>
              <description>DMA 3 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_EN</name>
              <description>DMA 3 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_EN</name>
              <description>DMA 2 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_EN</name>
              <description>DMA 2 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_EN</name>
              <description>DMA 2 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_EN</name>
              <description>DMA 1 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_EN</name>
              <description>DMA 1 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_EN</name>
              <description>DMA 1 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_EN</name>
              <description>DMA 0 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_EN</name>
              <description>DMA 0 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_EN</name>
              <description>DMA 0 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_EN_REG1</name>
          <description>DMA IRQ Enable Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA15_QUEUE_IRQ_EN_DMA</name>
              <description>DMA15_QUEUE_IRQ_EN DMA 15 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_PKG_IRQ_EN_DMA</name>
              <description>DMA15_PKG_IRQ_EN DMA 15 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_HLAF_IRQ_EN_DMA</name>
              <description>DMA15_HLAF_IRQ_EN DMA 15 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_QUEUE_IRQ_EN_DMA</name>
              <description>DMA14_QUEUE_IRQ_EN DMA 14 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_PKG_IRQ_EN_DMA</name>
              <description>DMA14_PKG_IRQ_EN DMA 14 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_HLAF_IRQ_EN_DMA</name>
              <description>DMA14_HLAF_IRQ_EN DMA 14 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_QUEUE_IRQ_EN_DMA13</name>
              <description>DMA13_QUEUE_IRQ_EN DMA13 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_PKG_IRQ_EN_DMA</name>
              <description>DMA13_PKG_IRQ_EN DMA 13 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_HLAF_IRQ_EN_DMA</name>
              <description>DMA13_HLAF_IRQ_EN DMA 13 Half package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_QUEUE_IRQ_EN_DMA</name>
              <description>DMA13_QUEUE_IRQ_EN DMA 13 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_PKG_IRQ_EN_DMA</name>
              <description>DMA12_PKG_IRQ_EN DMA 12 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_HLAF_IRQ_EN_DMA</name>
              <description>DMA12_HLAF_IRQ_EN DMA 12 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_QUEUE_IRQ_EN_DMA</name>
              <description>DMA11_QUEUE_IRQ_EN DMA 11 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_PKG_IRQ_EN_DMA</name>
              <description>DMA11_PKG_IRQ_EN DMA 11Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_HLAF_IRQ_EN_DMA</name>
              <description>DMA11_HLAF_IRQ_EN DMA 11 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_QUEUE_IRQ_EN_DMA</name>
              <description>DMA10_QUEUE_IRQ_EN DMA 10 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_PKG_IRQ_EN_DMA</name>
              <description>DMA10_PKG_IRQ_EN DMA 10 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_HLAF_IRQ_EN_DMA</name>
              <description>DMA10_HLAF_IRQ_EN DMA 10 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_QUEUE_IRQ_EN_DMA</name>
              <description>DMA9_QUEUE_IRQ_EN DMA 9 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_PKG_IRQ_EN_DMA</name>
              <description>DMA9_PKG_IRQ_EN DMA 9 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_HLAF_IRQ_EN_DMA</name>
              <description>DMA9_HLAF_IRQ_EN DMA 9 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_QUEUE_IRQ_EN_DMA</name>
              <description>DMA8_QUEUE_IRQ_EN DMA 8 Queue End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_PKG_IRQ_EN_DMA</name>
              <description>DMA8_PKG_IRQ_EN DMA 8 Package End Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_HLAF_IRQ_EN_DMA</name>
              <description>DMA8_HLAF_IRQ_EN DMA 8 Half Package Transfer Interrupt Enable. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_PEND_REG0</name>
          <description>DMA IRQ Pending Register1</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_PEND</name>
              <description>DMA 7 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_PEND</name>
              <description>DMA 7 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_PEND</name>
              <description>DMA 7 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_PEND</name>
              <description>DMA 6 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_PEND</name>
              <description>DMA 6 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_PEND</name>
              <description>DMA 6 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_PEND</name>
              <description>DMA 5 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_PEND</name>
              <description>DMA 5 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_PEND</name>
              <description>DMA 5 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_PEND</name>
              <description>DMA 4 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_PEND</name>
              <description>DMA 4 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_PEND</name>
              <description>DMA 4 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_PEND</name>
              <description>DMA 3 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_PEND</name>
              <description>DMA 3 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_PEND</name>
              <description>DMA 3 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_PEND</name>
              <description>DMA 2 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_PEND</name>
              <description>DMA 2 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_PEND</name>
              <description>DMA 2 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_PEND</name>
              <description>DMA 1 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_PEND</name>
              <description>DMA 1 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_PEND</name>
              <description>DMA 1 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_PEND</name>
              <description>DMA 0 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_PEND</name>
              <description>DMA 0 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_PEND</name>
              <description>DMA 0 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_PEND_REG1</name>
          <description>DMA_IRQ_PEND_REG1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA15_QUEUE_IRQ_PEND</name>
              <description>DMA 15 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_PKG_IRQ_PEND</name>
              <description>DMA 15 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_HLAF_IRQ_PEND</name>
              <description>DMA 15 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_QUEUE_IRQ_PEND</name>
              <description>DMA 14 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_PKG_IRQ_PEND</name>
              <description>DMA 14 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_HLAF_IRQ_PEND</name>
              <description>DMA 14 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_QUEUE_IRQ_PEND</name>
              <description>DMA 13 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_PKG_IRQ_PEND</name>
              <description>DMA 13 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_HLAF_IRQ_PEND</name>
              <description>DMA 13 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_QUEUE_IRQ_PEND</name>
              <description>DMA 12 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_PKG_IRQ_PEND</name>
              <description>DMA 12 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_HLAF_IRQ_PEND</name>
              <description>DMA 12 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_QUEUE_IRQ_PEND</name>
              <description>DMA 11 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_PKG_IRQ_PEND</name>
              <description>DMA 11 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_HLAF_IRQ_PEND</name>
              <description>DMA 11 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_QUEUE_IRQ_PEND</name>
              <description>DMA 10 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_PKG_IRQ_PEND</name>
              <description>DMA 10 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_HLAF_IRQ_PEND</name>
              <description>DMA 10 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_QUEUE_IRQ_PEND</name>
              <description>DMA 9 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_PKG_IRQ_PEND</name>
              <description>DMA 9 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_HLAF_IRQ_PEND</name>
              <description>DMA 9 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_QUEUE_IRQ_PEND</name>
              <description>DMA 8 Queue End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_PKG_IRQ_PEND</name>
              <description>DMA 8 Package End Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_HLAF_IRQ_PEND</name>
              <description>DMA 8 Half Package Transfer Interrupt Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_STA_REG</name>
          <description>DMA Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x4000FFFF</resetMask>
          <fields>
            <field>
              <name>MBUS</name>
              <description>FIFO Status 
0: Empty 
1: Not Empty</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Empty</name>
                  <description>Empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_Empty</name>
                  <description>Not Empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA15_STATUS</name>
              <description>DMA Channel 15 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA14_STATUS</name>
              <description>DMA Channel 14 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA13_STATUS</name>
              <description>DMA Channel 13 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA12_STATUS</name>
              <description>DMA Channel 12 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_STATUS</name>
              <description>DMA Channel 11 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_STATUS</name>
              <description>DMA Channel 10 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_STATUS</name>
              <description>DMA Channel 9 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_STATUS</name>
              <description>DMA Channel 8 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_STATUS</name>
              <description>DMA Channel 7 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_STATUS</name>
              <description>DMA Channel 6 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_STATUS</name>
              <description>DMA Channel 5 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_STATUS</name>
              <description>DMA Channel 4 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_STATUS</name>
              <description>DMA Channel 3 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_STATUS</name>
              <description>DMA Channel 2 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_STATUS</name>
              <description>DMA Channel 1 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_STATUS</name>
              <description>DMA Channel 0 Status. 
0: Idle 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EMAC</name>
      <description>EMAC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0B000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>4</dim>
          <dimIncrement>8</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0xa0</addressOffset>
          <register>
            <name>EMAC_SAX_A0</name>
            <description>EMAC_SAX_A0</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>EMAC_SAX_ADR_B2</name>
                <description>EMAC SA Filtering Address Byte2</description>
                <bitRange>[23:16]</bitRange>
                <access>write-only</access>
              </field>
              <field>
                <name>EMAC_SAX_ADR_B1</name>
                <description>EMAC SA Filtering Address Byte1</description>
                <bitRange>[15:8]</bitRange>
                <access>write-only</access>
              </field>
              <field>
                <name>EMAC_SAX_ADR_B0</name>
                <description>EMAC SA Filtering Address Byte0</description>
                <bitRange>[7:0]</bitRange>
                <access>write-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>EMAC_SAX_A1</name>
            <description>EMAC_SAX_A1</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>EMAC_SAX_ADR_B5</name>
                <description>EMAC SA Filtering Address Byte5</description>
                <bitRange>[23:16]</bitRange>
                <access>write-only</access>
              </field>
              <field>
                <name>EMAC_SAX_ADR_B4</name>
                <description>EMAC SA Filtering Address Byte4</description>
                <bitRange>[15:8]</bitRange>
                <access>write-only</access>
              </field>
              <field>
                <name>EMAC_SAX_ADR_B3</name>
                <description>EMAC SA Filtering Address Byte3</description>
                <bitRange>[7:0]</bitRange>
                <access>write-only</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>EMAC_CTL</name>
          <description>EMAC Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>EMAC_CRS</name>
              <description>EMAC Carrier Sense 
0: Idle 
1: Carrier lost</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Carrier</name>
                  <description>Carrier lost</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_EN</name>
              <description>EMAC RX Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_EN</name>
              <description>EMAC TX Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_EN</name>
              <description>EMAC Enable Control 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_INT_CTL</name>
          <description>EMAC Interrupt Control Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7030F</resetMask>
          <fields>
            <field>
              <name>EMAC_CRL_INT</name>
              <description>EMAC Carrier Loss Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_FCH_INT</name>
              <description>EMAC RX Flow Control High Level Interrupt 
0: Disable 
1: Enable Note: If Enable, when free space less than 3K, the Interrupt will active</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: If Enable, when free space less than 3K, the Interrupt will active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_FCL_INT</name>
              <description>EMAC RX Flow Control Low Level Interrupt 
0: Disable 
1: Enable Note: If Enable, when free space less than 8K, the Interrupt will active</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: If Enable, when free space less than 8K, the Interrupt will active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX</name>
              <description>_OR_INT EMAC RX Overrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_RCE_INT</name>
              <description>EMAC RX Received Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN1_AB_INT</name>
              <description>EMAC TX FIFO Index1 Aborted Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN0_AB_INT</name>
              <description>EMAC TX FIFO Index0 Aborted Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN1_TC_INT</name>
              <description>EMAC TX FIFO Index1 Transmit Completed Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN0_TC_INT</name>
              <description>EMAC TX FIFO Index0 Transmit Completed Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_INT_STA</name>
          <description>EMAC Interrupt Status Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7030F</resetMask>
          <fields>
            <field>
              <name>EMAC_CRL_P</name>
              <description>EMAC Carrier Loss Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_FCH_P</name>
              <description>EMAC RX Flow Control High Level Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_FCL_P</name>
              <description>EMAC RX Flow Control Low Level Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX</name>
              <description>_OR_P EMAC RX Overrun Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_RCE_P</name>
              <description>EMAC RX Received Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN1_AB_P</name>
              <description>EMAC TX FIFO Index1 Aborted Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN0_AB_P</name>
              <description>EMAC TX FIFO Index0 Aborted Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN1_TC_P</name>
              <description>EMAC TX FIFO Index1 Transmit Completed Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN0_TC_P</name>
              <description>EMAC TX FIFO Index0 Transmit Completed Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_A0</name>
          <description>EMAC MAC Address Register0</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_ADR_B2</name>
              <description>EMAC MAC Address Byte2</description>
              <bitRange>[23:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>EMAC_MAC_ADR_B1</name>
              <description>EMAC MAC Address Byte1</description>
              <bitRange>[15:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>EMAC_MAC_ADR_B0</name>
              <description>EMAC MAC Address Byte0</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_A1</name>
          <description>EMAC MAC Address Register1</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_ADR_B5</name>
              <description>EMAC MAC Address Byte5</description>
              <bitRange>[23:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>EMAC_MAC_ADR_B4</name>
              <description>EMAC MAC Address Byte4</description>
              <bitRange>[15:8]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>EMAC_MAC_ADR_B3</name>
              <description>EMAC MAC Address Byte3</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_CLRT</name>
          <description>EMAC MAC Collision/ Retry Limit Register</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x370F</resetValue>
          <resetMask>0x3F0F</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_CW</name>
              <description>EMAC MAC Collision Window</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_REMX</name>
              <description>EMAC MAC Retransmission Maximum</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_CTL0</name>
          <description>EMAC MAC Control Register0</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x8000</resetValue>
          <resetMask>0xCF1F</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_SF_EMAC_MAC_SOFT_RESET</name>
              <description>EMAC_MAC_SF EMAC MAC Soft Reset 
0: Disable 
1: Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_SIR_EMAC_MAC_SIMULATION_RESET</name>
              <description>EMAC_MAC_SIR EMAC MAC Simulation Reset 
0: Disable 
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RRX_EMAC_MAC_RESET_RX</name>
              <description>EMAC_MAC_RRX EMAC MAC Reset RX Logic 
0: Disable 
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RPT_EMAC_MAC_RESET_PERFUN</name>
              <description>EMAC_MAC_RPT EMAC MAC Reset PERFUN 
0: Disable 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RTX_EMA_MAC_RESET_TX</name>
              <description>EMAC_MAC_RTX EMA MAC Reset TX logic 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RPT_EMAC_MAC_RESET_PETFUN</name>
              <description>EMAC_MAC_RPT EMAC MAC Reset PETFUN 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_LP_EMAC_MAC_LOOPBACK</name>
              <description>EMAC_MAC_LP EMAC MAC LOOPBACK 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_TFC_EMAC_MAC_TRANSMIT_FLOW</name>
              <description>EMAC_MAC_TFC EMAC MAC Transmit Flow Control 
0: Disable 
1: Enable When enabled, PAUSE Flow Control frames are allowed to be transmitted</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When enabled, PAUSE Flow Control frames are allowed to be transmitted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RFC_EMAC_MAC_RECEIVE_FLOW</name>
              <description>EMAC_MAC_RFC EMAC MAC Receive Flow Control 
0: Disable 
1: Enable When enabled, the MAC acts upon received PAUSE Flow Control frames</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When enabled, the MAC acts upon received PAUSE Flow Control frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_PC_EMA_MAC_PASS_CONTROL</name>
              <description>EMAC_MAC_PC EMA MAC Pass Control frames 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_REN_EMAC_MAC_RECEIVE_ENABLE</name>
              <description>EMAC_MAC_REN EMAC MAC Receive Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_CTL1</name>
          <description>EMAC MAC Control Register1</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73FF</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_ED</name>
              <description>EMAC MAC Excess Defer 
0: Disable 
1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_BP</name>
              <description>EMAC MAC Backpressure/no back off 
0: Disable 
1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_NB</name>
              <description>EMAC MAC No Back off 
0: Disable 
1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_LP</name>
              <description>EMAC MAC Long Preamble Enforcement Enable 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_PP</name>
              <description>EMAC MAC Pure Preamble Enforcement Enable 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_ADP</name>
              <description>EMAC MAC Auto Detect Pad Enable 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_VLAN_PAD</name>
              <description>EMAC MAC VLAN PAD Enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_PC</name>
              <description>EMAC MAC PAD/CRC Enable 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_CRC</name>
              <description>EMAC MAC CRC Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_DCRC</name>
              <description>EMAC MAC Delayed CRC 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_HF</name>
              <description>EMAC MAC Huge Frame Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_FLC</name>
              <description>EMAC MAC Frame Length Checking 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_FULL</name>
              <description>EMAC MAC Full duplex 
0: Half duplex 
1: Full duplex</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Half</name>
                  <description>Half duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_IPGR</name>
          <description>EMAC MAC NBTB Inter-Packet-Gap Register</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F7F</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_IPGR1</name>
              <description>EMAC MAC Non Back to Back Inter Packet Gap Part1</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_IPGR2</name>
              <description>EMAC MAC Non Back to Back Inter Packet Gap Part2</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_IPGT</name>
          <description>EMAC MAC BTB Inter-Packet-Gap Register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_IPGT</name>
              <description>EMAC MAC Back to Back Inter Packet Gap</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_MADR</name>
          <description>EMAC MAC MII Mgmt Address Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F1F</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_MII_PA</name>
              <description>EMAC MAC MII PHY Address</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_MII_RA</name>
              <description>EMAC MAC MII Register Address</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_MAXF</name>
          <description>EMAC MAC Maximum Frame Register</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x600</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_MAXF</name>
              <description>EMAC MAC Maximum Frame Length</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_MCFG</name>
          <description>EMAC MAC MII Mgmt Configuration Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x803F</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_MII_RST</name>
              <description>EMAC MAC MII Reset 
0: Disable 
1: Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_MII_CLKD</name>
              <description>EMAC MAC MII Clock Divider 
0000: 4 
0001: 4 
0010: 6 
0011: 8 
0100: 10 
0101: 14 
0110: 20 
0111: 28 
1000: 32 
1001: 40 
1010: 48 
1011: 56 
1100: 64 
1101: 72 
1110: 80 
1111: 88</description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_MII_SP</name>
              <description>EMAC MAC MII Suppress Preamble</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_MII_SI</name>
              <description>EMAC MAC MII Scan Increment</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_MCMD</name>
          <description>EMAC MAC MII Mgmt Command Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_MII_SCAN</name>
              <description>EMAC MAC MII Scan</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_MII_READ</name>
              <description>EMAC MAC MII Read This bit causes the MII interface to perform a single read cycle. The read data is returned in register EMAC_MAC_MRDD.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_MIND</name>
          <description>EMAC MAC MII Mgmt Indicators Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_MII_LF</name>
              <description>EMAC MAC MII Link Fail</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_MAC_MII_N</name>
              <description>EMAC MAC MII Not Valid</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_MAC_MII_S</name>
              <description>EMAC MAC MII Scanning</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_MAC_MII_B</name>
              <description>EMAC MAC MII Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_MRDD</name>
          <description>EMAC MAC MII Mgmt Read Data Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_MII_RD</name>
              <description>EMAC MAC MII Read Data</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_MWTD</name>
          <description>EMAC MAC MII Mgmt Write Data Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_MII_WD</name>
              <description>EMAC MAC MII Write Data When written, a MII interface write cycle is performed using 16-bit data and the pre-configured PHY and Register address in EMAC_MAC_MADR.</description>
              <bitRange>[15:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_SSRR</name>
          <description>EMAC MAC SMII Status Register</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_SMII_C</name>
              <description>EMAC MAC SMII Clash</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_MAC_SMII_J</name>
              <description>EMAC MAC SMII Jabber</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_MAC_SMII_L</name>
              <description>EMAC MAC SMII Link 
0: fail 
1: ok</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>fail</name>
                  <description>fail</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ok</name>
                  <description>ok</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_SMII_D</name>
              <description>EMAC MAC SMII Duplex 
0: Half Duplex 
1: Full Duplex</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Half</name>
                  <description>Half Duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full Duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_SMII_S</name>
              <description>EMAC MAC SMII Speed 
0: 10M 
1: 100M</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_10M</name>
                  <description>10M</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100M</name>
                  <description>100M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_SUPP</name>
          <description>EMAC MAC PHY Support Register</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x99FB</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_RIM</name>
              <description>EMAC MAC Reset Interface Module 
0: Disable 
1: Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_PHYM</name>
              <description>EMAC MAC PHY Mode 
0: SMII MAC 
1: SMII PHY</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SMII_MAC</name>
                  <description>SMII MAC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMII_PHY</name>
                  <description>SMII PHY</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RRMII</name>
              <description>EMAC MAC Reset RMII 
0: Disable 
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_SPEED</name>
              <description>EMAC MAC Speed 
0: 10M 
1: 100M</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_10M</name>
                  <description>10M</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100M</name>
                  <description>100M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RPET100X</name>
              <description>EMAC MAC Reset PET100X 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_FQ</name>
              <description>EMAC MAC Force Quiet 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_NC</name>
              <description>EMAC MAC No Cipher 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_DLF</name>
              <description>EMAC MAC Disable Link Fail 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_RPET10</name>
              <description>EMAC MAC Reset PET10 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_JP</name>
              <description>EMAC MAC Jabber Protection Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_MAC_BM</name>
              <description>EMAC MAC Bit Mode 
0: nibble clock 
1: bit clock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>nibble</name>
                  <description>nibble clock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bit</name>
                  <description>bit clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MAC_TEST</name>
          <description>EMAC MAC Test Register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>EMAC_MAC_TB</name>
              <description>EMAC MAC Test backpressure</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_TP</name>
              <description>EMAC MAC Test Pause</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MAC_SPQ</name>
              <description>EMAC MAC Shortcut Pause Quanta</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>EMAC_MDAFX_A0[%s]</name>
          <description>EMAC_MDAFX_A0[%s]</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_MDA_B2</name>
              <description>EMAC Multicast DA filtering Address Byte2</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MDA_B1</name>
              <description>EMAC Multicast DA filtering Address Byte1</description>
              <bitRange>[16:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MDA_B0</name>
              <description>EMAC Multicast DA filtering Address Byte0</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_MDAFX_A1</name>
          <description>EMAC_MDAFX_A1</description>
          <addressOffset>0xE0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_MDA_B5</name>
              <description>EMAC Multicast DA filtering Address Byte5</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MDA_B4</name>
              <description>EMAC Multicast DA filtering Address Byte4</description>
              <bitRange>[16:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_MDA_B3</name>
              <description>EMAC Multicast DA filtering Address Byte3</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_CTL</name>
          <description>EMAC RX Control Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F307FF</resetMask>
          <fields>
            <field>
              <name>EMAC_RX_SAIF</name>
              <description>EMC RX SA Inverse Filtering 
0: Disable 
1: Enable Note: Active when EMAC_RX_SAF enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: Active when EMAC_RX_SAF enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_SAF</name>
              <description>EMAC RX SA Filtering Enable 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_MDAF</name>
              <description>EMAC RX Multicast DA Filtering Enable 
0: Disable 
1: Eanble</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Eanble</name>
                  <description>Eanble</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_BCO</name>
              <description>EMAC RX Broadcast Packet Accept  
0: not accept 
1: Accept Note: Active when EMAC_RX_DAF enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_accept</name>
                  <description>not accept</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Accept</name>
                  <description>Accept Note: Active when EMAC_RX_DAF enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_MHF</name>
              <description>EMAC RX Multicast Hash Filtering Enable 
0: Disable 
1: Enable Note: Active when EMAC_RX_MCO enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: Active when EMAC_RX_MCO enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_MCO</name>
              <description>EMAC RX Multicast Packet Accept 
0: not accept 
1: Accept</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_accept</name>
                  <description>not accept</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Accept</name>
                  <description>Accept</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_DAF</name>
              <description>EMC RX DA Filtering Enable 
0: Disable 
1: Enable Note: Active when EMAC_RX_UCAD is set</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: Active when EMAC_RX_UCAD is set</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_UCAD</name>
              <description>EMAC RX Unicast Packet Accept  
0: not accept 
1: Accept</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_accept</name>
                  <description>not accept</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Accept</name>
                  <description>Accept</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_PDB</name>
              <description>EMAC RX Pass packet with Dribble Nibble 
0: Disable 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_PRCV</name>
              <description>EMAC RX Pass Packet with Receive Code Violation 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_PLO</name>
              <description>EMAC RX Pass Packet with Length Out of Range 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_PLE</name>
              <description>EMAC RX Pass Packet with Length Errors 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_PCRCE</name>
              <description>EMAC RX Pass Packet with CRC Errors 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_PCF</name>
              <description>EMAC RX Pass Control Frame  
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_PA</name>
              <description>EMAC RX Pass All Enable 
0: Disable 
1: Enable Note: if this bit is set, all packets will be transmitted to the upper layer regardless of other settings.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: if this bit is set, all packets will be transmitted to the upper layer regardless of other settings.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_FRX</name>
              <description>EMAC RX FIFO Flush Write `1` to Flush RX FIFO</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_RX_TM</name>
              <description>EMAC_RX Transmit Mode 
0: CPU 
1: DMA Note: This bit is only valid in single frame mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CPU</name>
                  <description>CPU</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA Note: This bit is only valid in single frame mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RX_DRQ_MODE</name>
              <description>EMAC RX DRQ Mode 
0: DRQ always asserted 
1: DRQ asserted automatically Note: Only valid in DMA Mode.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DRQ_always_asserted</name>
                  <description>DRQ always asserted</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DRQ_asserted</name>
                  <description>DRQ asserted automatically Note: Only valid in DMA Mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_FBC</name>
          <description>EMAC RX FIFO Byte Counter</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>EMAC_RX_FIFO_BC</name>
              <description>EMAC RX FIFO Byte Counter</description>
              <bitRange>[14:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_HASH0</name>
          <description>EMAC RX Hash Table Register0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_RX_HASH_L</name>
              <description>EMAC RX HASH Table Low 32bit Note: The 64-bit Hash table is used for group address filtering. For hash filtering, the contents of the destination address in the incoming frame is passed through the CRC logic, and the upper 6 bits of the CRC register are used to index the contents of the Hash table. The most significant bit determines the register to be used (Hash Table 0/Hash Table 1), and the other 5 bits determine which bit within the register. A hash value of 5b'00000 selects bit 0 of the selected register, and a value of 5b'11111 selects bit 31 of the selected register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_HASH1</name>
          <description>EMAC RX Hash Table Register1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_RX_HASH_H</name>
              <description>EMAC RX HASH Table High 32bit Note: The 64-bit Hash table is used for group address filtering. For hash filtering, the contents of the destination address in the incoming frame is passed through the CRC logic, and the upper 6 bits of the CRC register are used to index the contents of the Hash table. The most significant bit determines the register to be used (Hash Table 0/Hash Table 1), and the other 5 bits determine which bit within the register. A hash value of 5b'00000 selects bit 0 of the selected register, and a value of 5b'11111 selects bit 31 of the selected register.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_IO_DATA</name>
          <description>EMAC RX IO Data Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_RX_IO_DATA</name>
              <description>Read data from internal ram</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_RX_STA</name>
          <description>EMAC RX Status Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_RX_VLAN</name>
              <description>Receive VLAN TYPE Detected</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_UNSUP</name>
              <description>Receive Unsupported Op-code</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_PAUSE</name>
              <description>Receive Pause Control Frame</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_CONTROL</name>
              <description>Receive Control Frame</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_DN</name>
              <description>Dribble Nibble</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_BC</name>
              <description>Broadcast Packet</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_MC</name>
              <description>Multicast Packet</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_OK</name>
              <description>Receive OK</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_LO</name>
              <description>Length Out of Range</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_LE</name>
              <description>Length Check Error</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_CRCE</name>
              <description>CRC Error</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_CV</name>
              <description>Receive Code Violation</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_CE_PS</name>
              <description>Carrier Event Previously Seen</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_RXDVE_PS</name>
              <description>RXDV Event Previously Seen</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_PPI</name>
              <description>Packet Previously Ignored</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_RX_BCNT</name>
              <description>Received Byte Count</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_CTL0</name>
          <description>EMAC TX Control Register0</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_PHUEN_0</name>
              <description>EMAC TX Per-Packet Huge Enable 
0: Disable 
1: Enable Setting the bit to `1` will allow the transmission of a Huge Frame (over 1518 bytes) without truncating the current transmit frame.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Setting the bit to `1` will allow the transmission of a Huge Frame (over 1518 bytes) without truncating the current transmit frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_CRC_EN_0</name>
              <description>EMAC TX Per-Packet CRC Enable 
0: Disable 
1: Enable Setting the bit to `1` will append a correct CRC Value to the frame</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Setting the bit to `1` will append a correct CRC Value to the frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_PPADEN_0</name>
              <description>EMAC TX Per-Packet Pad Enable 
0: Disable 
1: Enable Setting the bit to `1` will pad the current transmit frame to the IEEE minimum of 64 bytes and append a correct CRC Value to the frame</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Setting the bit to `1` will pad the current transmit frame to the IEEE minimum of 64 bytes and append a correct CRC Value to the frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_OVERR_0</name>
              <description>EMAC TX Per-Packet Over Ride Enable 
0: Disable 
1: Enable When this bit is set to `1`, the per-packet settings in this Register will override the current configuration settings In EMAC MAC Registers.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When this bit is set to `1`, the per-packet settings in this Register will override the current configuration settings In EMAC MAC Registers.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN0_FTX</name>
              <description>EMAC TX Flush TX FIFO Index0 
0: Disable 
1: Enable Write `1` to Flush TX FIFO index0</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Write `1` to Flush TX FIFO index0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN0_REQ</name>
              <description>EMAC TX Index0 Transmit Request 
0: Idle 
1: Active Note: Auto clears after sending completely.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active</name>
                  <description>Active Note: Auto clears after sending completely.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_CTL1</name>
          <description>EMAC TX Control Register1</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_PHUEN_1</name>
              <description>EMAC TX Per-Packet Huge Enable 
0: Disable 
1: Enable Setting the bit to `1` will allow the transmission of a Huge Frame (over 1518 bytes) without truncating the current transmit frame.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Setting the bit to `1` will allow the transmission of a Huge Frame (over 1518 bytes) without truncating the current transmit frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_CRC_EN_1</name>
              <description>EMAC TX Per-Packet CRC Enable 
0: Disable 
1: Enable Setting the bit to `1` will append a correct CRC Value to the frame</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Setting the bit to `1` will append a correct CRC Value to the frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_PPADEN_1</name>
              <description>EMAC TX Per-Packet Pad Enable 
0: Disable 
1: Enable Setting the bit to `1` will pad the current transmit frame to the IEEE minimum of 64 bytes and append a correct CRC Value to the frame</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Setting the bit to `1` will pad the current transmit frame to the IEEE minimum of 64 bytes and append a correct CRC Value to the frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_OVERR_1</name>
              <description>EMAC TX Per-Packet Over Ride Enable 
0: Disable 
1: Enable When this bit is set to `1`, the per-packet settings in this Register will override the current configuration settings In EMAC MAC Registers.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When this bit is set to `1`, the per-packet settings in this Register will override the current configuration settings In EMAC MAC Registers.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN1_FTX</name>
              <description>EMAC TX Flush TX FIFO Index1 
0: Disable 
1: Enable Write `1` to Flush TX FIFO index1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Write `1` to Flush TX FIFO index1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_IN1_REQ</name>
              <description>EMAC TX Index1 Transmit Request 
0: Idle 
1: Active Note: Auto clears after sending completely</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active</name>
                  <description>Active Note: Auto clears after sending completely</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_FLOW</name>
          <description>EMAC TX Flow Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF03</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_TPTV</name>
              <description>EMAC TX Transmit PAUSE Timer Value</description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMAC_TX_THDF</name>
              <description>EMAC TX Transmit Half-Duplex Flow Control 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_TPCF</name>
              <description>EMAC TX Transmit PAUSE Control Frame Note: Write `1` to active pause control operation, auto clears after pause transmission completion.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_INS</name>
          <description>EMAC TX Index Select Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_INS</name>
              <description>EMAC TX Index Select 
0: TX RAM0 
1: TX RAM1</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_RAM0</name>
                  <description>TX RAM0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_RAM1</name>
                  <description>TX RAM1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_IO_DATA0</name>
          <description>EMAC TX IO Data Register0</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_IO_DATA</name>
              <description>Write data into internal RAM</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_IO_DATA1</name>
          <description>EMAC TX IO Data Register1</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>EMAC_TX_MODE</name>
          <description>EMAC TX Mode Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_TM</name>
              <description>Transmit Mode Select 
0: CPU mode 
1: DMA mode</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CPU_mode</name>
                  <description>CPU mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_mode</name>
                  <description>DMA mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_AB_M</name>
              <description>EMAC TX Aborted Packet Mode 
0: Aborted frame auto clear 
1: Aborted frame wait</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Aborted_frame_auto</name>
                  <description>Aborted frame auto clear</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Aborted_frame_wait</name>
                  <description>Aborted frame wait</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_PL0</name>
          <description>EMAC TX Packet Length Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_PA_LENTH_0</name>
              <description>EMAC TX Packet Length for Index0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_PL1</name>
          <description>EMAC TX Packet Length Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_PA_LENTH_1</name>
              <description>EMAC TX Packet Length for Index1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_STA</name>
          <description>EMAC TX Status Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x180</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_WAIT</name>
              <description>EMAC TX Waiting 
0: Normal 
1: TX is Waiting Note: Only active Aborted Frame Waiting Mode, Write `1` to clear this bit and wake up TX</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX</name>
                  <description>TX is Waiting Note: Only active Aborted Frame Waiting Mode, Write `1` to clear this bit and wake up TX</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_TX_INF</name>
              <description>EMAC TX Index Flag 
0: Index0 is active 
1: Index1 is active</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Index0</name>
                  <description>Index0 is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Index1</name>
                  <description>Index1 is active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_TSVH0</name>
          <description>EMAC TX TSV High Word Register0</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_VLAN</name>
              <description>Transmit VLAN Tagged frame</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BA</name>
              <description>Backpressure Applied</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_PAUSE</name>
              <description>Transmit Pause Control Frame</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_CONTROL</name>
              <description>Transmit Control Frame</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BOW</name>
              <description>Total Bytes Transmitted on Wire</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_TSVH1</name>
          <description>EMAC TX TSV High Word Register1</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_VLAN</name>
              <description>Transmit VLAN Tagged Frame</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BA</name>
              <description>Backpressure Applied</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_PAUSE</name>
              <description>Transmit Pause Control Frame</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_CONTROL</name>
              <description>Transmit Control Frame</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BOW</name>
              <description>Total Bytes Transmitted on Wire</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_TSVL0</name>
          <description>EMAC TX TSV Low Word Register0</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_UR_TRANSMIT_UNDER_RUN</name>
              <description>EMAC_TX_UR Transmit under-run</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_GIANT_TRANSMIT_GIANT</name>
              <description>EMAC_TX_GIANT Transmit Giant</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_LC_TRANSMIT_LATE_COLLISIONS</name>
              <description>EMAC_TX_LC Transmit Late Collisions</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_MC_TRANSMIT_MAXIMUM_COLLISIONS</name>
              <description>EMAC_TX_MC Transmit Maximum Collisions</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_ED_TRANSMIT_EXCESSIVE_DEFER</name>
              <description>EMAC_TX_ED Transmit Excessive Defer</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_PD_TRANSMIT_PACKET_DEFER</name>
              <description>EMAC_TX_PD Transmit Packet Defer</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BC_TRANSMIT_BROADCAST</name>
              <description>EMAC_TX_BC Transmit Broadcast</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_MC_TRANSMIT_MULTICAST</name>
              <description>EMAC_TX_MC Transmit Multicast</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_DONE_TRANSMIT_DONE</name>
              <description>EMAC_TX_DONE Transmit Done</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_LO_TRANSMIT_LENGTH_OUT</name>
              <description>EMAC_TX_LO Transmit Length Out of Range</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_LE_TRANSMIT_LENGTH_CHECK_ERROR</name>
              <description>EMAC_TX_LE Transmit Length Check Error</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_CRCE_TRANSMIT_CRC_ERROR</name>
              <description>EMAC_TX_CRCE Transmit CRC Error</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_CCNT_TRANSMIT_COLLISION_COUNT</name>
              <description>EMAC_TX_CCNT Transmit Collision Count</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BCNT_TRANSMIT_BYTE_COUNT</name>
              <description>EMAC_TX_BCNT Transmit Byte Count</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMAC_TX_TSVL1</name>
          <description>EMAC TX TSV Low Word Register1</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EMAC_TX_UR_TRANSMIT_UNDER_RUN</name>
              <description>EMAC_TX_UR Transmit under-run</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_GIANT_TRANSMIT_GIANT</name>
              <description>EMAC_TX_GIANT Transmit Giant</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_LC_TRANSMIT_LATE_COLLISIONS</name>
              <description>EMAC_TX_LC Transmit Late Collisions</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_MC_TRANSMIT_MAXIMUM_COLLISIONS</name>
              <description>EMAC_TX_MC Transmit Maximum Collisions</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_ED_TRANSMIT_EXCESSIVE_DEFER</name>
              <description>EMAC_TX_ED Transmit Excessive Defer</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_PD_TRANSMIT_PACKET_DEFER</name>
              <description>EMAC_TX_PD Transmit Packet Defer</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BC_TRANSMIT_BROADCAST</name>
              <description>EMAC_TX_BC Transmit Broadcast</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_MC_TRANSMIT_MULTICAST</name>
              <description>EMAC_TX_MC Transmit Multicast</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_ED_TRANSMIT_DONE</name>
              <description>EMAC_TX_ED Transmit Done</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_LO_TRANSMIT_LENGTH_OUT</name>
              <description>EMAC_TX_LO Transmit Length Out of Range</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_LE_TRANSMIT_LENGTH_CHECK_ERROR</name>
              <description>EMAC_TX_LE Transmit Length Check Error</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_CRCE_TRANSMIT_CRC_ERROR</name>
              <description>EMAC_TX_CRCE Transmit CRC Error</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_CCNT_TRANSMIT_COLLISION_COUNT</name>
              <description>EMAC_TX_CCNT Transmit Collision Count</description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EMAC_TX_BCNT_TRANSMIT_BYTE_COUNT</name>
              <description>EMAC_TX_BCNT Transmit Byte Count</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>GMAC</name>
      <description>GMAC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C50000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>7</dim>
          <dimIncrement>8</dimIncrement>
          <dimIndex>1,2,3,4,5,6,7</dimIndex>
          <name>_N_%s</name>
          <addressOffset>0x58</addressOffset>
          <register>
            <name>GMAC_ADDR_HIGHN</name>
            <description>GMAC_ADDR_HIGHN</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_CTL</name>
                <description>MAC Address is valid 
0: Not valid 
1: Valid</description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Not_valid</name>
                    <description>Not valid</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Valid</name>
                    <description>Valid</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_TYPE</name>
                <description>MAC Address Type 
0: Used to compare with the destination address of the received frame 
1: Used to compare with the source address of the received frame</description>
                <bitRange>[30:30]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Used_to_compare_with_the_destination</name>
                    <description>Used to compare with the destination address of the received frame</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Used_to_compare_with_the_source</name>
                    <description>Used to compare with the source address of the received frame</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_BYTE_CTL</name>
                <description>MAC address byte control mask. The lower bit of mask controls the lower byte in MAC address. When the bit of mask is 1, do not compare the corresponding byte.</description>
                <bitRange>[29:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>MAC_ADDR_HIGH</name>
                <description>The upper 16bits of the MAC address.</description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>GMAC_ADDR_LOWN</name>
            <description>GMAC_ADDR_LOWN</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_LOWN</name>
                <description>The lower 32bits of MAC address N (N: 1~7).</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>GMAC_ADDR_HIGH0</name>
          <description>GMAC MAC Address High Register0</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_HIGH0</name>
              <description>The upper 16bits of the 1st MAC address.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_ADDR_LOW0</name>
          <description>GMAC MAC Address High Register0</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_LOW0</name>
              <description>The lower 32bits of 1st MAC address.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_BASIC_CTL0</name>
          <description>GMAC Basic Control Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SPEED</name>
              <description>00: 1000Mbps 
01: Reserved 
10: 10Mbps 
11: 100Mbps</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1000Mbps</name>
                  <description>1000Mbps</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10Mbps</name>
                  <description>10Mbps</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100Mbps</name>
                  <description>100Mbps</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOPBACK</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DUPLEX</name>
              <description>0: Half-duplex 
1: Full-duplex</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_duplex</name>
                  <description>Half-duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_duplex</name>
                  <description>Full-duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_BASIC_CTL1</name>
          <description>GMAC Basic Control Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x8000000</resetValue>
          <resetMask>0x3F000003</resetMask>
          <fields>
            <field>
              <name>BURST_LEN</name>
              <description>The burst length of RX and TX DMA transfer.</description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TX_PRI</name>
              <description>RX TX DMA priority 
0: same priority 
1: RX priority over TX</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>same</name>
                  <description>same priority</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX priority over TX</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Soft Reset all Registers and Logic 
0: No valid 
1: Reset Note: All clock inputs must be valid before soft rest. This bit is cleared internally when the reset operation is completed fully. Before write any register, this bit should read a 0.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_valid</name>
                  <description>No valid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset Note: All clock inputs must be valid before soft rest. This bit is cleared internally when the reset operation is completed fully. Before write any register, this bit should read a 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_INT_EN</name>
          <description>GMAC Interrupt Enable Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F3F</resetMask>
          <fields>
            <field>
              <name>RX_EARLY_INT_EN</name>
              <description>Early Receive Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_OVERFLOW_INT_EN</name>
              <description>Receive Overflow Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TIMEOUT_INT_EN</name>
              <description>Receive Timeout Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DMA_STOPPED_INT_EN</name>
              <description>Receive DMA FSM Stopped Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_BUF_UA_INT_EN</name>
              <description>Receive Buffer Unavailable Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_INT_EN</name>
              <description>Receive interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EARLY_INT_EN</name>
              <description>Early Transmit Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_UNDERFLOW_INT_EN</name>
              <description>Transmit Underflow Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TIMEOUT_INT_EN</name>
              <description>Transmit Timeout Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_BUF_UA_INT_EN</name>
              <description>Transmit Buffer Available Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_STOPPED_INT_EN</name>
              <description>Transmit DMA FSM Stopped Interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_INT_EN</name>
              <description>Transmit interrupt 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_INT_STA</name>
          <description>GMAC Interrupt Status Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x13F3F</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK_STA_P</name>
              <description>RMII Link Status Changed Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EARLY_P</name>
              <description>RX DMA Filled First data Buffer of the Receive Frame Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_OVERFLOW_P</name>
              <description>RX FIFO Overflow Error Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TIMEOUT_P</name>
              <description>RX Timeout Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear .When this bit asserted, the length of receive frame is greater than 2048 bytes(10240 when JUMBO_FRM_EN is set)</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear .When this bit asserted, the length of receive frame is greater than 2048 bytes(10240 when JUMBO_FRM_EN is set)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DMA_STOPPED_P</name>
              <description>When this bit asserted, the RX DMA FSM is stopped.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_BUF_UA</name>
              <description>_P RX Buffer UA Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear .When this asserted, the RX DMA can`t acquire next RX descriptor and RX DMA FSM is suspended. The ownership of next RX descriptor should be changed to RX DMA. The RX DMA FSM will resume when write to DMA_RX_START bit or next receive frame is coming.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear .When this asserted, the RX DMA can`t acquire next RX descriptor and RX DMA FSM is suspended. The ownership of next RX descriptor should be changed to RX DMA. The RX DMA FSM will resume when write to DMA_RX_START bit or next receive frame is coming.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_P</name>
              <description>Frame RX Completed Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear. When this bit is asserted, a frame reception is completed. The RX DMA FSM remains in the running state.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear. When this bit is asserted, a frame reception is completed. The RX DMA FSM remains in the running state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EARLY_P</name>
              <description>Frame is transmitted to FIFO totally Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_UNDERFLOW_P</name>
              <description>TX FIFO Underflow Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TIMEOUT_P</name>
              <description>Transmitter Timeout Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_BUF_UA_P</name>
              <description>TX Buffer UA Interrupt Pending 
0: No Pending 
1: Pending When this asserted, the TX DMA can not acquire next TX descriptor and TX DMA FSM is suspended. The ownership of next TX descriptor should be changed to TX DMA. The TX DMA FSM will resume when write to DMA_TX_START bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending When this asserted, the TX DMA can not acquire next TX descriptor and TX DMA FSM is suspended. The ownership of next TX descriptor should be changed to TX DMA. The TX DMA FSM will resume when write to DMA_TX_START bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_STOPPED_P</name>
              <description>Transmission DMA Stopped Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_P</name>
              <description>Frame Transmission Interrupt Pending 
0: No Pending 
1: Pending Note: Write `1` to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending Note: Write `1` to clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_MII_CMD</name>
          <description>GMAC Management Interface Command Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71F1F3</resetMask>
          <fields>
            <field>
              <name>MDC_DIV_RATIO_M</name>
              <description>MDC Clock Divide Ratio 
000: 16 
001: 32 
010: 64 
011: 128 Others: Reserved Note: MDC Clock is divided from AHB clock</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 Others: Reserved Note: MDC Clock is divided from AHB clock</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PHY_ADDR</name>
              <description>PHY Address</description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_REG_ADDR</name>
              <description>PHY Register Address</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MII_WR</name>
              <description>MII Write and Read 
0: Read 
1: Write</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MII_BUSY</name>
              <description>0: Write no valid, read 0 indicate finish in read or write operation 
1: Write start read or write operation, read 1 indicate busy.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Write_no_valid</name>
                  <description>Write no valid, read 0 indicate finish in read or write operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write_start</name>
                  <description>Write start read or write operation, read 1 indicate busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_MII_DATA</name>
          <description>GMAC Management Interface Data Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MII_DATA</name>
              <description>Written to or read from the register in the selected PHY.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RGMII_STA</name>
          <description>GMAC RGMII Status Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK</name>
              <description>The link status of RGMII interface 
0: Down 
1: Up</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Down</name>
                  <description>Down</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Up</name>
                  <description>Up</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_SPD</name>
              <description>The link speed of RGMII interface 
00: 2.5 MHz 
01: 25 MHz 
10: 125 MHz 
11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_point_5</name>
                  <description>2.5 MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_25</name>
                  <description>25 MHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_125</name>
                  <description>125 MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_MD</name>
              <description>The link Mode of RGMII interface 
0: Half-Duplex 
1: Full-Duplex</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_Duplex</name>
                  <description>Half-Duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_Duplex</name>
                  <description>Full-Duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_CTL0</name>
          <description>GMAC Receive Control Register0</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF8030000</resetMask>
          <fields>
            <field>
              <name>RX_EN</name>
              <description>Enable receiver  
0: Disable receiver after current reception 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receiver after current reception</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FRM_LEN_CTL</name>
              <description>Frame Receive Length Control 
0: Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1) 
1: Up to 16,384 bytes Note: any bytes after that is cut off</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Up_to_2_comma_048</name>
                  <description>Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Up_to_16_comma_384</name>
                  <description>Up to 16,384 bytes Note: any bytes after that is cut off</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>JUMBO_FRM_EN</name>
              <description>Jumbo Frame Enable 
0: Disable 
1: Enable Jumbo frames of 9,018 bytes without reporting a giant</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Jumbo frames of 9,018 bytes without reporting a giant</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STRIP_FCS</name>
              <description>When set, strip the Pad/FCS field on received frames only when the length`s field value is less than or equal to 1,500 bytes.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHECK_CRC</name>
              <description>Check CRC anable 
0: Disable 
1: Calculate CRC and check the IPv4 Header Checksum.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Calculate</name>
                  <description>Calculate CRC and check the IPv4 Header Checksum.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PAUSE_FRM_MD</name>
              <description>0: Only detect multicast pause frame specified in the 802.3x standard. 
1: In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Only_detect</name>
                  <description>Only detect multicast pause frame specified in the 802.3x standard.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>In</name>
                  <description>In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_EN</name>
              <description>When set, enable the functionality that decode the received pause frame and disable its transmitter for a specified time by pause frame.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_CTL1</name>
          <description>GMAC Receive Control Register1</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC1F0003F</resetMask>
          <fields>
            <field>
              <name>RX_DMA_START</name>
              <description>When set, the RX DMA will go no to work. It is cleared internally and always read a 0.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DMA_EN</name>
              <description>Receive DMA Enable 
0: Stop RX DMA after finish receiving current frame 
1: Start and run RX DMA</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop RX DMA after finish receiving current frame</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run RX DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FIFO_FLOW_CTL</name>
              <description>Receive FIFO Flow Control Enable 
0: Disable 
1: Enable,base on RX_FLOW_CTL_TH_DEACT and RX_FLOW_CTL_TH_ACT</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable_comma_base</name>
                  <description>Enable,base on RX_FLOW_CTL_TH_DEACT and RX_FLOW_CTL_TH_ACT</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_DEACT</name>
              <description>Threshold for Deactivating Flow Control 
00: Full minus 1 KB 
01: Full minus 2 KB 
10: Full minus 3 KB 
11: Full minus 4 KB Note: Valid in both half-duplex mode and full-duplex mode.</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB Note: Valid in both half-duplex mode and full-duplex mode.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_ACT</name>
              <description>Threshold for Activating Flow Control 
00: Full minus 1 KB 
01: Full minus 2 KB 
10: Full minus 3 KB 
11: Full minus 4 KB Note: Valid in both half-duplex mode and full-duplex mode.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB Note: Valid in both half-duplex mode and full-duplex mode.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TH</name>
              <description>Threshold for RX DMA FIFO Start 
00: 64 
01: 32 
10: 96 
11: 128 Note: Only valid when RX_MD == 0, full frames with a length less than the threshold are transferred automatically.</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96</name>
                  <description>96</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 Note: Only valid when RX_MD == 0, full frames with a length less than the threshold are transferred automatically.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ERR_FRM</name>
              <description>0: RX DMA drops frames with error 
1: RX DMA forwards frames with error</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_drops</name>
                  <description>RX DMA drops frames with error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA_forwards</name>
                  <description>RX DMA forwards frames with error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RUNT_FRM</name>
              <description>When set, forward undersized frames with no error and length less than 64bytes</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MD</name>
              <description>Receive Mode 
0: RX start read after RX DMA FIFO bytes is greater than RX_TH 
1: RX start read after RX DMA FIFO located a full frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_start_read_after_RX_DMA_FIFO_bytes</name>
                  <description>RX start read after RX DMA FIFO bytes is greater than RX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_start_read_after_RX_DMA_FIFO_located</name>
                  <description>RX start read after RX DMA FIFO located a full frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_RX_FRM</name>
              <description>Flush Receive Frames  
0: Enable when receive descriptors/buffers is unavailable 
1: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable when receive descriptors/buffers is unavailable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_DMA_CUR_BUF</name>
          <description>GMAC_RX_DMA_CUR_BUF</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive DMA buffer</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_DMA_CUR_DESC</name>
          <description>GMAC_RX_DMA_CUR_DESC</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive descriptor</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_DMA_LIST</name>
          <description>GMAC_RX_DMA_LIST</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DESC_LIST</name>
              <description>The base address of receive descriptor list. It must be 32-bit aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_DMA_STA</name>
          <description>GMAC Receive DMA Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RX_DMA_STA</name>
              <description>The state of RX DMA FSM. 
000: STOP, When reset or disable RX DMA 
001: RUN_FETCH_DESC, Fetching RX DMA descriptor 
010: Reserved 
011: RUN_WAIT_FRM, Waiting for frame 
100: SUSPEND, RX descriptor unavailable 
101: RUN_CLOSE_DESC, Closing RX descriptor 
110: Reserved 
111: RUN_TRANS_DATA, Passing frame from host memory to RX DMA FIFO</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>STOP, When reset or disable RX DMA</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_FETCH_DESC</name>
                  <description>RUN_FETCH_DESC, Fetching RX DMA descriptor</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_WAIT_FRM</name>
                  <description>RUN_WAIT_FRM, Waiting for frame</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUSPEND</name>
                  <description>SUSPEND, RX descriptor unavailable</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_CLOSE_DESC</name>
                  <description>RUN_CLOSE_DESC, Closing RX descriptor</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_TRANS_DATA</name>
                  <description>RUN_TRANS_DATA, Passing frame from host memory to RX DMA FIFO</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_FRM_FLT</name>
          <description>GMAC Receive Frame Filter Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80033373</resetMask>
          <fields>
            <field>
              <name>DIS_ADDR_FILTER</name>
              <description>Disable Address Filter 
0: Enable 
1: Disable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIS_BROADCAST</name>
              <description>Disable Receive Broadcast frames 
0: Receive 
1: Drop</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drop</name>
                  <description>Drop</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL_MULTICAST</name>
              <description>Receive All Multicast frames Filter 
0: Filter according to HASH_MULTICAST 
1: Receive All</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter</name>
                  <description>Filter according to HASH_MULTICAST</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive All</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTL_FRM_FILTER</name>
              <description>Receive Control Frames Filter 
00: Drop all control frames 
01: Drop all control frames 
10: Receive all control frames 
11: Receive all control frames when pass the address filter</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HASH_MULTICAST</name>
              <description>Filter multicast frames Set 
0: by comparing the DA field in DA MAC address registers 
1: according to the hash table</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>by</name>
                  <description>by comparing the DA field in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>according</name>
                  <description>according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH_UNICAST</name>
              <description>Filter Unicast Frames Set 
0: by comparing the DA field in DA MAC address registers 
1: according to the hash table</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>by</name>
                  <description>by comparing the DA field in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>according</name>
                  <description>according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_FILTER_EN</name>
              <description>Receive SA Filter Enable 
0: Receive frames and update the result of SA filter 
1: Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive frames and update the result of SA filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_INV_FILTER</name>
              <description>Receive SA Invert Filter Set 
0: Pass Frames whose SA field matches SA MAC address registers 
1: Pass Frames whose SA field not matches SA MAC address registers</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pass_Frames_whose_SA_field_matches</name>
                  <description>Pass Frames whose SA field matches SA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass_Frames_whose_SA_field_not_matches</name>
                  <description>Pass Frames whose SA field not matches SA MAC address registers</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA_INV_FILTER</name>
              <description>0: Normal filtering of frames is performed 
1: Filter both unicast and multicast frames by comparing DA field in inverse filtering mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal filtering of frames is performed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_both</name>
                  <description>Filter both unicast and multicast frames by comparing DA field in inverse filtering mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLT_MD</name>
              <description>0: If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter 
1: Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>If</name>
                  <description>If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL</name>
              <description>Receive All Frame Enable 
0: Receive the frames that pass the SA/DA address filter 
1: Receive all frames and update the result of address filter(pass or fail) in the receive status word</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_the_frames</name>
                  <description>Receive the frames that pass the SA/DA address filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_all</name>
                  <description>Receive all frames and update the result of address filter(pass or fail) in the receive status word</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_HASH0</name>
          <description>GMAC Hash Table Register0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB0</name>
              <description>The upper 32 bits of Hash table for receive frame filter.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_RX_HASH1</name>
          <description>GMAC Hash Table Register1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB1</name>
              <description>The lower 32 bits of Hash table for receive frame filter.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_TX_CTL0</name>
          <description>GMAC Transmit Control Register0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TX_EN</name>
              <description>Enable transmitter. 
0: Disable 
1: Enable Note: When disable, transmit will continue until current transmit finish.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: When disable, transmit will continue until current transmit finish.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FRM_LEN_CTL</name>
              <description>Frame Transmit Length Control 
0: Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1) 
1: Up to 16,384 bytes Note: any bytes after that is cut off</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Up_to_2_comma_048</name>
                  <description>Up to 2,048 bytes (JUMBO_FRM_EN==0) Up to 10,240 bytes (JUMBO_FRM_EN==1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Up_to_16_comma_384</name>
                  <description>Up to 16,384 bytes Note: any bytes after that is cut off</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_TX_CTL1</name>
          <description>GMAC Transmit Control Register1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000703</resetMask>
          <fields>
            <field>
              <name>TX_DMA_START</name>
              <description>Transmit DMA FSM Start 
0: No valid 
1: Start Note: This cleared internally and always read a 0</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_valid</name>
                  <description>No valid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start Note: This cleared internally and always read a 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_EN</name>
              <description>0: Stop TX DMA after the completion of current frame transmission. 
1: Start and run TX DMA.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop TX DMA after the completion of current frame transmission.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run TX DMA.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TH</name>
              <description>The threshold value of TX DMA FIFO. When TX_MD is 0, transmission starts when the size of frame in TX DMA FIFO is greater than the threshold. In addition, full frames with a length less than the threshold are transferred automatically.  
000: 64 
001: 128 
010: 192 
011: 256 Others: Reserved</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192</name>
                  <description>192</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_MD</name>
              <description>Transmission Mode 
0: TX start after TX DMA FIFO bytes is greater than TX_TH 
1: TX start after TX DMA FIFO located a full frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_start_after_TX_DMA_FIFO_bytes</name>
                  <description>TX start after TX DMA FIFO bytes is greater than TX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_start_after_TX_DMA_FIFO_located</name>
                  <description>TX start after TX DMA FIFO located a full frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_TX_FIFO</name>
              <description>Flush the data in the TX FIFO. 
0: Enable 
1: Disable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_TX_DMA_CUR_BUF</name>
          <description>GMAC_TX_DMA_CUR_BUF</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit DMA buffer</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_TX_DMA_CUR_DESC</name>
          <description>GMAC_TX_DMA_CUR_DESC</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit descriptor.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_TX_DMA_LIST</name>
          <description>GMAC_TX_DMA_LIST</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DESC_LIST</name>
              <description>The base address of transmit descriptor list. It must be 32-bit aligned.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_TX_DMA_STA</name>
          <description>GMAC Transmit DMA Status Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TX_DMA_STA</name>
              <description>The state of Transmit DMA FSM.  
000: STOP, When reset or disable TX DMA 
001: RUN_FETCH_DESC, Fetching TX DMA descriptor 
010: RUN_WAIT_STA, Waiting for the status of TX frame 
011: RUN_TRANS_DATA, Passing frame from host memory to TX DMA FIFO 
100: Reserved 
101: Reserved 
110: SUSPEND, TX descriptor unavailable or TX DMA FIFO underflow 
111: RUN_CLOSE_DESC, Closing TX descriptor.</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>STOP, When reset or disable TX DMA</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_FETCH_DESC</name>
                  <description>RUN_FETCH_DESC, Fetching TX DMA descriptor</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_WAIT_STA</name>
                  <description>RUN_WAIT_STA, Waiting for the status of TX frame</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_TRANS_DATA</name>
                  <description>RUN_TRANS_DATA, Passing frame from host memory to TX DMA FIFO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUSPEND</name>
                  <description>SUSPEND, TX descriptor unavailable or TX DMA FIFO underflow</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_CLOSE_DESC</name>
                  <description>RUN_CLOSE_DESC, Closing TX descriptor.</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GMAC_TX_FLOW_CTL</name>
          <description>GMAC Transmit Flow Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x803FFFF3</resetMask>
          <fields>
            <field>
              <name>TX_FLOW_CTL_STA</name>
              <description>This bit indicates a pause frame transmission is in progress. When the configuration of flow control is ready, set this bit to transmit a pause frame in full-duplex mode or activate the backpressure function. After completion of transmission, this bit will be cleared automatically. Before write register TX_FLOW_CTRL, this bit must be read as 0.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PAUSE_FRM_SLOT</name>
              <description>The threshold of the pause timer at which the input flow control signal is checked for automatic retransmission of pause frame. The threshold values should be always less than the PAUSE_TIME</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAUSE_TIME</name>
              <description>The pause time field in the transmitted control frame.</description>
              <bitRange>[19:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZQP_FRM_EN</name>
              <description>0: Disable 
1: Enable When set, enable the functionality to generate Zero-Quanta Pause control frame.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set, enable the functionality to generate Zero-Quanta Pause control frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FLOW_CTL_EN</name>
              <description>TX Flow Control Enable 
0: Disable 
1: Enable When set, enable flow control operation to transmit pause frames in full-duplex mode, or enable the back-pressure operation in half-duplex mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set, enable flow control operation to transmit pause frames in full-duplex mode, or enable the back-pressure operation in half-duplex mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>High Speed Timer</name>
      <description>High Speed Timer</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C60000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>HS_TMR0_CTRL_REG</name>
          <description>HS Timer 0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800000F3</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_TEST</name>
              <description>High speed timer 0 test mode. In test mode, the low register should be set to 0x1, the high register will down counter. The counter needs to be reloaded. 
0: Normal mode 
1: Test mode.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test</name>
                  <description>Test mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_MODE</name>
              <description>High Speed Timer 0 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_CLK</name>
              <description>Select the pre-scale of the high speed timer 0 clock sources. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: / 
110: / 
111: /</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_RELOAD</name>
              <description>High Speed Timer 0 Reload. 
0: No effect 
1: Reload High Speed Timer 0 Interval Value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload High Speed Timer 0 Interval Value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_EN</name>
              <description>High Speed Timer 0 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_CURNT_HI_REG</name>
          <description>HS Timer 0 Current Value High Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_CUR_VALUE_HI</name>
              <description>High Speed Timer 0 Current Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_CURNT_LO_REG</name>
          <description>HS Timer 0 Current Value Low Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_CUR_VALUE_LO</name>
              <description>High Speed Timer 0 Current Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_INTV_HI_REG</name>
          <description>HS Timer 0 Interval Value High Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_INTV_VALUE_HI</name>
              <description>High Speed Timer 0 Interval Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR0_INTV_LO_REG</name>
          <description>HS Timer 0 Interval Value Low Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR0_INTV_VALUE_LO</name>
              <description>High Speed Timer 0 Interval Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR1_CTRL_REG</name>
          <description>HS Timer 1 Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800000F3</resetMask>
          <fields>
            <field>
              <name>HS_TMR1_TEST</name>
              <description>High speed timer 1 test mode. In test mode, the low register should be set to 0x1, the high register will down counter. The counter needs to be reloaded. 
0: Normal mode 
1: Test mode.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test</name>
                  <description>Test mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR1_MODE</name>
              <description>High Speed Timer 1 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR1_CLK_SRC</name>
              <description>Select the pre-scale of the high speed timer 1 clock sources. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: / 
110: / 
111: /</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR1_RELOAD</name>
              <description>High Speed Timer 1 Reload. 
0: No effect 
1: Reload High Speed Timer 1 Interval Value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload High Speed Timer 1 Interval Value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR1_EN</name>
              <description>High Speed Timer 1 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR1_CURNT_HI_REG</name>
          <description>HS Timer 1 Current Value High Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR1_CUR_VALUE_HI</name>
              <description>High Speed Timer 1 Current Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR1_CURNT_LO_REG</name>
          <description>HS Timer 1 Current Value Low Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR1_CUR_VALUE_LO</name>
              <description>High Speed Timer 1 Current Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR1_INTV_HI_REG</name>
          <description>HS Timer 1 Interval Value High Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR1_INTV_VALUE_HI</name>
              <description>High Speed Timer 1 Interval Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR1_INTV_LO_REG</name>
          <description>HS Timer 1 Interval Value Low Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR1_INTV_VALUE_LO</name>
              <description>High Speed Timer 1 Interval Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR2_CTRL_REG</name>
          <description>HS Timer 2 Control Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800000F3</resetMask>
          <fields>
            <field>
              <name>HS_TMR2_TEST</name>
              <description>High speed timer 2 test mode. In test mode, the low register should be set to 0x1, the high register will down counter. The counter needs to be reloaded. 
0: Normal mode 
1: Test mode.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test</name>
                  <description>Test mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR2_MODE</name>
              <description>High Speed Timer 2 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_CLK</name>
              <description>Select the pre-scale of the high speed timer 0 clock sources. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: / 
110: / 
111: /</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR2_RELOAD</name>
              <description>High Speed Timer 2 Reload. 
0: No effect 
1: Reload High Speed Timer 2 Interval Value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload High Speed Timer 2 Interval Value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR2_EN</name>
              <description>High Speed Timer 2 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR2_CURNT_HI_REG</name>
          <description>HS Timer 2 Current Value High Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR2_CUR_VALUE_HI</name>
              <description>High Speed Timer 2 Current Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR2_CURNT_LO_REG</name>
          <description>HS Timer 2 Current Value Low Register</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR2_CUR_VALUE_LO</name>
              <description>High Speed Timer 2 Current Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR2_INTV_HI_REG</name>
          <description>HS Timer 2 Interval Value High Register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR2_INTV_VALUE_HI</name>
              <description>High Speed Timer 2 Interval Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR2_INTV_LO_REG</name>
          <description>HS Timer 2 Interval Value Low Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR2_INTV_VALUE_LO</name>
              <description>High Speed Timer 2 Interval Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR3_CTRL_REG</name>
          <description>HS Timer 3 Control Register</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800000F3</resetMask>
          <fields>
            <field>
              <name>HS_TMR3_TEST</name>
              <description>High speed timer 3 test mode. In test mode, the low register should be set to 0x1, the high register will down counter. The counter needs to be reloaded. 
0: Normal mode 
1: Test mode.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test</name>
                  <description>Test mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR3_MODE</name>
              <description>High Speed Timer 3 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR3_CLK_SRC</name>
              <description>Select the pre-scale of the high speed timer 3 clock sources. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: / 
110: / 
111: /</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR3_RELOAD</name>
              <description>High Speed Timer 3 Reload. 
0: No effect 
1: Reload High Speed Timer 3 Interval Value.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload High Speed Timer 3 Interval Value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR3_EN</name>
              <description>High Speed Timer 3 Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR3_CURNT_HI_REG</name>
          <description>HS Timer 3 Current Value High Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR3_CUR_VALUE_HI</name>
              <description>High Speed Timer 3 Current Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR3_CURNT_LO_REG</name>
          <description>HS Timer 3 Current Value Low Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR3_CUR_VALUE_LO</name>
              <description>High Speed Timer 3 Current Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR3_INTV_HI_REG</name>
          <description>HS Timer 3 Interval Value High Register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR3_INTV_VALUE_HI</name>
              <description>High Speed Timer 3 Interval Value [55:32].</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR3_INTV_LO_REG</name>
          <description>HS Timer 3 Interval Value Low Register</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HS_TMR3_INTV_VALUE_LO</name>
              <description>High Speed Timer 3 Interval Value [31:0].</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_EN_REG</name>
          <description>HS Timer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>HS_TMR3_INT_EN</name>
              <description>High Speed Timer 3 Interrupt Enable. 
0: No effect 
1: High Speed Timer 3 Interval Value reached interrupt enable.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Speed Timer 3 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR2_INT_EN</name>
              <description>High Speed Timer 2 Interrupt Enable. 
0: No effect 
1: High Speed Timer 2 Interval Value reached interrupt enable.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Speed Timer 2 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR1_INT_EN</name>
              <description>High Speed Timer 1 Interrupt Enable. 
0: No effect 
1: High Speed Timer 1 Interval Value reached interrupt enable.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Speed Timer 1 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_INT_EN</name>
              <description>High Speed Timer 0 Interrupt Enable. 
0: No effect 
1: High Speed Timer 0 Interval Value reached interrupt enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Speed Timer 0 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_STAS_REG</name>
          <description>HS Timer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>HS_TMR3_IRQ_PEND</name>
              <description>High Speed Timer 3 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, High speed timer 3 interval value is reached.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, High speed timer 3 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR2_IRQ_PEND</name>
              <description>High Speed Timer 2 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, High speed timer 2 interval value is reached.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, High speed timer 2 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR1_IRQ_PEND</name>
              <description>High Speed Timer 1 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, High speed timer 1 interval value is reached.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, High speed timer 1 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR0_IRQ_PEND</name>
              <description>High Speed Timer 0 IRQ Pending. Setting 1 to the bit will clear it. 
0: No effect 
1: Pending, High speed timer 0 interval value is reached.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, High speed timer 0 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2S/PCM0</name>
      <description>I2S/PCM0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>I2S_PCM_CHCFG</name>
          <description>I2S_PCM_CHCFG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x377</resetMask>
          <fields>
            <field>
              <name>TX_SLOT_HIZ</name>
              <description>0: Normal mode for the last half cycle of BCLK in the slot 
1: Turn to hi-z state for the last half cycle of BCLK in the slot</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode for the last half cycle of BCLK in the slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn to hi-z state for the last half cycle of BCLK in the slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_STATE</name>
              <description>TXn_STATE 
0: Transfer level 0 when not transferring slot 
1: Turn to hi-z state (TDM) when not transferring slot</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transfer_level</name>
                  <description>Transfer level 0 when not transferring slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn to hi-z state (TDM) when not transferring slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_SLOT_NUM</name>
              <description>RX Channel/Slot Number which between CPU/DMA and FIFO 
000: 1 channel or slot ... 
111: 8 channels or slots</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel or slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_SLOT_NUM</name>
              <description>TX Channel/Slot Number which between CPU/DMA and FIFO 
000: 1 channel or slot ... 
111: 8 channels or slots</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel or slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CLKD</name>
          <description>I2S_PCM_CLKD</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>MCLKO_EN</name>
              <description>0: Disable MCLK Output 
1: Enable MCLK Output Note: Whether in Slave or Master mode, when this bit is set to 1, MCLK should be output.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable MCLK Output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable MCLK Output Note: Whether in Slave or Master mode, when this bit is set to 1, MCLK should be output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCLKDIV</name>
              <description>BCLK Divide Ratio from PLL_AUDIO 
0000: Reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLKDIV</name>
              <description>MCLK Divide Ratio from PLL_AUDIO 
0000: Reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CTL</name>
          <description>I2S_PCM_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x60000</resetValue>
          <resetMask>0x60F7F</resetMask>
          <fields>
            <field>
              <name>BCLK_OUT</name>
              <description>0: Input 
1: Output</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_OUT</name>
              <description>0: Input 
1: Output</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDO3_EN</name>
              <description>0: Disable, Hi-Z state 
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, Hi-Z state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDO2_EN</name>
              <description>0: Disable, Hi-Z state 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, Hi-Z state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDO1_EN</name>
              <description>0: Disable, Hi-Z state 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, Hi-Z state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDO0_EN</name>
              <description>0: Disable, Hi-Z state 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, Hi-Z state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_MUTE</name>
              <description>0: Normal transfer 
1: Force DOUT to output 0</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Force</name>
                  <description>Force DOUT to output 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE_SEL</name>
              <description>Mode Selection 
00: PCM mode (offset 0: DSP_B; offset 1: DSP_A) 
01: Left mode (offset 0: LJ mode; offset 1: I2S mode) 
10: Right-Justified mode 
11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM_mode</name>
                  <description>PCM mode (offset 0: DSP_B; offset 1: DSP_A)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left_mode</name>
                  <description>Left mode (offset 0: LJ mode; offset 1: I2S mode)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>right_Justified_mode</name>
                  <description>Right-Justified mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop back test 
0: Normal mode 
1: Loop back test When set to `1`, connecting the SDO with the SDI</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop back test When set to `1`, connecting the SDO with the SDI</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmitter Block Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FAT0</name>
          <description>I2S_PCM_FAT0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x33</resetValue>
          <resetMask>0x400BFFFF</resetMask>
          <fields>
            <field>
              <name>LRCK_WIDTH</name>
              <description>(only apply in PCM mode ) LRCK width  
0: LRCK = 1 BCLK width (short frame) 
1: LRCK = 2 BCLK width (long frame)</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LRCK__equals__1</name>
                  <description>LRCK = 1 BCLK width (short frame)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LRCK__equals__2</name>
                  <description>LRCK = 2 BCLK width (long frame)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_POLARITY</name>
              <description>When apply in I2S / Left-Justified / Right-Justified mode: 
0: Left channel when LRCK is low 
1: Left channel when LRCK is high When apply in PCM mode: 
0: PCM LRCK asserted at the negative edge 
1: PCM LRCK asserted at the positive edge</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>low</name>
                  <description>Left channel when LRCK is low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>Left channel when LRCK is high When apply in PCM mode:</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_asserted_at_the_negative</name>
                  <description>PCM LRCK asserted at the negative edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_asserted_at_the_positive</name>
                  <description>PCM LRCK asserted at the positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_PERIOD</name>
              <description>It is used to program the number of BCLKs per channel of sample frame. This value is interpreted as follows: PCM mode: Number of BCLKs within (Left + Right) channel width I2S/Left-Justified/Right-Justified mode: Number of BCLKs within each individual channel width (Left or Right)  For example: n = 7: 8 BCLK width ... n = 1023: 1024 BCLKs width</description>
              <bitRange>[17:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BCLK_POLARITY</name>
              <description>0: Normal mode, negative edge drive and positive edge sample 
1: Invert mode, positive edge drive and negative edge sample</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal mode, negative edge drive and positive edge sample</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert mode, positive edge drive and negative edge sample</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SR</name>
              <description>Sample Resolution 
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDGE_TRANSFER</name>
              <description>0: SDO drive data and SDI sample data at the different BCLK edge 
1: SDO drive data and SDI sample data at the same BCLK edge BCLK_POLARITY = 0, use negative edge BCLK_POLARITY = 1, use positive edge</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDO_drive_data_and_SDI_sample_data_at_the_different</name>
                  <description>SDO drive data and SDI sample data at the different BCLK edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDO_drive_data_and_SDI_sample_data_at_the_same</name>
                  <description>SDO drive data and SDI sample data at the same BCLK edge BCLK_POLARITY = 0, use negative edge BCLK_POLARITY = 1, use positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SW</name>
              <description>Slot Width Select 
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FCTL</name>
          <description>I2S_PCM_FCTL</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x400F0</resetValue>
          <resetMask>0x8307F3F7</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable 0 : Disable 1 : Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TX FIFO, self clear to `0`.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FRX</name>
              <description>Write `1` to flush RX FIFO, self clear to `0`.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO Empty Trigger Level Interrupt and DMA request trigger level for TXFIFO normal condition Trigger Level = TXTL</description>
              <bitRange>[18:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RX FIFO Trigger Level Interrupt and DMA request trigger level for RXFIFO normal condition Trigger Level = RXTL + 1</description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TX FIFO Input Mode (Mode 0, 1) 
0: Valid data at the MSB of TXFIFO register 
1: Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I*31:0+ = ,APB_WDATA*31:12+, 12`h0- Mode 1: FIFO_I*31:0+ = ,APB_WDATA*19:0+, 12`h0-</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I*31:0+ = ,APB_WDATA*31:12+, 12`h0- Mode 1: FIFO_I*31:0+ = ,APB_WDATA*19:0+, 12`h0-</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RX FIFO Output Mode (Mode 0, 1, 2, 3) 
00: Expanding `0` at LSB of DA_RXFIFO register. 
01: Expanding received sample sign bit at MSB of register. 
10: Truncating received samples at high half-word of register and low half-word of register is filled by `0`. 
11: Truncating received samples at low half-word of register and high half-word of register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: APB_RDATA*31:0+ = ,FIFO_O*31:12+, 12`h0- Mode 1: APB_RDATA [31:0] = {12{FIFO_O[31]}, FIFO_O[31:12]} Mode 2: APB_RDATA *31:0+ = ,FIFO_O*31:16+, 16`h0- Mode 3: APB_RDATA [31:0] = {16{FIFO_O[31], FIFO_O[31:16]}</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`_at_LSB_of</name>
                  <description>Expanding `0` at LSB of DA_RXFIFO register.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample_sign_bit</name>
                  <description>Expanding received sample sign bit at MSB of register.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_high</name>
                  <description>Truncating received samples at high half-word of register and low half-word of register is filled by `0`.</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_low</name>
                  <description>Truncating received samples at low half-word of register and high half-word of register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: APB_RDATA*31:0+ = ,FIFO_O*31:12+, 12`h0- Mode 1: APB_RDATA [31:0] = {12{FIFO_O[31]}, FIFO_O[31:12]} Mode 2: APB_RDATA *31:0+ = ,FIFO_O*31:16+, 16`h0- Mode 3: APB_RDATA [31:0] = {16{FIFO_O[31], FIFO_O[31:16]}</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FMT1</name>
          <description>I2S_PCM_FMT1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x30</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RX</name>
              <description>MLS MSB / LSB First Select 
0: MSB First 
1: LSB First</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX</name>
              <description>MLS MSB / LSB First Select 
0: MSB First 
1: LSB First</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEXT</name>
              <description>Sign Extend in slot [sample resolution &lt; slot width] 
00: Zeros or audio gain padding at LSB position 
01: Sign extension at MSB position 
10: Reserved 
11: Transfer 0 after each sample in each slot</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Zeros</name>
                  <description>Zeros or audio gain padding at LSB position</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sign</name>
                  <description>Sign extension at MSB position</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer 0 after each sample in each slot</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PDM</name>
              <description>PCM Data Mode 
00: Linear PCM 
01: Reserved 
10: 8-bit u-law 
11: 8-bit A-law</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_ulaw</name>
                  <description>8-bit u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_Alaw</name>
                  <description>8-bit A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_PDM</name>
              <description>PCM Data Mode 
00: Linear PCM 
01: Reserved 
10: 8-bit u-law 
11: 8-bit A-law</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_ulaw</name>
                  <description>8-bit u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_Alaw</name>
                  <description>8-bit A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FSTA</name>
          <description>I2S_PCM_FSTA</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x10800000</resetValue>
          <resetMask>0x10FF017F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TX FIFO Empty 
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO (&gt;= 1 word)</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word Counter</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RX FIFO Available 
0: No available data in RX FIFO 
1: More than one sample in RX FIFO (&gt;= 1 word)</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one sample in RX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RX FIFO Available Sample Word Counter</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_INT</name>
          <description>I2S_PCM_INT</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TX_DRQ</name>
              <description>TX FIFO Empty DRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TX FIFO Underrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable When set to `1`, an interrupt happens when writing new audio data if TX FIFO is full.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, an interrupt happens when writing new audio data if TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RX FIFO Data Available DRQ Enable 
0: Disable 
1: Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RX FIFO.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RX FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXUI_EN</name>
              <description>RX FIFO Underrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RX FIFO Data Available Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_ISTA</name>
          <description>I2S_PCM_ISTA</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Under run Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt when data in TX FIFO are less than TX trigger level Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt when data in TX FIFO are less than TX trigger level Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXU_INT</name>
              <description>RX FIFO Under run Pending Interrupt 
0: No Pending Interrupt 1:FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt 1:FIFO Under run Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RX FIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ Write `1` to clear this interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RX FIFO Data Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ when data in RX FIFO are more than RX trigger level Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ when data in RX FIFO are more than RX trigger level Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHMAP</name>
          <description>I2S_PCM_RXCHMAP</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>RX_CH7_MAP</name>
              <description>RX Channel7 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH6_MAP</name>
              <description>RX Channel6 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH5_MAP</name>
              <description>RX Channel5 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH4_MAP</name>
              <description>RX Channel4 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH3_MAP</name>
              <description>RX Channel3 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH2_MAP</name>
              <description>RX Channel2 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH1_MAP</name>
              <description>TX Channel1 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH0_MAP</name>
              <description>RX Channel0 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHSEL</name>
          <description>I2S_PCM_RXCHSEL</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3007</resetMask>
          <fields>
            <field>
              <name>RX_OFFSET</name>
              <description>RX offset tune, RX data offset to LRCK 
0: no offset n: data is offset by n BCLKs to LRCK</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CHSEL</name>
              <description>RX Channel (slot) number Select for input 
000: 1 channel / slot ... 
111: 8 channels / slots</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel / slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels / slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCNT</name>
          <description>I2S_PCM_RXCNT</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample Counter The field is the audio sample number of writing into RXFIFO. When one sample is written by I2S/PCM controller, the increases by one. The can be set to any initial valve at any time. After been updated by the initial value, the should count on base of this initial value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXFIFO</name>
          <description>I2S_PCM_RXFIFO</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCNT</name>
          <description>I2S_PCM_TXCNT</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The field is the audio sample number of sending into TXFIFO. When one sample is put into TXFIFO by DMA or by host IO, the increases by one. The can be set to any initial valve at any time. After been updated by the initial value, the should count on base of this initial value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXFIFO</name>
          <description>I2S_PCM_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>TX Sample Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample.</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXnCHMAP</name>
          <description>I2S_PCM_TXnCHMAP</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>T_XN_CH7_MAP</name>
              <description>TXn_CH7_MAP TXn Channel7 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_CH6_MAP</name>
              <description>TXn_CH6_MAP TXn Channel6 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_CH5_MAP</name>
              <description>TXn_CH5_MAP TXn Channel5 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_CH4_MAP</name>
              <description>TXn_CH4_MAP TXn Channel4 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_CH3_MAP</name>
              <description>TXn_CH3_MAP TXn Channel3 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_CH2_MAP</name>
              <description>TXn_CH2_MAP TXn Channel2 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_CH1_MAP</name>
              <description>TXn_CH1_MAP TX Channel1 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_CH0_MAP</name>
              <description>TXn_CH0_MAP TXn Channel0 Mapping 
000: 1st sample ... 
111: 8th sample</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXnCHSEL</name>
          <description>I2S_PCM_TXnCHSEL</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF7</resetMask>
          <fields>
            <field>
              <name>T_XN_OFFSET</name>
              <description>TXn_OFFSET TXn offset tune, TX data offset to LRCK  
00: No offset 
01: Data is offset by 1 BCLKs to LRCK 
10: Data is offset by 2 BCLKs to LRCK 
11: Data is offset by 3 BCLKs to LRCK</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXN_CHEN</name>
              <description>TXn_CHEN TXn Channel (slot) enable, bit[11:4] refer to slot[7:0]. When one or more slot(s) is(are) disabled, the affected slot(s) is(are) set to disable state. 
0: Disable 
1: Enable</description>
              <bitRange>[11:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>T_XN_CHSEL</name>
              <description>TXn_CHSEL TXn Channel (slot) number Select for each output 
000: 1 channel / slot ... 
111: 8 channels / slots</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel / slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels / slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM0">
      <name>I2S/PCM1</name>
      <description>I2S/PCM1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM0">
      <name>I2S/PCM2(for HDMI)</name>
      <description>I2S/PCM2(for HDMI)</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>KEYADC</name>
      <description>KEYADC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C24400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>KEYADC_CTRL</name>
          <description>KEYADC Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1000168</resetValue>
          <resetMask>0xFFCF3F7D</resetMask>
          <fields>
            <field>
              <name>FIRST_CONCERT_DLY</name>
              <description>ADC First Convert Delay Setting. ADC conversion is delayed by n samples</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_CHAN_SELECT</name>
              <description>ADC channel select 
00: ADC0 channel 
01: ADC1 channel 
1x: ADC0&amp;ADC1 channel</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC0</name>
                  <description>ADC0 channel</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC1</name>
                  <description>ADC1 channel</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC0_amp_ADC1</name>
                  <description>ADC0&amp;ADC1 channel</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CONTINUE_TIME_SELECT</name>
              <description>Continue Mode Time Select. Every other 8*(N+1) sample as a valuable sample data.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY_MODE_SELECT</name>
              <description>Key Mode Select 
00: Normal Mode 
01: Single Mode 
10: Continue Mode</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single Mode</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Continue</name>
                  <description>Continue Mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEVELA_B_CNT</name>
              <description>Level A to Level B Time Threshold Select. Judge ADC convert value from level A to level B in n+1 samples.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYADC_CHANNEL_EN</name>
              <description>KEYADC Channel Enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEVELB_VOL</name>
              <description>Level B Corresponding Data Value Setting (the real voltage value) 
00: 0x3C (~1.9V) 
01: 0x39 (~1.8V) 
10: 0x36 (~1.7V) 
11: 0x33 (~1.6V)</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0x3C</name>
                  <description>0x3C (~1.9V)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x39</name>
                  <description>0x39 (~1.8V)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x36</name>
                  <description>0x36 (~1.7V)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x33</name>
                  <description>0x33 (~1.6V)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_SAMPLE_RATE</name>
              <description>KEYADC Sample Rate 
00: 250Hz 
01: 125Hz 
10: 62.5Hz 
11: 32.25Hz</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_250Hz</name>
                  <description>250Hz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_125Hz</name>
                  <description>125Hz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_62_point_5Hz</name>
                  <description>62.5Hz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_25Hz</name>
                  <description>32.25Hz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_EN</name>
              <description>KEYADC Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_DATA0</name>
          <description>KEYADC Data Register 0</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>KEYADC0_DATA</name>
              <description>KEYADC 0 Data</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_DATA1</name>
          <description>KEYADC Data Register 1</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>KEYADC1_DATA</name>
              <description>KEYADC 1 Data</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_INT</name>
          <description>KEYADC_INT</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F1F</resetMask>
          <fields>
            <field>
              <name>ADC1_KEYUP_PENDING</name>
              <description>ADC 1 Key up Pending When the General Key pulls up, the corresponding interrupt is enabled. 
0: No IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_ALRDY_HOLD_PENDING</name>
              <description>ADC 1 Already Hold Pending When Hold key is in the pull-down state, at this time the general key is pulled down, then  is set 1 by hardware if the bit is enabled 
0: No IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_HOLDKEY_PENDING</name>
              <description>ADC 1 Hold Key Pending When the hold key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt bit is enabled. 
0: NO IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_IRQ</name>
                  <description>NO IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_KEYDOWN_IRQ_PENDING</name>
              <description>ADC 1 Key Down IRQ Pending When General key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt is enabled. 
0: No IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_DATA_IRQ_PENDING</name>
              <description>ADC 1 Data IRQ Pending  
0: No IRQ 
1: IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_KEYUP_PENDING</name>
              <description>ADC 0 Key up Pending When general key pull up, the corresponding interrupt is enabled. 
0: No IRQ 
1: IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_ALRDY_HOLD_PENDING</name>
              <description>ADC 0 Already Hold Pending When Hold key is in the pull-down state, at this time the general key is pulled down, then is set 1 by hardware if the bit is enabled 
0: No IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_HOLDKEY_PENDING</name>
              <description>ADC 0 Hold Key Pending When Hold key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt is enabled. 
0: NO IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_IRQ</name>
                  <description>NO IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_KEYDOWN_PENDING</name>
              <description>ADC 0 Key Down IRQ Pending When General key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt is enabled. 
0: No IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_DATA_PENDING</name>
              <description>ADC 0 Data IRQ Pending  
0: No IRQ 
1: IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_INTC</name>
          <description>KEYADC Interrupt Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F1F</resetMask>
          <fields>
            <field>
              <name>ADC1_KEYUP_IRQ_EN</name>
              <description>ADC1 Key Up IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_ALRDY_HOLD_IRQ_EN</name>
              <description>ADC1 Already Hold Key IRQ Enable  
0: Disable 
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_HOLD_IRQ_EN</name>
              <description>ADC1 Hold Key IRQ Enable  
0: Disable 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_KEYIRQ_EN</name>
              <description>ADC1 Key IRQ Enable  
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC1_DATA_IRQ_EN</name>
              <description>ADC1 DATA IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_KEYUP_IRQ_EN</name>
              <description>ADC0 Key Up IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_ALRDY_HOLD_IRQ_EN</name>
              <description>ADC0 Already Hold IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_HOLD_IRQ_EN</name>
              <description>ADC0 Hold Key IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_KEYDOWN_EN</name>
              <description>ADC 0 Key Down Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC0_DATA_IRQ_EN</name>
              <description>ADC 0 Data IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>KeyPad</name>
      <description>KeyPad</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C23000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>KP_CTL</name>
          <description>Keypad Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF01</resetMask>
          <fields>
            <field>
              <name>ROW_INPUT_MSK</name>
              <description>Keypad Row Input Mask When set to `1`, the corresponding input is masked.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYPAD</name>
              <description>Keypad Column Output Mask When set to `1`, the corresponding output is masked.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IF_ENB</name>
              <description>Keypad Interface Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KP_IN0</name>
          <description>Keypad Row Input Data Register 0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>KP_IN1</name>
          <description>Keypad Row Input Data Register 1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>KP_INT_CFG</name>
          <description>Keypad Interrupt Configure Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>REDGE_INT_EN</name>
              <description>Keypad input rising edge (key release) interrupt enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FEDGE_INT_EN</name>
              <description>Keypad input falling edge (key press) interrupt enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KP_INT_STA</name>
          <description>Keypad Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>REDGE_FLAG</name>
              <description>Keypad input rising edge (key release) interrupt status When it is `1`, the key released interrupt occurred. The interrupt is cleared by writing `1`.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FEDGE_FLAG</name>
              <description>Keypad input falling edge (key press) interrupt status When it is `1`, the corresponding pressed interrupt occurred. The interrupt is cleared by writing `1`.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KP_TIMING</name>
          <description>Keypad Timing Parameter Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x2000100</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DBC_CYCLE</name>
              <description>Keypad Debounce Clock Cycle n It is used for filter switching noises. When row input is low level, the Keypad Interface would delay (n+1) clock to check whether it is still keeping on low level. If it is true, the Keypad Interface would scan the state of the external keypad and get the state into internal registers. After scan, the interrupt is generated if enabled. Note: The value below 0x10 can not be used.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCAN_CYCLE</name>
              <description>Keypad Scan Period Clock Cycle n When the Keypad Interface is enabled, it would scan the external keypad in period. The period time is 8*(n+1)/kp_clk. The kp_clk is input clock for Keypad Interface from CCU. Notes: The value below 0x10 can`t be used.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MP</name>
      <description>MP</description>
      <groupName>generic</groupName>
      <baseAddress>0x1E80000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x10</addressOffset>
          <register>
            <name>MP_IDMA_COOR</name>
            <description>MP_IDMA_COOR</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>IDMA_YCOOR</name>
                <description>Y coordinate Y is the left-top y coordinate of layer on output window in pixels The Y represent the two`s complement</description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IDMA_XCOOR</name>
                <description>X coordinate X is left-top x coordinate of the layer on output window in pixels The X represent the two`s complement</description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_IDMA_FILLCOLOR</name>
            <description>MP_IDMA_FILLCOLOR</description>
            <addressOffset>0x50</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>IDMA_FCALPHA</name>
                <description>Alpha</description>
                <bitRange>[31:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IDMA_FCRED</name>
                <description>Red</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IDMA_FCGREEN</name>
                <description>Green</description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IDMA_FCBLUE</name>
                <description>Blue</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_IDMA_LADDR</name>
            <description>MP_IDMA_LADDR</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>IDMA_L32ADDR</name>
                <description>Low 32bit address in bit</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_IDMA_PITCH</name>
            <description>MP_IDMA_PITCH</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>IDMA_PITCH</name>
                <description>Pitch in bit</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_IDMA_SETTING</name>
            <description>MP_IDMA_SETTING</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FFFF</resetMask>
            <fields>
              <field>
                <name>GLOBE_ALPHA_VALUE</name>
                <description>Globe alpha value</description>
                <bitRange>[31:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>INPUT_DATA_PIXEL</name>
                <description>Input data pixel sequence Reference input pixel sequence table</description>
                <bitRange>[15:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>INPUT_DATA_FORMAT</name>
                <description>Input data format 0000:32bpp - A8R8G8B8 or interleaved AYUV8888 0001:16bpp - A4R4G4B4 0010:16bpp - A1R5G5B5 0011:16bpp - R5G6B5 0100:16bpp - interleaved YUV422 0101:16bpp - U8V8 0110:8bpp - Y8 0111:8bpp - MONO or palette 1000:4bpp - MONO or palette 1001:2bpp - MONO or palette 1010:1bpp - MONO or palette Other: reserved Note: If the input data format is 16 or 32bpp, and the work mode is palette mode, only the low 8 bits input data is valid.</description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ROTATION_AND_MIRRORING</name>
                <description>Rotation and mirroring control 0000:normal 0001:X 0010:Y 0011:XY 0100:A 0101:AX 0110:AY 0111:AXY Other: reserved</description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ALPHA_CONTROL</name>
                <description>Alpha control 0:Ignore Output alpha value = pixels alpha, if no pixel alpha, the alpha value equal 0xff 01:Globe alpha enable Ignore pixel alpha value Output alpha value = globe alpha value 
10: Globe alpha mix pixel alpha Output alpha value = globe alpha value * pixels alpha value 11:Reserved Note: The output alpha value here means the input alpha value of the ALU following the DMA controller.</description>
                <bitRange>[3:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Globe</name>
                    <description>Globe alpha mix pixel alpha Output alpha value = globe alpha value * pixels alpha value 11:Reserved Note: The output alpha value here means the input alpha value of the ALU following the DMA controller.</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>WORK_MODE_SELECTION</name>
                <description>Work mode selection 
0: normal mode ( non-palette mode ) 
1: palette mode</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>normal_mode</name>
                    <description>normal mode ( non-palette mode )</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>palette_mode</name>
                    <description>palette mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>INPUT_DMA_ENABLE</name>
                <description>Input DMA enable control 0:disable input DMA channel, the respective fill-color value will stead of the input data. 1:enable</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_IDMA_SIZE</name>
            <description>MP_IDMA_SIZE</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFF1FFF</resetMask>
            <fields>
              <field>
                <name>IDMA_HEIGHT</name>
                <description>Memory block height in pixels The height = The value of these bits add 1</description>
                <bitRange>[28:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>IDMA_WIDTH</name>
                <description>Memory block width in pixels The width = The value of these bits add 1</description>
                <bitRange>[12:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>3</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0xf0</addressOffset>
          <register>
            <name>MP_OCSC_URCOEF</name>
            <description>MP_OCSC_URCOEF</description>
            <addressOffset>0xE0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFF</resetMask>
            <fields>
              <field>
                <name>CSC2_URCOEF</name>
                <description>The U/R coefficient The value equals to coefficient*2</description>
                <bitRange>[12:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_OCSC_VBCOEF</name>
            <description>MP_OCSC_VBCOEF</description>
            <addressOffset>0xF0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFF</resetMask>
            <fields>
              <field>
                <name>CSC2_VBCOEF</name>
                <description>The V/B coefficient The value equals to coefficient*2</description>
                <bitRange>[12:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_OCSC_YGCOEF</name>
            <description>MP_OCSC_YGCOEF</description>
            <addressOffset>0xD0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFF</resetMask>
            <fields>
              <field>
                <name>CSC2_YGCOEF</name>
                <description>The Y/G coefficient The value equals to coefficient*2</description>
                <bitRange>[12:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_OUTPUT_LADDR</name>
            <description>MP_OUTPUT_LADDR</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OUT_L32ADDR</name>
                <description>Output channel Low 32bit address in bit</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_OUTPUT_PITCH</name>
            <description>MP_OUTPUT_PITCH</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OUT_LINEWIDTH</name>
                <description>Output channel Pitch in bit</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x200</addressOffset>
          <register>
            <name>MP_SCALER_HCOEFF</name>
            <description>MP_SCALER_HCOEFF</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>HORIZONTAL_TAP3_COEFFICIENT</name>
                <description>Horizontal tap3 coefficient The value equals to coefficient*2</description>
                <bitRange>[31:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>HORIZONTAL_TAP2_COEFFICIENT</name>
                <description>Horizontal tap2 coefficient The value equals to coefficient*2</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>HORIZONTAL_TAP1_COEFFICIENT</name>
                <description>Horizontal tap1 coefficient The value equals to coefficient*2</description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>HORIZONTAL_TAP0_COEFFICIENT</name>
                <description>Horizontal tap0 coefficient The value equals to coefficient*2</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MP_SCALER_VCOEFF</name>
            <description>MP_SCALER_VCOEFF</description>
            <addressOffset>0x80</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>VERTICAL_TAP3_COEFFICIENT</name>
                <description>Vertical tap3 coefficient The value equals to coefficient*2</description>
                <bitRange>[31:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>VERTICAL_TAP2_COEFFICIENT</name>
                <description>Vertical tap2 coefficient The value equals to coefficient*2</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>VERTICAL_TAP1_COEFFICIENT</name>
                <description>Vertical tap1 coefficient The value equals to coefficient*2</description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>VERTICAL_TAP0_COEFFICIENT</name>
                <description>Vertical tap0 coefficient The value equals to coefficient*2</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>MP_CK_CTL</name>
          <description>MP_CK_CTL</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x717</resetMask>
          <fields>
            <field>
              <name>CK_REDCON</name>
              <description>Red control condition 
0: If (R value of ck min color) &lt;= (R value of layer0) &lt;= (R value of ck max color), The red control condition is true, else the condition is false. 
1: If (R value of ck min color) &gt; (R value of layer0) or (R value of layer0) &gt; (R value of ck max color), The red control condition is true, else the condition is false.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>If__openingparen_R_value_of_ck_min_color_closingparen___lt__equals_</name>
                  <description>If (R value of ck min color) &lt;= (R value of layer0) &lt;= (R value of ck max color), The red control condition is true, else the condition is false.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>If__openingparen_R_value_of_ck_min_color_closingparen___gt_</name>
                  <description>If (R value of ck min color) &gt; (R value of layer0) or (R value of layer0) &gt; (R value of ck max color), The red control condition is true, else the condition is false.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CK_GREENCON</name>
              <description>Green control condition 
0: If (G value of ck min color) &lt;= (G value of layer0) &lt;= (G value of ck max color), The green control condition is true, else the condition is false. 
1: If (G value of ck min color) &gt; (G value of layer0) or (G value of layer0) &gt; (G value of ck max color), The green control condition is true, else the condition is false.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>If__openingparen_G_value_of_ck_min_color_closingparen___lt__equals_</name>
                  <description>If (G value of ck min color) &lt;= (G value of layer0) &lt;= (G value of ck max color), The green control condition is true, else the condition is false.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>If__openingparen_G_value_of_ck_min_color_closingparen___gt_</name>
                  <description>If (G value of ck min color) &gt; (G value of layer0) or (G value of layer0) &gt; (G value of ck max color), The green control condition is true, else the condition is false.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CK_BLUECON</name>
              <description>Blue control condition 
0: If (B value of ck min color) &lt;= (B value of layer0) &lt;= (B value of ck max color), The blue control condition is true, else the condition is false. 
1: If (B value of ck min color) &gt; (B value of layer0) or (B value of layer0) &gt; (B value of ck max color), The blue control condition is true, else the condition is false.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>If__openingparen_B_value_of_ck_min_color_closingparen___lt__equals_</name>
                  <description>If (B value of ck min color) &lt;= (B value of layer0) &lt;= (B value of ck max color), The blue control condition is true, else the condition is false.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>If__openingparen_B_value_of_ck_min_color_closingparen___gt_</name>
                  <description>If (B value of ck min color) &gt; (B value of layer0) or (B value of layer0) &gt; (B value of ck max color), The blue control condition is true, else the condition is false.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRI</name>
              <description>Priority selection 
0: ROP output channel is higher than channel 3 
1: Channel 3 is higher than ROP output channel</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ROP</name>
                  <description>ROP output channel is higher than channel 3</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel</name>
                  <description>Channel 3 is higher than ROP output channel</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALPHACK_MOD</name>
              <description>Alpha / Color key mode selection 
00: Alpha mode 
01: Color key mode, using the high priority layer as matching condition, if it is true, the low priority layer pass. 
10: color key mode, using the low priority layer as matching condition, if it is true, the high priority layer pass. 
11: Reserved</description>
              <bitRange>[2:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALPHACK_EN</name>
              <description>Enable control 
0: The ROP data will by-pass the alpha/ck module 
1: Enable If the module is disabled, the data of channel 3 will be ignored, and only the ROP data will pass through to CSC2 module.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ROP_data</name>
                  <description>The ROP data will by-pass the alpha/ck module</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If the module is disabled, the data of channel 3 will be ignored, and only the ROP data will pass through to CSC2 module.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CK_MAX</name>
          <description>MP_CK_MAX</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>CKMAX_R</name>
              <description>Red</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CKMAX_G</name>
              <description>Green</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CKMAX_B</name>
              <description>Blue</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CK_MIN</name>
          <description>MP_CK_MIN</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>CKMIN_R</name>
              <description>Red</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CKMIN_G</name>
              <description>Green</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CKMIN_B</name>
              <description>Blue</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC2_CTL</name>
          <description>MP_CSC2_CTL</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CSC2_EN</name>
              <description>Enable control 
0: Disable color space function, ignore the control setting, and the data flow will by-pass the module. 
1: Enable color space converting function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable color space function, ignore the control setting, and the data flow will by-pass the module.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable color space converting function.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_URCOEF0</name>
          <description>MP_CSC_URCOEF0</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x4A704A7</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_URCOEF0</name>
              <description>The U/R coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_URCOEF0</name>
              <description>The U/R coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_URCOEF1</name>
          <description>MP_CSC_URCOEF1</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_URCOEF1</name>
              <description>The U/R coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_URCOEF1</name>
              <description>The U/R coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_URCOEF2</name>
          <description>MP_CSC_URCOEF2</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0x6620662</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_URCOEF2</name>
              <description>The U/R coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_URCOEF2</name>
              <description>The U/R coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_URCONS</name>
          <description>MP_CSC_URCONS</description>
          <addressOffset>0x19C</addressOffset>
          <resetValue>0x32113211</resetValue>
          <resetMask>0x3FFF3FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_URCONS</name>
              <description>The U/R constant for CSC1 The value equals to coefficient*2</description>
              <bitRange>[29:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_URCONS</name>
              <description>The U/R constant for CSC0 The value equals to coefficient*2</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_VBCOEF0</name>
          <description>MP_CSC_VBCOEF0</description>
          <addressOffset>0x1A0</addressOffset>
          <resetValue>0x4A704A7</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_VBCOEF0</name>
              <description>The V/B coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_VBCOEF0</name>
              <description>The V/B coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_VBCOEF1</name>
          <description>MP_CSC_VBCOEF1</description>
          <addressOffset>0x1A4</addressOffset>
          <resetValue>0x8120812</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_VBCOEF1</name>
              <description>The V/B coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_VBCOEF1</name>
              <description>The V/B coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_VBCOEF2</name>
          <description>MP_CSC_VBCOEF2</description>
          <addressOffset>0x1A8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_VBCOEF2</name>
              <description>the V/B coefficient for CSC1 the value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_VBCOEF2</name>
              <description>the V/B coefficient for CSC0 the value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_VBCONS</name>
          <description>MP_CSC_VBCONS</description>
          <addressOffset>0x1AC</addressOffset>
          <resetValue>0x2EB12EB1</resetValue>
          <resetMask>0x3FFF3FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_VBCONS</name>
              <description>The V/B constant for CSC1 The value equals to coefficient*2</description>
              <bitRange>[29:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_VBCONS</name>
              <description>The V/B constant for CSC0 The value equals to coefficient*2</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_YGCOEF0</name>
          <description>MP_CSC_YGCOEF0</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x4A704A7</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_YGCOEF0</name>
              <description>The Y/G coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_YGCOEF0</name>
              <description>The Y/G coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_YGCOEF1</name>
          <description>MP_CSC_YGCOEF1</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x1E6F1E6F</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_YGCOEF1</name>
              <description>The Y/G coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_YGCOEF1</name>
              <description>The Y/G coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_YGCOEF2</name>
          <description>MP_CSC_YGCOEF2</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x1CBF1CBF</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_YGCOEF2</name>
              <description>The Y/G coefficient for CSC1 The value equals to coefficient*2</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_YGCOEF2</name>
              <description>The Y/G coefficient for CSC0 The value equals to coefficient*2</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CSC_YGCONS</name>
          <description>MP_CSC_YGCONS</description>
          <addressOffset>0x18C</addressOffset>
          <resetValue>0x8770877</resetValue>
          <resetMask>0x3FFF3FFF</resetMask>
          <fields>
            <field>
              <name>CSC1_YGCONS</name>
              <description>The Y/G constant for CSC1 The value equals to coefficient*2</description>
              <bitRange>[29:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSC0_YGCONS</name>
              <description>The Y/G constant for CSC0 The value equals to coefficient*2</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_CTL</name>
          <description>MP_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x303</resetMask>
          <fields>
            <field>
              <name>HWERRIRQ_EN</name>
              <description>Hardware error IRQ enable control 0:Disable 1:Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FINISHIRQ_EN</name>
              <description>Mission finish IRQ enable control 0:Disable 1:Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>START_CTL</name>
              <description>Start control If the bit is set, the module will start 1 frame operation and stop automatically.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MP_EN</name>
              <description>Enable control 0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_DMA_ORDER</name>
          <description>MP_DMA_ORDER</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x300</resetMask>
          <fields>
            <field>
              <name>MEMSCANORDER</name>
              <description>Memory scan order selection 
00: Top to down, Left to right 
01: Top to down, Right to left 
10: Down to top, Left to right 
11: Down to top, Right to left Note: Four input DMA channel use the same scan rule. The each output DMA channel should match the same memory scan order rule with the input DMA channel.</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Top_to_down_comma__Left</name>
                  <description>Top to down, Left to right</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Top_to_down_comma__Right</name>
                  <description>Top to down, Right to left</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Down_to_top_comma__Left</name>
                  <description>Down to top, Left to right</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Down_to_top_comma__Right</name>
                  <description>Down to top, Right to left Note: Four input DMA channel use the same scan rule. The each output DMA channel should match the same memory scan order rule with the input DMA channel.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_IDMA_CSC0_CTL</name>
          <description>MP_IDMA_CSC0_CTL</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF1</resetMask>
          <fields>
            <field>
              <name>CSC0_DATAMOD</name>
              <description>Data mode control 
0000: Interleaved AYUV8888 mode 
0001: Interleaved YUV422 mode In mode 0 and mode 1, only the channel 0 data path is valid for this module, the channel 1 data flow will by-pass the csc0 module, and direct to input formatter 1. 
0010: Planar YUV422 mode (UV combined only) 
0011: Planar YUV420 mode (UV combined only) 
0100: Planar YUV411 mode (UV combined only) In mode 2/3/4, following rule: In this mode, the output data of the input formatter 1 will be stead of the respective fill-color value.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interleaved_AYUV8888_mode</name>
                  <description>Interleaved AYUV8888 mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interleaved_YUV422_mode</name>
                  <description>Interleaved YUV422 mode In mode 0 and mode 1, only the channel 0 data path is valid for this module, the channel 1 data flow will by-pass the csc0 module, and direct to input formatter 1.</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Planar_YUV422_mode</name>
                  <description>Planar YUV422 mode (UV combined only)</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Planar_YUV420_mode</name>
                  <description>Planar YUV420 mode (UV combined only)</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Planar_YUV411_mode</name>
                  <description>Planar YUV411 mode (UV combined only) In mode 2/3/4, following rule: In this mode, the output data of the input formatter 1 will be stead of the respective fill-color value.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSC0_EN</name>
              <description>Enable control 
0: Disable color space function, ignore the control setting, and the data flow will by-pass the module. 
1: Enable color space converting function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable color space function, ignore the control setting, and the data flow will by-pass the module.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable color space converting function.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_IDMA_CSC1_CTL</name>
          <description>MP_IDMA_CSC1_CTL</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF1</resetMask>
          <fields>
            <field>
              <name>CSC1_DATAMOD</name>
              <description>Data mode control 
0000: Interleaved AYUV8888 mode 
0001: Interleaved YUV422 mode In mode 0 and mode 1, only the channel 3 data path is valid for this module, the channel 2 data flow will by-pass the csc1 module, and direct to input formatter 2. 
0010: Planar YUV422 mode (UV combined only) 
0011: Planar YUV420 mode (UV combined only) 
0100: Planar YUV411 mode (UV combined only) In mode 2/3/4, following rule: In this mode, the output data of the input formatter 2 will be stead of the respective fill-color value.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interleaved_AYUV8888_mode</name>
                  <description>Interleaved AYUV8888 mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interleaved_YUV422_mode</name>
                  <description>Interleaved YUV422 mode In mode 0 and mode 1, only the channel 3 data path is valid for this module, the channel 2 data flow will by-pass the csc1 module, and direct to input formatter 2.</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Planar_YUV422_mode</name>
                  <description>Planar YUV422 mode (UV combined only)</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Planar_YUV420_mode</name>
                  <description>Planar YUV420 mode (UV combined only)</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Planar_YUV411_mode</name>
                  <description>Planar YUV411 mode (UV combined only) In mode 2/3/4, following rule: In this mode, the output data of the input formatter 2 will be stead of the respective fill-color value.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSC1_EN</name>
              <description>Enable control 
0: Disable color space function, ignore the control setting, and the data flow will by-pass the module. 
1: Enable color space converting function.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable color space function, ignore the control setting, and the data flow will by-pass the module.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable color space converting function.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_IDMA_HADDR</name>
          <description>MP_IDMA_HADDR</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0F0F0F</resetMask>
          <fields>
            <field>
              <name>IDMA3_H4ADDR</name>
              <description>High 4bit address in bit</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMA2_H4ADDR</name>
              <description>High 4bit address in bit</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMA1_H4A</name>
              <description>High 4bit address in bit</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMA0_H4ADDR</name>
              <description>High 4bit address in bit</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_OCSC_URCONS</name>
          <description>MP_OCSC_URCONS</description>
          <addressOffset>0x1DC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>CSC2_URCONS</name>
              <description>The U/R constant The value equals to coefficient*2</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_OCSC_VBCONS</name>
          <description>MP_OCSC_VBCONS</description>
          <addressOffset>0x1EC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>CSC2_VBCONS</name>
              <description>The V/B constant The value equals to coefficient*2</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_OCSC_YGCONS</name>
          <description>MP_OCSC_YGCONS</description>
          <addressOffset>0x1CC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>CSC2_YGCONS</name>
              <description>The Y/G constant The value equals to coefficient*2</description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_OUTPUT_ALPHA</name>
          <description>MP_OUTPUT_ALPHA</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF00FF</resetMask>
          <fields>
            <field>
              <name>IMG_ALPHA</name>
              <description>Output image area alpha value, the image area include A0,A1 and overlapping area A2.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NONIMG_ALPHA</name>
              <description>Output non-image area alpha value, the non-image area means the pure fill color area.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A2ALPHACTL</name>
              <description>A2 area alpha value control 
00: using A0 self pixel alpha (A0pA) 
01: using A1 self pixel alpha (A1pA) 
10: the alpha value = A0pA + A1pA * ( 1 - A0pA ) 
11: using the Output image area alpha value (bit31:24)</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>A0</name>
                  <description>using A0 self pixel alpha (A0pA)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>A1</name>
                  <description>using A1 self pixel alpha (A1pA)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>alpha</name>
                  <description>the alpha value = A0pA + A1pA * ( 1 - A0pA )</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>using the Output image area alpha value (bit31:24)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A3ALPHACTL</name>
              <description>A3 area alpha value control 
00: 0xff 
01: using the Output non-image area alpha value (bit23:16) Other: reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0xff</name>
                  <description>0xff</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>using the Output non-image area alpha value (bit23:16) Other: reserved</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A1ALPHACTL</name>
              <description>A1 area alpha value control 
00: using A1 self pixel alpha 
01: using the Output image area alpha value (bit31:24) Other: reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>A1</name>
                  <description>using A1 self pixel alpha</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>using the Output image area alpha value (bit31:24) Other: reserved</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A0ALPHACTL</name>
              <description>A0 area alpha value control 
00: using A0 self pixel alpha 
01: using the Output image area alpha value (bit31:24) Other: reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>A0</name>
                  <description>using A0 self pixel alpha</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>using the Output image area alpha value (bit31:24) Other: reserved</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_OUTPUT_CTL</name>
          <description>MP_OUTPUT_CTL</description>
          <addressOffset>0xE0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF8F</resetMask>
          <fields>
            <field>
              <name>OUT_PS</name>
              <description>Output data pixel sequence Reference output pixel sequence table</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RND_EN</name>
              <description>Round enable 
0: Disabled 
1: Enabled</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_FMT</name>
              <description>Output data format 
0000: 32bpp - A8R8G8B8 or interleaved AYUV8888 
0001: 16bpp - A4R4G4B4 
0010: 16bpp - A1R5G5B5 
0011: 16bpp - R5G6B5 
0100: 16bpp - interleaved YUV422 
0101: planar YUV422 (UV combined) 
0110: planar YUV422 
0111: 8bpp - MONO 
1000: 4bpp - MONO 
1001: 2bpp - MONO 
1010: 1bpp - MONO 
1011: planar YUV420 (UV combined) 
1100: planar YUV420 
1101: planar YUV411 (UV combined) 
1110: planar YUV411 Other: Reserved Note: In all YUV output data format, the CSC2 must be enabled, otherwise the output data mode will be 32bpp A8R8G8B8 mode.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_OUTPUT_HADDR</name>
          <description>MP_OUTPUT_HADDR</description>
          <addressOffset>0xEC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0F0F</resetMask>
          <fields>
            <field>
              <name>OUTCH2_H4ADDR</name>
              <description>Output channel 2 High 4bit address in bit</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTCH1_H4ADDR</name>
              <description>Output channel 1 High 4bit address in bit</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUTCH0_H4ADDR</name>
              <description>Output channel 0 High 4bit address in bit</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_OUTPUT_SIZE</name>
          <description>MP_OUTPUT_SIZE</description>
          <addressOffset>0xE8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>OUT_HEIGHT</name>
              <description>Height The value add 1 equal the actual output image height</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_WIDTH</name>
              <description>Width The value add 1 equal the actual output image width</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>256</dim>
          <dimIncrement>4</dimIncrement>
          <name>MP_PALETTE_TAB[%s]</name>
          <description>MP_PALETTE_TAB[%s]</description>
          <addressOffset>0x400</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ALPHA</name>
              <description>Alpha value</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RED</name>
              <description>Red value</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GREEN</name>
              <description>Green value</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLUE</name>
              <description>Blue value</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_ROP_CTL</name>
          <description>MP_ROP_CTL</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF1</resetMask>
          <fields>
            <field>
              <name>ROP_ALPHABYPASSSEL</name>
              <description>ROP output Alpha channel selection 
00: Channel 0 
01: Channel 1 
10: Channel 2 
11: Reserved The bit is only valid in by-pass mode of Alpha channel</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_0</name>
                  <description>Channel 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_1</name>
                  <description>Channel 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_2</name>
                  <description>Channel 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved_The_bit</name>
                  <description>Reserved The bit is only valid in by-pass mode of Alpha channel</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_REDBYPASSSEL</name>
              <description>ROP output Red channel selection 
00: Channel 0 
01: Channel 1 
10: Channel 2 
11: Reserved The bit is only valid in by-pass mode of Red channel</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_0</name>
                  <description>Channel 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_1</name>
                  <description>Channel 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_2</name>
                  <description>Channel 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved_The_bit</name>
                  <description>Reserved The bit is only valid in by-pass mode of Red channel</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_GREENBYPASSSEL</name>
              <description>ROP output Green channel selection 
00: Channel 0 
01: Channel 1 
10: Channel 2 
11: Reserved The bit is only valid in by-pass mode of Green channel</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_0</name>
                  <description>Channel 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_1</name>
                  <description>Channel 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_2</name>
                  <description>Channel 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved_The_bit</name>
                  <description>Reserved The bit is only valid in by-pass mode of Green channel</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_BLUEBYPASSSEL</name>
              <description>ROP output Blue channel selection 
00: Channel 0 
01: Channel 1 
10: Channel 2 
11: Reserved The bit is only valid in by-pass mode of Blue channel</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_0</name>
                  <description>Channel 0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_1</name>
                  <description>Channel 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_2</name>
                  <description>Channel 2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved_The_bit</name>
                  <description>Reserved The bit is only valid in by-pass mode of Blue channel</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_ALPHABYPASSEN</name>
              <description>ROP Alpha channel by-pass enable control 
0: Pass through 
1: By-pass</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass through</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_REDBYPASSEN</name>
              <description>ROP Red channel by-pass enable control 
0: Pass through 
1: By-pass</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass through</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_GREENBYPASSEN</name>
              <description>ROP Green channel by-pass enable control 
0: Pass through 
1: By-pass</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass through</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_BLUEBYPASSEN</name>
              <description>ROP Blue channel by-pass enable control 
0: Pass through 
1: By-pass</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass through</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROP_MOD</name>
              <description>ROP type selection 
0: ROP3 
1: ROP4 In ROP3 mode, only the value of channel 3 index 0 control table setting register will be selected. In ROP3 mode, the channel 3 data will by-pass the ROP module. In ROP3 mode, the channel 3 data will direct to Alpha/CK module. In ROP4 mode, the respective input DMA channel fill color of channel 3 will transfer to Alpha/CK module.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ROP3</name>
                  <description>ROP3</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ROP4</name>
                  <description>ROP4 In ROP3 mode, only the value of channel 3 index 0 control table setting register will be selected. In ROP3 mode, the channel 3 data will by-pass the ROP module. In ROP3 mode, the channel 3 data will direct to Alpha/CK module. In ROP4 mode, the respective input DMA channel fill color of channel 3 will transfer to Alpha/CK module.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_ROP_INDEX0</name>
          <description>MP_ROP_INDEX0</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>NOD7_CTL</name>
              <description>Index 0 node7 setting ( channel 0` and channel 1` and channel 2` mix not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD6_CTL</name>
              <description>Index 0 node6 setting ( channel 0` and channel 1` and channel 2` mix logic ) 
0000: And 
0001: OR 
0010: XOR 
0011: Add in byte 
0100: Add in word (32bit) 
0101: Multiply in byte 
0110: Multiply in word (32bit) 
0111: Channel 0` mix channel 1` then sub channel 2` in byte 
1000: Channel 0` mix channel 1` then sub channel 2` in word (32bit) Other: Reserved</description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOD5_CTL</name>
              <description>Index 0 node5 setting ( channel 0` and channel 1` mix not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD4_CTL</name>
              <description>Index 0 node4 setting ( channel 0` and channel 1` mix logic ) 
0000: And 
0001: OR 
0010: XOR 
0011: Add in byte 
0100: Add in word (32bit) 
0101: Multiply in byte 
0110: Multiply in word (32bit) 
0111: Channel 0` sub channel 1` in byte 
1000: Channel 0` sub channel 1` in word (32bit) Other: Reserved</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOD3_CTL</name>
              <description>Index 0 node3 setting ( channel 2` not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD2_CTL</name>
              <description>Index 0 node2 setting ( channel 1` not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD1_CTL</name>
              <description>Index 0 node1 setting ( channel 0` not logic) 
0: By-pass 
1: Not</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD0_CTL</name>
              <description>Index 0 node0 setting ( sorting control ) 
000: 012 
001: 021 
010: 102 
011: 120 
100: 201 
101: 210 Other: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_012</name>
                  <description>012</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_021</name>
                  <description>021</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_102</name>
                  <description>102</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_120</name>
                  <description>120</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_201</name>
                  <description>201</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_210</name>
                  <description>210 Other: Reserved</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_ROP_INDEX1</name>
          <description>MP_ROP_INDEX1</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>NOD7_CTL</name>
              <description>Index 1 node7 setting ( channel 0` and channel 1` and channel 2` mix not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD6_CTL</name>
              <description>Index 1 node6 setting ( channel 0` and channel 1` and channel 2` mix logic ) 
0000: And 
0001: OR 
0010: XOR 
0011: Add in byte 
0100: Add in word (32bit) 
0101: Multiply in byte 
0110: Multiply in word (32bit) 
0111: Channel 0` mix channel 1` then sub channel 2` in byte 
1000: Channel 0` mix channel 1` then sub channel 2` in word (32bit) Other: Reserved</description>
              <bitRange>[14:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOD5_CTL</name>
              <description>Index 1 node5 setting ( channel 0` and channel 1` mix not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD4_CTL</name>
              <description>Index 1 node4 setting ( channel 0` and channel 1` mix logic ) 
0000: And 
0001: OR 
0010: XOR 
0011: Add in byte 
0100: Add in word (32bit) 
0101: Multiply in byte 
0110: Multiply in word (32bit) 
0111: Channel 0` sub channel 1` in byte 
1000: Channel 0` sub channel 1` in word (32bit) Other: Reserved</description>
              <bitRange>[9:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOD3_CTL</name>
              <description>Index 1 node3 setting ( channel 2` not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD2_CTL</name>
              <description>Index 1 node2 setting ( channel 1` not logic ) 
0: By-pass 
1: Not</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD1_CTL</name>
              <description>Index 1 node1 setting ( channel 0` not logic) 
0: By-pass 
1: Not</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>By-pass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOD0_CTL</name>
              <description>Index 1 node0 setting ( sorting control ) 
000: 012 
001: 021 
010: 102 
011: 120 
100: 201 
101: 210 Other: Reserved</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_012</name>
                  <description>012</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_021</name>
                  <description>021</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_102</name>
                  <description>102</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_120</name>
                  <description>120</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_201</name>
                  <description>201</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_210</name>
                  <description>210 Other: Reserved</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_SCALER_CTL</name>
          <description>MP_SCALER_CTL</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x31</resetMask>
          <fields>
            <field>
              <name>SCA_ALGSEL</name>
              <description>Scaling algorithm selection 
00: bi-cubic(4 taps in vertical and horizontal) 
01: linear in vertical and bi-linear in horizontal(2 taps in vertical and 4 taps in horizontal) 
10: extractive in vertical and bi-linear in horizontal(1 tap in vertical and 4 taps in horizontal) 
11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bicubic_openingparen_4</name>
                  <description>bi-cubic(4 taps in vertical and horizontal)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>linear</name>
                  <description>linear in vertical and bi-linear in horizontal(2 taps in vertical and 4 taps in horizontal)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>extractive</name>
                  <description>extractive in vertical and bi-linear in horizontal(1 tap in vertical and 4 taps in horizontal)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCA_EN</name>
              <description>Enable control 
0: Disable scaler, ignore the whole scaling setting, and the data flow will by-pass the module. 
1: Enable scaling function</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable scaler, ignore the whole scaling setting, and the data flow will by-pass the module.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable scaling function</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_SCALER_HFACTOR</name>
          <description>MP_SCALER_HFACTOR</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>HFACTOR0</name>
              <description>The integer part of the horizontal scaling ratio the horizontal scaling ratio = input width/output width</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HFACTOR1</name>
              <description>The fractional part of the horizontal scaling ratio the horizontal scaling ratio = input width/output width The input width is the memory block width of respective iDMA channel.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_SCALER_HPHASE</name>
          <description>MP_SCALER_HPHASE</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>HPHASE</name>
              <description>Start phase in horizontal (complement) This value equals to start phase * 2</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_SCALER_OUTSIZE</name>
          <description>MP_SCALER_OUTSIZE</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>SCA_OUTHEIGHT</name>
              <description>Output height The output height = The value of these bits add 1 The minimum output height is 8 pixels.</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCA_OUTWIDTH</name>
              <description>Output width The output width = The value of these bits add 1 The minimum output width is 16 pixels.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_SCALER_VFACTOR</name>
          <description>MP_SCALER_VFACTOR</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>VFACTOR0</name>
              <description>The integer part of the vertical scaling ratio the vertical scaling ratio = input height/output height</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VFACTOR1</name>
              <description>The fractional part of the vertical scaling ratio the vertical scaling ratio = input height /output height The input height is the memory block height of respective iDMA channel.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_SCALER_VPHASE</name>
          <description>MP_SCALER_VPHASE</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>SCA_VERPHASE</name>
              <description>Start phase in vertical (complement) This value equals to start phase * 2</description>
              <bitRange>[19:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MP_STATUS</name>
          <description>MP_STATUS</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3300</resetMask>
          <fields>
            <field>
              <name>HWERR_FLAG</name>
              <description>Hardware error status</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BUSY_FLAG</name>
              <description>Module working status 0:Idle 1:Running</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HWERRIRQ_FLAG</name>
              <description>Hardware error IRQ It will be set when hardware error occurs, and cleared by writing 1.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FINISHIRQ_FLAG</name>
              <description>Mission finish IRQ It will be set when 1 frame operation accomplished, and cleared by writing 1.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>NDFC</name>
      <description>NDFC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C03000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>NDFC_ADDR_HIGH</name>
          <description>NDFC High Word Address Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA8</name>
              <description>NAND Flash 8th Cycle Address Data</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA7</name>
              <description>NAND Flash 7th Cycle Address Data</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA6</name>
              <description>NAND Flash 6th Cycle Address Data</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA5</name>
              <description>NAND Flash 5th Cycle Address Data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ADDR_LOW</name>
          <description>NDFC Low Word Address Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA4</name>
              <description>NAND Flash 4th Cycle Address Data</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA3</name>
              <description>NAND Flash 3rd Cycle Address Data</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA2</name>
              <description>NAND Flash 2nd Cycle Address Data</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA1</name>
              <description>NAND Flash 1st Cycle Address Data</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD</name>
          <description>Set up NDFC Commands Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_CMD_TYPE</name>
              <description>00: Common Command for normal operation 
01: Special Command for Flash Spare Field Operation 
10: Page Command for batch process operation 
11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Common</name>
                  <description>Common Command for normal operation</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special Command for Flash Spare Field Operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page Command for batch process operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FOURTH_CMD</name>
              <description>0: Don`t send third set command 
1: Send it on the external memory`s bus It is used for EF-NAND page read.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send third set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus It is used for EF-NAND page read.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_THIRD_CMD</name>
              <description>0: Don`t send third set command 
1: Send it on the external memory`s bus It is used for EF-NAND page read.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send third set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus It is used for EF-NAND page read.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ROW_ADDR_AUTO</name>
              <description>Row Address Auto Increase for Page Command 
0: Normal operation 
1: Row address increasing automatically</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Row</name>
                  <description>Row address increasing automatically</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_METHOD</name>
              <description>Data swap method when the internal RAM and system memory It is only active for Common Command and Special Command. 
0: No action 
1: DMA transfer automatically It only is active when is 1. If this bit is set to 1, NDFC should setup DRQ to fetching data before output to Flash or NDFC should setup DRQ to sending out to system memory after fetching data from Flash. If this bit is set to 0, NDFC output the data in internal RAM or do nothing after fetching data from Flash.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_action</name>
                  <description>No action</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA transfer automatically It only is active when is 1. If this bit is set to 1, NDFC should setup DRQ to fetching data before output to Flash or NDFC should setup DRQ to sending out to system memory after fetching data from Flash. If this bit is set to 0, NDFC output the data in internal RAM or do nothing after fetching data from Flash.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEQ</name>
              <description>User data &amp; BCH check word position. It only is active for Page Command, don`t care about this bit for other two commands 
0: Interleave Method (on page spare area) 
1: Sequence Method (following data block)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interleave</name>
                  <description>Interleave Method (on page spare area)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sequence</name>
                  <description>Sequence Method (following data block)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_SECOND_CMD</name>
              <description>0: Don`t send second set command 
1: Send it on the external memory`s bus</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send second set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_WAIT_FLAG</name>
              <description>0: NDFC can transfer data regardless of the internal NDFC_RB wire 
1: NDFC can transfer data when the internal NDFC_RB wire is READY; otherwise it can`t when the internal NDFC_RB wire is BUSY.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_regardless</name>
                  <description>NDFC can transfer data regardless of the internal NDFC_RB wire</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_when</name>
                  <description>NDFC can transfer data when the internal NDFC_RB wire is READY; otherwise it can`t when the internal NDFC_RB wire is BUSY.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FIRST_CMD</name>
              <description>0: Don`t send first set command 
1: Send it on the external memory`s bus</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send first set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_TRANS</name>
              <description>0: No data transfer on external memory bus 
1: Data transfer and direction is decided by the field</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data transfer on external memory bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data transfer and direction is decided by the field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ACCESS_DIR</name>
              <description>0: Read NAND Flash 
1: Write NAND Flash</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read NAND Flash</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write NAND Flash</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_ADR</name>
              <description>0: Don`t send ADDRESS 
1: Send N cycles ADDRESS, the number N is specified by</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send ADDRESS</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send N cycles ADDRESS, the number N is specified by</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ADR_NUM</name>
              <description>Address Cycles` Number  
000: 1 cycle address field 
001: 2 cycles address field 
010: 3 cycles address field 
011: 4 cycles address field 
100: 5 cycles address field 
101: 6 cycles address field 
110: 7 cycles address field 
111: 8 cycles address field</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_cycle</name>
                  <description>1 cycle address field</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_cycles</name>
                  <description>2 cycles address field</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_cycles</name>
                  <description>3 cycles address field</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_cycles</name>
                  <description>4 cycles address field</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5_cycles</name>
                  <description>5 cycles address field</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_cycles</name>
                  <description>6 cycles address field</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_cycles</name>
                  <description>7 cycles address field</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_cycles</name>
                  <description>8 cycles address field</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_HIGH_BYTE</name>
              <description>NDFC Command high byte data If 8-bit command is supported, the high byte should be zero for 16-bit bus width NAND Flash. For 8-bit bus width NAND Flash, high byte command is discarded.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_LOW_BYTE</name>
              <description>NDFC Command low byte data This command will be sent to external Flash by NDFC.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET0</name>
          <description>NDFC_CMD_SET0</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE00530</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_READ_CMD1</name>
              <description>Used for Batch Read Operation</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_READ_CMD0</name>
              <description>Used for Batch Read Operation</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD</name>
              <description>Used for Batch Read Operation</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET1</name>
          <description>NDFC_CMD_SET1</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x708510</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_CMD0</name>
              <description>Used for EF-NAND Page Read Operation</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD1</name>
              <description>Used for EF-NAND Page Read Operation</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_WRITE_CMD</name>
              <description>Used for Batch Write Operation</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_PROGRAM_CMD</name>
              <description>Used for Batch Write Operation</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CNT</name>
          <description>NDFC Data Counter for Data Transfer Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>NDFC_DATA_CNT</name>
              <description>Transfer Data Byte Counter The length can be set from 1 byte to 1024 bytes. However, 1024 bytes is set when it is zero.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CTL</name>
          <description>NDFC Configure and Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3FCF5F</resetMask>
          <fields>
            <field>
              <name>NDFC_CE_SEL</name>
              <description>Chip Select for 8 NAND Flash Chips 0000 ~ 0111: NDFC Chip Select Signal 0-7 is selected 1000 ~ 1111: NDFC CS[7:0] is not selected. GPIO pins can be used for CS.</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_DDR_RM</name>
              <description>DDR Repeat Data Mode 
0: Lower byte 
1: Higher byte</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Lower</name>
                  <description>Lower byte</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Higher</name>
                  <description>Higher byte</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DDR_REN</name>
              <description>DDR Repeat Enable 
0: Disable 
1: Enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NF_TYPE</name>
              <description>NAND Flash Type 
00: Normal SDR NAND 
01: Reserved 
10: ONFI DDR NAND 
11: Toggle DDR NAND</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal SDR NAND</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONFI</name>
                  <description>ONFI DDR NAND</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Toggle</name>
                  <description>Toggle DDR NAND</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CLE_POL</name>
              <description>NDFC Command Latch Enable (CLE) Signal Polarity Select 
0: High active 
1: Low active</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ALE_POL</name>
              <description>NDFC Address Latch Enable (ALE) Signal Polarity Select 
0: High active 
1: Low active</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_TYPE</name>
              <description>0: Dedicated DMA 
1: Normal DMA</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dedicated</name>
                  <description>Dedicated DMA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RAM_METHOD</name>
              <description>Access Internal RAM Method 
0: Access internal RAM by AHB bus 
1: Access internal RAM by DMA bus</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_AHB</name>
                  <description>Access internal RAM by AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_DMA</name>
                  <description>Access internal RAM by DMA bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_PAGE_SIZE</name>
              <description>0000: 1024 bytes 
0001: 2048 bytes 
0010: 4096 bytes 
0011: 8192 bytes 
0100: 16384 bytes The page size is for main field data.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1024</name>
                  <description>1024 bytes</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2048</name>
                  <description>2048 bytes</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4096</name>
                  <description>4096 bytes</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8192</name>
                  <description>8192 bytes</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16384</name>
                  <description>16384 bytes The page size is for main field data.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CE_ACT</name>
              <description>Chip Select Signal CE# Control during NAND Operation 
0: De-active Chip Select Signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatic control Chip Select Signals. 
1: Chip select signal NDFC_CE# is always active after NDFC is enabled.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deactive</name>
                  <description>De-active Chip Select Signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatic control Chip Select Signals.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chip</name>
                  <description>Chip select signal NDFC_CE# is always active after NDFC is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_SEL</name>
              <description>NDFC external R/B Signal select The value 0-3 selects the external R/B signal. The same R/B signal can be used for multiple chip select flash.</description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_BUS_WIDTH</name>
              <description>0: 8-bit bus 
1: 16-bit bus</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RESET</name>
              <description>NDFC Reset Write 1 to reset NDFC and clear to 0 after reset</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_EN</name>
              <description>NDFC Enable Control 
0: Disable NDFC 
1: Enable NDFC</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable NDFC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable NDFC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DATA_BLOCK_NUM</name>
          <description>NDFC_DATA_BLOCK_NUM</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>DATA_BLOCK_NUM</name>
              <description>DATA BLOCK Number It is used for batch command procession.  
00000: no data 
00001: 1 data block 
00010: 2 data blocks ... 
10000: 16 data blocks Others: Reserved Note: 1 data block = 512 or 1024 bytes main field data</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_data</name>
                  <description>1 data block</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_data</name>
                  <description>2 data blocks ...</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_data</name>
                  <description>16 data blocks Others: Reserved Note: 1 data block = 512 or 1024 bytes main field data</description>
                  <value>0b10000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_CTL</name>
          <description>ECC Configure and Control Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x4A800008</resetValue>
          <resetMask>0x7FFFFE39</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_SEED</name>
              <description>The seed value for randomize engine. It is only active when is set to `1`.</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_ECC_MODE</name>
              <description>0000: BCH-16 for one ECC Data Block 
0001: BCH-24 for one ECC Data Block 0010 : BCH-28 for one ECC Data Block 0011 : BCH-32 for one ECC Data Block 0100 : BCH-40 for one ECC Data Block 0101 : BCH-48 for one ECC Data Block 0110 : BCH-56 for one ECC Data Block 0111 : BCH-60 for one ECC Data Block 1000 : BCH-64 for one ECC Data Block Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BCH_minus_16</name>
                  <description>BCH-16 for one ECC Data Block</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_24</name>
                  <description>BCH-24 for one ECC Data Block 0010 : BCH-28 for one ECC Data Block 0011 : BCH-32 for one ECC Data Block 0100 : BCH-40 for one ECC Data Block 0101 : BCH-48 for one ECC Data Block 0110 : BCH-56 for one ECC Data Block 0111 : BCH-60 for one ECC Data Block 1000 : BCH-64 for one ECC Data Block Others: Reserved</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_SIZE</name>
              <description>0: ECC block size 
1: Page size</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC block size</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page size</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_DIRECTION</name>
              <description>0: LSB first 
1: MSB first</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_EN</name>
              <description>0: Disable Data Randomize 
1: Enable Data Randomize</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Data Randomize</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Data Randomize</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_BLOCK_SIZE</name>
              <description>0: 1024 bytes of one ECC data block 
1: 512 bytes of one ECC data block</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1024</name>
                  <description>1024 bytes of one ECC data block</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512 bytes of one ECC data block</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EXCEPTION</name>
              <description>0: Normal ECC 
1: For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported. Note: It is only active when ECC is ON</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal ECC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported. Note: It is only active when ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_PIPELINE</name>
              <description>Pipeline function enable or disable for batch command 
0: Error Correction function no pipeline with next block operation 
1: Error Correction pipeline</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Error_Correction_function</name>
                  <description>Error Correction function no pipeline with next block operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_Correction_pipeline</name>
                  <description>Error Correction pipeline</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EN</name>
              <description>0: ECC is OFF 
1: ECC is ON</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>ECC is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_ST</name>
          <description>ECC Status and Operation Information Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_PAT_FOUND</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for 16 Data Blocks 
0: No Found 
1: Special pattern is found When this field is `1`, this means that the special data is found for reading external NAND flash. The register of would indicate which pattern is found.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NDFC_ECC_ERR</name>
              <description>Error information bit of 16 Data Blocks 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can not correct them Note: The LSB of this register is corresponding the 1st ECC data block. 1 ECC Data Block = 512 or 1024 byte.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFNAND_STATUS</name>
          <description>NDFC_EFNAND_STATUS</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>EF_NAND_STATUS</name>
              <description>The Status Value for EF-NAND Page Read operation</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFR</name>
          <description>Enhanced Feature Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x17F</resetMask>
          <fields>
            <field>
              <name>NDFC_WP_CTRL</name>
              <description>NAND Flash Write Protect Control  
0: Write Protect is active 
1: Write Protect is not active When the bit is `0`, WP signal line is low level and external NAND flash is on protected state.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active</name>
                  <description>Write Protect is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_active</name>
                  <description>Write Protect is not active When the bit is `0`, WP signal line is low level and external NAND flash is on protected state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_DEBUG</name>
              <description>For the purpose of debugging ECC engine, special bit error is inserted before writing external Flash Memory. 
0: No error is inserted (ECC Normal Operation) n: N bits error are inserted</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT0</name>
          <description>Corrected Error Bit Counter Register 0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM_3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bit 1: 1 corrected bit 2: 2 corrected bit ... 64: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bit 1: 1 corrected bit 2: 2 corrected bit ... 64: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bit 1: 1 corrected bit 2: 2 corrected bit ... 64: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bit 1: 1 corrected bit 2: 2 corrected bit ... 64: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT1</name>
          <description>Corrected Error Bit Counter Register 1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_3</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_2</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_1</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_0</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT2</name>
          <description>NDFC_ERR_CNT2</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM_3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT3</name>
          <description>NDFC_ERR_CNT3</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM_3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0000000: No corrected bit 0000001: 1 corrected bit 0000010: 2 corrected bit ... 1000000: 64 corrected bit Others: Reserved Note: 1 ECC Data Block = 512 or 1024 byte</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_INT</name>
          <description>NDFC Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>NDFC_DMA_INT_ENABLE</name>
              <description>Enable or disable interrupt when a pending DMA is completed.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC has finished the procession of a single command in Normal Command Work Mode or one Batch Command Work Mode. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_B2R_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC_RB# signal is transferring from BUSY state to READY state. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_IO_DATA</name>
          <description>Data Input/Output Port Address Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_IO_DATA</name>
              <description>Read/Write data into internal RAM Access unit is 32-bit.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_ADDR</name>
          <description>MBUS DMA Address Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MDMA_ADDR</name>
              <description>MBUS DMA address</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_CNT</name>
          <description>MBUS DMA Data Counter Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>MDMA_CNT</name>
              <description>MBUS DMA data counter</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_NDMA_MODE_CTL</name>
          <description>NDFC Normal DMA Mode Control Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0xA5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>NDMA_MODE_CTL</name>
              <description>0xEA:NDMA handshake mode Note: NDMA wait mode don't care this value. 0xA5 can be used in handshake mode, but 0xEA is better.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_PAT_ID</name>
          <description>Pattern ID Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PAT_ID_15</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_14</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_13</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_12</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_11</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_10</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_9</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_8</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_7</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_6</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_5</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_4</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_3</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_2</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_1</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_0</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_0</name>
          <description>Read Data Status Register 0</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_1</name>
              <description>The number of input bit 1 during current command. It will be cleared automatically when next command is executed.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_1</name>
          <description>Read Data Status Register 1</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_0</name>
              <description>The number of input bit 0 during current command. It will be cleared automatically when next command is executed.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_CTL</name>
          <description>Read Data Status Control Register</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x103FFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_EN</name>
              <description>0: Disable to count the number of bit 1 and bit 0 during current read operation 
1: Enable to count the number of bit 1 and bit 0 during current read operation The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable to count the number of bit 1 and bit 0 during current read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable to count the number of bit 1 and bit 0 during current read operation The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_TH</name>
              <description>The threshold value to generate data status. If the number of bit 1 during current read operation is less than or equal to threshold value, will be set. If the number of bit 0 during current read operation is less than or equal to threshold value, will be set.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_SPARE_AREA</name>
          <description>Spare Area Configure Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x400</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_SPARE_ADR</name>
              <description>This value indicates the spare area first byte address for NDFC interleave page operation.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ST</name>
          <description>NDFC Status Information Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F1F</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_0</name>
              <description>0: The number of bit 1 during current read operation is greater threshold value. 
1: The number of bit 1 during current read operation is less than or equal to threshold value. This field only is valid when is 1. The threshold value is configured in .</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>greater</name>
                  <description>The number of bit 1 during current read operation is greater threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 1 during current read operation is less than or equal to threshold value. This field only is valid when is 1. The threshold value is configured in .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_1</name>
              <description>0: The number of bit 0 during current read operation is greater threshold value. 
1: The number of bit 0 during current read operation is less than or equal to than threshold value. This field only is valid when is 1. The threshold value is configured in .</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>greater</name>
                  <description>The number of bit 0 during current read operation is greater threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 0 during current read operation is less than or equal to than threshold value. This field only is valid when is 1. The threshold value is configured in .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE3</name>
              <description>NAND Flash R/B 3 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE2</name>
              <description>NAND Flash R/B 2 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE1</name>
              <description>NAND Flash R/B 1 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE0</name>
              <description>NAND Flash R/B 0 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_STA</name>
              <description>0: NDFC FSM in IDLE State 
1: NDFC FSM in BUSY State When NDFC_STA is 0, NDFC can accept new command and process command.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_FSM_in_IDLE</name>
                  <description>NDFC FSM in IDLE State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_FSM_in_BUSY</name>
                  <description>NDFC FSM in BUSY State When NDFC_STA is 0, NDFC can accept new command and process command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_FIFO_STATUS</name>
              <description>0: Command FIFO not full and can receive new command 
1: Full and waiting NDFC to process commands in FIFO Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command</name>
                  <description>Command FIFO not full and can receive new command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_and</name>
                  <description>Full and waiting NDFC to process commands in FIFO Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_INT_FLAG</name>
              <description>When it is 1, it means that a pending DMA is completed. It will be cleared after writing 1 to this bit or it will be automatically cleared before FSM processing an new command.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_INT_FLAG</name>
              <description>When it is 1, it means that NDFC has finished one Normal Command Mode or one Batch Command Work Mode. It will be cleared after writing 1 to this bit or it will be automatically cleared before FSM processing a new command.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RB_B2R</name>
              <description>When it is 1, it means that NDFC_R/B# signal is transferred from BUSY state to READY state. It will be cleared after writing 1 to this bit.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CFG</name>
          <description>NDFC Timing Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x95</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>T_WC</name>
              <description>Write Cycle Time 
00: 1*2T 
01: 2*2T 
10: 3*2T 
11: 4*2T</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_times_2T</name>
                  <description>1*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_times_2T</name>
                  <description>3*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CCS</name>
              <description>Change Column Setup Time 
00: 16*2T 
01: 24*2T 
10: 32*2T 
11: 64*2T</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64_times_2T</name>
                  <description>64*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CLHZ</name>
              <description>CLE High to Output Hi-z 
00: 2*2T 
01: 8*2T 
10: 16*2T 
11: 31*2T</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CS</name>
              <description>CE Setup Time 
00: 2*2T 
01: 8*2T 
10: 16*2T 
11: 31*2T</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R/W</name>
              <description>0x0 T_CDQSS DQS Setup Time for Data Input Start 
0: 8*2T 
1: 24*2T</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CAD</name>
              <description>Command, Address, Data Delay 
000: 4*2T 
001: 8*2T 
010: 12*2T 
011: 16*2T 
100: 24*2T 
101: 32*2T 110/111: 64*2T</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T 110/111: 64*2T</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_RHW</name>
              <description>RE# High to WE# Low Cycle Number 
00: 4*2T 
01: 8*2T 
10: 12*2T 
11: 20*2T</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_times_2T</name>
                  <description>20*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WHR</name>
              <description>WE# High to RE# Low Cycle Number 
00: 8*2T 
01: 16*2T 
10: 24*2T 
11: 32*2T</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_ADL</name>
              <description>Address to Data Loading Cycle Number 
00: 0*2T 
01: 8*2T 
10: 16*2T 
11: 24*2T</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_times_2T</name>
                  <description>0*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WB</name>
              <description>WE# High to Busy Cycle Number 
00: 14*2T 
01: 22*2T 
10: 30*2T 
11: 38*2T</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_14_times_2T</name>
                  <description>14*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_times_2T</name>
                  <description>22*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_30_times_2T</name>
                  <description>30*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_38_times_2T</name>
                  <description>38*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CTL</name>
          <description>NDFC Timing Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3F</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_PIPE</name>
              <description>In SDR mode: 
0000: Normal 
0001: EDO 
0010: E-EDO Other : Reserved In DDR mode: 0001~1111 is valid.(These bits configure the number of clock when data is valid after RE#`s falling edge)</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EDO</name>
                  <description>EDO</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_minus_EDO_Other</name>
                  <description>E-EDO Other : Reserved In DDR mode: 0001~1111 is valid.(These bits configure the number of clock when data is valid after RE#`s falling edge)</description>
                  <value>0b0010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DC_CTL</name>
              <description>NDFC Delay Chain Control. (These bits are only valid in DDR data interface, and configure the relative phase between DQS and DQ*0...7+)</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>4</dimIncrement>
          <name>NDFC_USER_DATAn[%s]</name>
          <description>User Data Field Register N (N from 0 to 15)</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USER_DATA</name>
              <description>User Data for ECC Data Block[n] (n from 0 to 15) Note: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>OWA</name>
      <description>OWA</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>OWA_CTL</name>
          <description>OWA General Control</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x3F3</resetMask>
          <fields>
            <field>
              <name>MCLK_DIV_RATIO</name>
              <description>MCLK Divide Ratio Note: Only support 2n divide ratio(n=1~31)</description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RST</name>
              <description>Reset 
0: Normal 
1: Reset</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FCTL</name>
          <description>OWA FIFO Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1078</resetValue>
          <resetMask>0x80031FFF</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable 
0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TX FIFO, self clear to `0`</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO Empty Trigger Level Interrupt and DMA request trigger level for TX FIFO normal condition Trigger Level = TXTL</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TX FIFO Input Mode(Mode0, 1) 
0: Valid data at the MSB of OWA_TXFIFO register 
1: Valid data at the LSB of OWA_TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I*23:0+ = ,TXFIFO*31:12+, 4`h0- Mode 1: FIFO_I[23:0] = ,TXFIFO*19:0+, 4`h0-</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of OWA_TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of OWA_TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I*23:0+ = ,TXFIFO*31:12+, 4`h0- Mode 1: FIFO_I[23:0] = ,TXFIFO*19:0+, 4`h0-</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FSTA</name>
          <description>OWA FIFO Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x6000</resetValue>
          <resetMask>0x7F7F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TX FIFO Empty (indicate FIFO is not full) 
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO ( &gt;=1 word )</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO ( &gt;=1 word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word counter</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_INT</name>
          <description>OWA Interrupt Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x700F7</resetMask>
          <fields>
            <field>
              <name>TX_DRQ</name>
              <description>TX FIFO Empty DRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TX FIFO Underrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_ISTA</name>
          <description>OWA Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x70073</resetMask>
          <fields>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Underrun Pending Interrupt 
0: No pending IRQ 
1: FIFO underrun pending interrupt Write `1` to clear this interrupt.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO underrun pending interrupt Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No pending IRQ 
1: FIFO overrun pending interrupt Write `1` to clear this interrupt.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO overrun pending interrupt Write `1` to clear this interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No pending IRQ 
1: FIFO empty pending interrupt Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty pending interrupt Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TXFIFO</name>
          <description>OWA_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Transmitting A, B channel data should be written this register one by one. The A channel data is first and then the B channel data.</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CFIG</name>
          <description>OWA TX Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xF0</resetValue>
          <resetMask>0x800301FF</resetMask>
          <fields>
            <field>
              <name>TX_SINGLE_MODE</name>
              <description>Tx Single Channel Mode 
0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASS</name>
              <description>Audio sample select with TX FIFO underrun when 
0: Sending 0 
1: Sending the last audio Note: This bit is only valid in PCM mode</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sending_0</name>
                  <description>Sending 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sending_the_last</name>
                  <description>Sending the last audio Note: This bit is only valid in PCM mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_AUDIO</name>
              <description>TX Data Type 
0: Linear PCM (Valid bit of both sub-frame set to 0 ) 
1: Non-audio(Valid bit of both sub-frame set to 1)</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM (Valid bit of both sub-frame set to 0 )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_audio_openingparen_Valid_bit</name>
                  <description>Non-audio(Valid bit of both sub-frame set to 1)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_RATIO</name>
              <description>TX Clock Divide Ratio Note: clock divide ratio = TX TATIO +1</description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SF</name>
              <description>TX Sample Format 
00: 16bit 
01: 20bit 
10: 24bit 
11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16bit</name>
                  <description>16bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20bit</name>
                  <description>20bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit</name>
                  <description>24bit</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CHM</name>
              <description>CHSTMODE 
0: Channel status A&amp;B set to 0 
1: Channel status A&amp;B generated from TX_CHSTA</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_set</name>
                  <description>Channel status A&amp;B set to 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_generated</name>
                  <description>Channel status A&amp;B generated from TX_CHSTA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>0: Disabled 
1: Enabled</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA0</name>
          <description>OWA TX Channel Status Register0</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>CA</name>
              <description>Clock Accuracy 
00: Level 2 
01: Level 1 
10: Level 3 
11: Not matched</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_matched</name>
                  <description>Not matched</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Sampling Frequency 
0000: 44.1kHz      
0001: not indicated    
0010: 48kHz       
0011: 32kHz       
0100: 22.05kHz      
0101: Reserved      
0110: 24kHz        
0111: Reserved      
1000: Reserved 
1001: 768kHz 
1010: 96kHz 
1011: Reserved 1100:176.4kHz 
1101: Reserved 
1110: 192kHz 
1111: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_indicated</name>
                  <description>not indicated</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_768kHz</name>
                  <description>768kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 1100:176.4kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CN</name>
              <description>Channel Number</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN</name>
              <description>Source Number</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Category Code Indicates the kind of equipment that generates the digital audio interface signal.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Mode 
00: Default Mode 01~11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default Mode 01~11: Reserved</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMP</name>
              <description>Emphasis Additional format information For bit 1 = `0`, Linear PCM audio mode: 
000: 2 audio channels without pre-emphasis 
001: 2 audio channels with 50 &#956;s / 15 &#956;s pre-emphasis 
010: Reserved (for 2 audio channels with pre-emphasis) 
011: Reserved (for 2 audio channels with pre-emphasis) 100~111: Reserved For bit 1 = `1`, other than Linear PCM applications: 
000: Default state 001~111: Reserved</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP</name>
              <description>Copyright 
0: copyright is asserted 
1: no copyright is asserted</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>copyright</name>
                  <description>copyright is asserted</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_copyright</name>
                  <description>no copyright is asserted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TYPE</name>
              <description>Audio Data Type 
0: Linear PCM Samples 
1: For none-linear PCM audio such as AC3, DTS, MPEG audio</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM Samples</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For none-linear PCM audio such as AC3, DTS, MPEG audio</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRO</name>
              <description>Application Type 
0: Consumer Application 
1: Professional Application Note: This bit must be fixed to `0`</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Consumer</name>
                  <description>Consumer Application</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Professional</name>
                  <description>Professional Application Note: This bit must be fixed to `0`</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA1</name>
          <description>OWA TX Channel Status Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>CGMS</name>
              <description>CGMS_A 
00: Copying is permitted without restriction 
01: One generation of copies may be made 
10: Condition not be used 
11: No copying is permitted</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copying</name>
                  <description>Copying is permitted without restriction</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One generation of copies may be made</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Condition</name>
                  <description>Condition not be used</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_copying</name>
                  <description>No copying is permitted</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ORIG_FREQ_ORIGINAL_SAMPLING_FREQUENCY</name>
              <description>ORIG_FREQ Original Sampling Frequency 
0000: Not indicated 
0001: 192kHz 
0010: 12kHz 
0011: 176.4kHz 
0100: Reserved 
0101: 96kHz 
0110: 8kHz 
0111: 88.2kHz 
1000: 16kHz 
1001: 24kHz 
1010: 11.025kHz 
1011: 22.05kHz 
1100: 32kHz 
1101: 48kHz 
1110: Reserved 
1111: 44.1kHz</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_indicated</name>
                  <description>Not indicated</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12kHz</name>
                  <description>12kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8kHz</name>
                  <description>8kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_88_point_2kHz</name>
                  <description>88.2kHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16kHz</name>
                  <description>16kHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025kHz</name>
                  <description>11.025kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WL_SAMPLE_WORD_LENGTH</name>
              <description>WL Sample Word Length For bit 0 = `0`: 
000: not indicated 
001: 16 bits 
010: 18 bits 
100: 19 bits 
101: 20 bits 
110: 17 bits 
111: Reserved For bit 0 = `1`: 
000: not indicated 
001: 20 bits 
010: 22 bits 
100: 23 bits 
101: 24 bits 
110: 21 bits 
111: Reserved</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MWL_MAX_WORD_LENGTH</name>
              <description>MWL Max Word Length 
0: Maximum audio sample word length is 20 bits 
1: Maximum audio sample word length is 24 bits</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>20</name>
                  <description>Maximum audio sample word length is 20 bits</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24</name>
                  <description>Maximum audio sample word length is 24 bits</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CNT</name>
          <description>OWA TX Counter Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of writing into TX FIFO. When one sample is written by DMA or by host IO, the TX sample counter register increases by one. The TX Counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PIO</name>
      <description>PIO</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PA_CFG0</name>
          <description>PA_CFG0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PA7_SELECT</name>
              <description>000: Input   
001: Output 
010: ETXD0    011: SPI3_MOSI 
100: Reserved    101: GTXD0 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD0</name>
                  <description>ETXD0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI3_MOSI</name>
                  <description>SPI3_MOSI</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GTXD0</name>
                  <description>GTXD0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA6_SELECT</name>
              <description>000: Input   
001: Output 
010: ETXD1    011: SPI3_CLK 
100: Reserved      101: GTXD1 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD1</name>
                  <description>ETXD1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI3_CLK</name>
                  <description>SPI3_CLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GTXD1</name>
                  <description>GTXD1</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA5_SELECT</name>
              <description>000: Input   
001: Output 
010: ETXD2    
011: SPI3_CS0 
100: Reserved    101: GTXD2 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD2</name>
                  <description>ETXD2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI3_CS0</name>
                  <description>SPI3_CS0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GTXD2</name>
                  <description>GTXD2</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA4_SELECT</name>
              <description>000: Input   
001: Output 
010: ETXD3   
011: SPI1_CS1 
100: Reserved    101: GTXD3 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD3</name>
                  <description>ETXD3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CS1</name>
                  <description>SPI1_CS1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GTXD3</name>
                  <description>GTXD3</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA3_SELECT</name>
              <description>000: Input   
001: Output 
010: ERXD0    011: SPI1_MISO 
100: UART2_RX  
101: GRXD0 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD0</name>
                  <description>ERXD0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_MISO</name>
                  <description>SPI1_MISO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_RX</name>
                  <description>UART2_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GRXD0</name>
                  <description>GRXD0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA2_SELECT</name>
              <description>000: Input   
001: Output 
010: ERXD1   
011: SPI1_MOSI 
100: UART2_TX  
101: GRXD1 
110: Reserved      111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD1</name>
                  <description>ERXD1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_MOSI</name>
                  <description>SPI1_MOSI</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_TX</name>
                  <description>UART2_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GRXD1</name>
                  <description>GRXD1</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA1_SELECT</name>
              <description>000: Input   
001: Output 
010: ERXD2   
011: SPI1_CLK 
100: UART2_CTS    101: GRXD2 
110: Reserved      111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD2</name>
                  <description>ERXD2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CLK</name>
                  <description>SPI1_CLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_CTS</name>
                  <description>UART2_CTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GRXD2</name>
                  <description>GRXD2</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA0_SELECT</name>
              <description>000: Input   
001: Output 
010: ERXD3   
011: SPI1_CS0 
100: UART2_RTS     101: GRXD3 
110: Reserved      111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD3</name>
                  <description>ERXD3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CS0</name>
                  <description>SPI1_CS0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_RTS</name>
                  <description>UART2_RTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GRXD3</name>
                  <description>GRXD3</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_CFG1</name>
          <description>PA_CFG1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PA15_SELECT</name>
              <description>000: Input     001: Output 
010: ECRS     011: UART7_RX 
100: UART1_DSR      101: GTXCK/ECRS 
110: I2S1_LRCK    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECRS</name>
                  <description>ECRS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART7_RX</name>
                  <description>UART7_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_DSR</name>
                  <description>UART1_DSR</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GTXCK_slash_ECRS</name>
                  <description>GTXCK/ECRS</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S1_LRCK</name>
                  <description>I2S1_LRCK</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA14_SELECT</name>
              <description>000: Input     001: Output 
010: ETXCK     011: UART7_TX 
100: UART1_DTR      101: GNULL/ETXCK 
110: I2S1_BCLK    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXCK</name>
                  <description>ETXCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART7_TX</name>
                  <description>UART7_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_DTR</name>
                  <description>UART1_DTR</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GNULL_slash_ETXCK</name>
                  <description>GNULL/ETXCK</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S1_BCLK</name>
                  <description>I2S1_BCLK</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA13_SELECT</name>
              <description>000: Input     001: Output 
010: ETXEN     011: UART6_RX 
100: UART1_CTS      101: GTXCTL/ETXEN 
110: Reserved      111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXEN</name>
                  <description>ETXEN</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART6_RX</name>
                  <description>UART6_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_CTS</name>
                  <description>UART1_CTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GTXCTL_slash_ETXEN</name>
                  <description>GTXCTL/ETXEN</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA12_SELECT</name>
              <description>000: Input     001: Output 
010: EMDIO     011: UART6_TX 
100: UART1_RTS      101: GMDIO 
110: Reserved     111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EMDIO</name>
                  <description>EMDIO</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART6_TX</name>
                  <description>UART6_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_RTS</name>
                  <description>UART1_RTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GMDIO</name>
                  <description>GMDIO</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA11_SELECT</name>
              <description>000: Input     001: Output 
010: EMDC     011: Reserved 
100: UART1_RX    101: GMDC 
110: Reserved     111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EMDC</name>
                  <description>EMDC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_RX</name>
                  <description>UART1_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GMDC</name>
                  <description>GMDC</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA10_SELECT</name>
              <description>000: Input     001: Output 
010: ERXDV     011: Reserved 
100: UART1_TX    101: GRXCTL/ERXDV 
110: Reserved     111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXDV</name>
                  <description>ERXDV</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_TX</name>
                  <description>UART1_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GRXCTL_slash_ERXDV</name>
                  <description>GRXCTL/ERXDV</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA9_SELECT</name>
              <description>000: Input   001: Output 
010: ERXERR   011: SPI3_CS1 
100: Reserved     101: GNULL/ERXERR 
110: I2S1_MCLK   111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXERR</name>
                  <description>ERXERR</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI3_CS1</name>
                  <description>SPI3_CS1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GNULL_slash_ERXERR</name>
                  <description>GNULL/ERXERR</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S1_MCLK</name>
                  <description>I2S1_MCLK</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA8_SELECT</name>
              <description>000: Input   001: Output 
010: ERXCK   011: SPI3_MISO 
100: Reserved     101: GRXCK 
110: Reserved     111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXCK</name>
                  <description>ERXCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI3_MISO</name>
                  <description>SPI3_MISO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GRXCK</name>
                  <description>GRXCK</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_CFG2</name>
          <description>PA_CFG2</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x77</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>PA17_SELECT</name>
              <description>000: Input    001: Output 
010: ETXERR     011: Reserved 
100: UART1_RING     101: GNULL/ETXERR 
110: I2S1_DI     111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXERR</name>
                  <description>ETXERR</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_RING</name>
                  <description>UART1_RING</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GNULL_slash_ETXERR</name>
                  <description>GNULL/ETXERR</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S1_DI</name>
                  <description>I2S1_DI</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA16_SELECT</name>
              <description>000: Input    001: Output 
010: ECOL    011: Reserved 
100: UART1_DCD     101: GCLKIN/ECOL 
110: I2S1_DO     111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECOL</name>
                  <description>ECOL</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_DCD</name>
                  <description>UART1_DCD</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>GCLKIN_slash_ECOL</name>
                  <description>GCLKIN/ECOL</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S1_DO</name>
                  <description>I2S1_DO</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_CFG3</name>
          <description>PA_CFG3</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PA_DAT</name>
          <description>PA_DAT</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PA_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_DRV0</name>
          <description>PA_DRV0</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PA_DRV_15</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_14</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_13</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_12</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_11</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_10</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_9</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_8</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_7</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_6</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_5</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_4</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_3</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_2</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_1</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_0</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_DRV1</name>
          <description>PA_DRV1</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA_DRV_1</name>
              <description>PA[n] Multi-Driving Select (n = 16~17) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_0</name>
              <description>PA[n] Multi-Driving Select (n = 16~17) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_PULL0</name>
          <description>PA_PULL0</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PA_PULL_15</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_14</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_13</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_12</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_11</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_10</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_9</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_8</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_7</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_6</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_5</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_4</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_3</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_2</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_1</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_0</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_PULL1</name>
          <description>PA_PULL1</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PA_PULL_1</name>
              <description>PA[n] Pull-up/down Select (n = 16~17) 00: Pull-up/down disable 01: Pull-up enable 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_0</name>
              <description>PA[n] Pull-up/down Select (n = 16~17) 00: Pull-up/down disable 01: Pull-up enable 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_CFG0</name>
          <description>PB_CFG0</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PB7_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_LRCK    011: AC97_SYNC 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_LRCK</name>
                  <description>I2S_LRCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AC97_SYNC</name>
                  <description>AC97_SYNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB6_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_BCLK    011: AC97_BCLK 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_BCLK</name>
                  <description>I2S_BCLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AC97_BCLK</name>
                  <description>AC97_BCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB5_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_MCLK  
011: AC97_MCLK 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_MCLK</name>
                  <description>I2S_MCLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AC97_MCLK</name>
                  <description>AC97_MCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB4_SELECT</name>
              <description>000: Input   
001: Output 
010: CIR0_RX   
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CIR0_RX</name>
                  <description>CIR0_RX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB3_SELECT</name>
              <description>000: Input   
001: Output 
010: Reserved    011: PWM1 
100: OWA_MCLK    101: Reserved 
110: Reserved        111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM1</name>
                  <description>PWM1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OWA_MCLK</name>
                  <description>OWA_MCLK</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB2_SELECT</name>
              <description>000: Input   
001: Output 
010: Reserved  
011: PWM0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM0</name>
                  <description>PWM0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB1_SELECT</name>
              <description>000: Input   
001: Output 
010: TWI0_SDA  
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI0_SDA</name>
                  <description>TWI0_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB0_SELECT</name>
              <description>000: Input   
001: Output 
010: TWI0_SCK  
011: PLL_LOCK_DBG 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI0_SCK</name>
                  <description>TWI0_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_LOCK_DBG</name>
                  <description>PLL_LOCK_DBG</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_CFG1</name>
          <description>PB_CFG1</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PB15_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI2_CLK    011: JTAG_CK0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_CLK</name>
                  <description>SPI2_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_CK0</name>
                  <description>JTAG_CK0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB14_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI2_CS0    011: JTAG_MS0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_CS0</name>
                  <description>SPI2_CS0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_MS0</name>
                  <description>JTAG_MS0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB13_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI2_CS1    011: Reserved 
100: OWA_DO    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_CS1</name>
                  <description>SPI2_CS1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OWA_DO</name>
                  <description>OWA_DO</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB12_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_DI   
011: AC97_DI 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_DI</name>
                  <description>I2S_DI</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AC97_DI</name>
                  <description>AC97_DI</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB11_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_DO3    011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_DO3</name>
                  <description>I2S_DO3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB10_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_DO2    011: Reserved 
100: PWM7    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_DO2</name>
                  <description>I2S_DO2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM7</name>
                  <description>PWM7</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB9_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_DO1    011: Reserved 
100: PWM6    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_DO1</name>
                  <description>I2S_DO1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM6</name>
                  <description>PWM6</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB8_SELECT</name>
              <description>000: Input   
001: Output 
010: I2S_DO0    011: AC97_DO 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S_DO0</name>
                  <description>I2S_DO0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AC97_DO</name>
                  <description>AC97_DO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_CFG2</name>
          <description>PB_CFG2</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PB23_SELECT</name>
              <description>000: Input   
001: Output 
010: UART0_RX  
011: CIR1_RX 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_RX</name>
                  <description>UART0_RX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CIR1_RX</name>
                  <description>CIR1_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB22_SELECT</name>
              <description>000: Input   
001: Output 
010: UART0_TX  
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_TX</name>
                  <description>UART0_TX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB21_SELECT</name>
              <description>000: Input   
001: Output 
010: TWI2_SDA  
011: Reserved 
100: PWM5    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI2_SDA</name>
                  <description>TWI2_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM5</name>
                  <description>PWM5</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB20_SELECT</name>
              <description>000: Input   
001: Output 
010: TWI2_SCK  
011: Reserved 
100: PWM4    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI2_SCK</name>
                  <description>TWI2_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM4</name>
                  <description>PWM4</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB19_SELECT</name>
              <description>000: Input   
001: Output 
010: TWI1_SDA  
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI1_SDA</name>
                  <description>TWI1_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB18_SELECT</name>
              <description>000: Input   
001: Output 
010: TWI1_SCK  
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI1_SCK</name>
                  <description>TWI1_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB17_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI2_MISO  
011: JTAG_DI0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_MISO</name>
                  <description>SPI2_MISO</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DI0</name>
                  <description>JTAG_DI0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB16_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI2_MOSI  
011: JTAG_DO0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_MOSI</name>
                  <description>SPI2_MOSI</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DO0</name>
                  <description>JTAG_DO0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_CFG3</name>
          <description>PB_CFG3</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PB_DAT</name>
          <description>PB_DAT</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PB_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_DRV0</name>
          <description>PB_DRV0</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PB_DRV_15</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_14</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_13</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_12</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_11</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_10</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_9</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_8</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_7</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_6</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_5</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_4</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_3</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_2</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_1</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_0</name>
              <description>PB[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_DRV1</name>
          <description>PB_DRV1</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x5555</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PB_DRV_7</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_6</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_5</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_4</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_3</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_2</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_1</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_0</name>
              <description>PB[n] Multi-Driving Select (n = 16~23) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_PULL0</name>
          <description>PB_PULL0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PB_PULL_15</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_14</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_13</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_12</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_11</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_10</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_9</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_8</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_7</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_6</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_5</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_4</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_3</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_2</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_1</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_0</name>
              <description>PB[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_PULL1</name>
          <description>PB_PULL1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PB_PULL_7</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_6</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_5</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_4</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_3</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_2</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_1</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_0</name>
              <description>PB[n] Pull-up/down Select (n = 16~23) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG0</name>
          <description>PC_CFG0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC7_SELECT</name>
              <description>000: Input   
001: Output 
010: NRB1   
011: SDC2_CLK 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NRB1</name>
                  <description>NRB1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_CLK</name>
                  <description>SDC2_CLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC6_SELECT</name>
              <description>000: Input   
001: Output 
010: NRB0   
011: SDC2_CMD 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NRB0</name>
                  <description>NRB0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_CMD</name>
                  <description>SDC2_CMD</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC5_SELECT</name>
              <description>000: Input   
001: Output 
010: NRE     011: SDC2_DS 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NRE</name>
                  <description>NRE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_DS</name>
                  <description>SDC2_DS</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC4_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE0   
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE0</name>
                  <description>NCE0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC3_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE1   
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE1</name>
                  <description>NCE1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC2_SELECT</name>
              <description>000: Input   
001: Output 
010: NCLE   
011: SPI0_CLK 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCLE</name>
                  <description>NCLE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_CLK</name>
                  <description>SPI0_CLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC1_SELECT</name>
              <description>000: Input   
001: Output 
010: NALE   
011: SPI0_MISO 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NALE</name>
                  <description>NALE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_MISO</name>
                  <description>SPI0_MISO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC0_SELECT</name>
              <description>000: Input   
001: Output 
010: NWE   
011: SPI0_MOSI 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NWE</name>
                  <description>NWE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_MOSI</name>
                  <description>SPI0_MOSI</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG1</name>
          <description>PC_CFG1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC15_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ7   
011: SDC2_D7 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ7</name>
                  <description>NDQ7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D7</name>
                  <description>SDC2_D7</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC14_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ6   
011: SDC2_D6 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ6</name>
                  <description>NDQ6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D6</name>
                  <description>SDC2_D6</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC13_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ5   
011: SDC2_D5 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ5</name>
                  <description>NDQ5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D5</name>
                  <description>SDC2_D5</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC12_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ4   
011: SDC2_D4 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ4</name>
                  <description>NDQ4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D4</name>
                  <description>SDC2_D4</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC11_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ3   
011: SDC2_D3 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ3</name>
                  <description>NDQ3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D3</name>
                  <description>SDC2_D3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC10_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ2   
011: SDC2_D2 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ2</name>
                  <description>NDQ2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D2</name>
                  <description>SDC2_D2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC9_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ1   
011: SDC2_D1 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ1</name>
                  <description>NDQ1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D1</name>
                  <description>SDC2_D1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC8_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQ0   
011: SDC2_D0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQ0</name>
                  <description>NDQ0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_D0</name>
                  <description>SDC2_D0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG2</name>
          <description>PC_CFG2</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC23_SELECT</name>
              <description>000: Input   
001: Output 
010: Reserved    011: SPI0_CS0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_CS0</name>
                  <description>SPI0_CS0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC22_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE7   
011: SPI2_MISO 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE7</name>
                  <description>NCE7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_MISO</name>
                  <description>SPI2_MISO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC21_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE6   
011: SPI2_MOSI 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE6</name>
                  <description>NCE6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_MOSI</name>
                  <description>SPI2_MOSI</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC20_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE5   
011: SPI2_CLK 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE5</name>
                  <description>NCE5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_CLK</name>
                  <description>SPI2_CLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC19_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE4   
011: SPI2_CS0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE4</name>
                  <description>NCE4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI2_CS0</name>
                  <description>SPI2_CS0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC18_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE3   
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE3</name>
                  <description>NCE3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC17_SELECT</name>
              <description>000: Input   
001: Output 
010: NCE2   
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NCE2</name>
                  <description>NCE2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC16_SELECT</name>
              <description>000: Input   
001: Output 
010: NWP   
011: Reserved 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NWP</name>
                  <description>NWP</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG3</name>
          <description>PC_CFG3</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>PC24_SELECT</name>
              <description>000: Input   
001: Output 
010: NDQS   
011: SDC2_RST 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDQS</name>
                  <description>NDQS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_RST</name>
                  <description>SDC2_RST</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DAT</name>
          <description>PC_DAT</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PC_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV0</name>
          <description>PC_DRV0</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PC_DRV_15</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_14</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_13</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_12</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_11</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_10</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_9</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_8</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_7</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_6</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_5</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_4</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_3</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_2</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_1</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_0</name>
              <description>PC[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV1</name>
          <description>PC_DRV1</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x15555</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PC_DRV_8</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_7</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_6</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_5</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_4</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_3</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_2</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_1</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_0</name>
              <description>PC[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_PULL0</name>
          <description>PC_PULL0</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PC_PULL1</name>
          <description>PC_PULL1</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PD_CFG0</name>
          <description>PD_CFG0</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD7_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D7    011: LVDS0_VNC 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D7</name>
                  <description>LCD0_D7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VNC</name>
                  <description>LVDS0_VNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD6_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D6    011: LVDS0_VPC 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D6</name>
                  <description>LCD0_D6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VPC</name>
                  <description>LVDS0_VPC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD5_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D5    011: LVDS0_VN2 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D5</name>
                  <description>LCD0_D5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VN2</name>
                  <description>LVDS0_VN2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD4_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D4    011: LVDS0_VP2 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D4</name>
                  <description>LCD0_D4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VP2</name>
                  <description>LVDS0_VP2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD3_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D3    011: LVDS0_VN1 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D3</name>
                  <description>LCD0_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VN1</name>
                  <description>LVDS0_VN1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD2_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D2    011: LVDS0_VP1 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D2</name>
                  <description>LCD0_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VP1</name>
                  <description>LVDS0_VP1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD1_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D1    011: LVDS0_VN0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D1</name>
                  <description>LCD0_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VN0</name>
                  <description>LVDS0_VN0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD0_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D0    011: LVDS0_VP0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D0</name>
                  <description>LCD0_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VP0</name>
                  <description>LVDS0_VP0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG1</name>
          <description>PD_CFG1</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD15_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D15  
011: LVDS1_VN2 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D15</name>
                  <description>LCD0_D15</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VN2</name>
                  <description>LVDS1_VN2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD14_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D14  
011: LVDS1_VP2 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D14</name>
                  <description>LCD0_D14</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VP2</name>
                  <description>LVDS1_VP2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD13_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D13  
011: LVDS1_VN1 
100: Reserved     101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D13</name>
                  <description>LCD0_D13</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VN1</name>
                  <description>LVDS1_VN1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD12_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D12  
011: LVDS1_VP1 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D12</name>
                  <description>LCD0_D12</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VP1</name>
                  <description>LVDS1_VP1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD11_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D11  
011: LVDS1_VN0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D11</name>
                  <description>LCD0_D11</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VN0</name>
                  <description>LVDS1_VN0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD10_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D10  
011: LVDS1_VP0 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D10</name>
                  <description>LCD0_D10</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VP0</name>
                  <description>LVDS1_VP0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD9_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D9    011: LVDS0_VN3 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D9</name>
                  <description>LCD0_D9</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VN3</name>
                  <description>LVDS0_VN3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD8_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D8    011: LVDS0_VP3 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D8</name>
                  <description>LCD0_D8</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS0_VP3</name>
                  <description>LVDS0_VP3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG2</name>
          <description>PD_CFG2</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD23_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD0_D23  
011: SMC_DET 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D23</name>
                  <description>LCD0_D23</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_DET</name>
                  <description>SMC_DET</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD22_SELECT</name>
              <description>000: Input    001: Output 
010: LCD0_D22    011: SMC_VPPPP 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D22</name>
                  <description>LCD0_D22</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_VPPPP</name>
                  <description>SMC_VPPPP</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD21_SELECT</name>
              <description>000: Input    001: Output 
010: LCD0_D21    011: SMC_VPPEN 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D21</name>
                  <description>LCD0_D21</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_VPPEN</name>
                  <description>SMC_VPPEN</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD20_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_D20    011: CSI1_MCLK 
100: Reserved      101: Reserved 
110: Reserved      111: Reserved</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D20</name>
                  <description>LCD0_D20</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_MCLK</name>
                  <description>CSI1_MCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD19_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_D19    011: LVDS1_VN3 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D19</name>
                  <description>LCD0_D19</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VN3</name>
                  <description>LVDS1_VN3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD18_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_D18    011: LVDS1_VP3 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D18</name>
                  <description>LCD0_D18</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VP3</name>
                  <description>LVDS1_VP3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD17_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_D17    011: LVDS1_VNC 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D17</name>
                  <description>LCD0_D17</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VNC</name>
                  <description>LVDS1_VNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD16_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_D16    011: LVDS1_VPC 
100: Reserved       101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_D16</name>
                  <description>LCD0_D16</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS1_VPC</name>
                  <description>LVDS1_VPC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG3</name>
          <description>PD_CFG3</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x7777</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>PD27_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_VSYNC      011: SMC_SDA 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_VSYNC</name>
                  <description>LCD0_VSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_SDA</name>
                  <description>SMC_SDA</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD26_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_HSYNC      011: SMC_SLK 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_HSYNC</name>
                  <description>LCD0_HSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_SLK</name>
                  <description>SMC_SLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD25_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_DE      011: SMC_RST 
100: Reserved      101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_DE</name>
                  <description>LCD0_DE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_RST</name>
                  <description>SMC_RST</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD24_SELECT</name>
              <description>000: Input     001: Output 
010: LCD0_CLK    011: SMC_VCCEN 
100: Reserved       101: Reserved 
110: Reserved      111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD0_CLK</name>
                  <description>LCD0_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_VCCEN</name>
                  <description>SMC_VCCEN</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DAT</name>
          <description>PD_DAT</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[27:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV0</name>
          <description>PD_DRV0</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_DRV_15</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_14</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_13</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_12</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_11</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_10</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_9</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_8</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_7</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_6</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_5</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_4</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_3</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_2</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_1</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_0</name>
              <description>PD[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV1</name>
          <description>PD_DRV1</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x555555</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_DRV_11</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_10</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_9</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_8</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_7</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_6</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_5</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_4</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_3</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_2</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_1</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_0</name>
              <description>PD[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL0</name>
          <description>PD_PULL0</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_PULL_15</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_14</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_13</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_12</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_11</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_10</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_9</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_8</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_7</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_6</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_5</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_4</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_3</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_2</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_1</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_0</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL1</name>
          <description>PD_PULL1</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_PULL_11</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_10</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_9</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_8</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_7</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_6</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_5</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_4</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_3</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_2</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_1</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_0</name>
              <description>PD[n] Pull-up/down Select (n = 16~27) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG0</name>
          <description>PE_CFG0</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PE7_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_D3    011: CSI0_D3 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D3</name>
                  <description>TS0_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D3</name>
                  <description>CSI0_D3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE6_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_D2    011: CSI0_D2 
100: Reserved   
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D2</name>
                  <description>TS0_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D2</name>
                  <description>CSI0_D2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE5_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_D1    011: CSI0_D1 
100: SMC_VPPEN    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D1</name>
                  <description>TS0_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D1</name>
                  <description>CSI0_D1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_VPPEN</name>
                  <description>SMC_VPPEN</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE4_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_D0    011: CSI0_D0 
100: Reserved   
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D0</name>
                  <description>TS0_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D0</name>
                  <description>CSI0_D0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE3_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_DVLD    011: CSI0_VSYNC 
100: Reserved      101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_DVLD</name>
                  <description>TS0_DVLD</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_VSYNC</name>
                  <description>CSI0_VSYNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE2_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_SYNC    011: CSI0_HSYNC 
100: Reserved      101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_SYNC</name>
                  <description>TS0_SYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_HSYNC</name>
                  <description>CSI0_HSYNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE1_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_ERR    011: CSI0_MCLK 
100: Reserved    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_ERR</name>
                  <description>TS0_ERR</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_MCLK</name>
                  <description>CSI0_MCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE0_SELECT</name>
              <description>000: Input   
001: Output 
010: TS0_CLK    011: CSI0_PCLK 
100: Reserved   
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_CLK</name>
                  <description>TS0_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_PCLK</name>
                  <description>CSI0_PCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG1</name>
          <description>PE_CFG1</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x7777</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>PE11_SELECT</name>
              <description>000: Input   001: Output 
010: TS0_D7     011: CSI0_D7 
100: Reserved   101: Reserved 
110: Reserved     111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D7</name>
                  <description>TS0_D7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D7</name>
                  <description>CSI0_D7</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE10_SELECT</name>
              <description>000: Input   001: Output 
010: TS0_D6     011: CSI0_D6 
100: Reserved   101: Reserved 
110: Reserved     111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D6</name>
                  <description>TS0_D6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D6</name>
                  <description>CSI0_D6</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE9_SELECT</name>
              <description>000: Input   001: Output 
010: TS0_D5     011: CSI0_D5 
100: Reserved   101: Reserved 
110: Reserved     111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D5</name>
                  <description>TS0_D5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D5</name>
                  <description>CSI0_D5</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE8_SELECT</name>
              <description>000: Input   001: Output 
010: TS0_D4     011: CSI0_D4 
100: Reserved     101: Reserved 
110: Reserved     111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS0_D4</name>
                  <description>TS0_D4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D4</name>
                  <description>CSI0_D4</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG2</name>
          <description>PE_CFG2</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PE_CFG3</name>
          <description>PE_CFG3</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PE_DAT</name>
          <description>PE_DAT</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PE_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_DRV0</name>
          <description>PE_DRV0</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x555555</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PE_DRV_11</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_10</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_9</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_8</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_7</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_6</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_5</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_4</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_3</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_2</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_1</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_0</name>
              <description>PE[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_DRV1</name>
          <description>PE_DRV1</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PE_PULL0</name>
          <description>PE_PULL0</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PE_PULL_11</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_10</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_9</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_8</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_7</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_6</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_5</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_4</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_3</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_2</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_1</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_0</name>
              <description>PE[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_PULL1</name>
          <description>PE_PULL1</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG0</name>
          <description>PF_CFG0</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x777777</resetValue>
          <resetMask>0x777777</resetMask>
          <fields>
            <field>
              <name>PF5_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC0_D2    011: Reserved 
100: JTAG_CK1  
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D2</name>
                  <description>SDC0_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_CK1</name>
                  <description>JTAG_CK1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF4_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC0_D3    011: Reserved 
100: UART0_RX  
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D3</name>
                  <description>SDC0_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_RX</name>
                  <description>UART0_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF3_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC0_CMD    011: Reserved 
100: JTAG_DO1  
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_CMD</name>
                  <description>SDC0_CMD</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DO1</name>
                  <description>JTAG_DO1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF2_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC0_CLK  
011: Reserved 
100: UART0_TX  
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_CLK</name>
                  <description>SDC0_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_TX</name>
                  <description>UART0_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF1_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC0_D0    011: Reserved 
100: JTAG_DI1    101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D0</name>
                  <description>SDC0_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DI1</name>
                  <description>JTAG_DI1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF0_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC0_D1    011: Reserved 
100: JTAG_MS1  
101: Reserved 
110: Reserved    111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D1</name>
                  <description>SDC0_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_MS1</name>
                  <description>JTAG_MS1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_CFG1</name>
          <description>PF_CFG1</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG2</name>
          <description>PF_CFG2</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG3</name>
          <description>PF_CFG3</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_DAT</name>
          <description>PF_DAT</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>PF_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV0</name>
          <description>PF_DRV0</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x555</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PF_DRV_5</name>
              <description>PF[n] Multi-Driving Select (n = 0~5) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_4</name>
              <description>PF[n] Multi-Driving Select (n = 0~5) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_3</name>
              <description>PF[n] Multi-Driving Select (n = 0~5) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_2</name>
              <description>PF[n] Multi-Driving Select (n = 0~5) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_1</name>
              <description>PF[n] Multi-Driving Select (n = 0~5) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_0</name>
              <description>PF[n] Multi-Driving Select (n = 0~5) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV1</name>
          <description>PF_DRV1</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_PULL0</name>
          <description>PF_PULL0</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PF_PULL_5</name>
              <description>PF[n] Pull-up/down Select (n = 0~5) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_4</name>
              <description>PF[n] Pull-up/down Select (n = 0~5) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_3</name>
              <description>PF[n] Pull-up/down Select (n = 0~5) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_2</name>
              <description>PF[n] Pull-up/down Select (n = 0~5) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_1</name>
              <description>PF[n] Pull-up/down Select (n = 0~5) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_0</name>
              <description>PF[n] Pull-up/down Select (n = 0~5) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_PULL1</name>
          <description>PF_PULL1</description>
          <addressOffset>0xD4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG0</name>
          <description>PG_CFG0</description>
          <addressOffset>0xD8</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PG7_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D3    011: CSI1_D3 
100: UART3_RX  
101: CSI0_D11 
110: Reserved    111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D3</name>
                  <description>TS1_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D3</name>
                  <description>CSI1_D3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_RX</name>
                  <description>UART3_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D11</name>
                  <description>CSI0_D11</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG6_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D2    011: CSI1_D2 
100: UART3_TX    101: CSI0_D10 
110: Reserved    111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D2</name>
                  <description>TS1_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D2</name>
                  <description>CSI1_D2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_TX</name>
                  <description>UART3_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D10</name>
                  <description>CSI0_D10</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG5_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D1    011: CSI1_D1 
100: SDC1_D3  
101: CSI0_D9 
110: Reserved  
111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D1</name>
                  <description>TS1_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D1</name>
                  <description>CSI1_D1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D3</name>
                  <description>SDC1_D3</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D9</name>
                  <description>CSI0_D9</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG4_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D0  
011: CSI1_D0 
100: SDC1_D2  
101: CSI0_D8 
110: Reserved  
111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D0</name>
                  <description>TS1_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D0</name>
                  <description>CSI1_D0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D2</name>
                  <description>SDC1_D2</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D8</name>
                  <description>CSI0_D8</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG3_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_DVLD  
011: CSI1_VSYNC 
100: SDC1_D1  
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_DVLD</name>
                  <description>TS1_DVLD</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_VSYNC</name>
                  <description>CSI1_VSYNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D1</name>
                  <description>SDC1_D1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG2_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_SYNC  
011: CSI1_HSYNC 
100: SDC1_D0  
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_SYNC</name>
                  <description>TS1_SYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_HSYNC</name>
                  <description>CSI1_HSYNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D0</name>
                  <description>SDC1_D0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG1_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_ERR    011: CSI1_MCLK 
100: SDC1_CLK  
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_ERR</name>
                  <description>TS1_ERR</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_MCLK</name>
                  <description>CSI1_MCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_CLK</name>
                  <description>SDC1_CLK</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG0_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_CLK    011: CSI1_PCLK 
100: SDC1_CMD    101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_CLK</name>
                  <description>TS1_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_PCLK</name>
                  <description>CSI1_PCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_CMD</name>
                  <description>SDC1_CMD</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG1</name>
          <description>PG_CFG1</description>
          <addressOffset>0xDC</addressOffset>
          <resetValue>0x7777</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>PG11_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D7    011: CSI1_D7 
100: UART4_RX  
101: CSI0_D15 
110: Reserved  
111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D7</name>
                  <description>TS1_D7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D7</name>
                  <description>CSI1_D7</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_RX</name>
                  <description>UART4_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D15</name>
                  <description>CSI0_D15</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG10_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D6    011: CSI1_D6 
100: UART4_TX  
101: CSI0_D14 
110: BIST_RESULT1 
111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D6</name>
                  <description>TS1_D6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D6</name>
                  <description>CSI1_D6</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_TX</name>
                  <description>UART4_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D14</name>
                  <description>CSI0_D14</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIST_RESULT1</name>
                  <description>BIST_RESULT1</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG9_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D5  
011: CSI1_D5 
100: UART3_CTS   101: CSI0_D13 
110: BIST_RESULT0 
111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D5</name>
                  <description>TS1_D5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D5</name>
                  <description>CSI1_D5</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_CTS</name>
                  <description>UART3_CTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D13</name>
                  <description>CSI0_D13</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIST_RESULT0</name>
                  <description>BIST_RESULT0</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG8_SELECT</name>
              <description>000: Input  
001: Output 
010: TS1_D4    011: CSI1_D4 
100: UART3_RTS   101: CSI0_D12 
110: Reserved  
111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS1_D4</name>
                  <description>TS1_D4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D4</name>
                  <description>CSI1_D4</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_RTS</name>
                  <description>UART3_RTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0_D12</name>
                  <description>CSI0_D12</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG2</name>
          <description>PG_CFG2</description>
          <addressOffset>0xE0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG3</name>
          <description>PG_CFG3</description>
          <addressOffset>0xE4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_DAT</name>
          <description>PG_DAT</description>
          <addressOffset>0xE8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PG_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV0</name>
          <description>PG_DRV0</description>
          <addressOffset>0xEC</addressOffset>
          <resetValue>0x555555</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PG_DRV_11</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_10</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_9</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_8</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_7</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_6</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_5</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_4</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_3</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_2</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_1</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_0</name>
              <description>PG[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV1</name>
          <description>PG_DRV1</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_PULL0</name>
          <description>PG_PULL0</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PG_PULL_11</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_10</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_9</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_8</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_7</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_6</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_5</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_4</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_3</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_2</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_1</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_0</name>
              <description>PG[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_PULL1</name>
          <description>PG_PULL1</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_CFG0</name>
          <description>PH_CFG0</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x33333333</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PH7_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D7    011: IO Disable 
100: UART5_RX  
101: Reserved 
110: EINT7   
111: CSI1_D7</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D7</name>
                  <description>LCD1_D7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART5_RX</name>
                  <description>UART5_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT7</name>
                  <description>EINT7</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D7</name>
                  <description>CSI1_D7</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH6_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D6    011: IO Disable 
100: UART5_TX  
101: Reserved 
110: EINT6   
111: CSI1_D6</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D6</name>
                  <description>LCD1_D6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART5_TX</name>
                  <description>UART5_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT6</name>
                  <description>EINT6</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D6</name>
                  <description>CSI1_D6</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH5_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D5    011: IO Disable 
100: UART4_RX  
101: Reserved 
110: EINT5   
111: CSI1_D5</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D5</name>
                  <description>LCD1_D5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_RX</name>
                  <description>UART4_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT5</name>
                  <description>EINT5</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D5</name>
                  <description>CSI1_D5</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH4_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D4    011: IO Disable 
100: UART4_TX  
101: Reserved 
110: EINT4   
111: CSI1_D4</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D4</name>
                  <description>LCD1_D4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_TX</name>
                  <description>UART4_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT4</name>
                  <description>EINT4</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D4</name>
                  <description>CSI1_D4</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH3_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D3  
011: IO Disable 
100: UART3_CTS  
101: Reserved 
110: EINT3    
111: CSI1_D3</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D3</name>
                  <description>LCD1_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_CTS</name>
                  <description>UART3_CTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT3</name>
                  <description>EINT3</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D3</name>
                  <description>CSI1_D3</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH2_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D2  
011: IO Disable 
100: UART3_RTS  
101: Reserved 
110: EINT2   
111: CSI1_D2</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D2</name>
                  <description>LCD1_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_RTS</name>
                  <description>UART3_RTS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT2</name>
                  <description>EINT2</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D2</name>
                  <description>CSI1_D2</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH1_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D1  
011: IO Disable 
100: UART3_RX  
101: Reserved 
110: EINT1   
111: CSI1_D1</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D1</name>
                  <description>LCD1_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_RX</name>
                  <description>UART3_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT1</name>
                  <description>EINT1</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D1</name>
                  <description>CSI1_D1</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH0_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D0  
011: IO Disable 
100: UART3_TX  
101: Reserved 
110: EINT0   
111: CSI1_D0</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D0</name>
                  <description>LCD1_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_TX</name>
                  <description>UART3_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT0</name>
                  <description>EINT0</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D0</name>
                  <description>CSI1_D0</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_CFG1</name>
          <description>PH_CFG1</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x330000</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PH15_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D15  
011: ETXD2 
100: KP_IN5   
101: SMC_VPPPP 
110: EINT15   
111: CSI1_D15</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D15</name>
                  <description>LCD1_D15</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD2</name>
                  <description>ETXD2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN5</name>
                  <description>KP_IN5</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_VPPPP</name>
                  <description>SMC_VPPPP</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT15</name>
                  <description>EINT15</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D15</name>
                  <description>CSI1_D15</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH14_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D14  
011: ETXD3 
100: KP_IN4   
101: SMC_VPPEN 
110: EINT14   
111: CSI1_D14</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D14</name>
                  <description>LCD1_D14</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD3</name>
                  <description>ETXD3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN4</name>
                  <description>KP_IN4</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_VPPEN</name>
                  <description>SMC_VPPEN</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT14</name>
                  <description>EINT14</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D14</name>
                  <description>CSI1_D14</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH13_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D13  
011: IO Disable 
100: PS2_SDA1  
101: SMC_RST 
110: EINT13   
111: CSI1_D13</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D13</name>
                  <description>LCD1_D13</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PS2_SDA1</name>
                  <description>PS2_SDA1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_RST</name>
                  <description>SMC_RST</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT13</name>
                  <description>EINT13</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D13</name>
                  <description>CSI1_D13</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH12_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D12  
011: IO Disable 
100: PS2_SCK1     
101: Reserved 
110: EINT12   
111: CSI1_D12</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D12</name>
                  <description>LCD1_D12</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PS2_SCK1</name>
                  <description>PS2_SCK1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT12</name>
                  <description>EINT12</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D12</name>
                  <description>CSI1_D12</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH11_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D11  
011: ERXD0 
100: KP_IN3   
101: Reserved 
110: EINT11   
111: CSI1_D11</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D11</name>
                  <description>LCD1_D11</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD0</name>
                  <description>ERXD0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN3</name>
                  <description>KP_IN3</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT11</name>
                  <description>EINT11</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D11</name>
                  <description>CSI1_D11</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH10_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D10  
011: ERXD1 
100: KP_IN2   
101: Reserved 
110: EINT10   
111: CSI1_D10</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D10</name>
                  <description>LCD1_D10</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD1</name>
                  <description>ERXD1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN2</name>
                  <description>KP_IN2</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT10</name>
                  <description>EINT10</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D10</name>
                  <description>CSI1_D10</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH9_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D9    
011: ERXD2 
100: KP_IN1   
101: Reserved 
110: EINT9   
111: CSI1_D9</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D9</name>
                  <description>LCD1_D9</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD2</name>
                  <description>ERXD2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN1</name>
                  <description>KP_IN1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT9</name>
                  <description>EINT9</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D9</name>
                  <description>CSI1_D9</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH8_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D8     
011: ERXD3 
100: KP_IN0   
101: Reserved 
110: EINT8   
111: CSI1_D8</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D8</name>
                  <description>LCD1_D8</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXD3</name>
                  <description>ERXD3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN0</name>
                  <description>KP_IN0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT8</name>
                  <description>EINT8</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D8</name>
                  <description>CSI1_D8</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_CFG2</name>
          <description>PH_CFG2</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x66550005</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PH23_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D23  
011: ETXEN 
100: KP_OUT3  
101: SDC1_CLK 
110: IO Disable  
111: CSI1_D23</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D23</name>
                  <description>LCD1_D23</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXEN</name>
                  <description>ETXEN</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT3</name>
                  <description>KP_OUT3</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_CLK</name>
                  <description>SDC1_CLK</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D23</name>
                  <description>CSI1_D23</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH22_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D22  
011: EMDIO 
100: KP_OUT2  
101: SDC1_CMD 
110: IO Disable  
111: CSI1_D22</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D22</name>
                  <description>LCD1_D22</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EMDIO</name>
                  <description>EMDIO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT2</name>
                  <description>KP_OUT2</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_CMD</name>
                  <description>SDC1_CMD</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D22</name>
                  <description>CSI1_D22</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH21_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D21  
011: EMDC 
100: Reserved    101: IO Disable 
110: EINT21   
111: CSI1_D21</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D21</name>
                  <description>LCD1_D21</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EMDC</name>
                  <description>EMDC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT21</name>
                  <description>EINT21</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D21</name>
                  <description>CSI1_D21</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH20_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D20  
011: ERXDV 
100: Reserved    101: IO Disable 
110: EINT20   
111: CSI1_D20</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D20</name>
                  <description>LCD1_D20</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXDV</name>
                  <description>ERXDV</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT20</name>
                  <description>EINT20</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D20</name>
                  <description>CSI1_D20</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH19_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D19   
011: ERXERR 
100: KP_OUT1  
101: SMC_SDA 
110: EINT19   
111: CSI1_D19</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D19</name>
                  <description>LCD1_D19</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXERR</name>
                  <description>ERXERR</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT1</name>
                  <description>KP_OUT1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_SDA</name>
                  <description>SMC_SDA</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT19</name>
                  <description>EINT19</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D19</name>
                  <description>CSI1_D19</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH18_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D18   
011: ERXCK 
100: KP_OUT0  
101: SMC_SCK 
110: EINT18   
111: CSI1_D18</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D18</name>
                  <description>LCD1_D18</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ERXCK</name>
                  <description>ERXCK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT0</name>
                  <description>KP_OUT0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_SCK</name>
                  <description>SMC_SCK</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT18</name>
                  <description>EINT18</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D18</name>
                  <description>CSI1_D18</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH17_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D17  
011: ETXD0 
100: KP_IN7    101: SMC_VCCEN 
110: EINT17   
111: CSI1_D17</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D17</name>
                  <description>LCD1_D17</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD0</name>
                  <description>ETXD0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN7</name>
                  <description>KP_IN7</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_VCCEN</name>
                  <description>SMC_VCCEN</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT17</name>
                  <description>EINT17</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D17</name>
                  <description>CSI1_D17</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH16_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_D16  
011: ETXD1 
100: KP_IN6   
101: SMC_DET 
110: EINT16   
111: CSI1_D16</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_D16</name>
                  <description>LCD1_D16</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXD1</name>
                  <description>ETXD1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_IN6</name>
                  <description>KP_IN6</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_DET</name>
                  <description>SMC_DET</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT16</name>
                  <description>EINT16</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_D16</name>
                  <description>CSI1_D16</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_CFG3</name>
          <description>PH_CFG3</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x6666</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>PH27_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_VSYNC    011: ETXERR 
100: KP_OUT7  
101: SDC1_D3 
110: IO Disable  
111: CSI1_VSYNC</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_VSYNC</name>
                  <description>LCD1_VSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXERR</name>
                  <description>ETXERR</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT7</name>
                  <description>KP_OUT7</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D3</name>
                  <description>SDC1_D3</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_VSYNC</name>
                  <description>CSI1_VSYNC</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH26_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_HSYNC    011: ECOL 
100: KP_OUT6  
101: SDC1_D2 
110: IO Disable  
111: CSI1_HSYNC</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_HSYNC</name>
                  <description>LCD1_HSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECOL</name>
                  <description>ECOL</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT6</name>
                  <description>KP_OUT6</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D2</name>
                  <description>SDC1_D2</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_HSYNC</name>
                  <description>CSI1_HSYNC</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH25_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_DE    011: ECRS 
100: KP_OUT5  
101: SDC1_D1 
110: IO Disable  
111: CSI1_FIELD</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_DE</name>
                  <description>LCD1_DE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ECRS</name>
                  <description>ECRS</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT5</name>
                  <description>KP_OUT5</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D1</name>
                  <description>SDC1_D1</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_FIELD</name>
                  <description>CSI1_FIELD</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH24_SELECT</name>
              <description>000: Input   
001: Output 
010: LCD1_CLK  
011: ETXCK 
100: KP_OUT4  
101: SDC1_D0 
110: IO Disable  
111: CSI1_PCLK</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD1_CLK</name>
                  <description>LCD1_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ETXCK</name>
                  <description>ETXCK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>KP_OUT4</name>
                  <description>KP_OUT4</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D0</name>
                  <description>SDC1_D0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1_PCLK</name>
                  <description>CSI1_PCLK</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_DAT</name>
          <description>PH_DAT</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PH_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[27:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_DRV0</name>
          <description>PH_DRV0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PH_DRV_15</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_14</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_13</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_12</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_11</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_10</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_9</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_8</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_7</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_6</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_5</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_4</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_3</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_2</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_1</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_0</name>
              <description>PH[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_DRV1</name>
          <description>PH_DRV1</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x555555</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PH_DRV_11</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_10</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_9</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_8</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_7</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_6</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_5</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_4</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_3</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_2</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_1</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_0</name>
              <description>PH[n] Multi-Driving Select (n = 16~27) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_PULL0</name>
          <description>PH_PULL0</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PH_PULL_15</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_14</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_13</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_12</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_11</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_10</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_9</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_8</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_7</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_6</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_5</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_4</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_3</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_2</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_1</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_0</name>
              <description>PH[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_PULL1</name>
          <description>PH_PULL1</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PH_PULL_11</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_10</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_9</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_8</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_7</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_6</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_5</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_4</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_3</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_2</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_1</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_0</name>
              <description>PH[n] Pull-up/down Select (n = 16~27)00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_INT_CFG0</name>
          <description>PIO Interrupt Configure Register 0</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO_INT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_INT_CFG1</name>
          <description>PIO Interrupt Configure Register 1</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO_INT_CFG_7</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_6</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_5</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_4</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_3</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_2</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_1</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_0</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_INT_CFG2</name>
          <description>PIO Interrupt Configure Register 2</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO_INT_CFG_7</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_6</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_5</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_4</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_3</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_2</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_1</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_0</name>
              <description>External INTn Mode (n = 16~23) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_INT_CFG3</name>
          <description>PIO Interrupt Configure Register 3</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO_INT_CFG_7</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_6</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_5</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_4</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_3</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_2</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_1</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CFG_0</name>
              <description>External INTn Mode(n=24~31) 0: Positive Edge 1: Negative Edge</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_INT_CTL</name>
          <description>PIO Interrupt Control Register</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO_INT_CTL_31</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_30</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_29</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_28</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_27</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_26</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_25</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_24</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_23</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_22</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_21</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_20</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_19</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_18</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_17</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_16</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_15</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_14</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_13</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_12</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_11</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_10</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_9</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_8</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_7</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_6</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_5</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_4</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_3</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_2</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_1</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CTL_0</name>
              <description>External INTn Enable (n = 0~31) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_INT_DEB</name>
          <description>PIO Interrupt Debounce Register</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32KHz 
1: HOSC 24MHz</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PIO_INT_STATUS</name>
          <description>PIO_INT_STATUS</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PIO_INT_STATUS_31</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_30</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_29</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_28</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_27</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_26</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_25</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_24</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_23</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_22</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_21</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_20</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_19</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_18</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_17</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_16</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_15</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_14</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_13</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_12</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_11</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_10</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~31) 0: No IRQ pending 1: IRQ pending Write `1` to clear it</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_CFG0</name>
          <description>PI_CFG0</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PI7_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC3_D1  
011: Reserved 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC3_D1</name>
                  <description>SDC3_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI6_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC3_D0  
011: Reserved 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC3_D0</name>
                  <description>SDC3_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI5_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC3_CLK  
011: Reserved 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC3_CLK</name>
                  <description>SDC3_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI4_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC3_CMD    011: Reserved 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC3_CMD</name>
                  <description>SDC3_CMD</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI3_SELECT</name>
              <description>000: Input   
001: Output 
010: PWM1   
011: TWI4_SDA 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM1</name>
                  <description>PWM1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI4_SDA</name>
                  <description>TWI4_SDA</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI2_SELECT</name>
              <description>000: Input   
001: Output 
010: Reserved  
011: TWI4_SCK 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI4_SCK</name>
                  <description>TWI4_SCK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI1_SELECT</name>
              <description>000: Input   
001: Output 
010: Reserved  
011: TWI3_SDA 
100: Reserved  
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI3_SDA</name>
                  <description>TWI3_SDA</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI0_SELECT</name>
              <description>000: Input   
001: Output 
010: Reserved   
011: TWI3_SCK 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI3_SCK</name>
                  <description>TWI3_SCK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_CFG1</name>
          <description>PI_CFG1</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PI15_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI1_CS1  
011: PS2_SDA1 
100: TCLKIN1   
101: Reserved 
110: EINT27   
111: IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CS1</name>
                  <description>SPI1_CS1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PS2_SDA1</name>
                  <description>PS2_SDA1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCLKIN1</name>
                  <description>TCLKIN1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT27</name>
                  <description>EINT27</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI14_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI0_CS1  
011: PS2_SCK1 
100: TCLKIN0   
101: Reserved 
110: EINT26   
111: IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_CS1</name>
                  <description>SPI0_CS1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PS2_SCK1</name>
                  <description>PS2_SCK1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCLKIN0</name>
                  <description>TCLKIN0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT26</name>
                  <description>EINT26</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI13_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI0_MISO  
011: UART6_RX 
100: CLK_OUT_B    101: Reserved 
110: EINT25   
111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_MISO</name>
                  <description>SPI0_MISO</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART6_RX</name>
                  <description>UART6_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_OUT_B</name>
                  <description>CLK_OUT_B</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT25</name>
                  <description>EINT25</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI12_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI0_MOSI  
011: UART6_TX 
100: CLK_OUT_A    101: Reserved 
110: EINT24   
111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_MOSI</name>
                  <description>SPI0_MOSI</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART6_TX</name>
                  <description>UART6_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_OUT_A</name>
                  <description>CLK_OUT_A</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT24</name>
                  <description>EINT24</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI11_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI0_CLK    011: UART5_RX 
100: Reserved   
101: Reserved 
110: EINT23   
111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_CLK</name>
                  <description>SPI0_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART5_RX</name>
                  <description>UART5_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT23</name>
                  <description>EINT23</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI10_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI0_CS0  
011: UART5_TX 
100: Reserved   
101: Reserved 
110: EINT22   
111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_CS0</name>
                  <description>SPI0_CS0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART5_TX</name>
                  <description>UART5_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT22</name>
                  <description>EINT22</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI9_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC3_D3  
011: Reserved 
100: Reserved  
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC3_D3</name>
                  <description>SDC3_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI8_SELECT</name>
              <description>000: Input   
001: Output 
010: SDC3_D2  
011: Reserved 
100: Reserved   
101: Reserved 
110: Reserved  
111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC3_D2</name>
                  <description>SDC3_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_CFG2</name>
          <description>PI_CFG2</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x777777</resetValue>
          <resetMask>0x777777</resetMask>
          <fields>
            <field>
              <name>PI21_SELECT</name>
              <description>000: Input   
001: Output 
010: PS2_SDA0  
011: UART7_RX 
100: Reserved  
101: Reserved 
110: PWM3   
111: IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PS2_SDA0</name>
                  <description>PS2_SDA0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART7_RX</name>
                  <description>UART7_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM3</name>
                  <description>PWM3</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI20_SELECT</name>
              <description>000: Input   
001: Output 
010: PS2_SCK0  
011: UART7_TX 
100: Reserved  
101: Reserved 
110: PWM2   
111: IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PS2_SCK0</name>
                  <description>PS2_SCK0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART7_TX</name>
                  <description>UART7_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM2</name>
                  <description>PWM2</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI19_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI1_MISO  
011: UART2_RX 
100: Reserved   
101: Reserved 
110: EINT31   
111: IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_MISO</name>
                  <description>SPI1_MISO</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_RX</name>
                  <description>UART2_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT31</name>
                  <description>EINT31</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI18_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI1_MOSI  
011: UART2_TX 
100: Reserved   
101: Reserved 
110: EINT30   
111: IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_MOSI</name>
                  <description>SPI1_MOSI</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_TX</name>
                  <description>UART2_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT30</name>
                  <description>EINT30</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI17_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI1_CLK    011: UART2_CTS 
100: Reserved   
101: Reserved 
110: EINT29   
111: IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CLK</name>
                  <description>SPI1_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_CTS</name>
                  <description>UART2_CTS</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT29</name>
                  <description>EINT29</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PI16_SELECT</name>
              <description>000: Input   
001: Output 
010: SPI1_CS0  
011: UART2_RTS 
100: Reserved   
101: Reserved 
110: EINT28   
111: IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CS0</name>
                  <description>SPI1_CS0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_RTS</name>
                  <description>UART2_RTS</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EINT28</name>
                  <description>EINT28</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_CFG3</name>
          <description>PI_CFG3</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PI_DAT</name>
          <description>PI_DAT</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PI_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_DRV0</name>
          <description>PI_DRV0</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PI_DRV_15</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_14</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_13</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_12</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_11</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_10</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_9</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_8</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_7</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_6</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_5</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_4</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_3</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_2</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_1</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_0</name>
              <description>PI[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_DRV1</name>
          <description>PI_DRV1</description>
          <addressOffset>0x138</addressOffset>
          <resetValue>0x555</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PI_DRV_5</name>
              <description>PI[n] Multi-Driving Select (n = 16~21) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_4</name>
              <description>PI[n] Multi-Driving Select (n = 16~21) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_3</name>
              <description>PI[n] Multi-Driving Select (n = 16~21) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_2</name>
              <description>PI[n] Multi-Driving Select (n = 16~21) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_1</name>
              <description>PI[n] Multi-Driving Select (n = 16~21) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_DRV_0</name>
              <description>PI[n] Multi-Driving Select (n = 16~21) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_PULL0</name>
          <description>PI_PULL0</description>
          <addressOffset>0x13C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PI_PULL_15</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_14</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_13</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_12</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_11</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_10</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_9</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_8</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_7</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_6</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_5</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_4</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_3</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_2</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_1</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_0</name>
              <description>PI[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PI_PULL1</name>
          <description>PI_PULL1</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PI_PULL_5</name>
              <description>PI[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_4</name>
              <description>PI[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_3</name>
              <description>PI[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_2</name>
              <description>PI[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_1</name>
              <description>PI[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PI_PULL_0</name>
              <description>PI[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PS2-0</name>
      <description>PS2-0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2A000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PS2_CKDR</name>
          <description>PS2 Module Clock Divider Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x2F4F</resetValue>
          <resetMask>0xFF7F</resetMask>
          <fields>
            <field>
              <name>SCLK_DIV</name>
              <description>Sample Clock Divider Factor (SCDF) Sample Clock is a 1MHz clock for internal timing control. SCDF = APB_CLK/SAMPLE_CLK - 1 Frequency of sample clock is constant, and so, frequency of APB_CLK must be in the range of 1MHz to 256MHz.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV</name>
              <description>PS2 Clock Divider Factor (PCDF) PCDF = SAMPLE_CLK /PS2_CLK - 1 = 1MHz/PS2_CLK - 1 The frequency of PS2_CLK must be in the range of 10KHz to 16.7KHz. Note: This factor is used in device mode only.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS2_DATA</name>
          <description>PS2 Module Data Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>PS2_DATA</name>
              <description>When write, data will be written into TXFIFO, and will be transmited on to the PS2 Bus. When read, data is read out from RXFIFO, and it is received from PS2 Bus. Note: (1) After TXFIFO is full, writing does not affect anything except the overflow flag of TXFIFO in FIFO Status Register. (2) After RXFIFO is empty, reading has no effect on anything except the underflow flag of RXFIFO in FIFO Status Register.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS2_FCTL</name>
          <description>PS2 Module FIFO Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30707</resetMask>
          <fields>
            <field>
              <name>TXFIFO_RST</name>
              <description>TXFIFO Reset After this bit is set, data in TXFIFO is flushed, and the pointer of TXFIFO is reset. Note: This bit is cleared automatically after TXFIFO is reset, and writing `0` has no effect.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFO_RST</name>
              <description>RXFIFO Reset After this bit is set, data in RXFIFO is flushed, and the pointer of RXFIFO is reset. Note: This bit is cleared automatically after RXFIFO is reset, and writing `0` has no effect.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXUF_IEN</name>
              <description>TXFIFO Underflow Interrupt Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXOF_IEN</name>
              <description>TXFIFO Overflow Interrupt Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRDY_IEN</name>
              <description>TXFIFO Ready Interrupt Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXUF_IEN</name>
              <description>RXFIFO Underflow Interrupt Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXOF_IEN</name>
              <description>RXFIFO Overflow Interrupt Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXRDY_IEN</name>
              <description>RXFIFO Ready Interrupt Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS2_FSTS</name>
          <description>PS2 Module FIFO Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x770707</resetMask>
          <fields>
            <field>
              <name>TX_LEVEL_TXFIFO</name>
              <description>TX_LEVEL TXFIFO Level The number of 8bit data, which is transmitted to PS2 Bus, in the TXFIFO. The value must be in the range of 0 to 4.</description>
              <bitRange>[22:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_LEVEL_RXFIFO</name>
              <description>RX_LEVEL RXFIFO Level The number of 8bit data, which is received from PS2 bus, in the RXFIFO. The value must be in the range of 0 to 4.</description>
              <bitRange>[18:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_UF_TXFIFO</name>
              <description>TX_UF TXFIFO Underflow When this bit is set, TXFIFO is underflow, and it means that the TXFIFO is read by transmit engine after empty. This bit is just a flag of illegal operation, which should not affect any state of TXFIFO. Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TX_OF_TXFIFO</name>
              <description>TX_OF TXFIFO Overflow When this bit is set, TXFIFO is overflow, and it means that the TXFIFO is written by CPU after TXFIFO is full. This bit is just a flag of illegal operation, which should not affect any state of TXFIFO. Note: This bit can be cleared by writing `1`.Writing `0` has no effect.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TX_RDY_TRANSMIT</name>
              <description>TX_RDY Transmit Ready 
0: TXFIFO is full 
1: TXFIFO is not full. Note: This bit can be cleared by writing `1`, writing `0` has no effect.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>TXFIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>TXFIFO is not full. Note: This bit can be cleared by writing `1`, writing `0` has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UF_RXFIFO</name>
              <description>RX_UF RXFIFO Underflow When this bit is set, RXFIFO is underflow, and it means that the RXFIFO is read by CPU after empty. This bit is just a flag of illegal operation, which should not affect any state of RXFIFO. Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_OF_RXFIFO</name>
              <description>RX_OF RXFIFO Overflow When this bit is set, RXFIFO is overflow, and it means that the RXFIFO is written by received engine after RXFIFO is full. This bit is just a flag of illegal operation, which should not affect any state of RXFIFO. Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_RDY_RECEIVE</name>
              <description>RX_RDY Receive Ready 
0: RXFIFO is empty 1:RXFIFO is not empty, there are at least one byte data, which is received from PS2 bus, in the RXFIFO. Note: This bit can be cleared by writing `1`.Writing `0` has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RXFIFO</name>
                  <description>RXFIFO is empty 1:RXFIFO is not empty, there are at least one byte data, which is received from PS2 bus, in the RXFIFO. Note: This bit can be cleared by writing `1`.Writing `0` has no effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PS2_GCTL</name>
          <description>PS2 Module Global Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>INT_FLAG</name>
              <description>Interrupt Flag The interrupt flag is set when any bit in FIFO Status and the corresponding enable bit in FIFO Control are set at the same time. This interrupt flag is also set when error flag bit in line status register ( ) is set at the same time. Note: This bit is just a status flag, it can not be cleared directly, it can be cleared by clearing the status bits in FIFO Status Register.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INT_EN</name>
              <description>Interrupt Enable 
0: The interrupt signal is always low 
1: The interrupt signal will be high when is set</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>always_low</name>
                  <description>The interrupt signal is always low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>interrupt_signal_will_be</name>
                  <description>The interrupt signal will be high when is set</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Soft Reset Setting this bit will reset transmitter and receiver of PS2 Module, and the status of transmitter and receiver will revert to the default state, but not affect any control bits in register, and data in TXFIFO/RXFIFO. This bit will be cleared by hardware after reset is completed.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FUNC_SEL</name>
              <description>Master/Device Function Select 
0: Device Function, connect to Computer 
1: Master Function, connect to PS2 Keyboard or Mouse</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Device</name>
                  <description>Device Function, connect to Computer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Master</name>
                  <description>Master Function, connect to PS2 Keyboard or Mouse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_EN</name>
              <description>PS2 Bus Enable 
0: Ignore PS2 Bus Input 
1: Response to PS2 Bus Input</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignore</name>
                  <description>Ignore PS2 Bus Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Response</name>
                  <description>Response to PS2 Bus Input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PS2_LCTL</name>
          <description>PS2 Module Line Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7010F</resetMask>
          <fields>
            <field>
              <name>NO_ACK</name>
              <description>ACK Control  
0: In Host function mode, must check ACK after transmitted data; in Device function mode, must send ACK after received data from Host. 
1: In Host function mode, don`t check ACK after transmitted data; in Device function mode, don`t send ACK after received data from Host.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>comma__must_check</name>
                  <description>In Host function mode, must check ACK after transmitted data; in Device function mode, must send ACK after received data from Host.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>comma__don`t</name>
                  <description>In Host function mode, don`t check ACK after transmitted data; in Device function mode, don`t send ACK after received data from Host.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FORCE_DATA</name>
              <description>Force Data to Low 
0: Data Line works in Normal Mode 
1: Data Line is forced to Low</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Data_Line_works</name>
                  <description>Data Line works in Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>forced</name>
                  <description>Data Line is forced to Low</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FORCE_CLK</name>
              <description>Force Clock to Low 
0: Clock Line works in Normal Mode 
1: Clock Line is forced to Low</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clock_Line_works</name>
                  <description>Clock Line works in Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>forced</name>
                  <description>Clock Line is forced to Low</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXDTO_IEN</name>
              <description>TX Data Timeout Interrupt Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STOP_IEN</name>
              <description>Stop Error Interrupt Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACKERR_IEN</name>
              <description>Acknowledge Error Interrupt Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PARERR_IEN</name>
              <description>Parity Error Interrupt Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDTO_IEN</name>
              <description>RX Data Timeout Interrupt Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS2_LSTS</name>
          <description>PS2 Module Line Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x30000</resetValue>
          <resetMask>0xF010F</resetMask>
          <fields>
            <field>
              <name>TX_BUSY</name>
              <description>Transmit Busy 
0: PS2 Module Transmit Engine is Idle. 
1: PS2 Module is currently sending data. Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PS2_Module_Transmit</name>
                  <description>PS2 Module Transmit Engine is Idle.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>currently</name>
                  <description>PS2 Module is currently sending data. Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_BUSY</name>
              <description>Receive Busy 
0: PS2 Module Receive Engine is Idle. 
1: PS2 Module is currently receiving data. Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PS2_Module_Receive</name>
                  <description>PS2 Module Receive Engine is Idle.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>currently</name>
                  <description>PS2 Module is currently receiving data. Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LS_DATA</name>
              <description>Line State of DATA. Invalid before BUS_EN set.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LS_CLK</name>
              <description>Line State of CLOCK. Invalid before BUS_EN set.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DTO</name>
              <description>Transmit Data Timeout Timers include: Tc2c&lt;15ms (Host pull low Clock to Device drive Clock) Tdata&lt;2ms (Time for packet to send) Tckl+Tckh&lt;100us(one cycle time, as host) Note: This bit can be cleared by writing `1`.Writing `0` has no effect.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>STOP_ERR</name>
              <description>Stop Bit Error 
0: No Error 
1: Stop Error This bit can be cleared by writing `1`.Writing `0` has no effect.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop Error This bit can be cleared by writing `1`.Writing `0` has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACK_ERR</name>
              <description>Acknowledge Error 
0: ACK is received after data transmitted. 
1: ACK is not received after data transmitted. Note: (1) Only for Master Function; (2) This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>received</name>
                  <description>ACK is received after data transmitted.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_received</name>
                  <description>ACK is not received after data transmitted. Note: (1) Only for Master Function; (2) This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PAR_ERR</name>
              <description>Parity Error 
0: No Error 
1: Parity Error Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity</name>
                  <description>Parity Error Note: This bit can be cleared by writing `1`. Writing `0` has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DTO</name>
              <description>Receive Data Timeout Timers include: Trsp&lt;20ms(time from the host releases the Clock line to device sends corresponding response) Tckl+Tckh&lt;100us(one cycle time, as host) Note: This bit can be cleared by writing `1`.Writing `0` has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="PS2-0">
      <name>PS2-1</name>
      <description>PS2-1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2A400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>RTP</name>
      <description>RTP</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C25000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>RTP_CDAT</name>
          <description>RTP Common Data</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x800</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TP_CDAT</name>
              <description>TP Common Data Used to adjust the tolerance of the internal ADC</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_CNT2</name>
          <description>RTP_CNT2</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x80000FFF</resetValue>
          <resetMask>0xFDFFFFFF</resetMask>
          <fields>
            <field>
              <name>RTP_SENSITIVE_ADJUST</name>
              <description>Internal Pull-up Resistor Control 
0000: least sensitive ... 
1111: most sensitive Note: Used to adjust sensitivity of pen down detection</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>least</name>
                  <description>least sensitive ...</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>most</name>
                  <description>most sensitive Note: Used to adjust sensitivity of pen down detection</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_FIFO_MODE_SELECT</name>
              <description>RTP FIFO Access Data Mode Select 
00: FIFO store X1,Y1 data for single touch no pressure mode 
01: FIFO store X1,Y1, X, Y data for dual touch no pressure mode 
10: FIFO store X1,Y1, X2,Y2 data for dual touch no pressure mode 
11: FIFO store X1,Y1, X2,Y2,Z1,Z2 data for dual touch and pressure mode Note: The ADC output data in single touch mode can store in FIFO with TP_FIFO_MODE_SELECT configured as 01,10,11. But the data X, Y is theoretically equal to X1,Y1 , and X2,Y2 is equal to 0.</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_store_X1_comma_Y1_data</name>
                  <description>FIFO store X1,Y1 data for single touch no pressure mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_store_X1_comma_Y1_comma__X</name>
                  <description>FIFO store X1,Y1, X, Y data for dual touch no pressure mode</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_store_X1_comma_Y1_comma__X2_comma_Y2_data</name>
                  <description>FIFO store X1,Y1, X2,Y2 data for dual touch no pressure mode</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_store_X1_comma_Y1_comma__X2_comma_Y2_comma_Z1_comma_Z2_data</name>
                  <description>FIFO store X1,Y1, X2,Y2,Z1,Z2 data for dual touch and pressure mode Note: The ADC output data in single touch mode can store in FIFO with TP_FIFO_MODE_SELECT configured as 01,10,11. But the data X, Y is theoretically equal to X1,Y1 , and X2,Y2 is equal to 0.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRE_MEA_EN</name>
              <description>RTP Pressure Measurement Enable Control 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRE_MEA_THRE_CNT</name>
              <description>RTP Pressure Measurement threshold Control 0x000000:least sensitive 
0xFFFFFF: most sensitive Note: Used to adjust sensitivity of touch</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>most</name>
                  <description>most sensitive Note: Used to adjust sensitivity of touch</description>
                  <value>0xFFFFFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_CTRL0</name>
          <description>RTP Control Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0xF800000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADC_FIRST_DLY</name>
              <description>ADC First Convert Delay Time(T_FCDT)setting Based on ADC First Convert Delay Mode select (Bit 23) T_FCDT = *</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_FIRST_DLY_MODE</name>
              <description>ADC First Convert Delay Mode Select  
0: CLK_IN/16 
1: CLK_IN/16*256</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK_IN_slash_16</name>
                  <description>CLK_IN/16</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_IN_slash_16_times_256</name>
                  <description>CLK_IN/16*256</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_CLK_SELECT</name>
              <description>ADC Clock Source Select 
0: HOSC(24MHz) 
1: Audio PLL</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HOSC_openingparen_24MHz_closingparen_</name>
                  <description>HOSC(24MHz)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Audio</name>
                  <description>Audio PLL</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_CLK_DIVIDER</name>
              <description>ADC Clock Divider(CLK_IN)  
00: CLK/2 
01: CLK/3 
10: CLK/6 
11: CLK/1</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CLK_slash_2</name>
                  <description>CLK/2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_slash_3</name>
                  <description>CLK/3</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_slash_6</name>
                  <description>CLK/6</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CLK_slash_1</name>
                  <description>CLK/1</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FS_DIV</name>
              <description>ADC Sample Frequency Divider  
0000: CLK_IN/2 
0001: CLK_IN/2 
0010: CLK_IN/2 .... 
1111: CLK_IN/32</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TACQ</name>
              <description>Touch panel ADC acquire time CLK_IN/(16*(N+1))</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_CTRL1</name>
          <description>RTP Control Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x101</resetValue>
          <resetMask>0xFF3FF</resetMask>
          <fields>
            <field>
              <name>STYLUS_UP_DEBOUNCE</name>
              <description>Stylus up De-bounce Time Setting 
0x00: 0 .... 0xff: 2N*(CLK_IN/16*256)</description>
              <bitRange>[19:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0 .... 0xff: 2N*(CLK_IN/16*256)</description>
                  <value>0x00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STYLUS_UP_DEBOUCE_EN</name>
              <description>Stylus up De-bounce Function Select  
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHOP_TEMP_EN</name>
              <description>Chop Temperature Calibration Enable 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TOUCH_PAN_CALI_EN</name>
              <description>Touch Panel Calibration  
1: Start calibration, it is cleared to 0 after calibration</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start calibration, it is cleared to 0 after calibration</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_DUAL_EN</name>
              <description>Touch Panel Double Point Enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_MODE_EN</name>
              <description>RTP Mode Function Enable 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_ADC_SELECT</name>
              <description>Touch Panel and ADC Select  
0: TP 
1: ADC</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TP</name>
                  <description>TP</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC</name>
                  <description>ADC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_CHAN3_SELECT</name>
              <description>Analog Input Channel 3 Select 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_CHAN2_SELECT</name>
              <description>Analog Input Channel 2 Select 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_CHAN1_SELECT</name>
              <description>Analog Input Channel 1 Select 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_CHAN0_SELECT</name>
              <description>Analog Input Channel 0 Select 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_CTRL3</name>
          <description>Median and Averaging Filter Controller Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FILTER_EN</name>
              <description>Filter Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTER_TYPE</name>
              <description>Filter Type 
00: 4/2 
01: 5/3 
10: 8/4 
11: 16/8</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_slash_2</name>
                  <description>4/2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5_slash_3</name>
                  <description>5/3</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_slash_4</name>
                  <description>8/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_slash_8</name>
                  <description>16/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_DATA</name>
          <description>RTP Data Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TP_DATA</name>
              <description>Touch Panel X ,Ydata or Auxiliary analog input data converted by the internal ADC</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_FIFOCS</name>
          <description>RTP_FIFOCS</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71F07</resetMask>
          <fields>
            <field>
              <name>TEMP_IRQ_PENDING</name>
              <description>Temperature IRQ Pending 
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_OVERRUN_PENDING</name>
              <description>RTP FIFO Over Run IRQ pending 
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_DATA_PENDING</name>
              <description>RTP FIFO Data Available pending Bit 
0: NO Pending IRQ 
1: FIFO Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_Pending</name>
                  <description>NO Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Available Pending IRQ Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RTP FIFO available Sample Word Counter</description>
              <bitRange>[12:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RTP_IDLE_FLG</name>
              <description>Touch Panel Idle Flag 
0: idle 
1: not idle</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>idle</name>
                  <description>idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_idle</name>
                  <description>not idle</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_UP_PENDING</name>
              <description>Touch Panel Last Touch (Stylus Up) IRQ Pending bit 
0: No IRQ 
1: IRQ Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_DOWN_PENDING</name>
              <description>Touch Panel First Touch (Stylus Down) IRQ Pending bit 
0: No IRQ 
1: IRQ Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_INT</name>
          <description>RTP_INT</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0xF00</resetValue>
          <resetMask>0x73F93</resetMask>
          <fields>
            <field>
              <name>TEMP_IRQ_EN</name>
              <description>Temperature IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_OVERRUN_IRQ_EN</name>
              <description>RTP FIFO Over Run IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_DATA_IRQ_EN</name>
              <description>RTP FIFO Data Available IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_DATA_XY_CHANGE</name>
              <description>RTP FIFO X,Y Data interchange Function Select 
0: Disable 
1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_FIFO_TRIG_LEVEL</name>
              <description>RTP FIFO Data Available Trigger Level Interrupt and DMA request trigger level for TP or Auxiliary ADC Trigger Level = TXTL + 1</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTP_DATA_DRQ_EN</name>
              <description>RTP FIFO Data Available DRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_FIFO_FLUSH</name>
              <description>RTP FIFO Flush Write `1` to flush TX FIFO, self clear to `0`</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTP_UP_IRQ_EN</name>
              <description>Touch Panel Last Touch (Stylus Up) IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTP_DOWN_IRQ_EN</name>
              <description>Touch Panel First Touch (Stylus Down) IRQ Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_IO_CONFIG</name>
          <description>RTP IO Configuration</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x2222</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>TY_N_SELECT</name>
              <description>TY_N Port Function Select 
000: Input      001:Output 
010: TP_YN      011:/ 
100: /        101:/ 
110: /        111:/</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TP_YN</name>
                  <description>TP_YN</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TY_P_SELECT</name>
              <description>TY_P Port Function Select 
000: Input       001:Output 
010: TP_YP      011:/ 
100: /        101:/ 
110: /        111:/</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TP_YP</name>
                  <description>TP_YP</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_N_SELECT</name>
              <description>TX_P Port Function Select 
000: Input      001:Output 
010: TP_XN      011:/ 
100: /        101:/ 
110: /        111:/</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TP_XN</name>
                  <description>TP_XN</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_P_SELECT</name>
              <description>TX_P Port Function Select 
000: Input      001:Output 
010: TP_XP      011:/ 
100: /        101:/ 
110: /        111:/</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TP_XP</name>
                  <description>TP_XP</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTP_PORT_DATA</name>
          <description>RTP IO Port Data</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>RTP_PORT_DATA</name>
              <description>RTP Port Data Value, TP_YN,TP_YP, TP_XN, TP_XP(y2/y1/x2/x1)</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SCR</name>
      <description>SCR</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2C400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SCR_CLKDIV</name>
          <description>SCR_CLKDIV</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BAUDDIV</name>
              <description>Baud Clock Divisor. This 16-bit register defines the divisor value used to generate the Baud Clock impulses from the system clock.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCCDIV</name>
              <description>Smart Card Clock Divisor. This 16-bit register defines the divisor value used to generate the Smart Card Clock from the system clock.  is the frequency of Smart Card Clock Signal. is the frequency of APB Clock.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CSR</name>
          <description>Smart Card Reader Control and Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81FF0F07</resetMask>
          <fields>
            <field>
              <name>SCDET</name>
              <description>Smart Card Detected This bit is set to `1` when the input is active at least for a debounce time.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCDETPOL</name>
              <description>Smart Card Detect Polarity This bit set polarity of signal. 
0: Low Active 
1: High Active</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low Active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROTOCOL</name>
              <description>Protocol Selection (PTLSEL)  
00: T=0. 
01: T=1, no character repeating and no guard time is used when T=1 protocol is selected. 
10: Reserved 
11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>T_equals_0</name>
                  <description>T=0.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>T_equals_1</name>
                  <description>T=1, no character repeating and no guard time is used when T=1 protocol is selected.</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ATRSTFLUSH</name>
              <description>ATR Start Flush FIFO When enabled, both FIFOs are flushed before the ATR is started.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSRXE</name>
              <description>TS Receive Enable When set to `1`, the TS character (the first ATR character) will be stored in RXFIFO during card session.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTPPOL</name>
              <description>Clock Stop Polarity The value of the output during the clock stop state.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PECRXE</name>
              <description>Parity Error Character Receive Enable Enables storage of the characters received with wrong parity in RX FIFO.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSBF</name>
              <description>MSB First When high, inverse bit ordering convention (msb to lsb) is used.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATAPOL</name>
              <description>Data Polarity When high, inverse level convention is used (A=`1`, Z=`0`).</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEACT_DEACTIVATION</name>
              <description>DEACTDeactivation. Setting of this bit initializes the deactivation sequence. When the deactivation is finished, the DEACT bit is automatically cleared.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation. Setting of this bit initializes the activation sequence. When the activation is finished, the ACT bit is automatically cleared.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WARMRST</name>
              <description>Warm Reset Command. Writing `1` to this bit initializes Warm Reset of the Smart Card. This bit is always read as `0`.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOP</name>
              <description>Clock Stop. When this bit is asserted and the smart card I/O line is in `Z` state, the SCR core stops driving of the smart card clock signal after the CLKSTOPDELAY time expires. The smart card clock is restarted immediately after the CLKSTOP signal is deasserted. New character transmission can be started after CLKSTARTDELAY time. The expiration of both times is signaled by the CLKSTOPRUN bit in the interrupt registers.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GINTEN</name>
              <description>Global Interrupt Enable. When high, IRQ output assertion is enabled.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiving Enable. When enabled the characters sent by the Smart Card are received by the UART and stored in RX FIFO. Receiving is internally disabled while a transmission is in progress.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmission Enable. When enabled the characters are read from TX FIFO and transmitted through UART to the Smart Card.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CTIM</name>
          <description>Smart Card Reader Character Time Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF00FF</resetMask>
          <fields>
            <field>
              <name>CHARLIMIT</name>
              <description>Character Limit. This field sets the maximum time between the leading edges of two consecutive characters. The value is ETUs.</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GUARDTIME</name>
              <description>Character Guard time. This field sets a delay at the end of each character transmitted from the Smart Card Reader to the Smart Card. The value is in ETUs. The parity error is besides signaled during the guard time.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FCSR</name>
          <description>Smart Card Reader FIFO Control and Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x101</resetValue>
          <resetMask>0x707</resetMask>
          <fields>
            <field>
              <name>RXFIFOFLUSH</name>
              <description>Flush RX FIFO. RX FIFO is flushed when `1` is written to this bit.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFOEMPTY</name>
              <description>RX FIFO Empty.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOFLUSH</name>
              <description>Flush TX FIFO. TX FIFO is flushed when `1` is written to this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOFULL</name>
              <description>TX FIFO Full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFO</name>
          <description>Smart Card Reader RX and TX FIFO Access Point</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFO_DATA</name>
              <description>This field provides access to the RX and TX FIFO buffers. The TX FIFO is accessed during the APB write transfer. The RX FIFO is accessed during the APB read transfer.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFOCNT</name>
          <description>SCR_FIFOCNT</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFTH</name>
              <description>RX FIFO Threshold These bits set the interrupt threshold of RX FIFO. The interrupt is asserted when the number of bytes it receives is equal to, or exceeds the threshold.</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTH</name>
              <description>TX FIFO Threshold These bits set the interrupt threshold of TX FIFO. The interrupt is asserted when the number of bytes in TX FIFO is equal to or less than the threshold.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFCNT</name>
              <description>RX FIFO Counter These bits provide the number of bytes stored in the RXFIFO.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFCNT</name>
              <description>TX FIFO Counter These bits provide the number of bytes stored in the TXFIFO.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FSM</name>
          <description>SCR_FSM</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATR_STRUCTURE_FSM</name>
              <description></description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ATR_FSM</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ACT_FSM</name>
              <description></description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCR_FSM</name>
              <description></description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTEN</name>
          <description>Smart Card Reader Interrupt Enable Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt Enable.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt Enable.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt Enable.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt Enable.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt Enable.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt Enable.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt Enable.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt Enable.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt Enable.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt Enable.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt Enable.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt Enable.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt Enable.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt Enable.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt Enable.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt Enable.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt Enable.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTST</name>
          <description>Smart Card Reader Interrupt Status Register 1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt. When enabled, this interrupt is asserted after the Smart Card deactivation sequence is complete.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt. When enabled, this interrupt is asserted after the Smart Card activation sequence is complete.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt. When enabled, this interrupt is asserted after the smart card insertion.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt. When enabled, this interrupt is asserted after the smart card removal.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt. When enabled, this interrupt is asserted after the ATR sequence is successfully completed.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt. When enabled, this interrupt is asserted if the ATR sequence fails.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt. When enabled, this interrupt is asserted if the time between two consecutive characters, transmitted between the Smart Card and the Reader in both directions, is equal the Two Characters Delay Limit described below. The C2CFULL interrupt is internally enabled from the ATR start to the deactivation or ATR restart initialization. It is recommended to use this counter to detect unresponsive Smart Cards.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt. When enabled, this interrupt is asserted in two cases: When the smart card clock is stopped. When the new character can be started after the clock restart. To distinguish between the two interrupt cases, we recommend reading the bit in register.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt. When enabled, this interrupt is asserted after the character with wrong parity was received when the number of repeated receptions exceeds RXREPEAT value or T=1 protocol is used.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt. When enabled, this interrupt is asserted after a character was received from the Smart Card.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt. When enabled, this interrupt is asserted if the number of bytes in RX FIFO is equal or exceeds the RX FIFO threshold.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt. When enabled, this interrupt is asserted if the RX FIFO is filled up.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt. When enabled, this interrupt is asserted if the Smart Card signals wrong character parity during the guard time after the character transmission was repeated TXREPEAT times or T=1 protocol is used.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt. When enabled, this interrupt is asserted after one character was transmitted to the smart card.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt. When enabled, this interrupt is asserted if the number of bytes in TX FIFO is equal or less than the TX FIFO threshold.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt. When enabled, this interrupt is asserted if the TX FIFO is emptied out.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt. When enabled, this interrupt is asserted after all bytes from TX FIFO transferred to the Smart Card.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_LTIM</name>
          <description>Smart Card Reader Line Time Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATR</name>
              <description>ATR Start Limit. This field defines the maximum time between the rising edge of the signal and the start of ATR response.  ATR Start Limit = 128* ATR* .</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RST</name>
              <description>Reset Duration. This field sets the duration of the Smart Card reset sequence. This value is same for the cold and warm reset.  Cold/Warm Reset Duration = 128* RST* .</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation/Deactivation Time. This field sets the duration of each part of the activation and deactivation sequence.  Activation/Deactivation Duration = 128* ACT * .  is the Smart Card Clock Cycle.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_PAD</name>
          <description>SCR_PAD</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DSCVPPPP</name>
              <description>Direct Smart Card Vpp Pause/Prog. It provides direct access to SCVPPPP output.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVPPEN</name>
              <description>Direct Smart Card Vpp Enable. It provides direct access to SCVPPEN output.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOADEAVPP</name>
              <description>Automatic Vpp Handling. When high, it enables automatic handling of DSVPPEN and DSVPPPP signals during activation and deactivation sequence.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVCC</name>
              <description>Direct Smart Card VCC. When DIRACCPADS=`1`, the DSCVCC bit provides direct access to SCVCC pad.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCRST</name>
              <description>Direct Smart Card Clock. When DIRACCPADS=`1`, the DSCRST bit provides direct access to SCRST pad.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCCLK</name>
              <description>Direct Smart Card Clock. When DIRACCPADS=`1`, the DSCCLK bit provides direct access to SCCLK pad.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCIO</name>
              <description>Direct Smart Card Input/Output. When DIRACCPADS=`1`, the DSCIO bit provides direct access to SCIO pad.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIRACCPADS</name>
              <description>Direct Access to Smart Card Pads. When high, it disables a serial interface functionality and enables direct control of the smart card pads using following 4 bits.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_REPEAT</name>
          <description>SCR_REPEAT</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RXRPT</name>
              <description>RX Repeat This is a 4-bit register that specifies the number of attempts to request character re-transmission after wrong parity was detected. The re-transmission of the character is requested using the error signal during the guard time.</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRPT</name>
              <description>TX Repeat This is a 4-bit register that specifies the number of attempts to re-transmit the character after the Smart Card signals the wrong parity during the guard time.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SMHC0</name>
      <description>SMHC0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0F000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SMHC_A12A_REG</name>
          <description>SMHC_A12A_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SD_A12A</name>
              <description>SD_A12A set the argument of command 12 automatically send by controller</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BLKSIZ_REG</name>
          <description>SMHC_BLKSIZ_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BLK_SZ</name>
              <description>Block size</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BUSWID_REG</name>
          <description>SMHC_BUSWID_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CARD_WID</name>
              <description>Card width 
00: 1-bit width 
01: 4-bit width 
1x: 8-bit width</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_bit</name>
                  <description>1-bit width</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_bit</name>
                  <description>4-bit width</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit width</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BYTCNT_REG</name>
          <description>SMHC_BYTCNT_REG</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BYTE_CNT</name>
              <description>Byte counter Number of bytes to be transferred It should be integer multiple of Block Size for block transfers.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CBDA_REG</name>
          <description>SMHC_CBDA_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CUR_BUFF_ADDR</name>
              <description>Host Buffer Address Pointer. Cleared on Reset. Pointer updated by IDMAC during operation. This register points to the current Data Buffer Address being accessed by the IDMAC.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CHDA_REG</name>
          <description>SMHC_CHDA_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CUR_DES_ADDR</name>
              <description>Host Descriptor Address Pointer. Cleared on reset. Pointer updated by IDMAC during operation. This register points to the start address of the current descriptor read by the IDMAC.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CLKDIV_REG</name>
          <description>SMHC_CLKDIV_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800300FF</resetMask>
          <fields>
            <field>
              <name>MASK_DATA0</name>
              <description>0: Do not mask data0 when update clock 
1: Mask data0 when update clock</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_mask</name>
                  <description>Do not mask data0 when update clock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask data0 when update clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_CTRL</name>
              <description>Card Clock Output Control 
0: Card clock always on 
1: Turn off card clock when FSM in IDLE state</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card</name>
                  <description>Card clock always on</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn off card clock when FSM in IDLE state</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_ENB</name>
              <description>Card Clock Enable 
0: Card Clock off 
1: Card Clock on</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Clock_off</name>
                  <description>Card Clock off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Clock_on</name>
                  <description>Card Clock on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_DIV</name>
              <description>Card clock divider n: Source clock is divided by 2*n.(n=0~255)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMDARG_REG</name>
          <description>SMHC_CMDARG_REG</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_ARG</name>
              <description>Command argument</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMD_REG</name>
          <description>SMHC_CMD_REG</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F20FFFF</resetMask>
          <fields>
            <field>
              <name>CMD_LOAD</name>
              <description>Start Command. This bit is automatically cleared when current command is sent. If there is no any response error happened, a command complete interrupt bit (CMD_OVER) will be set in interrupt register. You should not write any other command before this bit is cleared, or a command busy interrupt bit (CMD_BUSY) will be set in interrupt register.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_SW</name>
              <description>Voltage Switch 
0: Normal command 
1: Voltage switch command, set for CMD11 only</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Voltage</name>
                  <description>Voltage switch command, set for CMD11 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_ABT</name>
              <description>Boot Abort Setting this bit will terminate the boot operation.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXP_BOOT_ACK</name>
              <description>Expect Boot Acknowledge. When Software sets this bit along in mandatory boot operation, controller expects a boot acknowledge start pattern of 0-1-0 from the selected card.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_MOD</name>
              <description>Boot Mode 
00: Normal command 
01: Mandatory Boot operation 
10: Alternate Boot operation 
11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mandatory</name>
                  <description>Mandatory Boot operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Alternate</name>
                  <description>Alternate Boot operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRG_CLK</name>
              <description>Change Clock 
0: Normal command 
1: Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Change</name>
                  <description>Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEND_INIT_SEQ</name>
              <description>Send Initialization 
0: Normal command sending 
1: Send initialization sequence before sending this command.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send initialization sequence before sending this command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_ABT_CMD</name>
              <description>Stop Abort Command 
0: Normal command sending 
1: Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR)</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_PRE_OVER</name>
              <description>Wait Data Transfer Over 
0: Send command at once, do not care of data transferring 
1: Wait for data transfer completion before sending current command</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send command at once, do not care of data transferring</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wait</name>
                  <description>Wait for data transfer completion before sending current command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_CMD_FLAG</name>
              <description>Send Stop CMD Automatically (CMD12) 
0: Do not send stop command at end of data transfer 
1: Send stop command automatically at end of data transfer</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_send</name>
                  <description>Do not send stop command at end of data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send stop command automatically at end of data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_MODE</name>
              <description>Transfer Mode 
0: Block data transfer command 
1: Stream data transfer command</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Block_data</name>
                  <description>Block data transfer command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stream_data</name>
                  <description>Stream data transfer command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_DIR</name>
              <description>Transfer Direction 
0: Read operation 
1: Write operation</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write operation</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_TRANS</name>
              <description>Data Transfer 
0: Without data transfer 
1: With data transfer</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Without_data</name>
                  <description>Without data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>With_data</name>
                  <description>With data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHK_RESP_CRC</name>
              <description>Check Response CRC 
0: Do not check response CRC 
1: Check response CRC</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_check</name>
                  <description>Do not check response CRC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Check</name>
                  <description>Check response CRC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LONG_RESP</name>
              <description>Response Type 
0: Short Response (48 bit) 
1: Long Response (136 bit)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short Response (48 bit)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Long</name>
                  <description>Long Response (136 bit)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESP_RCV</name>
              <description>Response Receive 
0: Command without Response 
1: Command with Response</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command_without_Response</name>
                  <description>Command without Response</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Command_with_Response</name>
                  <description>Command with Response</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_IDX</name>
              <description>CMD Index Command index value</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CRC_STA_REG</name>
          <description>SMHC_CRC_STA_REG</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CRC_STA</name>
              <description>CRC Status CRC status from device in write operation  
010: Positive CRC status token 
101: Negative CRC status token</description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive</name>
                  <description>Positive CRC status token</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative</name>
                  <description>Negative CRC status token</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CSDC</name>
          <description>CRC Status Detect Control Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CRC_DET_PARA</name>
              <description>0110: HS400 speed mode 
0011: Other speed mode</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HS400</name>
                  <description>HS400 speed mode</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Other</name>
                  <description>Other speed mode</description>
                  <value>0b0011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTRL_REG</name>
          <description>SMHC_CTRL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x80001D37</resetMask>
          <fields>
            <field>
              <name>FIFO_AC_MOD</name>
              <description>FIFO Access Mode 
0: DMA bus 
1: AHB bus</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AHB</name>
                  <description>AHB bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_CMD</name>
              <description>Time unit for command line Time unit used to calculate command line time out value defined in RTO_LMT. 
0: 1 card clock period 
1: 256 card clock period</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_DAT</name>
              <description>Time unit for data line Time unit used to calculate data line time out value defined in . 
0: 1 card clock period 
1: 256 card clock period</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_MOD_SEL</name>
              <description>DDR Mode Select 
0: SDR mode 
1: DDR mode</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDR_mode</name>
                  <description>SDR mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DDR_mode</name>
                  <description>DDR mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CD_DBC_ENB</name>
              <description>Card Detect (Data[3] status) De-bounce Enable 
0: Disable de-bounce 
1: Enable de-bounce</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable de-bounce</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable de-bounce</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_ENB</name>
              <description>DMA Global Enable 
0: Disable DMA to transfer data, using AHB bus 
1: Enable DMA to transfer data</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable DMA to transfer data, using AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable DMA to transfer data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_ENB</name>
              <description>Global Interrupt Enable 
0: Disable interrupts 
1: Enable interrupts</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupts</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_RST</name>
              <description>FIFO Reset 
0: No change 
1: Reset FIFO This bit is auto-cleared after completion of reset operation.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset FIFO This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Software Reset 
0: No change 
1: Reset SD/MMC controller This bit is auto-cleared after completion of reset operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset SD/MMC controller This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA0_CRC_REG</name>
          <description>SMHC_DATA0_CRC_REG</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT0_CRC</name>
              <description>Data[0] CRC CRC in data[0] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA1_CRC_REG</name>
          <description>SMHC_DATA1_CRC_REG</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT1_CRC</name>
              <description>Data[1] CRC CRC in data[1] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA2_CRC_REG</name>
          <description>SMHC_DATA2_CRC_REG</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT2_CRC</name>
              <description>Data[2] CRC CRC in data[2] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA3_CRC_REG</name>
          <description>SMHC_DATA3_CRC_REG</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT3_CRC</name>
              <description>Data[3] CRC CRC in data[3] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA4_CRC_REG</name>
          <description>SMHC_DATA4_CRC_REG</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT4_CRC</name>
              <description>Data[4] CRC CRC in data[4] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA5_CRC_REG</name>
          <description>SMHC_DATA5_CRC_REG</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT5_CRC</name>
              <description>Data[5] CRC CRC in data[5] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA6_CRC_REG</name>
          <description>SMHC_DATA6_CRC_REG</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT6_CRC</name>
              <description>Data[6] CRC CRC in data[6] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA7_CRC_REG</name>
          <description>SMHC_DATA7_CRC_REG</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT7_CRC</name>
              <description>Data[7] CRC CRC in data[7] from device. In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data. In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DLBA_REG</name>
          <description>SMHC_DLBA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_BASE_ADDR</name>
              <description>Start of Descriptor List. Contains the base address of the First Descriptor. The LSB bit[1:0] are ignored and taken as all-zero by the IDMAC internally. Hence these LSB bits are read-only.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DMAC_REG</name>
          <description>SMHC_DMAC_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800007FF</resetMask>
          <fields>
            <field>
              <name>DES_LOAD_CTRL</name>
              <description>When DMAC fetches a descriptor, if the valid bit of a descriptor is not set, DMAC FSM will go to the suspend state. Setting this bit will make DMAC re-fetch descriptor again and do the transfer normally.</description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>PRG_BURST_LEN</name>
              <description>Programmable Burst Length. These bits indicate the maximum number of beats to be performed in one IDMAC transaction. The IDMAC will always attempt to burst as specified in PBL each time it starts a Burst transfer on the host bus. The permissible values are 1, 4, 8, 16, 32, 64, 128 and 256. This value is the mirror of MSIZE of FIFOTH register. In order to change this value, write the required value to FIFOTH register. This is an encode value as follows.  
000: 1 transfers 
001: 4 transfers 
010: 8 transfers 
011: 16 transfers Transfer unit is 32bits. PBL is a read-only value.</description>
              <bitRange>[10:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 transfers</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 transfers</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 transfers</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 transfers Transfer unit is 32bits. PBL is a read-only value.</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IDMAC_ENB</name>
              <description>IDMAC Enable. When set, the IDMAC is enabled. DE is read/write.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_SKIP_LEN</name>
              <description>Descriptor Skip Length. Specifies the number of Word to skip between two unchained descriptors. This is applicable only for dual buffer structure. Default value is set to 4 DWORD.</description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_BUST_CTRL</name>
              <description>Fixed Burst. Controls whether the AHB Master interface performs fixed burst transfers or not. When set, the AHB will use only SINGLE, INCR4, INCR8 during start of normal burst transfers. When reset, the AHB will use SINGLE and INCR burst transfer operations.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMAC_RST</name>
              <description>DMA Reset. When set, the DMA Controller resets all its internal registers. SWR is read/write. It is automatically cleared after 1 clock cycle.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DRV_DL_REG</name>
          <description>SMHC_DRV_DL_REG</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30000</resetMask>
          <fields>
            <field>
              <name>DAT_DRV_PH_SEL</name>
              <description>Data Drive Phase Select 
0: Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90  at HS400 mode. 
1: Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0  at HS400 mode.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Data drive phase offset is 90 at SDR mode, 45 at DDR mode, 90  at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Data drive phase offset is 180 at SDR mode, 90 at DDR mode, 0  at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DRV_PH_SEL</name>
              <description>Command Drive Phase Select 
0: Command drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode. 
1: Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 180 at HS400 mode.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>90</name>
                  <description>Command drive phase offset is 90 at SDR mode, 45 at DDR mode, 90 at HS400 mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>180</name>
                  <description>Command drive phase offset is 180 at SDR mode, 90 at DDR mode, 180 at HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DST_REG</name>
          <description>SMHC_DST_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF37</resetMask>
          <fields>
            <field>
              <name>DMAC_FSM_STA</name>
              <description>DMAC FSM present state.  
0000: DMA_IDLE 
0001: DMA_SUSPEND 
0010: DESC_RD 
0011: DESC_CHK 
0100: DMA_RD_REQ_WAIT 
0101: DMA_WR_REQ_WAIT 
0110: DMA_RD 
0111: DMA_WR 
1000: DESC_CLOSE This bit is read-only.</description>
              <bitRange>[16:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA_IDLE</name>
                  <description>DMA_IDLE</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_SUSPEND</name>
                  <description>DMA_SUSPEND</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DESC_RD</name>
                  <description>DESC_RD</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DESC_CHK</name>
                  <description>DESC_CHK</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_RD_REQ_WAIT</name>
                  <description>DMA_RD_REQ_WAIT</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_WR_REQ_WAIT</name>
                  <description>DMA_WR_REQ_WAIT</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_RD</name>
                  <description>DMA_RD</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_WR</name>
                  <description>DMA_WR</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DESC_CLOSE</name>
                  <description>DESC_CLOSE This bit is read-only.</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAC_ERR_STA</name>
              <description>Error Bits. Indicates the type of error that caused a Bus Error. Valid only with Fatal Bus Error bit ( ) set. This field does not generate an interrupt.  
001: Host Abort received during transmission 
010: Host Abort received during reception Others: Reserved EB is read-only.</description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Host_Abort_received_during_transmission</name>
                  <description>Host Abort received during transmission</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Host_Abort_received_during</name>
                  <description>Host Abort received during reception</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ABN_INT_SUM</name>
              <description>Abnormal Interrupt Summary.  Logical OR of the following: IDSTS[2]: Fatal Bus Interrupt IDSTS[4]: DU bit Interrupt IDSTS[5]: Card Error Summary Interrupt Only unmasked bits affect this bit. This is a sticky bit and must be cleared each time a corresponding bit that causes AIS to be set is cleared. Writing a 1 clears this bit.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NOR_INT_SUM</name>
              <description>Normal Interrupt Summary.  Logical OR of the following: IDSTS[0]: Transmit Interrupt IDSTS[1]: Receive Interrupt Only unmasked bits affect this bit. This is a sticky bit and must be cleared each time a corresponding bit that causes NIS to be set is cleared. Writing a 1 clears this bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ERR_FLAG_SUM</name>
              <description>Card Error Summary. Indicates the status of the transaction to/from the card; also present in RINTSTS.  Indicates the logical OR of the following bits: 
EBE: End Bit Error RTO: Response Timeout/Boot ACK Timeout RCRC: Response CRC SBE: Start Bit Error DRTO: Data Read Timeout/BDS timeout DCRC: Data CRC for Receive RE: Response Error Writing a 1 clears this bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DES_UNAVL_INT</name>
              <description>Descriptor Unavailable Interrupt. This bit is set when the descriptor is unavailable due to OWN bit = 0 (DES0[31] =0). Writing a 1 clears this bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FATAL_BERR_INT</name>
              <description>Fatal Bus Error Interrupt. Indicates that a Bus Error occurred ( ). When this bit is set, the DMA disables all its bus accesses. Writing a `1` clears this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_INT</name>
              <description>Receive Interrupt. Indicates the completion of data reception for a descriptor. Writing a `1` clears this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TX_INT</name>
              <description>Transmit Interrupt. Indicates that data transmission is finished for a descriptor. Writing a `1` clears this bit.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DS_DL_REG</name>
          <description>SMHC_DS_DL_REG</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>DS_DL_CAL_START</name>
              <description>Data Strobe Delay Calibration Start When set, start sample delay chain calibration.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_CAL_DONE</name>
              <description>Data Strobe Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in .</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL</name>
              <description>Data Strobe Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of SMHC`s clock nearly. This bit is valid only when is set.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL_SW_EN</name>
              <description>Sample Delay Software Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_SW</name>
              <description>Data Strobe Delay Software</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EDSD_REG</name>
          <description>SMHC_EDSD_REG</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>HS400_MD_EN</name>
              <description>HS400_MD_EN(for SMHC2 only) HS400 Mode Enable  
0: Disable 
1: Enable It is required to set to '1' before initiating any data transfer CMD in HS400 mode.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable It is required to set to '1' before initiating any data transfer CMD in HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALF_START_BIT</name>
              <description>Control for start bit detection mechanism inside mstorage based on duration of start bit.  For eMMC 4.5, start bit can be: 
0: Full cycle  
1: Less than one full cycle  Set to 1 for eMMC 4.5 and above; set to 0 for SD applications.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_cycle</name>
                  <description>Full cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Less</name>
                  <description>Less than one full cycle  Set to 1 for eMMC 4.5 and above; set to 0 for SD applications.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFOTH_REG</name>
          <description>SMHC_FIFOTH_REG</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xF0000</resetValue>
          <resetMask>0x70FF00FF</resetMask>
          <fields>
            <field>
              <name>BSIZE_OF_TRANS</name>
              <description>Burst size of multiple transaction 
000: 1 transfers 
001: 4 
010: 8 
011: 16 (only SMHC2 support) Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) Recommended: MSize = 16, TX_TL = 240, RX_TL = 15(SMHC2) MSize = 8, TX_TL = 248, RX_TL = 7(for SMHC0/1)</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 transfers</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 (only SMHC2 support) Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) Recommended: MSize = 16, TX_TL = 240, RX_TL = 15(SMHC2) MSize = 8, TX_TL = 248, RX_TL = 7(for SMHC0/1)</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TL</name>
              <description>RX Trigger Level 0x0~0xFE: RX Trigger Level is 0~254 0xFF reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 15 (means greater than 15)(SMHC2)</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TL</name>
              <description>TX Trigger Level 0x1~0xFF: TX Trigger Level is 1~255 
0x0: no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 240(means less than or equal to 240)(SMHC2)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_trigger</name>
                  <description>no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 240(means less than or equal to 240)(SMHC2)</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFO_REG</name>
          <description>SMHC_FIFO_REG</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX/RX_FIFO</name>
              <description>Data FIFO</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FUNS_REG</name>
          <description>SMHC_FUNS_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ABT_RDATA</name>
              <description>Abort Read Data 
0: Ignored 
1: After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets the bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>After</name>
                  <description>After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets the bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_WAIT</name>
              <description>Read Wait 
0: Clear SDIO read wait 
1: Assert SDIO read wait</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear SDIO read wait</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert SDIO read wait</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_SEND_MMC_IRQRESQ</name>
              <description>Host Send MMC IRQ Response 
0: Ignored 
1: Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_HWRST_REG</name>
          <description>SMHC_HWRST_REG</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HW_RST</name>
              <description>0: Reset 
1: Active mode These bits cause the cards to enter pre-idle state, which requires them to be re-initialized.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_mode</name>
                  <description>Active mode These bits cause the cards to enter pre-idle state, which requires them to be re-initialized.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDIE_REG</name>
          <description>SMHC_IDIE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x337</resetMask>
          <fields>
            <field>
              <name>ABN_INT_ENB</name>
              <description>Abnormal Interrupt Summary Enable. When set, an abnormal interrupt is enabled.  This bit enables the following bits: IDINTEN[2]: Fatal Bus Error Interrupt IDINTEN[4]: DU Interrupt IDINTEN[5]: Card Error Summary Interrupt</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOR_INT_ENB</name>
              <description>Normal Interrupt Summary Enable. When set, a normal interrupt is enabled. When reset, a normal interrupt is disabled.  This bit enables the following bits: IDINTEN[0]: Transmit Interrupt IDINTEN[1]: Receive Interrupt</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_SUM_INT_ENB</name>
              <description>Card Error summary Interrupt Enable. When set, it enables the Card Interrupt summary.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_UNAVL_INT_ENB</name>
              <description>Descriptor Unavailable Interrupt. When set along with Abnormal Interrupt Summary Enable, the DU interrupt is enabled.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FERR_INT_ENB</name>
              <description>Fatal Bus Error Enable. When set with Abnormal Interrupt Summary Enable, the Fatal Bus Error Interrupt is enabled. When reset, Fatal Bus Error Enable Interrupt is disabled.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_INT_ENB</name>
              <description>Receive Interrupt Enable. When set with Normal Interrupt Summary Enable, Receive Interrupt is enabled. When reset, Receive Interrupt is disabled.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT_ENB</name>
              <description>Transmit Interrupt Enable. When set with Normal Interrupt Summary Enable, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_INTMASK_REG</name>
          <description>SMHC_INTMASK_REG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL_INT_EN</name>
              <description>Card Removed Interrupt Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_INSERT_INT_EN</name>
              <description>Card Inserted Interrupt Enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INT_EN</name>
              <description>SDIO Interrupt Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEE_INT_EN</name>
              <description>Data End-bit Error Interrupt Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACD_INT_EN</name>
              <description>Auto Command Done Interrupt Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSE_BC_INT_EN</name>
              <description>Data Start Error Interrupt Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_IW_INT_EN</name>
              <description>Command Busy and Illegal Write Interrupt Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FU_FO_INT_EN</name>
              <description>FIFO Underrun/Overflow Interrupt Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSTO_VSD_INT_EN</name>
              <description>Data Starvation Timeout/V1.8 Switch Done Interrupt Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTO_BDS_INT_EN</name>
              <description>Data Timeout/Boot Data Start Interrupt Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_BACK_INT_EN</name>
              <description>Response Timeout/Boot ACK Received Interrupt Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE_INT_EN</name>
              <description>Data CRC Error Interrupt Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCE_INT_EN</name>
              <description>Response CRC Error Interrupt Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRR_INT_EN</name>
              <description>Data Receive Request Interrupt Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR_INT_EN</name>
              <description>Data Transmit Request Interrupt Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTC_INT_EN</name>
              <description>Data Transfer Complete Interrupt Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC_INT_EN</name>
              <description>Command Complete Interrupt Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_INT_EN</name>
              <description>Response Error Interrupt Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_MINTSTS_REG</name>
          <description>SMHC_MINTSTS_REG</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>M_CARD_REMOVAL_INT</name>
              <description>Card Removed</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CARD_INSERT</name>
              <description>Card Inserted</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_SDIO_INT</name>
              <description>SDIO Interrupt</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DEE_INT</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken or received CRC status taken is negative.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACD_INT</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSE_BC_INT</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CB_IW_INT</name>
              <description>Command Busy and Illegal Write</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_FU_FO_INT</name>
              <description>FIFO Underrun/Overflow</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSTO_VSD_INT</name>
              <description>Data Starvation Timeout/V1.8 Switch Done</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTO_BDS_INT</name>
              <description>Data Timeout/Boot Data Start</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RTO_BACK_INT</name>
              <description>Response Timeout/Boot ACK Received</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DCE_INT</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RCE_INT</name>
              <description>Response CRC Error</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DRR_INT</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTR_INT</name>
              <description>Data Transmit Request When set, it means that there is enough space in FIFO during transmitting data.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTC_INT</name>
              <description>Data Transfer Complete</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CC_INT</name>
              <description>Command Complete</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RE_INT</name>
              <description>Response Error (no response or response CRC error) When set, Transmit Bit error or End Bit error or CMD Index error may occur.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_NTSR_REG</name>
          <description>SMHC_NTSR_REG</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x81710000</resetValue>
          <resetMask>0x81710330</resetMask>
          <fields>
            <field>
              <name>MODE_SELEC</name>
              <description>0: Old mode of Sample/Output Timing 
1: New mode of Sample/Output Timing</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Old_mode</name>
                  <description>Old mode of Sample/Output Timing</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>New_mode</name>
                  <description>New mode of Sample/Output Timing</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DAT_RX_PHASE_CLR</name>
              <description>During update clock , command and data rx phase clear 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_CRC_STATUS_RX_PHASE_CLR</name>
              <description>Before receive CRC status, data rx phase clear 
0: Disable 
1: Enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_TRANS_RX_PHASE_CLR</name>
              <description>Before transfer data , data rx phase clear 
0: Disable 
1: Enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_RECV_RX_PHASE_CLR</name>
              <description>Before receive data , data rx phase clear 
0: Disable 
1: Enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_SEND_RX_PHASE_CLR</name>
              <description>Before send command, command rx phase clear 
0: Disable 
1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_SAMPLE_TIMING_PHASE_RX</name>
              <description>DAT_SAMPLE_TIMING_PHASE(RX) 
00: Sample timing phase offset 90 
01: Sample timing phase offset 180 
10: Sample timing phase offset 270 
11: Ignore</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD_SAMPLE_TIMING_PHASE_RX</name>
              <description>CMD_SAMPLE_TIMING_PHASE(RX) 
00: Sample timing phase offset 90 
01: Sample timing phase offset 180 
10: Sample timing phase offset 270 
11: Ignore</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP0_REG</name>
          <description>SMHC_RESP0_REG</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP0</name>
              <description>Response 0 Bit[31:0] of response</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP1_REG</name>
          <description>SMHC_RESP1_REG</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP1</name>
              <description>Response 1 Bit[63:31] of response</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP2_REG</name>
          <description>SMHC_RESP2_REG</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP2</name>
              <description>Response 2 Bit[95:64] of response</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP3_REG</name>
          <description>SMHC_RESP3_REG</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP3</name>
              <description>Response 3 Bit[127:96] of response</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP_CRC_REG</name>
          <description>SMHC_RESP_CRC_REG</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RESP_CRC</name>
              <description>Response CRC Response CRC from device.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RINTSTS_REG</name>
          <description>SMHC_RINTSTS_REG</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL</name>
              <description>Card Removed This is write-1-to-clear bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CARD_INSERT</name>
              <description>Card Inserted This is write-1-to-clear bit.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SDIOI_INT</name>
              <description>SDIO Interrupt This is write-1-to-clear bit.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DEE</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken. This is write-1-to-clear bit.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ACD</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. This is write-1-to-clear bit.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSE_BC</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. This is write-1-to-clear bit.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CB_IW</name>
              <description>Command Busy and Illegal Write This is write-1-to-clear bit.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FU_FO</name>
              <description>FIFO Underrun/Overflow This is write-1-to-clear bit.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSTO_VSD</name>
              <description>Data Starvation Timeout/V1.8 Switch Done This is write-1-to-clear bit.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTO_BDS</name>
              <description>Data Timeout/Boot Data Start This is write-1-to-clear bit.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RTO_BACK</name>
              <description>Response Timeout/Boot ACK Received This is write-1-to-clear bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DCE</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. This is write-1-to-clear bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RCE</name>
              <description>Response CRC Error This is write-1-to-clear bit.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DRR</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. This is write-1-to-clear bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Transmit Request When set, it means that there is enough space in FIFO during transmitting data. This is write-1-to-clear bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTC</name>
              <description>Data Transfer Complete This is write-1-to-clear bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CC</name>
              <description>Command Complete This is write-1-to-clear bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RE</name>
              <description>Response Error (no response or response CRC error) When set, Transmit Bit error or End Bit error or CMD Index error may occur. This is write-1-to-clear bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_SAMP_DL_REG</name>
          <description>SMHC_SAMP_DL_REG</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>SAMP_DL_CAL_START</name>
              <description>Sample Delay Calibration Start When set, start sample delay chain calibration.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_CAL_DONE</name>
              <description>Sample Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in .</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL</name>
              <description>Sample Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of card clock nearly. Generally, it is necessary to do drive delay calibration when card clock is changed. This bit is valid only when is set.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL_SW_EN</name>
              <description>Sample Delay Software Enable When set, enable sample delay specified at .</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_SW</name>
              <description>Sample Delay Software The relative delay between clock line and command line, data lines. It can be determined according to the value of , the cycle of card clock and device`s input timing requirement.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_STATUS_REG</name>
          <description>SMHC_STATUS_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x83FFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_REQ</name>
              <description>DMA Request DMA request signal state</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_LEVEL</name>
              <description>FIFO Level Number of filled locations in FIFO</description>
              <bitRange>[25:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RESP_IDX</name>
              <description>Response Index Index of previous response, including any auto-stop sent by controller</description>
              <bitRange>[16:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSM_BUSY</name>
              <description>Data FSM Busy Data transmit or receive state-machine is busy</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CARD_BUSY</name>
              <description>Card data busy Inverted version of DATA[0] 
0: Card data not busy 
1: Card data busy</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_data_not_busy</name>
                  <description>Card data not busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_data_busy</name>
                  <description>Card data busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_PRESENT</name>
              <description>Data[3] status level of DATA[3]; checks whether card is present 
0: Card not present 
1: Card present</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_not_present</name>
                  <description>Card not present</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_present</name>
                  <description>Card present</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_STA</name>
              <description>Command FSM states 
0000: Idle 
0001: Send init sequence 
0010: TX CMD start bit 
0011: TX CMD TX bit 
0100: TX CMD index + argument 
0101: TX CMD CRC7 
0110: TX CMD end bit 
0111: RX response start bit 
1000: RX response IRQ response 
1001: RX response TX bit 
1010: RX response CMD index 
1011: RX response data 
1100: RX response CRC7 
1101: RX response end bit 
1110: CMD path wait NCC 
1111: Wait; CMD-to-response turnaround</description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO full  
0: FIFO not full 
1: FIFO full</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_full</name>
                  <description>FIFO full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO Empty 
0: FIFO not empty 
1: FIFO empty</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_TX_LEVEL</name>
              <description>FIFO TX Water Level flag 
0: FIFO didn`t reach transmit trigger level 
1: FIFO reached transmit trigger level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach transmit trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached transmit trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_RX_LEVEL</name>
              <description>FIFO TX Water Level flag 
0: FIFO didn`t reach receive trigger level 
1: FIFO reached receive trigger level</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach receive trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached receive trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC_REG0</name>
          <description>SMHC_TBC_REG0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC0</name>
              <description>Transferred Count 0 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC_REG1</name>
          <description>SMHC_TBC_REG1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC1</name>
              <description>Transferred Count 1 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_THLD_REG</name>
          <description>SMHC_THLD_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0007</resetMask>
          <fields>
            <field>
              <name>CARD_RD_THLD</name>
              <description>Card Read Threshold Size</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_WR_THLD_ENB</name>
              <description>(only for SMHC2 ) Card Write Threshold Enable(HS400)  
0: Card Write Threshold Disable 
1: Card Write Threshold Enabled Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Write_Threshold_Disable</name>
                  <description>Card Write Threshold Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Write_Threshold_Enabled</name>
                  <description>Card Write Threshold Enabled Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCIG</name>
              <description>(only for SMHC2) Busy Clear Interrupt Generation  
0: Busy Clear Interrupt Disabled 
1: Busy Clear Interrupt Enabled The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Disabled</name>
                  <description>Busy Clear Interrupt Disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Enabled</name>
                  <description>Busy Clear Interrupt Enabled The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_RD_THLD_ENB</name>
              <description>Card Read Threshold Enable 
0: Card Read Threshold Disable 
1: Card Read Threshold Enable Host controller initiates Read Transfer only if amount of space is available in receive FIFO</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Disable</name>
                  <description>Card Read Threshold Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Enable</name>
                  <description>Card Read Threshold Enable Host controller initiates Read Transfer only if amount of space is available in receive FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TMOUT_REG</name>
          <description>SMHC_TMOUT_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xFFFFFF40</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DTO_LMT</name>
              <description>Data Timeout Limit</description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_LMT</name>
              <description>Response Timeout Limit</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SMHC0">
      <name>SMHC1</name>
      <description>SMHC1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C10000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="SMHC0">
      <name>SMHC2</name>
      <description>SMHC2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C11000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="SMHC0">
      <name>SMHC3</name>
      <description>SMHC3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C12000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>SPI0</name>
      <description>SPI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C05000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SPI_BC</name>
          <description>SPI_BC</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBC</name>
              <description>Master Burst Counter In master mode, this field specifies the total burst number. 
0: 0 burst 
1: 1 burst ... N: N bursts</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_BCC</name>
          <description>SPI Burst Control Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>DRM</name>
              <description>Master Dual Mode RX Enable 
0: RX use single-bit mode 
1: RX use dual mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_use_single_bit</name>
                  <description>RX use single-bit mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_use_dual</name>
                  <description>RX use dual mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBC</name>
              <description>Master Dummy Burst Counter In master mode, this field specifies the burst number that should be sent before receive in dual SPI mode. The device does not care the data. 
0: 0 burst 
1: 1 burst ... N: N bursts</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STC</name>
              <description>Master Single Mode Transmit Counter In master mode, this field specifies the burst number that should be sent in single mode before automatically sending dummy burst. This is the first transmit counter in all bursts. 
0: 0 burst 
1: 1 burst ... N: N bursts</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_CCTL</name>
          <description>SPI_CCTL</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>DRS</name>
              <description>Divide Rate Select (Master Mode Only) 
0: Select Clock Divide Rate 1 
1: Select Clock Divide Rate 2</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_1</name>
                  <description>Select Clock Divide Rate 1</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_2</name>
                  <description>Select Clock Divide Rate 2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CDR1</name>
              <description>Clock Divide Rate 1 (Master Mode Only) The SPI_SCLK is determined according to the following equation: SPI_CLK = Source_CLK / 2^n.</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CDR2</name>
              <description>Clock Divide Rate 2 (Master Mode Only) The SPI_SCLK is determined according to the following equation: SPI_CLK = Source_CLK / (2*(n + 1)).</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FCR</name>
          <description>SPI FIFO Control Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x400001</resetValue>
          <resetMask>0xC1FFC1FF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_RST</name>
              <description>TX FIFO Reset Writing `1` to this bit will reset the control portion of the TX FIFO and automatically clear to `0` when completing reset operation, writing to `0` has no effect.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TF_TEST</name>
              <description>TX Test Mode Enable 
0: Disable 
1: Enable In normal mode, TX FIFO can only be read by SPI controller, writing `1` to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO. and can not be set at the same time.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable In normal mode, TX FIFO can only be read by SPI controller, writing `1` to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO. and can not be set at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_DRQ_EN</name>
              <description>TX FIFO DMA Request Enable 
0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TRIG_LEVEL</name>
              <description>TX FIFO Empty Request Trigger Level</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_RST</name>
              <description>RXFIFO Reset Writing `1` to this bit will reset the control portion of the receiver FIFO, and auto clear to `0` when completing reset operation, writing `0` to this bit has no effect.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_TEST</name>
              <description>RX Test Mode Enable 
0: Disable 
1: Enable In normal mode, RX FIFO can only be written by SPI controller, write `1` to this bit will switch RX FIFO read and write function to AHB bus. This bit is used to test the RX FIFO. and can not be set at the same time.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable In normal mode, RX FIFO can only be written by SPI controller, write `1` to this bit will switch RX FIFO read and write function to AHB bus. This bit is used to test the RX FIFO. and can not be set at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_DRQ_EN</name>
              <description>RX FIFO DMA Request Enable 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TRIG_LEVEL</name>
              <description>RX FIFO Ready Request Trigger Level</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FSR</name>
          <description>SPI FIFO Status Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0FFF0FF</resetMask>
          <fields>
            <field>
              <name>TB_WR</name>
              <description>TX FIFO Write Buffer Write Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TB_CNT</name>
              <description>TX FIFO Write Buffer Counter These bits indicate the number of words in TX FIFO Write Buffer</description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TF_CNT</name>
              <description>TX FIFO Counter These bits indicate the number of words in TX FIFO. 
00000000: 0 byte in TX FIFO 
00000001: 1 byte in TX FIFO ... 
01000000: 64 bytes in TX FIFO Others:Reserved</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0 byte in TX FIFO</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 byte in TX FIFO ...</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 bytes in TX FIFO Others:Reserved</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RB_WR</name>
              <description>RX FIFO Read Buffer Write Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RB_CNT</name>
              <description>RX FIFO Read Buffer Counter These bits indicate the number of words in RX FIFO Read Buffer</description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RF_CNT</name>
              <description>RX FIFO Counter These bits indicate the number of words in RX FIFO 
00000000: 0 byte in RX FIFO 
00000001: 1 byte in RX FIFO ... 01000000:64 bytes in RX FIFO Others:Reserved</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0 byte in RX FIFO</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 byte in RX FIFO ... 01000000:64 bytes in RX FIFO Others:Reserved</description>
                  <value>0b00000001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_GCR</name>
          <description>SPI Global Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x80000083</resetMask>
          <fields>
            <field>
              <name>SRST</name>
              <description>Soft reset Writing `1` to this bit will clear the SPI controller, and automatically clear to `0` when reset operation completes. Writing `0` has no effect.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TP_EN</name>
              <description>Transmit Pause Enable In master mode, it is used to control transmit state machine to stop smart burst sending when RX FIFO is full. 0 : Normal operation, ignore RXFIFO status 1 : Stop transmit data when RXFIFO full Note: Can not be written when XCH=1</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>SPI Function Mode Select 
0: Slave Mode 
1: Master Mode Note: Can not be written when XCH=1</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Slave</name>
                  <description>Slave Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Master</name>
                  <description>Master Mode Note: Can not be written when XCH=1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN</name>
              <description>SPI Module Enable Control 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_ICR</name>
          <description>SPI_ICR</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F77</resetMask>
          <fields>
            <field>
              <name>SS_INT_EN</name>
              <description>SSI Interrupt Enable Chip Select Signal (SSx) from valid state to invalid state 
0: Disable 
1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TC_INT_EN</name>
              <description>Transfer Completed Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDR_INT_EN</name>
              <description>TXFIFO Underrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF_INT_EN</name>
              <description>TX FIFO Overflow Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_UDR_INT_EN</name>
              <description>RXFIFO Underrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_OVF_INT_EN</name>
              <description>RX FIFO Overflow Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_FUL_INT_EN</name>
              <description>TX FIFO Full Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP_INT_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_ERQ_INT_EN</name>
              <description>TX FIFO Empty Request Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_FUL_INT_EN</name>
              <description>RX FIFO Full Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP_INT_EN</name>
              <description>RX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_RDY_INT_EN</name>
              <description>RX FIFO Ready Request Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INT_STA</name>
          <description>SPI_INT_STA</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x32</resetValue>
          <resetMask>0x3F77</resetMask>
          <fields>
            <field>
              <name>SSI</name>
              <description>SS Invalid Interrupt When SSI is 1, it indicates that SS has changed from valid state to invalid state. Writing 1 to this bit clears it.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TC</name>
              <description>Transfer Completed In master mode, it indicates that all bursts specified by has been exchanged. In other condition, When set, this bit indicates that all the data in TXFIFO has been loaded in the shift register, and the shift register has shifted out all the bits. Writing 1 to this bit clears it.  
0: Busy 
1: Transfer Completed</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer Completed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDF</name>
              <description>TXFIFO Underrun This bit is set when if the TXFIFO is underrun. Writing 1 to this bit clears it. 
0: TXFIFO is not underrun 
1: TXFIFO is underrun</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_underrun</name>
                  <description>TXFIFO is not underrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underrun</name>
                  <description>TXFIFO is underrun</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF</name>
              <description>TXFIFO Overflow This bit is set when if the TXFIFO is overflow. Writing 1 to this bit clears it. 
0: TXFIFO is not overflow 
1: TXFIFO is overflowed</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>TXFIFO is not overflow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflowed</name>
                  <description>TXFIFO is overflowed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UDF</name>
              <description>RXFIFO Underrun When set, this bit indicates that RXFIFO has underrun. Writing 1 to this bit clears it.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_OVF</name>
              <description>RXFIFO Overflow When set, this bit indicates that RXFIFO has overflowed. Writing 1 to this bit clears it. 
0: RXFIFO is available. 
1: RXFIFO has overflowed.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>RXFIFO is available.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_has</name>
                  <description>RXFIFO has overflowed.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FULL</name>
              <description>TXFIFO Full This bit is set when if the TXFIFO is full . Writing 1 to this bit clears it. 
0: TXFIFO is not Full 
1: TXFIFO is Full</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_Full</name>
                  <description>TXFIFO is not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>TXFIFO is Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP</name>
              <description>TXFIFO Empty This bit is set if the TXFIFO is empty. Writing 1 to this bit clears it. 
0: TXFIFO contains one or more words. 
1: TXFIFO is empty</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_contains</name>
                  <description>TXFIFO contains one or more words.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>TXFIFO is empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_READY</name>
              <description>TXFIFO Ready 
0: TX_WL &gt; TX_TRIG_LEVEL 
1: TX_WL &lt;= TX_TRIG_LEVEL This bit is set any time if TX_WL &lt;= TX_TRIG_LEVEL. Writing `1` to this bit clears it. Where TX_WL is the water level of RXFIFO.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_WL__gt_</name>
                  <description>TX_WL &gt; TX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_WL__lt__equals_</name>
                  <description>TX_WL &lt;= TX_TRIG_LEVEL This bit is set any time if TX_WL &lt;= TX_TRIG_LEVEL. Writing `1` to this bit clears it. Where TX_WL is the water level of RXFIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FULL</name>
              <description>RXFIFO Full This bit is set when the RXFIFO is full . Writing 1 to this bit clears it. 
0: Not Full 
1: Full</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_Full</name>
                  <description>Not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP</name>
              <description>RXFIFO Empty This bit is set when the RXFIFO is empty . Writing 1 to this bit clears it. 
0: Not empty 
1: empty</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_empty</name>
                  <description>Not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RDY</name>
              <description>RXFIFO Ready 
0: RX_WL &lt; RX_TRIG_LEVEL 
1: RX_WL &gt;= RX_TRIG_LEVEL This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing `1` to this bit clears it. Where RX_WL is the water level of RXFIFO.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_WL__lt_</name>
                  <description>RX_WL &lt; RX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_WL__gt__equals_</name>
                  <description>RX_WL &gt;= RX_TRIG_LEVEL This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing `1` to this bit clears it. Where RX_WL is the water level of RXFIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_NDMA_MODE_CTL</name>
          <description>SPI Normal DMA Mode Control Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xA5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>NDMA_MODE_CTL</name>
              <description>0xEA:NDMA handshake mode Note: NDMA wait mode don't care this value.0xA5 can be used in handshake mode, but 0xEA is better.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_RXD</name>
          <description>SPI RX Data Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RDATA</name>
              <description>Receive Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are data in RXFIFO, the top word is returned and the RXFIFO depth is decreased by 1. In half-word accessing method, two SPI bursts are returned and the RXFIFO depth is decrease by 2. In word accessing method, the four SPI bursts are returned and the RXFIFO depth is decreased by 4. Note: This address is read-only if is `0`, and if is set to `1`, this address is readable and writable to test the RX FIFO through the AHB bus.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TC</name>
          <description>SPI_TC</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MWTC</name>
              <description>Master Write Transmit Counter In master mode, this field specifies the burst number that should be sent to TXFIFO before automatically sending dummy burst. For saving bus bandwidth, the dummy burst (all zero bits or all one bits) is sent by SPI Controller automatically. 
0: 0 burst 
1: 1 burst ... N: N bursts</description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TCR</name>
          <description>SPI Transfer Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x87</resetValue>
          <resetMask>0x80007FFF</resetMask>
          <fields>
            <field>
              <name>XCH</name>
              <description>Exchange Burst In master mode it is used to start SPI burst 
0: Idle 
1: Initiates exchange. Writing `1` to this bit will start the SPI burst, and will automatically clear after finishing the bursts transfer specified by . Writing `1` to will also clear this bit. Writing `0` to this bit has no effect.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Initiates</name>
                  <description>Initiates exchange. Writing `1` to this bit will start the SPI burst, and will automatically clear after finishing the bursts transfer specified by . Writing `1` to will also clear this bit. Writing `0` to this bit has no effect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDDM</name>
              <description>Sending Data Delay Mode 
0: Normal sending 
1: Delay sending Set the bit to"1" to make the data that should be sent with a delay of half cycle of SPI_CLK in dual IO mode for SPI mode 0.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay sending Set the bit to"1" to make the data that should be sent with a delay of half cycle of SPI_CLK in dual IO mode for SPI mode 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDM</name>
              <description>Master Sample Data Mode 
0: Delay Sample Mode 
1: Normal Sample Mode In Normal Sample Mode, SPI master samples the data at the correct edge for each SPI mode; In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the correct edge defined in respective SPI mode.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay Sample Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Sample Mode In Normal Sample Mode, SPI master samples the data at the correct edge for each SPI mode; In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the correct edge defined in respective SPI mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FBS</name>
              <description>First Transmit Bit Select 
0: MSB first 
1: LSB first</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDC</name>
              <description>Master Sample Data Control Set this bit to `1` to make the internal read sample point with a delay of half cycle of SPI_CLK. It is used in high speed read operation to reduce the error caused by the time delay of SPI_CLK propagating between master and slave. 
0: Normal operation, do not delay internal read sample point 
1: Delay internal read sample point</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation, do not delay internal read sample point</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay internal read sample point</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPSM</name>
              <description>Rapids mode select Select Rapids mode for high speed write. 
0: Normal write mode 
1: Rapids write mode</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal write mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Rapids</name>
                  <description>Rapids write mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDB</name>
              <description>Dummy Burst Type 
0: The bit value of dummy SPI burst is zero 
1: The bit value of dummy SPI burst is one</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>zero</name>
                  <description>The bit value of dummy SPI burst is zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>one</name>
                  <description>The bit value of dummy SPI burst is one</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DHB</name>
              <description>Discard Hash Burst In master mode it controls whether discarding unused SPI bursts. 
0: Receiving all SPI bursts in BC period 
1: Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiving</name>
                  <description>Receiving all SPI bursts in BC period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Discard</name>
                  <description>Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_LEVEL</name>
              <description>When control SS signal manually ( ==1), set this bit to `1` or `0` to control the level of SS signal. 
0: Set SS to low 
1: Set SS to high</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set_SS_to_low</name>
                  <description>Set SS to low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Set_SS_to_high</name>
                  <description>Set SS to high</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_OWNER</name>
              <description>SS Output Owner Select Usually, controller sends SS signal automatically with data together. When this bit is set to 1, software must manually write to 1 or 0 to control the level of SS signal. 
0: SPI controller 
1: Software</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI</name>
                  <description>SPI controller</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Software</name>
                  <description>Software</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_SEL</name>
              <description>SPI Chip Select Select one of four external SPI Master/Slave Devices 
00: SPI_SS0 will be asserted 
01: SPI_SS1 will be asserted 
10: SPI_SS2 will be asserted 
11: SPI_SS3 will be asserted</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SS0</name>
                  <description>SPI_SS0 will be asserted</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS1</name>
                  <description>SPI_SS1 will be asserted</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS2</name>
                  <description>SPI_SS2 will be asserted</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS3</name>
                  <description>SPI_SS3 will be asserted</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSCTL</name>
              <description>In master mode, this bit selects the output wave form for the SPI_SSx signal. Only valid when = 0. 
0: SPI_SSx remains asserted between SPI bursts 
1: Negate SPI_SSx between SPI bursts</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SSx</name>
                  <description>SPI_SSx remains asserted between SPI bursts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negate</name>
                  <description>Negate SPI_SSx between SPI bursts</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL</name>
              <description>SPI Chip Select Signal Polarity Control 
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle)</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPOL</name>
              <description>SPI Clock Polarity Control 
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle)</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPHA</name>
              <description>SPI Clock/Data Phase Control 
0: Phase 0 (Leading edge for sample data) 
1: Phase 1 (Leading edge for setup data)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Phase_0</name>
                  <description>Phase 0 (Leading edge for sample data)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Phase_1</name>
                  <description>Phase 1 (Leading edge for setup data)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXD</name>
          <description>SPI TX Data Register</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TDATA</name>
              <description>Transmit Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are rooms in RXFIFO, one burst data is written to RXFIFO and the depth is increased by 1. In half-word accessing method, two SPI burst data are written and the TXFIFO depth is increase by 2. In word accessing method, four SPI burst data are written and the TXFIFO depth is increased by 4. Note: This address is writing-only if is `0`, and if is set to `1`, this address is readable and writable to test the TX FIFO through the AHB bus.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_WAIT</name>
          <description>SPI_WAIT</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>SWC</name>
              <description>Dual mode direction switch wait clock counter (for master mode only). 
0: No wait states inserted N: N SPI_SCLK wait states inserted These bits control the number of wait states to be inserted before start dual data transfer in dual SPI mode. The SPI module counts SPI_SCLK by for delaying next word data transfer. Note Can not be written when XCH=1.</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WCC</name>
              <description>Wait Clock Counter (In Master mode) 
0: No wait states inserted N: N SPI_SCLK wait states inserted These bits control the number of wait states to be inserted in data transfers. The SPI module counts SPI_SCLK by for delaying next word data transfer.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI1</name>
      <description>SPI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI2</name>
      <description>SPI2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C17000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI3</name>
      <description>SPI3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1F000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>Thermal Sensor</name>
      <description>Thermal Sensor</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C24C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>THS0_1_CDATA_REG</name>
          <description>THS0_1_CDATA_REG</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x8000800</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>THS1_CDATA</name>
              <description>Thermal Sensor1 calibration data</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS0_CDATA</name>
              <description>Thermal Sensor0 calibration data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_ALARM_CTRL_REG</name>
          <description>THS0_ALARM_CTRL_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_T_HOT</name>
              <description>Thermal sensor0 alarm threshold for hot temperature</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM0_T_HYST</name>
              <description>Thermal sensor0 alarm threshold for hysteresis temperature</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_DATA_REG</name>
          <description>THS0_DATA_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS0_DATA</name>
              <description>Temperature measurement data of sensor0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_SHUTDOWN_CTRL_REG</name>
          <description>THS0_SHUTDOWN_CTRL_REG</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x4E90000</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>SHUT0_T_HOT</name>
              <description>Thermal sensor0 shutdown threshold for hot temperature</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_ALARM_CTRL_REG</name>
          <description>THS1_ALARM_CTRL_REG</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM1_T_HOT</name>
              <description>Thermal sensor1 alarm threshold for hot temperature</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM1_T_HYST</name>
              <description>Thermal sensor1 alarm threshold for hysteresis temperature</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_DATA_REG</name>
          <description>THS1_DATA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS1_DATA</name>
              <description>Temperature measurement data of sensor1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_SHUTDOWN_CTRL_REG</name>
          <description>THS1_SHUTDOWN_CTRL_REG</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x4E90000</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>SHUT1_T_HOT</name>
              <description>Thermal sensor1 shutdown threshold for hot temperature</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL_REG0</name>
          <description>THS_CTRL_REG0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SENSOR_ACQ</name>
              <description>Sensor acquire time CLK_IN/(N+1)</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL_REG1</name>
          <description>THS_CTRL_REG1</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x40000</resetValue>
          <resetMask>0xFFFF0003</resetMask>
          <fields>
            <field>
              <name>ADC_ACQ</name>
              <description>ADC acquire time CLK_IN/(N+1)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE1_EN</name>
              <description>Enable temperature measurement sensor1  0:Disable 1:Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE0_EN</name>
              <description>Enable temperature measurement sensor0  0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_FILTER_CTRL_REG</name>
          <description>THS_FILTER_CTRL_REG</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FILTER_EN</name>
              <description>Filter Enable 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTER_TYPE</name>
              <description>Average Filter Type 
00: 2 
01: 4 
10: 8 
11: 16</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_INTC_REG</name>
          <description>THS_INTC_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF333</resetMask>
          <fields>
            <field>
              <name>THERMAL_PER</name>
              <description>4096*(n+1)/CLK_IN</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS1_DATA_IRQ_EN</name>
              <description>Selects temperature measurement data of sensor1 
0: No select 
1: Select</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS0_DATA_IRQ_EN</name>
              <description>Selects temperature measurement data of sensor0  
0: No select 
1: Select</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUT_INT1_EN</name>
              <description>Selects shutdown interrupt for sensor1 
0: No select 
1: Select</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUT_INT0_EN</name>
              <description>Selects shutdown interrupt for sensor0 
0: No select 
1: Select</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM_INT1_EN</name>
              <description>Selects alarm interrupt for sensor1  
0: No select 
1: Select</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM_INT0_EN</name>
              <description>Selects alarm interrupt for sensor0  
0: No select 
1: Select</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_INTS_REG</name>
          <description>THS_INTS_REG</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3333</resetMask>
          <fields>
            <field>
              <name>ALARM_OFF1_STS</name>
              <description>Alarm interrupt off pending for sensor1 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ALARM_OFF0_STS</name>
              <description>Alarm interrupt off pending for sensor0 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS1_DATA_IRQ_STS</name>
              <description>Data interrupt status for sensor1 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS0_DATA_IRQ_STS</name>
              <description>Data interrupt status for sensor0 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SHUT_INT1_STS</name>
              <description>Shutdown interrupt status for sensor1 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SHUT_INT0_STS</name>
              <description>Shutdown interrupt status for sensor0 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ALARM_INT1_STS</name>
              <description>Alarm interrupt pending for sensor1 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ALARM_INT0_STS</name>
              <description>Alarm interrupt pending for sensor0 Write `1` to clear this interrupt or automatically clear if interrupt condition fails.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TSC</name>
      <description>TSC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C04000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <name>TSC</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSC_CTLR</name>
            <description>TSC Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_OUTMUXR</name>
            <description>TSC Port Output Multiplex Control Register</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xF</resetMask>
            <fields>
              <field>
                <name>TSPORTOUTPUTMUXCTRL</name>
                <description>TS Port Output Multiplex Control 
0000: Data from TSG 
0001: Data from TS IN Port0 
0010: Data from TS IN Port1 Others : Reserved</description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_PCTLR</name>
            <description>TSC Port Control Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x10003</resetMask>
            <fields>
              <field>
                <name>TSOUTPORT0CTRL</name>
                <description>TS Output Port0 Control 0 : SPI 1 : SSI</description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSINPORT1CTRL</name>
                <description>TS Input Port1 Control 0 : SPI 1 : SSI</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSINPORT0CTRL</name>
                <description>TS Input Port0 Control 0 : SPI 1 : SSI</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_PPARR</name>
            <description>TSC Port Parameter Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>TSINPORT1PAR</name>
                <description>TS Input Port1 Parameters Definition 7:5 Reserved 4 SSI data order 
0: MSB first for one byte data 
1: LSB first for one byte data 3 CLOCK signal polarity 0 : Rise edge capturing 
1: Fall edge capturing 2 ERROR signal polarity 
0: High level active 
1: Low level active 1 DVALID signal polarity 
0: High level active 
1: Low level active 0 PSYNC signal polarity 
0: High level active 
1: Low level active</description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSINPORT0PAR</name>
                <description>TS Input Port0 Parameters Definition 7:5 Reserved 4 SSI data order 
0: MSB first for one byte data 
1: LSB first for one byte data 3 CLOCK signal polarity 0 : Rise edge capturing 
1: Fall edge capturing 2 ERROR signal polarity 
0: High level active 
1: Low level active 1 DVALID signal polarity 
0: High level active 
1: Low level active 0 PSYNC signal polarity 
0: High level active 
1: Low level active</description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_STAR</name>
            <description>TSC Status Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_TSFMUXR</name>
            <description>TSC TSF Input Multiplex Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF</resetMask>
            <fields>
              <field>
                <name>TSF1INPUTMUXCTRL</name>
                <description>TSF1 Input Multiplex Control 
0000: Data from TSG 
0001: Data from TS IN Port0 
0010: Data from TS IN Port1 Others: Reserved</description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF0INPUTMUXCTRL</name>
                <description>TSF0 Input Multiplex Control 
0000: Data from TSG 
0001: Data from TS IN Port0 
0010: Data from TS IN Port1 Others: Reserved</description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSD0</name>
          <addressOffset>0x180</addressOffset>
          <register>
            <name>TSD_CTLR</name>
            <description>TSD Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3</resetMask>
            <fields>
              <field>
                <name>DESCARITH</name>
                <description>Descramble Arithmetic 
00: DVB CSA V1.1 Others: Reserved</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DVB</name>
                    <description>DVB CSA V1.1 Others: Reserved</description>
                    <value>0b00</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWIR</name>
            <description>TSD Control Word Index Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x73</resetMask>
            <fields>
              <field>
                <name>CWI</name>
                <description>Control Word Index This value is the Control index for Control word access. Range is from 0x0 to 0x7.</description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CWII</name>
                <description>Control Word Internal Index 00 : Odd Control Word Low 32-bit, OCW[31:0] 01 : Odd Control Word High 32-bit, OCW[63:32] 10 : Even Control Word Low 32-bit, ECW[31:0] 11 : Even Control Word High 32-bit, ECW[63:0]</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWR</name>
            <description>TSD Control Word Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>CWD</name>
                <description>Content of Control Word corresponding to the TSD_CWIR value</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_STAR</name>
            <description>TSD Status Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
        </cluster>
        <cluster>
          <name>TSD1</name>
          <addressOffset>0x200</addressOffset>
          <register>
            <name>TSD_CTLR</name>
            <description>TSD Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3</resetMask>
            <fields>
              <field>
                <name>DESCARITH</name>
                <description>Descramble Arithmetic 
00: DVB CSA V1.1 Others: Reserved</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DVB</name>
                    <description>DVB CSA V1.1 Others: Reserved</description>
                    <value>0b00</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWIR</name>
            <description>TSD Control Word Index Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x73</resetMask>
            <fields>
              <field>
                <name>CWI</name>
                <description>Control Word Index This value is the Control index for Control word access. Range is from 0x0 to 0x7.</description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CWII</name>
                <description>Control Word Internal Index 00 : Odd Control Word Low 32-bit, OCW[31:0] 01 : Odd Control Word High 32-bit, OCW[63:32] 10 : Even Control Word Low 32-bit, ECW[31:0] 11 : Even Control Word High 32-bit, ECW[63:0]</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWR</name>
            <description>TSD Control Word Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>CWD</name>
                <description>Content of Control Word corresponding to the TSD_CWIR value</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_STAR</name>
            <description>TSD Status Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
        </cluster>
        <cluster>
          <name>TSF0</name>
          <addressOffset>0x80</addressOffset>
          <register>
            <name>TSF_CBBAR</name>
            <description>TSF Channel Buffer Base Address Register</description>
            <addressOffset>0x50</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSFBUFBADDR</name>
                <description>Data Buffer Base Address for Channel It is 4-word (16Byte) aligned address. The LSB four bits should be zero.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBRPR</name>
            <description>TSF Channel Buffer Read Pointer Register</description>
            <addressOffset>0x5C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFRDPTR</name>
                <description>Data Buffer Read Pointer (in Bytes) This pointer should be changed by software after the data of buffer is read.</description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBSZR</name>
            <description>TSF Channel Buffer Size Register</description>
            <addressOffset>0x54</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x31FFFFF</resetMask>
            <fields>
              <field>
                <name>CHDMAINTTHD</name>
                <description>DMA Interrupt Threshold for Channel The unit is TS packet size. When received packet (has also stored in DRAM) size is beyond (&gt;=) threshold value, the corresponding channel interrupt is generated to CPU. TSC should count the new received packet again, when exceed the specified threshold value, one new interrupt is generated again. 
00: 1/2 data buffer packet size 
01: 1/4 data buffer packet size 
10: 1/8 data buffer packet size 
11: 1/16 data buffer packet size</description>
                <bitRange>[25:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1_slash_2_data</name>
                    <description>1/2 data buffer packet size</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_4_data</name>
                    <description>1/4 data buffer packet size</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_8_data</name>
                    <description>1/8 data buffer packet size</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_16_data</name>
                    <description>1/16 data buffer packet size</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CHBUFPKTSZ</name>
                <description>Data Buffer Packet Size for Channel The exact buffer size of buffer is N+1 byte. The maximum buffer size is 2MB. This size should be 4word (16 Byte) aligned. The LSB four bit should be zero.</description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBWPR</name>
            <description>TSF Channel Buffer Write Pointer Register</description>
            <addressOffset>0x58</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFWRPTR</name>
                <description>Data Buffer Write Pointer (in Bytes) This value is changed by hardware, when data is filled into buffer, this pointer is increased. And this pointer can be set by software, but it should not be changed by software during the corresponding channel is enabled.</description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CCTLR</name>
            <description>TSF Channel Control Register</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_CCWIR</name>
            <description>TSF Channel CW Index Register</description>
            <addressOffset>0x48</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>CWIND</name>
                <description>Related Control Word Index Index to the control word used by this channel when Descramble Enable of this channel enable. This value is useless when the corresponding Descramble Enable is `0`.</description>
                <bitRange>[2:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CDER</name>
            <description>TSF Channel Descramble Enable Register</description>
            <addressOffset>0x38</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DESCEN</name>
                <description>Descramble Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CENR</name>
            <description>TSF Channel Enable Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILTEREN</name>
                <description>Filter Enable for Channel 0~31 
0: Disable 
1: Enable From Disable to Enable, the internal status of the corresponding filter channel will be reset.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CINDR</name>
            <description>TSF Channel Index Register</description>
            <addressOffset>0x3C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1F</resetMask>
            <fields>
              <field>
                <name>CHIND</name>
                <description>Channel Index This value is the channel index for channel private registers access. Range is from 0x00 to 0x1f. Address range of channel private registers is from 0x40 to 0x7f.</description>
                <bitRange>[4:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPER</name>
            <description>TSF Channel PES Enable Register</description>
            <addressOffset>0x34</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PESEN</name>
                <description>PES Packet Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPIDR</name>
            <description>TSF Channel PID Register</description>
            <addressOffset>0x4C</addressOffset>
            <resetValue>0x1FFF0000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PIDMSK</name>
                <description>Filter PID Mask for Channel</description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PIDVAL</name>
                <description>Filter PID value for Channel</description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CSTAR</name>
            <description>TSF Channel Status Register</description>
            <addressOffset>0x44</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_DIER</name>
            <description>TSF DMA Interrupt Enable Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIE</name>
                <description>DMA Interrupt Enable DMA interrupt enable bits for channel 0~31.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_DISR</name>
            <description>TSF DMA Interrupt Status Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIS</name>
                <description>DMA Interrupt Status DMA interrupt Status bits for channel 0~31. Set by hardware, and writing `1`can be cleared by software. When both these bits and the corresponding DMA Interrupt Enable bits set, the TSF interrupt will generate.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OIER</name>
            <description>TSF Overlap Interrupt Enable Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIE</name>
                <description>Overlap Interrupt Enable Overlap interrupt enable bits for channel 0~31.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OISR</name>
            <description>TSF Overlap Interrupt Status Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIS</name>
                <description>Overlap Interrupt Status Overlap interrupt Status bits for channel 0~31. Setting by hardware, and writing `1`can be cleared by software. When both these bits and the corresponding Overlap Interrupt Enable bits set, the TSF interrupt will generate.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRCR</name>
            <description>TSF PCR Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x11F01</resetMask>
            <fields>
              <field>
                <name>PCRDE</name>
                <description>PCR Detecting Enable 
0: Disable 
1: Enable</description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PCRCIND</name>
                <description>Channel Index m for Detecting PCR packet (m from 0 to 31)</description>
                <bitRange>[12:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PCRLSB</name>
                <description>PCR Contest LSB 1 bit PCR[0]</description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRDR</name>
            <description>TSF PCR Data Register</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PCRMSB</name>
                <description>PCR Data High 32 bits PCR[33:1]</description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PPR</name>
            <description>TSF Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFFFF0383</resetMask>
            <fields>
              <field>
                <name>LOSTSYNCTHD</name>
                <description>Lost Sync Packet Threshold It is used for packet sync lost by checking the value of sync byte.</description>
                <bitRange>[31:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCTHD</name>
                <description>Sync Packet Threshold It is used for packet sync by checking the value of sync byte.</description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCBYTEVAL</name>
                <description>Sync Byte Value This is the value of sync byte used in the TS Packet.</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCMTHD</name>
                <description>Packet Sync Method 
00: By PSYNC signal 
01: By sync byte 
10: By both PSYNC and Sync Byte 
11: Reserved</description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>By_PSYNC</name>
                    <description>By PSYNC signal</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_sync</name>
                    <description>By sync byte</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_both</name>
                    <description>By both PSYNC and Sync Byte</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SYNCBYTEPOS</name>
                <description>Sync Byte Position 
0: The 1st byte position 
1: The 5th byte position This bit is only used for 192 bytes packet size.</description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>The 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>The 5th byte position This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>Packet Size Byte Size for one TS packet 
00: 188 bytes 
01: 192 bytes 
10: 204 bytes 
11: Reserved</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_188</name>
                    <description>188 bytes</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_192</name>
                    <description>192 bytes</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_204</name>
                    <description>204 bytes</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSF1</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>TSF_CBBAR</name>
            <description>TSF Channel Buffer Base Address Register</description>
            <addressOffset>0x50</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSFBUFBADDR</name>
                <description>Data Buffer Base Address for Channel It is 4-word (16Byte) aligned address. The LSB four bits should be zero.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBRPR</name>
            <description>TSF Channel Buffer Read Pointer Register</description>
            <addressOffset>0x5C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFRDPTR</name>
                <description>Data Buffer Read Pointer (in Bytes) This pointer should be changed by software after the data of buffer is read.</description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBSZR</name>
            <description>TSF Channel Buffer Size Register</description>
            <addressOffset>0x54</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x31FFFFF</resetMask>
            <fields>
              <field>
                <name>CHDMAINTTHD</name>
                <description>DMA Interrupt Threshold for Channel The unit is TS packet size. When received packet (has also stored in DRAM) size is beyond (&gt;=) threshold value, the corresponding channel interrupt is generated to CPU. TSC should count the new received packet again, when exceed the specified threshold value, one new interrupt is generated again. 
00: 1/2 data buffer packet size 
01: 1/4 data buffer packet size 
10: 1/8 data buffer packet size 
11: 1/16 data buffer packet size</description>
                <bitRange>[25:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1_slash_2_data</name>
                    <description>1/2 data buffer packet size</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_4_data</name>
                    <description>1/4 data buffer packet size</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_8_data</name>
                    <description>1/8 data buffer packet size</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_16_data</name>
                    <description>1/16 data buffer packet size</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CHBUFPKTSZ</name>
                <description>Data Buffer Packet Size for Channel The exact buffer size of buffer is N+1 byte. The maximum buffer size is 2MB. This size should be 4word (16 Byte) aligned. The LSB four bit should be zero.</description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBWPR</name>
            <description>TSF Channel Buffer Write Pointer Register</description>
            <addressOffset>0x58</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFWRPTR</name>
                <description>Data Buffer Write Pointer (in Bytes) This value is changed by hardware, when data is filled into buffer, this pointer is increased. And this pointer can be set by software, but it should not be changed by software during the corresponding channel is enabled.</description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CCTLR</name>
            <description>TSF Channel Control Register</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_CCWIR</name>
            <description>TSF Channel CW Index Register</description>
            <addressOffset>0x48</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>CWIND</name>
                <description>Related Control Word Index Index to the control word used by this channel when Descramble Enable of this channel enable. This value is useless when the corresponding Descramble Enable is `0`.</description>
                <bitRange>[2:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CDER</name>
            <description>TSF Channel Descramble Enable Register</description>
            <addressOffset>0x38</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DESCEN</name>
                <description>Descramble Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CENR</name>
            <description>TSF Channel Enable Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILTEREN</name>
                <description>Filter Enable for Channel 0~31 
0: Disable 
1: Enable From Disable to Enable, the internal status of the corresponding filter channel will be reset.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CINDR</name>
            <description>TSF Channel Index Register</description>
            <addressOffset>0x3C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1F</resetMask>
            <fields>
              <field>
                <name>CHIND</name>
                <description>Channel Index This value is the channel index for channel private registers access. Range is from 0x00 to 0x1f. Address range of channel private registers is from 0x40 to 0x7f.</description>
                <bitRange>[4:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPER</name>
            <description>TSF Channel PES Enable Register</description>
            <addressOffset>0x34</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PESEN</name>
                <description>PES Packet Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPIDR</name>
            <description>TSF Channel PID Register</description>
            <addressOffset>0x4C</addressOffset>
            <resetValue>0x1FFF0000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PIDMSK</name>
                <description>Filter PID Mask for Channel</description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PIDVAL</name>
                <description>Filter PID value for Channel</description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CSTAR</name>
            <description>TSF Channel Status Register</description>
            <addressOffset>0x44</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_DIER</name>
            <description>TSF DMA Interrupt Enable Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIE</name>
                <description>DMA Interrupt Enable DMA interrupt enable bits for channel 0~31.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_DISR</name>
            <description>TSF DMA Interrupt Status Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIS</name>
                <description>DMA Interrupt Status DMA interrupt Status bits for channel 0~31. Set by hardware, and writing `1`can be cleared by software. When both these bits and the corresponding DMA Interrupt Enable bits set, the TSF interrupt will generate.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OIER</name>
            <description>TSF Overlap Interrupt Enable Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIE</name>
                <description>Overlap Interrupt Enable Overlap interrupt enable bits for channel 0~31.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OISR</name>
            <description>TSF Overlap Interrupt Status Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIS</name>
                <description>Overlap Interrupt Status Overlap interrupt Status bits for channel 0~31. Setting by hardware, and writing `1`can be cleared by software. When both these bits and the corresponding Overlap Interrupt Enable bits set, the TSF interrupt will generate.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRCR</name>
            <description>TSF PCR Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x11F01</resetMask>
            <fields>
              <field>
                <name>PCRDE</name>
                <description>PCR Detecting Enable 
0: Disable 
1: Enable</description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PCRCIND</name>
                <description>Channel Index m for Detecting PCR packet (m from 0 to 31)</description>
                <bitRange>[12:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PCRLSB</name>
                <description>PCR Contest LSB 1 bit PCR[0]</description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRDR</name>
            <description>TSF PCR Data Register</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PCRMSB</name>
                <description>PCR Data High 32 bits PCR[33:1]</description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PPR</name>
            <description>TSF Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFFFF0383</resetMask>
            <fields>
              <field>
                <name>LOSTSYNCTHD</name>
                <description>Lost Sync Packet Threshold It is used for packet sync lost by checking the value of sync byte.</description>
                <bitRange>[31:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCTHD</name>
                <description>Sync Packet Threshold It is used for packet sync by checking the value of sync byte.</description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCBYTEVAL</name>
                <description>Sync Byte Value This is the value of sync byte used in the TS Packet.</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCMTHD</name>
                <description>Packet Sync Method 
00: By PSYNC signal 
01: By sync byte 
10: By both PSYNC and Sync Byte 
11: Reserved</description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>By_PSYNC</name>
                    <description>By PSYNC signal</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_sync</name>
                    <description>By sync byte</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_both</name>
                    <description>By both PSYNC and Sync Byte</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SYNCBYTEPOS</name>
                <description>Sync Byte Position 
0: The 1st byte position 
1: The 5th byte position This bit is only used for 192 bytes packet size.</description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>The 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>The 5th byte position This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>Packet Size Byte Size for one TS packet 
00: 188 bytes 
01: 192 bytes 
10: 204 bytes 
11: Reserved</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_188</name>
                    <description>188 bytes</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_192</name>
                    <description>192 bytes</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_204</name>
                    <description>204 bytes</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSG</name>
          <addressOffset>0x40</addressOffset>
          <register>
            <name>TSG_BBAR</name>
            <description>TSG Buffer Base Address Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSGBUFBASE</name>
                <description>Buffer Base Address This value is a start address of TSG buffer. This value should be 4 words (16-byte) aligned, and the lowest 4 bits of this value should be zero.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BPR</name>
            <description>TSG Buffer Pointer Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSGBUFPTR</name>
                <description>Data Buffer Pointer for TS Generator Current TS generator data buffer read pointer (in byte unit)</description>
                <bitRange>[23:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BSZR</name>
            <description>TSG Buffer Size Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSGBUFSIZE</name>
                <description>Data Buffer Size for TS Generator It is in byte unit. The size should be 4 words (16-byte) aligned, and the lowest 4 bits should be zero.</description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_CCR</name>
            <description>TSG Clock Control Register</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSGCDF_N</name>
                <description>TSG Clock Divide Factor (N) The Numerator part of TSG Clock Divisor Factor.</description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSGCDF_D</name>
                <description>TSG Clock Divide Factor (D) The Denominator part of TSG Clock Divisor Factor. Frequency of output clock: Fo = (Fi*(N+1))/(8*(D+1)). Fi is the input special clock of TSC, and D must not less than N.</description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_PPR</name>
            <description>TSG Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFF0083</resetMask>
            <fields>
              <field>
                <name>SYNCBYTEVAL</name>
                <description>Sync Byte Value This is the value of sync byte used in the TS Packet.</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCBYTEPOS</name>
                <description>Sync Byte Position 
0: The 1st byte position 
1: The 5th byte position This bit is only used for 192 bytes packet size.</description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>The 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>The 5th byte position This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>Packet Size Byte Size for one TS packet 
0: 188 bytes Others: Reserved</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TSF_CSR</name>
          <description>TSF_CSR</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x5</resetMask>
          <fields>
            <field>
              <name>TSF</name>
              <description>ENABLE 
0: Disable TSF Input 
1: Enable TSF Input</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable TSF Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable TSF Input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R/W</name>
              <description>0 TSFGSR TSF Global Soft Reset Writing `1` will reset all status and state machine of TSF. And it is cleared by hardware after finish reset. Writing `0` has no effect.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSF_IESR</name>
          <description>TSF_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSFFOIE</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFPPDIE</name>
              <description>TS PCR Packet Detect Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCOIE</name>
              <description>TS PID Filter (TSF) Channel Overlap Interrupt Global Enable 
0: Disable 
1: Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCDIE</name>
              <description>TS PID Filter (TSF) Channel DMA Interrupt Global Enable 
0: Disable 
1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFFOIS</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Status Write `1` to clear it.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSFPPDIS</name>
              <description>TS PCR Packet Found Status When it is `1`, one TS PCR Packet is found. Write `1` to clear it.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSFCOIS</name>
              <description>TS PID Filter (TSF) Channel Overlap Status It is global status for 32 channels. It would clear to zero after all channels status bits are cleared.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSFCDIS</name>
              <description>TS PID Filter (TSF) Channel DMA status It is global status for 32 channels. It would clear to zero after all channels status bits are cleared.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSG_CSR</name>
          <description>TSG_CSR</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000307</resetMask>
          <fields>
            <field>
              <name>TSGSTS</name>
              <description>Status for TS Generator 
00: IDLE state 
01: Running state 
10: PAUSE state Others: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>IDLE state</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Running</name>
                  <description>Running state</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAUSE</name>
                  <description>PAUSE state Others: Reserved</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGLBUFMODE</name>
              <description>Loop Buffer Mode When set to `1`, the TSG external buffer is in loop mode.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGSYNCBYTECHKEN</name>
              <description>Sync Byte Check Enable Enable/ Disable check SYNC byte fro receiving new packet 
0: Disable 
1: Enable If enable check SYNC byte and an error SYNC byte is received, TS Generator would come into PAUSE state. If the correspond interrupt is enabled, the interrupt would happen.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If enable check SYNC byte and an error SYNC byte is received, TS Generator would come into PAUSE state. If the correspond interrupt is enabled, the interrupt would happen.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGPAUSEBIT</name>
              <description>Pause Bit for TS Generator Write `1` to pause TS Generator. TS Generator would stop fetch new data from DRAM. After finishing this operation, this bit will clear to zero by hardware. In PAUSE state, write `1` to resume this state.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGSTOPBIT</name>
              <description>Stop Bit for TS Generator Write `1` to stop TS Generator. TS Generator would stop fetch new data from DRAM. The data already in its FIFO should be sent to TS filter. After finishing this operation, this bit will clear to zero by hardware.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGSTARTBIT</name>
              <description>Start Bit for TS Generator Write `1` to start TS Generator. TS Generator would fetch data from DRAM and generate SPI stream to TS filter. This bit will clear to zero by hardware after TS Generator is running.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSG_IESR</name>
          <description>TSG_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSGENDIE</name>
              <description>TS Generator (TSG) End Interrupt Enable 
0: Disable 
1: Enable If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGFFIE</name>
              <description>TS Generator (TSG) Full Finish Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGHFIE</name>
              <description>TS Generator (TSG) Half Finish Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGERRSYNCBYTEIE</name>
              <description>TS Generator (TSG) Error Sync Byte Interrupt Enable 
0: Disable 
1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGENDSTS</name>
              <description>TS Generator (TSG) End Status Write `1` to clear it.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGFFSTS</name>
              <description>TS Generator (TSG) Full Finish Status Write `1` to clear it.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGHFSTS</name>
              <description>TS Generator (TSG) Half Finish Status Write `1` to clear it.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGERRSYNCBYTESTS</name>
              <description>TS Generator (TSG) Error Sync Byte Status Write `1` to clear it.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVD_TOP</name>
      <description>TVD_TOP</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C30000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>4</dim>
          <dimIncrement>32</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x24</addressOffset>
          <register>
            <name>TVD_ADC_CFG</name>
            <description>TVD ADC Configuration Register</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x9007FFFF</resetMask>
            <fields>
              <field>
                <name>ADC_TEST</name>
                <description>adc_test signal en_adctest=1 adc test for ch1</description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DATA_DLY</name>
                <description>0: no delay 
1: delay ADC output data for half circle for ch1</description>
                <bitRange>[28:28]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>no_delay</name>
                    <description>no delay</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>delay</name>
                    <description>delay ADC output data for half circle for ch1</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CLP_STEP</name>
                <description>up/dn step size of dc_level</description>
                <bitRange>[18:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE8_IBIAS</name>
                <description></description>
                <bitRange>[15:14]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE7_IBIAS</name>
                <description></description>
                <bitRange>[13:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE6_IBIAS</name>
                <description></description>
                <bitRange>[11:10]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE5_IBIAS</name>
                <description></description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE4_IBIAS</name>
                <description></description>
                <bitRange>[7:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE3_IBIAS</name>
                <description></description>
                <bitRange>[5:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE2_IBIAS</name>
                <description></description>
                <bitRange>[3:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>STAGE1_IBIAS</name>
                <description></description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TVD_ADC_CTL</name>
            <description>TVD ADC Control Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1F</resetMask>
            <fields>
              <field>
                <name>LPF_SEL</name>
                <description>0: 11M 
1: 16M</description>
                <bitRange>[4:3]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LPF_EN</name>
                <description>0: Disable LPF circuit 
1: Enable LPF circuit</description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable LPF circuit</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable LPF circuit</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>AFE_EN</name>
                <description>0: Disable AFE circuit 
1: Enable AFE circuit</description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable AFE circuit</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable AFE circuit</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADC_EN</name>
                <description>0: Disable ADC circuit 
1: Enable ADC circuit</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable ADC circuit</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable ADC circuit</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TVD_TOP_CTL</name>
            <description>TVD_TOP_CTL</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1000010</resetMask>
            <fields>
              <field>
                <name>LPF_SEL</name>
                <description>0: 6M 
1: 8M</description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_6M</name>
                    <description>6M</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8M</name>
                    <description>8M</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>LPF_DIG_EN</name>
                <description>0: Disable 
1: Enable</description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TVD_3D_CTL1</name>
          <description>TVD 3D DMA Control Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x12</resetValue>
          <resetMask>0x33</resetMask>
          <fields>
            <field>
              <name>COMB_3D_SEL</name>
              <description>00: TVD0 
01: TVD1 
10: TVD2 
11: TVD3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD0</name>
                  <description>TVD0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD1</name>
                  <description>TVD1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD2</name>
                  <description>TVD2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD3</name>
                  <description>TVD3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMB_3D_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_EN_3D_DMA</name>
              <description>0: Disable 
1: Enable Set 0x1 when enable 3D comb filter.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Set 0x1 when enable 3D comb filter.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_3D_CTL2</name>
          <description>TVD 3D DMA Control Register2</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DRAM_TRIG</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_3D_CTL3</name>
          <description>TVD 3D DMA Control Register3</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>COMB_3D_ADDR0</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_3D_CTL4</name>
          <description>TVD 3D DMA Control Register4</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>COMB_3D_ADDR1</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_3D_CTL5</name>
          <description>TVD 3D DMA Control Register5</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>COMB_3D_SIZE</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_TOP_MAP</name>
          <description>TVD TOP MAP Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TVD_ADC_MAP</name>
              <description>00: NO MAP 
01: 4 CVBS 
10: 1 YPbPr and 1 CVBS 
11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_MAP</name>
                  <description>NO MAP</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 CVBS</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 YPbPr and 1 CVBS</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVD0</name>
      <description>TVD0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C31000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TVD_CLAMP_AGC1</name>
          <description>TVD CLAMP &amp; AGC Control Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xA001DD02</resetValue>
          <resetMask>0xFF01FF03</resetMask>
          <fields>
            <field>
              <name>CAGC_TARGET</name>
              <description>These bits set the chroma AGC target</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAGC_EN</name>
              <description>0: off 
1: on</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>off</name>
                  <description>off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>on</name>
                  <description>on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_TARGET</name>
              <description>When AGC_EN = 1 , the AGC_TARGET is used to directly digital AGC circuit. When AGC_EN = 0 , the AGC_TARGET is used to directly drive the analog PGA. (64 represents 1x, 32 represents 0.5x).</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_FREQUENCE</name>
              <description>0: AGC gain update once per line 
1: AGC gain update once per frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per_line</name>
                  <description>AGC gain update once per line</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per</name>
                  <description>AGC gain update once per frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_EN</name>
              <description>0: AGC disable 
1: AGC enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_disable</name>
                  <description>AGC disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_enable</name>
                  <description>AGC enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLAMP_AGC2</name>
          <description>TVD CLAMP &amp; AGC Control Register2</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x86826440</resetValue>
          <resetMask>0x9FFFFF7F</resetMask>
          <fields>
            <field>
              <name>BLACK_LEVEL_CLAMP</name>
              <description>0: subtraction 0 
1: subtraction 16</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>subtraction_0</name>
                  <description>subtraction 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>subtraction_16</name>
                  <description>subtraction 16</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_GATE_BEGIN</name>
              <description>Count from hsync to the next line AGC gate</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_BACKPORCH_DELAY</name>
              <description>Count from sync tip to back porch gate</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_GATE_WIDTH</name>
              <description>AGC gate width</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK1</name>
          <description>TVD Chroma Lock Control Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x463201</resetValue>
          <resetMask>0x1DFFFF0F</resetMask>
          <fields>
            <field>
              <name>COLOR_STD_NTSC</name>
              <description>COLOR_STD_NTSC 
0: NTSC358 
1: NTSC443 Only valid when COLOR_STD set as NTSC</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NTSC358</name>
                  <description>NTSC358</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NTSC443</name>
                  <description>NTSC443 Only valid when COLOR_STD set as NTSC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_LPF</name>
              <description>CHROMA_LPF 
00: Narrow 
01: Middle 
10: Wide 
11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Middle</name>
                  <description>Middle</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WIDE_BURST_GATE</name>
              <description>wide_burst_gate 
0: Narrow burst gate 
1: Wide burst gate</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow burst gate</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide burst gate</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BURST_GATE_END_TIME</name>
              <description>Burst gate end time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_GATE_START_TIME</name>
              <description>Burst gate start time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_STD</name>
              <description>COLOR_STD 
000: NTSC 
001: PAL (I,B,G,H,D,N) 
010: PAL (M) 
011: PAL (CN) 
100: SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_KILL_EN</name>
              <description>COLOR KILL EN 
1: Disable color when chroma unlock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable color when chroma unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK2</name>
          <description>TVD Chroma Lock Control Register2</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x21F07C1F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C_SAMPLE_STEP</name>
              <description>C_SAMPLE_STEP = F /Fin * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_DEBUG1</name>
          <description>TVD Debug Control Register1</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x100000</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>CLAMP_UPDN_CYCLES</name>
              <description>CLAMP_UPDN_CYCLES</description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_DN_START_WRITE</name>
              <description>CLAMP_DN_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_UP_START_WRITE</name>
              <description>CLAMP_UP_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_MODE</name>
              <description>CLAMP_MODE 
0: normal, auto clamp control 
1: debug mode, clamp control by register</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal, auto clamp control</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, clamp control by register</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFE_GAIN_MODE</name>
              <description>AFE_GAIN_MODE 
0: auto gain mode 
1: debug mode, AFE gain is determined by .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>auto</name>
                  <description>auto gain mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, AFE gain is determined by .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_RESET_GAIN_ENABLE</name>
              <description>UNLOCK_RESET_GAIN_ENABLE</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION_RESET_GAIN_ENABLE</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION2_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION2_RESET_GAIN_ENABLE</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_HIGH</name>
              <description>TVIN LOCK_HIGH</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_DEBUG</name>
              <description>TVIN LOCK_DEBUG</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFE_GAIN_VALUE</name>
              <description>AFE_GAIN_VALUE</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_EN</name>
          <description>TVD Module Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6008001</resetMask>
          <fields>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK2(WHEN_UNLOCKED</name>
              <description>en lock disable write back2(when unlocked,auto disable wb)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK1(ONLY_START</name>
              <description>en lock disable write back1(only start wb when locked)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLR_RSMP_FIFO</name>
              <description>0: release 
1: clear Set 0x1 then 0x0 to reset resample FIFO.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>release</name>
                  <description>release</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear Set 0x1 then 0x0 to reset resample FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_EN_CH</name>
              <description>0:disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE1</name>
          <description>TVD Enhancement Control Register1</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x14208000</resetValue>
          <resetMask>0x3FFFFF0F</resetMask>
          <fields>
            <field>
              <name>SHARP_COEF2</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_COEF1</name>
              <description>Y = Y + YH *(SHARP_COEF1/SHARP_COEF2)</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BRIGHT_OFFSET</name>
              <description>Set 0x00, brightness offset is -32. Set 0x20, brightness offset is 0. Set 0xFF, brightness offset is max.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTRAST_GAIN</name>
              <description>Set 0x00, contrast gain is min. Set 0x80, contrast gain is 1. Set 0xFF, contrast gain is max.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YC_DELAY</name>
              <description>0000: Y and C no delay 
0001: Y delay 1 cycle to C 
0010: Y delay 2 cycle to C 
0011: Y delay 3 cycle to C 
0100: Y delay 4 cycle to C 
0101: Y delay 5 cycle to C 
0110: Y delay 6 cycle to C 
0111: Y delay 7 cycle to C 
1000: Reserved 
1001: Reserved 
1010: Reserved 
1011: C delay 5 cycle to Y 
1100: C delay 4 cycle to Y 
1101: C delay 3 cycle to Y 
1110: C delay 2 cycle to Y 
1111: C delay 1 cycle to Y</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_and_C</name>
                  <description>Y and C no delay</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_1_cycle</name>
                  <description>Y delay 1 cycle to C</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_2_cycle</name>
                  <description>Y delay 2 cycle to C</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_3_cycle</name>
                  <description>Y delay 3 cycle to C</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_4_cycle</name>
                  <description>Y delay 4 cycle to C</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_5_cycle</name>
                  <description>Y delay 5 cycle to C</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_6_cycle</name>
                  <description>Y delay 6 cycle to C</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_7_cycle</name>
                  <description>Y delay 7 cycle to C</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_5_cycle</name>
                  <description>C delay 5 cycle to Y</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_4_cycle</name>
                  <description>C delay 4 cycle to Y</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_3_cycle</name>
                  <description>C delay 3 cycle to Y</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_2_cycle</name>
                  <description>C delay 2 cycle to Y</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_1_cycle</name>
                  <description>C delay 1 cycle to Y</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE2</name>
          <description>TVD Enhancement Control Register2</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x680</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>CHROMA_ENHANCE_STRENGTH</name>
              <description>00: mild 
01: low 
10: middle 
11: high</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mild</name>
                  <description>mild</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>low</name>
                  <description>low</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>middle</name>
                  <description>middle</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>high</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_ENHANCE_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SATURATION_GAIN</name>
              <description>Set 0x00, saturation gain is min. Set 0x80, saturation gain is 1. Set 0xFF, saturation gain is max.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE3</name>
          <description>TVD Enhancement Control Register3</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>CB_CR_GAIN_EN</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CR_GAIN</name>
              <description></description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_GAIN</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK1</name>
          <description>TVD HLOCK Control Register1</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x20000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>H_SAMPLE_STEP</name>
              <description>H_SAMPLE_STEP = F /F * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK2</name>
          <description>TVD HLOCK Control Register2</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x4ED60000</resetValue>
          <resetMask>0xFFFF000F</resetMask>
          <fields>
            <field>
              <name>HSYNC_FILTER_GATE_END_TIME</name>
              <description>These bits specify the end of the horizontal-blank-interval window. Default = 78</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_FILTER_GATE_START_TIME</name>
              <description>These bits specify the beginning of the horizontal-blank-interval window. Default = -42</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HTOL</name>
              <description>0000: 858 
0001: 864 0010~0111: Reserved Horizontal total pixels per line.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_858</name>
                  <description>858</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_864</name>
                  <description>864 0010~0111: Reserved Horizontal total pixels per line.</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK3</name>
          <description>TVD HLOCK Control Register3</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0xFE9502D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_END</name>
              <description>Hsync tip detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_START</name>
              <description>Hsync tip detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_END</name>
              <description>Hsync rising detect window end time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_START</name>
              <description>Hsync rising detect window start time</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK4</name>
          <description>TVD HLOCK Control Register4</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x3E3E8000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_FINE_TO_COARSE_OFFSET</name>
              <description>Hsync fine to coarse offset</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_TIME_FOR_FINE</name>
              <description>Hsync rising time for fine detect</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_END_TIME</name>
              <description>Hsync detect window end time for corase detect</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_START_TIME</name>
              <description>Hsync detect window start time for coarse detection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK5</name>
          <description>TVD HLOCK Control Register5</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4E225082</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_END_TIME</name>
              <description>Backporch detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_START_TIME</name>
              <description>Backporch detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_WIDTH</name>
              <description>HACTIVE_WIDTH</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_START</name>
              <description>HACTIVE_START</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_CTL</name>
          <description>TVD DMA Interrupt Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10001FB</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANNEL1_FRAME_END</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_STATUS</name>
          <description>TVD DMA Interrupt Status Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10101B3</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAME_FINISH_FLAG</name>
              <description>This bit automatically set every write back frame. Set 0x1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>WB_ADDR_CHANGE_ERR</name>
              <description>Write back address change error</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK</name>
              <description>0: TVD status no change 
1: TVD status change from lock to unlock</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from lock to unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: TVD status no change 
1: TVD status change from unlock to lock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from unlock to lock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_MODE</name>
          <description>TVD Mode Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0x137</resetMask>
          <fields>
            <field>
              <name>BLUE_MODE_COLOR</name>
              <description>0: blue 
1: black</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>blue</name>
                  <description>blue</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>black</name>
                  <description>black</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BLUE</name>
              <description>DISPLAY MODE 
00: Disabled 
01: Enabled 
10: Auto 
11: reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROGRESSIVE_MODE</name>
              <description>0: interlace mode 
1: progressive mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interlace_mode</name>
                  <description>interlace mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>progressive_mode</name>
                  <description>progressive mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SVIDEO_MODE</name>
              <description>0: cvbs 
1: S-Video</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>cvbs</name>
                  <description>cvbs</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>s_Video</name>
                  <description>S-Video</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YPBPR_MODE</name>
              <description>0: Disable the component input 
1: Enable the component input</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the component input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the component input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS1</name>
          <description>TVD Debug Status Register1</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_MAGNITUDE_STATUS</name>
              <description>These bits contain the chroma magnitude.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_DIGITAL_GAIN_STATUS</name>
              <description>These bits contain the digital AGC gain value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_ANALOG_GAIN_STATUS</name>
              <description>These bits contain the analog AGC gain value.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS2</name>
          <description>TVD Debug Status Register2</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS3</name>
          <description>TVD Debug Status Register3</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>HORIZONTAL_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[29:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS4</name>
          <description>TVD Debug Status Register4</description>
          <addressOffset>0x18C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>VCR_REW_VCR_REWIND_DETECTED</name>
              <description>VCR_REW VCR Rewind Detected</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_FF_VCR_FAST_FORWARD_DETECTED</name>
              <description>VCR_FF VCR Fast-Forward Detected</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_TRICK_VCR_TRICK_MODE_DETECTED</name>
              <description>VCR_TRICK VCR Trick-Mode Detected</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_VCR_DETECTED</name>
              <description>VCR VCR Detected</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOISY_NOISY_SIGNAL_DETECTED</name>
              <description>NOISY Noisy Signal Detected. This bit is set when the detected noise value (status register 7Fh) is greater than the value programmed into the `noise_thresh` register (05h).</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCAN_LINES</name>
              <description>625LINES_DETECTED 625 Scan Lines Detected</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECAM_DETECTED_SECAM_COLOUR_MODE</name>
              <description>SECAM_DETECTED SECAM Colour Mode Detected</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAL_DETECTED_PAL_COLOUR_MODE</name>
              <description>PAL_DETECTED PAL Colour Mode Detected</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VNON_STANDARD_VERTICAL_FREQUENCY_NON_STANDARD</name>
              <description>VNON_STANDARD Vertical frequency non-standard input signal Detected</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HNON_STANDARD_HORIZONTAL_FREQUENCY_NON_STANDARD</name>
              <description>HNON_STANDARD Horizontal frequency non-standard input signal Detected</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PROSCAN_DETECTED_PROGRESSIVE_SCAN_DETECTED</name>
              <description>PROSCAN_DETECTED Progressive Scan Detected</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_COLOUR_STRIPES_DETECTED</name>
              <description>MACROVISION_COLOUR_STRIPES_DETECTED. The number indicates the number of colour stripe lines in each group</description>
              <bitRange>[7:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_VBI_PSEUDO_SYNC_PULSES_DETECTION</name>
              <description>MACROVISION_VBI_PSEUDO-SYNC_PULSES_DETECTION 
1: Detected 
0: Undetected</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Detected</name>
                  <description>Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Undetected</name>
                  <description>Undetected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_PLL_LOCKED_TO_COLOUR_BURST</name>
              <description>CHROMA_PLL_LOCKED_TO_COLOUR_BURST 
1: Locked 
0: Unlocked</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VERTICAL_LOCK</name>
              <description>VERTICAL_LOCK 
1: Locked 
0: Unlocked</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HORIZONTAL_LINE_LOCKED</name>
              <description>HORIZONTAL_LINE_LOCKED 
1: Locked 
0: Unlocked</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NO_SIGNAL_DETECTION</name>
              <description>NO_SIGNAL_DETECTION 
1: No Signal Detected 
0: Signal Detected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Signal</name>
                  <description>No Signal Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Signal</name>
                  <description>Signal Detected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS5</name>
          <description>TVD Debug Status Register5</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFBFF</resetMask>
          <fields>
            <field>
              <name>BLANK_LEVEL</name>
              <description></description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYNC_LEVEL</name>
              <description></description>
              <bitRange>[21:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC_DATA_SHOW</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_DATA_VALUE</name>
              <description></description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS6</name>
          <description>TVD Debug Status Register6</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>MASK_UNKNOWN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_SECAM</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_NTSC443</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PAL60</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALCN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALM</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTO_DETECT_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV</name>
              <description>STANDARD 
001: V525_NTSC 
010: V625_PAL 
011: V525_PALM 
100: V625_PALN 
101: V525_PAL60 
110: V525_NTSC443 
111: V625_SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V525_NTSC</name>
                  <description>V525_NTSC</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PAL</name>
                  <description>V625_PAL</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PALM</name>
                  <description>V525_PALM</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PALN</name>
                  <description>V625_PALN</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PAL60</name>
                  <description>V525_PAL60</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_NTSC443</name>
                  <description>V525_NTSC443</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_SECAM</name>
                  <description>V625_SECAM</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTO_DETECT_FINISH</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK1</name>
          <description>TVD VLOCK Control Register1</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x610220</resetValue>
          <resetMask>0x7FF7FF7</resetMask>
          <fields>
            <field>
              <name>VACTIVE_HEIGHT</name>
              <description></description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VACTIVE_START</name>
              <description></description>
              <bitRange>[14:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VTOL</name>
              <description>000: 525 line 
001: 625 line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_525_line</name>
                  <description>525 line</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_625_line</name>
                  <description>625 line</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK2</name>
          <description>TVD VLOCK Control Register2</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE0070</resetValue>
          <resetMask>0x1F007F</resetMask>
          <fields>
            <field>
              <name>HSYNC_DETECTOR</name>
              <description>Hsync detector disable end line</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DECTECTOR</name>
              <description>Hsync dectector disable start line</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB1</name>
          <description>TVD WB DMA Control Register1</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x2D00020</resetValue>
          <resetMask>0xFFF017F</resetMask>
          <fields>
            <field>
              <name>HACTIVE_STRIDE</name>
              <description>Horizontal active line stride.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_ADDR_VALID</name>
              <description>0: invalid 
1: valid</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>invalid</name>
                  <description>invalid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>valid</name>
                  <description>valid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLIP_FIELD</name>
              <description>flip_field This bit flips even/odd fields</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_FRAME_MODE</name>
              <description>0: odd field or even field(desided by bit2) 
1: frame</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>odd</name>
                  <description>odd field or even field(desided by bit2)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>frame</name>
                  <description>frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_MB_MODE</name>
              <description>0: planar mode 
1: mb mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>planar_mode</name>
                  <description>planar mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>mb_mode</name>
                  <description>mb mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HYSCALE_EN</name>
              <description>hyscale en</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>0: field 0 only 
1: filed 1 only</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>field</name>
                  <description>field 0 only</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>filed</name>
                  <description>filed 1 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_FORMAT</name>
              <description>0: YUV420 
1: YUV422</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUV420</name>
                  <description>YUV420</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB2</name>
          <description>TVD WB DMA Control Register2</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0xF002D0</resetValue>
          <resetMask>0x7FF0FFF</resetMask>
          <fields>
            <field>
              <name>VACTIVE_NUM</name>
              <description>Vertical active line number.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_NUM</name>
              <description>Horizontal active pixel number.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB3</name>
          <description>TVD WB DMA Control Register3</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_Y_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB4</name>
          <description>TVD WB DMA Control Register4</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_C_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP1</name>
          <description>TVD YC Seperation Control Register1</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x4209</resetValue>
          <resetMask>0x3FF1FFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_CORING_ENABLE</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>2D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOTCH_FACTOR</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COMB_FILTER_BUFFER_CLEAR</name>
              <description>0: not clear 
1: clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_clear</name>
                  <description>not clear</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PAL_CHROMA_LEVEL</name>
              <description>Chroma level threshold for chroma comb filter select</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_BANDPASS_FILTER_EN</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECAM_NOTCH_WIDE</name>
              <description>Notch bandwidth 
0: narraw 
1: wide</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>narraw</name>
                  <description>narraw</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>wide</name>
                  <description>wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>2D_COMB_FILTER_MODE</name>
              <description>For NTSC 
0000: 2D comb 0001,0010: Reserved 
0011: 1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2D</name>
                  <description>2D comb 0001,0010: Reserved</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1D</name>
                  <description>1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
                  <value>0b0011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_DIS</name>
              <description>0: Enable 3D comb filter 
1: Disable 3D comb filter</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 3D comb filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 3D comb filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_MODE</name>
              <description>000: 2D mode 
001: 3D YC separation mode1 010,011: Reserved 
100: 3D YC separation mode2</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP2</name>
          <description>TVD YC Seperation Control Register2</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0xFF6440AF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VERTICAL_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_CHROMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_LUMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVD1</name>
      <description>TVD1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C32000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TVD_CLAMP_AGC1</name>
          <description>TVD CLAMP &amp; AGC Control Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xA001DD02</resetValue>
          <resetMask>0xFF01FF03</resetMask>
          <fields>
            <field>
              <name>CAGC_TARGET</name>
              <description>These bits set the chroma AGC target</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAGC_EN</name>
              <description>0: off 
1: on</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>off</name>
                  <description>off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>on</name>
                  <description>on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_TARGET</name>
              <description>When AGC_EN = 1 , the AGC_TARGET is used to directly digital AGC circuit. When AGC_EN = 0 , the AGC_TARGET is used to directly drive the analog PGA. (64 represents 1x, 32 represents 0.5x).</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_FREQUENCE</name>
              <description>0: AGC gain update once per line 
1: AGC gain update once per frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per_line</name>
                  <description>AGC gain update once per line</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per</name>
                  <description>AGC gain update once per frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_EN</name>
              <description>0: AGC disable 
1: AGC enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_disable</name>
                  <description>AGC disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_enable</name>
                  <description>AGC enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLAMP_AGC2</name>
          <description>TVD CLAMP &amp; AGC Control Register2</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x86826440</resetValue>
          <resetMask>0x9FFFFF7F</resetMask>
          <fields>
            <field>
              <name>BLACK_LEVEL_CLAMP</name>
              <description>0: subtraction 0 
1: subtraction 16</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>subtraction_0</name>
                  <description>subtraction 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>subtraction_16</name>
                  <description>subtraction 16</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_GATE_BEGIN</name>
              <description>Count from hsync to the next line AGC gate</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_BACKPORCH_DELAY</name>
              <description>Count from sync tip to back porch gate</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_GATE_WIDTH</name>
              <description>AGC gate width</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK1</name>
          <description>TVD Chroma Lock Control Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x463201</resetValue>
          <resetMask>0x1DFFFF0F</resetMask>
          <fields>
            <field>
              <name>COLOR_STD_NTSC</name>
              <description>COLOR_STD_NTSC 
0: NTSC358 
1: NTSC443 Only valid when COLOR_STD set as NTSC</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NTSC358</name>
                  <description>NTSC358</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NTSC443</name>
                  <description>NTSC443 Only valid when COLOR_STD set as NTSC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_LPF</name>
              <description>CHROMA_LPF 
00: Narrow 
01: Middle 
10: Wide 
11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Middle</name>
                  <description>Middle</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WIDE_BURST_GATE</name>
              <description>wide_burst_gate 
0: Narrow burst gate 
1: Wide burst gate</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow burst gate</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide burst gate</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BURST_GATE_END_TIME</name>
              <description>Burst gate end time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_GATE_START_TIME</name>
              <description>Burst gate start time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_STD</name>
              <description>COLOR_STD 
000: NTSC 
001: PAL (I,B,G,H,D,N) 
010: PAL (M) 
011: PAL (CN) 
100: SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_KILL_EN</name>
              <description>COLOR KILL EN 
1: Disable color when chroma unlock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable color when chroma unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK2</name>
          <description>TVD Chroma Lock Control Register2</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x21F07C1F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C_SAMPLE_STEP</name>
              <description>C_SAMPLE_STEP = F /Fin * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_DEBUG1</name>
          <description>TVD Debug Control Register1</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x100000</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>CLAMP_UPDN_CYCLES</name>
              <description>CLAMP_UPDN_CYCLES</description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_DN_START_WRITE</name>
              <description>CLAMP_DN_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_UP_START_WRITE</name>
              <description>CLAMP_UP_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_MODE</name>
              <description>CLAMP_MODE 
0: normal, auto clamp control 
1: debug mode, clamp control by register</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal, auto clamp control</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, clamp control by register</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFE_GAIN_MODE</name>
              <description>AFE_GAIN_MODE 
0: auto gain mode 
1: debug mode, AFE gain is determined by .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>auto</name>
                  <description>auto gain mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, AFE gain is determined by .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_RESET_GAIN_ENABLE</name>
              <description>UNLOCK_RESET_GAIN_ENABLE</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION_RESET_GAIN_ENABLE</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION2_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION2_RESET_GAIN_ENABLE</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_HIGH</name>
              <description>TVIN LOCK_HIGH</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_DEBUG</name>
              <description>TVIN LOCK_DEBUG</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFE_GAIN_VALUE</name>
              <description>AFE_GAIN_VALUE</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_EN</name>
          <description>TVD Module Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6008001</resetMask>
          <fields>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK2(WHEN_UNLOCKED</name>
              <description>en lock disable write back2(when unlocked,auto disable wb)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK1(ONLY_START</name>
              <description>en lock disable write back1(only start wb when locked)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLR_RSMP_FIFO</name>
              <description>0: release 
1: clear Set 0x1 then 0x0 to reset resample FIFO.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>release</name>
                  <description>release</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear Set 0x1 then 0x0 to reset resample FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_EN_CH</name>
              <description>0:disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE1</name>
          <description>TVD Enhancement Control Register1</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x14208000</resetValue>
          <resetMask>0x3FFFFF0F</resetMask>
          <fields>
            <field>
              <name>SHARP_COEF2</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_COEF1</name>
              <description>Y = Y + YH *(SHARP_COEF1/SHARP_COEF2)</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BRIGHT_OFFSET</name>
              <description>Set 0x00, brightness offset is -32. Set 0x20, brightness offset is 0. Set 0xFF, brightness offset is max.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTRAST_GAIN</name>
              <description>Set 0x00, contrast gain is min. Set 0x80, contrast gain is 1. Set 0xFF, contrast gain is max.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YC_DELAY</name>
              <description>0000: Y and C no delay 
0001: Y delay 1 cycle to C 
0010: Y delay 2 cycle to C 
0011: Y delay 3 cycle to C 
0100: Y delay 4 cycle to C 
0101: Y delay 5 cycle to C 
0110: Y delay 6 cycle to C 
0111: Y delay 7 cycle to C 
1000: Reserved 
1001: Reserved 
1010: Reserved 
1011: C delay 5 cycle to Y 
1100: C delay 4 cycle to Y 
1101: C delay 3 cycle to Y 
1110: C delay 2 cycle to Y 
1111: C delay 1 cycle to Y</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_and_C</name>
                  <description>Y and C no delay</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_1_cycle</name>
                  <description>Y delay 1 cycle to C</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_2_cycle</name>
                  <description>Y delay 2 cycle to C</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_3_cycle</name>
                  <description>Y delay 3 cycle to C</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_4_cycle</name>
                  <description>Y delay 4 cycle to C</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_5_cycle</name>
                  <description>Y delay 5 cycle to C</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_6_cycle</name>
                  <description>Y delay 6 cycle to C</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_7_cycle</name>
                  <description>Y delay 7 cycle to C</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_5_cycle</name>
                  <description>C delay 5 cycle to Y</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_4_cycle</name>
                  <description>C delay 4 cycle to Y</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_3_cycle</name>
                  <description>C delay 3 cycle to Y</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_2_cycle</name>
                  <description>C delay 2 cycle to Y</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_1_cycle</name>
                  <description>C delay 1 cycle to Y</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE2</name>
          <description>TVD Enhancement Control Register2</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x680</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>CHROMA_ENHANCE_STRENGTH</name>
              <description>00: mild 
01: low 
10: middle 
11: high</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mild</name>
                  <description>mild</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>low</name>
                  <description>low</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>middle</name>
                  <description>middle</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>high</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_ENHANCE_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SATURATION_GAIN</name>
              <description>Set 0x00, saturation gain is min. Set 0x80, saturation gain is 1. Set 0xFF, saturation gain is max.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE3</name>
          <description>TVD Enhancement Control Register3</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>CB_CR_GAIN_EN</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CR_GAIN</name>
              <description></description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_GAIN</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK1</name>
          <description>TVD HLOCK Control Register1</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x20000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>H_SAMPLE_STEP</name>
              <description>H_SAMPLE_STEP = F /F * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK2</name>
          <description>TVD HLOCK Control Register2</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x4ED60000</resetValue>
          <resetMask>0xFFFF000F</resetMask>
          <fields>
            <field>
              <name>HSYNC_FILTER_GATE_END_TIME</name>
              <description>These bits specify the end of the horizontal-blank-interval window. Default = 78</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_FILTER_GATE_START_TIME</name>
              <description>These bits specify the beginning of the horizontal-blank-interval window. Default = -42</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HTOL</name>
              <description>0000: 858 
0001: 864 0010~0111: Reserved Horizontal total pixels per line.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_858</name>
                  <description>858</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_864</name>
                  <description>864 0010~0111: Reserved Horizontal total pixels per line.</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK3</name>
          <description>TVD HLOCK Control Register3</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0xFE9502D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_END</name>
              <description>Hsync tip detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_START</name>
              <description>Hsync tip detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_END</name>
              <description>Hsync rising detect window end time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_START</name>
              <description>Hsync rising detect window start time</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK4</name>
          <description>TVD HLOCK Control Register4</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x3E3E8000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_FINE_TO_COARSE_OFFSET</name>
              <description>Hsync fine to coarse offset</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_TIME_FOR_FINE</name>
              <description>Hsync rising time for fine detect</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_END_TIME</name>
              <description>Hsync detect window end time for corase detect</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_START_TIME</name>
              <description>Hsync detect window start time for coarse detection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK5</name>
          <description>TVD HLOCK Control Register5</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4E225082</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_END_TIME</name>
              <description>Backporch detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_START_TIME</name>
              <description>Backporch detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_WIDTH</name>
              <description>HACTIVE_WIDTH</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_START</name>
              <description>HACTIVE_START</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_CTL</name>
          <description>TVD DMA Interrupt Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10001FB</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANNEL1_FRAME_END</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_STATUS</name>
          <description>TVD DMA Interrupt Status Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10101B3</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAME_FINISH_FLAG</name>
              <description>This bit automatically set every write back frame. Set 0x1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>WB_ADDR_CHANGE_ERR</name>
              <description>Write back address change error</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK</name>
              <description>0: TVD status no change 
1: TVD status change from lock to unlock</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from lock to unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: TVD status no change 
1: TVD status change from unlock to lock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from unlock to lock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_MODE</name>
          <description>TVD Mode Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0x137</resetMask>
          <fields>
            <field>
              <name>BLUE_MODE_COLOR</name>
              <description>0: blue 
1: black</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>blue</name>
                  <description>blue</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>black</name>
                  <description>black</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BLUE</name>
              <description>DISPLAY MODE 
00: Disabled 
01: Enabled 
10: Auto 
11: reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROGRESSIVE_MODE</name>
              <description>0: interlace mode 
1: progressive mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interlace_mode</name>
                  <description>interlace mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>progressive_mode</name>
                  <description>progressive mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SVIDEO_MODE</name>
              <description>0: cvbs 
1: S-Video</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>cvbs</name>
                  <description>cvbs</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>s_Video</name>
                  <description>S-Video</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YPBPR_MODE</name>
              <description>0: Disable the component input 
1: Enable the component input</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the component input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the component input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS1</name>
          <description>TVD Debug Status Register1</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_MAGNITUDE_STATUS</name>
              <description>These bits contain the chroma magnitude.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_DIGITAL_GAIN_STATUS</name>
              <description>These bits contain the digital AGC gain value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_ANALOG_GAIN_STATUS</name>
              <description>These bits contain the analog AGC gain value.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS2</name>
          <description>TVD Debug Status Register2</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS3</name>
          <description>TVD Debug Status Register3</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>HORIZONTAL_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[29:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS4</name>
          <description>TVD Debug Status Register4</description>
          <addressOffset>0x18C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>VCR_REW_VCR_REWIND_DETECTED</name>
              <description>VCR_REW VCR Rewind Detected</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_FF_VCR_FAST_FORWARD_DETECTED</name>
              <description>VCR_FF VCR Fast-Forward Detected</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_TRICK_VCR_TRICK_MODE_DETECTED</name>
              <description>VCR_TRICK VCR Trick-Mode Detected</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_VCR_DETECTED</name>
              <description>VCR VCR Detected</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOISY_NOISY_SIGNAL_DETECTED</name>
              <description>NOISY Noisy Signal Detected. This bit is set when the detected noise value (status register 7Fh) is greater than the value programmed into the `noise_thresh` register (05h).</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCAN_LINES</name>
              <description>625LINES_DETECTED 625 Scan Lines Detected</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECAM_DETECTED_SECAM_COLOUR_MODE</name>
              <description>SECAM_DETECTED SECAM Colour Mode Detected</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAL_DETECTED_PAL_COLOUR_MODE</name>
              <description>PAL_DETECTED PAL Colour Mode Detected</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VNON_STANDARD_VERTICAL_FREQUENCY_NON_STANDARD</name>
              <description>VNON_STANDARD Vertical frequency non-standard input signal Detected</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HNON_STANDARD_HORIZONTAL_FREQUENCY_NON_STANDARD</name>
              <description>HNON_STANDARD Horizontal frequency non-standard input signal Detected</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PROSCAN_DETECTED_PROGRESSIVE_SCAN_DETECTED</name>
              <description>PROSCAN_DETECTED Progressive Scan Detected</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_COLOUR_STRIPES_DETECTED</name>
              <description>MACROVISION_COLOUR_STRIPES_DETECTED. The number indicates the number of colour stripe lines in each group</description>
              <bitRange>[7:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_VBI_PSEUDO_SYNC_PULSES_DETECTION</name>
              <description>MACROVISION_VBI_PSEUDO-SYNC_PULSES_DETECTION 
1: Detected 
0: Undetected</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Detected</name>
                  <description>Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Undetected</name>
                  <description>Undetected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_PLL_LOCKED_TO_COLOUR_BURST</name>
              <description>CHROMA_PLL_LOCKED_TO_COLOUR_BURST 
1: Locked 
0: Unlocked</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VERTICAL_LOCK</name>
              <description>VERTICAL_LOCK 
1: Locked 
0: Unlocked</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HORIZONTAL_LINE_LOCKED</name>
              <description>HORIZONTAL_LINE_LOCKED 
1: Locked 
0: Unlocked</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NO_SIGNAL_DETECTION</name>
              <description>NO_SIGNAL_DETECTION 
1: No Signal Detected 
0: Signal Detected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Signal</name>
                  <description>No Signal Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Signal</name>
                  <description>Signal Detected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS5</name>
          <description>TVD Debug Status Register5</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFBFF</resetMask>
          <fields>
            <field>
              <name>BLANK_LEVEL</name>
              <description></description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYNC_LEVEL</name>
              <description></description>
              <bitRange>[21:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC_DATA_SHOW</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_DATA_VALUE</name>
              <description></description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS6</name>
          <description>TVD Debug Status Register6</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>MASK_UNKNOWN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_SECAM</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_NTSC443</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PAL60</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALCN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALM</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTO_DETECT_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV</name>
              <description>STANDARD 
001: V525_NTSC 
010: V625_PAL 
011: V525_PALM 
100: V625_PALN 
101: V525_PAL60 
110: V525_NTSC443 
111: V625_SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V525_NTSC</name>
                  <description>V525_NTSC</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PAL</name>
                  <description>V625_PAL</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PALM</name>
                  <description>V525_PALM</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PALN</name>
                  <description>V625_PALN</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PAL60</name>
                  <description>V525_PAL60</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_NTSC443</name>
                  <description>V525_NTSC443</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_SECAM</name>
                  <description>V625_SECAM</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTO_DETECT_FINISH</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK1</name>
          <description>TVD VLOCK Control Register1</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x610220</resetValue>
          <resetMask>0x7FF7FF7</resetMask>
          <fields>
            <field>
              <name>VACTIVE_HEIGHT</name>
              <description></description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VACTIVE_START</name>
              <description></description>
              <bitRange>[14:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VTOL</name>
              <description>000: 525 line 
001: 625 line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_525_line</name>
                  <description>525 line</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_625_line</name>
                  <description>625 line</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK2</name>
          <description>TVD VLOCK Control Register2</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE0070</resetValue>
          <resetMask>0x1F007F</resetMask>
          <fields>
            <field>
              <name>HSYNC_DETECTOR</name>
              <description>Hsync detector disable end line</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DECTECTOR</name>
              <description>Hsync dectector disable start line</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB1</name>
          <description>TVD WB DMA Control Register1</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x2D00020</resetValue>
          <resetMask>0xFFF017F</resetMask>
          <fields>
            <field>
              <name>HACTIVE_STRIDE</name>
              <description>Horizontal active line stride.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_ADDR_VALID</name>
              <description>0: invalid 
1: valid</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>invalid</name>
                  <description>invalid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>valid</name>
                  <description>valid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLIP_FIELD</name>
              <description>flip_field This bit flips even/odd fields</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_FRAME_MODE</name>
              <description>0: odd field or even field(desided by bit2) 
1: frame</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>odd</name>
                  <description>odd field or even field(desided by bit2)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>frame</name>
                  <description>frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_MB_MODE</name>
              <description>0: planar mode 
1: mb mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>planar_mode</name>
                  <description>planar mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>mb_mode</name>
                  <description>mb mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HYSCALE_EN</name>
              <description>hyscale en</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>0: field 0 only 
1: filed 1 only</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>field</name>
                  <description>field 0 only</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>filed</name>
                  <description>filed 1 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_FORMAT</name>
              <description>0: YUV420 
1: YUV422</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUV420</name>
                  <description>YUV420</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB2</name>
          <description>TVD WB DMA Control Register2</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0xF002D0</resetValue>
          <resetMask>0x7FF0FFF</resetMask>
          <fields>
            <field>
              <name>VACTIVE_NUM</name>
              <description>Vertical active line number.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_NUM</name>
              <description>Horizontal active pixel number.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB3</name>
          <description>TVD WB DMA Control Register3</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_Y_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB4</name>
          <description>TVD WB DMA Control Register4</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_C_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP1</name>
          <description>TVD YC Seperation Control Register1</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x4209</resetValue>
          <resetMask>0x3FF1FFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_CORING_ENABLE</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>2D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOTCH_FACTOR</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COMB_FILTER_BUFFER_CLEAR</name>
              <description>0: not clear 
1: clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_clear</name>
                  <description>not clear</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PAL_CHROMA_LEVEL</name>
              <description>Chroma level threshold for chroma comb filter select</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_BANDPASS_FILTER_EN</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECAM_NOTCH_WIDE</name>
              <description>Notch bandwidth 
0: narraw 
1: wide</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>narraw</name>
                  <description>narraw</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>wide</name>
                  <description>wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>2D_COMB_FILTER_MODE</name>
              <description>For NTSC 
0000: 2D comb 0001,0010: Reserved 
0011: 1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2D</name>
                  <description>2D comb 0001,0010: Reserved</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1D</name>
                  <description>1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
                  <value>0b0011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_DIS</name>
              <description>0: Enable 3D comb filter 
1: Disable 3D comb filter</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 3D comb filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 3D comb filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_MODE</name>
              <description>000: 2D mode 
001: 3D YC separation mode1 010,011: Reserved 
100: 3D YC separation mode2</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP2</name>
          <description>TVD YC Seperation Control Register2</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0xFF6440AF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VERTICAL_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_CHROMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_LUMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVD2</name>
      <description>TVD2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C33000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TVD_CLAMP_AGC1</name>
          <description>TVD CLAMP &amp; AGC Control Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xA001DD02</resetValue>
          <resetMask>0xFF01FF03</resetMask>
          <fields>
            <field>
              <name>CAGC_TARGET</name>
              <description>These bits set the chroma AGC target</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAGC_EN</name>
              <description>0: off 
1: on</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>off</name>
                  <description>off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>on</name>
                  <description>on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_TARGET</name>
              <description>When AGC_EN = 1 , the AGC_TARGET is used to directly digital AGC circuit. When AGC_EN = 0 , the AGC_TARGET is used to directly drive the analog PGA. (64 represents 1x, 32 represents 0.5x).</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_FREQUENCE</name>
              <description>0: AGC gain update once per line 
1: AGC gain update once per frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per_line</name>
                  <description>AGC gain update once per line</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per</name>
                  <description>AGC gain update once per frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_EN</name>
              <description>0: AGC disable 
1: AGC enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_disable</name>
                  <description>AGC disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_enable</name>
                  <description>AGC enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLAMP_AGC2</name>
          <description>TVD CLAMP &amp; AGC Control Register2</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x86826440</resetValue>
          <resetMask>0x9FFFFF7F</resetMask>
          <fields>
            <field>
              <name>BLACK_LEVEL_CLAMP</name>
              <description>0: subtraction 0 
1: subtraction 16</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>subtraction_0</name>
                  <description>subtraction 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>subtraction_16</name>
                  <description>subtraction 16</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_GATE_BEGIN</name>
              <description>Count from hsync to the next line AGC gate</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_BACKPORCH_DELAY</name>
              <description>Count from sync tip to back porch gate</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_GATE_WIDTH</name>
              <description>AGC gate width</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK1</name>
          <description>TVD Chroma Lock Control Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x463201</resetValue>
          <resetMask>0x1DFFFF0F</resetMask>
          <fields>
            <field>
              <name>COLOR_STD_NTSC</name>
              <description>COLOR_STD_NTSC 
0: NTSC358 
1: NTSC443 Only valid when COLOR_STD set as NTSC</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NTSC358</name>
                  <description>NTSC358</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NTSC443</name>
                  <description>NTSC443 Only valid when COLOR_STD set as NTSC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_LPF</name>
              <description>CHROMA_LPF 
00: Narrow 
01: Middle 
10: Wide 
11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Middle</name>
                  <description>Middle</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WIDE_BURST_GATE</name>
              <description>wide_burst_gate 
0: Narrow burst gate 
1: Wide burst gate</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow burst gate</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide burst gate</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BURST_GATE_END_TIME</name>
              <description>Burst gate end time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_GATE_START_TIME</name>
              <description>Burst gate start time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_STD</name>
              <description>COLOR_STD 
000: NTSC 
001: PAL (I,B,G,H,D,N) 
010: PAL (M) 
011: PAL (CN) 
100: SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_KILL_EN</name>
              <description>COLOR KILL EN 
1: Disable color when chroma unlock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable color when chroma unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK2</name>
          <description>TVD Chroma Lock Control Register2</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x21F07C1F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C_SAMPLE_STEP</name>
              <description>C_SAMPLE_STEP = F /Fin * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_DEBUG1</name>
          <description>TVD Debug Control Register1</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x100000</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>CLAMP_UPDN_CYCLES</name>
              <description>CLAMP_UPDN_CYCLES</description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_DN_START_WRITE</name>
              <description>CLAMP_DN_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_UP_START_WRITE</name>
              <description>CLAMP_UP_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_MODE</name>
              <description>CLAMP_MODE 
0: normal, auto clamp control 
1: debug mode, clamp control by register</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal, auto clamp control</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, clamp control by register</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFE_GAIN_MODE</name>
              <description>AFE_GAIN_MODE 
0: auto gain mode 
1: debug mode, AFE gain is determined by .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>auto</name>
                  <description>auto gain mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, AFE gain is determined by .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_RESET_GAIN_ENABLE</name>
              <description>UNLOCK_RESET_GAIN_ENABLE</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION_RESET_GAIN_ENABLE</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION2_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION2_RESET_GAIN_ENABLE</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_HIGH</name>
              <description>TVIN LOCK_HIGH</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_DEBUG</name>
              <description>TVIN LOCK_DEBUG</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFE_GAIN_VALUE</name>
              <description>AFE_GAIN_VALUE</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_EN</name>
          <description>TVD Module Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6008001</resetMask>
          <fields>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK2(WHEN_UNLOCKED</name>
              <description>en lock disable write back2(when unlocked,auto disable wb)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK1(ONLY_START</name>
              <description>en lock disable write back1(only start wb when locked)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLR_RSMP_FIFO</name>
              <description>0: release 
1: clear Set 0x1 then 0x0 to reset resample FIFO.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>release</name>
                  <description>release</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear Set 0x1 then 0x0 to reset resample FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_EN_CH</name>
              <description>0:disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE1</name>
          <description>TVD Enhancement Control Register1</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x14208000</resetValue>
          <resetMask>0x3FFFFF0F</resetMask>
          <fields>
            <field>
              <name>SHARP_COEF2</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_COEF1</name>
              <description>Y = Y + YH *(SHARP_COEF1/SHARP_COEF2)</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BRIGHT_OFFSET</name>
              <description>Set 0x00, brightness offset is -32. Set 0x20, brightness offset is 0. Set 0xFF, brightness offset is max.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTRAST_GAIN</name>
              <description>Set 0x00, contrast gain is min. Set 0x80, contrast gain is 1. Set 0xFF, contrast gain is max.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YC_DELAY</name>
              <description>0000: Y and C no delay 
0001: Y delay 1 cycle to C 
0010: Y delay 2 cycle to C 
0011: Y delay 3 cycle to C 
0100: Y delay 4 cycle to C 
0101: Y delay 5 cycle to C 
0110: Y delay 6 cycle to C 
0111: Y delay 7 cycle to C 
1000: Reserved 
1001: Reserved 
1010: Reserved 
1011: C delay 5 cycle to Y 
1100: C delay 4 cycle to Y 
1101: C delay 3 cycle to Y 
1110: C delay 2 cycle to Y 
1111: C delay 1 cycle to Y</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_and_C</name>
                  <description>Y and C no delay</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_1_cycle</name>
                  <description>Y delay 1 cycle to C</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_2_cycle</name>
                  <description>Y delay 2 cycle to C</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_3_cycle</name>
                  <description>Y delay 3 cycle to C</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_4_cycle</name>
                  <description>Y delay 4 cycle to C</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_5_cycle</name>
                  <description>Y delay 5 cycle to C</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_6_cycle</name>
                  <description>Y delay 6 cycle to C</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_7_cycle</name>
                  <description>Y delay 7 cycle to C</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_5_cycle</name>
                  <description>C delay 5 cycle to Y</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_4_cycle</name>
                  <description>C delay 4 cycle to Y</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_3_cycle</name>
                  <description>C delay 3 cycle to Y</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_2_cycle</name>
                  <description>C delay 2 cycle to Y</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_1_cycle</name>
                  <description>C delay 1 cycle to Y</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE2</name>
          <description>TVD Enhancement Control Register2</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x680</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>CHROMA_ENHANCE_STRENGTH</name>
              <description>00: mild 
01: low 
10: middle 
11: high</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mild</name>
                  <description>mild</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>low</name>
                  <description>low</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>middle</name>
                  <description>middle</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>high</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_ENHANCE_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SATURATION_GAIN</name>
              <description>Set 0x00, saturation gain is min. Set 0x80, saturation gain is 1. Set 0xFF, saturation gain is max.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE3</name>
          <description>TVD Enhancement Control Register3</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>CB_CR_GAIN_EN</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CR_GAIN</name>
              <description></description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_GAIN</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK1</name>
          <description>TVD HLOCK Control Register1</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x20000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>H_SAMPLE_STEP</name>
              <description>H_SAMPLE_STEP = F /F * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK2</name>
          <description>TVD HLOCK Control Register2</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x4ED60000</resetValue>
          <resetMask>0xFFFF000F</resetMask>
          <fields>
            <field>
              <name>HSYNC_FILTER_GATE_END_TIME</name>
              <description>These bits specify the end of the horizontal-blank-interval window. Default = 78</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_FILTER_GATE_START_TIME</name>
              <description>These bits specify the beginning of the horizontal-blank-interval window. Default = -42</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HTOL</name>
              <description>0000: 858 
0001: 864 0010~0111: Reserved Horizontal total pixels per line.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_858</name>
                  <description>858</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_864</name>
                  <description>864 0010~0111: Reserved Horizontal total pixels per line.</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK3</name>
          <description>TVD HLOCK Control Register3</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0xFE9502D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_END</name>
              <description>Hsync tip detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_START</name>
              <description>Hsync tip detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_END</name>
              <description>Hsync rising detect window end time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_START</name>
              <description>Hsync rising detect window start time</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK4</name>
          <description>TVD HLOCK Control Register4</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x3E3E8000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_FINE_TO_COARSE_OFFSET</name>
              <description>Hsync fine to coarse offset</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_TIME_FOR_FINE</name>
              <description>Hsync rising time for fine detect</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_END_TIME</name>
              <description>Hsync detect window end time for corase detect</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_START_TIME</name>
              <description>Hsync detect window start time for coarse detection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK5</name>
          <description>TVD HLOCK Control Register5</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4E225082</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_END_TIME</name>
              <description>Backporch detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_START_TIME</name>
              <description>Backporch detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_WIDTH</name>
              <description>HACTIVE_WIDTH</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_START</name>
              <description>HACTIVE_START</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_CTL</name>
          <description>TVD DMA Interrupt Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10001FB</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANNEL1_FRAME_END</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_STATUS</name>
          <description>TVD DMA Interrupt Status Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10101B3</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAME_FINISH_FLAG</name>
              <description>This bit automatically set every write back frame. Set 0x1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>WB_ADDR_CHANGE_ERR</name>
              <description>Write back address change error</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK</name>
              <description>0: TVD status no change 
1: TVD status change from lock to unlock</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from lock to unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: TVD status no change 
1: TVD status change from unlock to lock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from unlock to lock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_MODE</name>
          <description>TVD Mode Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0x137</resetMask>
          <fields>
            <field>
              <name>BLUE_MODE_COLOR</name>
              <description>0: blue 
1: black</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>blue</name>
                  <description>blue</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>black</name>
                  <description>black</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BLUE</name>
              <description>DISPLAY MODE 
00: Disabled 
01: Enabled 
10: Auto 
11: reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROGRESSIVE_MODE</name>
              <description>0: interlace mode 
1: progressive mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interlace_mode</name>
                  <description>interlace mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>progressive_mode</name>
                  <description>progressive mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SVIDEO_MODE</name>
              <description>0: cvbs 
1: S-Video</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>cvbs</name>
                  <description>cvbs</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>s_Video</name>
                  <description>S-Video</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YPBPR_MODE</name>
              <description>0: Disable the component input 
1: Enable the component input</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the component input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the component input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS1</name>
          <description>TVD Debug Status Register1</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_MAGNITUDE_STATUS</name>
              <description>These bits contain the chroma magnitude.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_DIGITAL_GAIN_STATUS</name>
              <description>These bits contain the digital AGC gain value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_ANALOG_GAIN_STATUS</name>
              <description>These bits contain the analog AGC gain value.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS2</name>
          <description>TVD Debug Status Register2</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS3</name>
          <description>TVD Debug Status Register3</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>HORIZONTAL_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[29:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS4</name>
          <description>TVD Debug Status Register4</description>
          <addressOffset>0x18C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>VCR_REW_VCR_REWIND_DETECTED</name>
              <description>VCR_REW VCR Rewind Detected</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_FF_VCR_FAST_FORWARD_DETECTED</name>
              <description>VCR_FF VCR Fast-Forward Detected</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_TRICK_VCR_TRICK_MODE_DETECTED</name>
              <description>VCR_TRICK VCR Trick-Mode Detected</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_VCR_DETECTED</name>
              <description>VCR VCR Detected</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOISY_NOISY_SIGNAL_DETECTED</name>
              <description>NOISY Noisy Signal Detected. This bit is set when the detected noise value (status register 7Fh) is greater than the value programmed into the `noise_thresh` register (05h).</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCAN_LINES</name>
              <description>625LINES_DETECTED 625 Scan Lines Detected</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECAM_DETECTED_SECAM_COLOUR_MODE</name>
              <description>SECAM_DETECTED SECAM Colour Mode Detected</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAL_DETECTED_PAL_COLOUR_MODE</name>
              <description>PAL_DETECTED PAL Colour Mode Detected</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VNON_STANDARD_VERTICAL_FREQUENCY_NON_STANDARD</name>
              <description>VNON_STANDARD Vertical frequency non-standard input signal Detected</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HNON_STANDARD_HORIZONTAL_FREQUENCY_NON_STANDARD</name>
              <description>HNON_STANDARD Horizontal frequency non-standard input signal Detected</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PROSCAN_DETECTED_PROGRESSIVE_SCAN_DETECTED</name>
              <description>PROSCAN_DETECTED Progressive Scan Detected</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_COLOUR_STRIPES_DETECTED</name>
              <description>MACROVISION_COLOUR_STRIPES_DETECTED. The number indicates the number of colour stripe lines in each group</description>
              <bitRange>[7:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_VBI_PSEUDO_SYNC_PULSES_DETECTION</name>
              <description>MACROVISION_VBI_PSEUDO-SYNC_PULSES_DETECTION 
1: Detected 
0: Undetected</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Detected</name>
                  <description>Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Undetected</name>
                  <description>Undetected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_PLL_LOCKED_TO_COLOUR_BURST</name>
              <description>CHROMA_PLL_LOCKED_TO_COLOUR_BURST 
1: Locked 
0: Unlocked</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VERTICAL_LOCK</name>
              <description>VERTICAL_LOCK 
1: Locked 
0: Unlocked</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HORIZONTAL_LINE_LOCKED</name>
              <description>HORIZONTAL_LINE_LOCKED 
1: Locked 
0: Unlocked</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NO_SIGNAL_DETECTION</name>
              <description>NO_SIGNAL_DETECTION 
1: No Signal Detected 
0: Signal Detected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Signal</name>
                  <description>No Signal Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Signal</name>
                  <description>Signal Detected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS5</name>
          <description>TVD Debug Status Register5</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFBFF</resetMask>
          <fields>
            <field>
              <name>BLANK_LEVEL</name>
              <description></description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYNC_LEVEL</name>
              <description></description>
              <bitRange>[21:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC_DATA_SHOW</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_DATA_VALUE</name>
              <description></description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS6</name>
          <description>TVD Debug Status Register6</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>MASK_UNKNOWN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_SECAM</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_NTSC443</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PAL60</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALCN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALM</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTO_DETECT_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV</name>
              <description>STANDARD 
001: V525_NTSC 
010: V625_PAL 
011: V525_PALM 
100: V625_PALN 
101: V525_PAL60 
110: V525_NTSC443 
111: V625_SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V525_NTSC</name>
                  <description>V525_NTSC</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PAL</name>
                  <description>V625_PAL</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PALM</name>
                  <description>V525_PALM</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PALN</name>
                  <description>V625_PALN</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PAL60</name>
                  <description>V525_PAL60</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_NTSC443</name>
                  <description>V525_NTSC443</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_SECAM</name>
                  <description>V625_SECAM</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTO_DETECT_FINISH</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK1</name>
          <description>TVD VLOCK Control Register1</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x610220</resetValue>
          <resetMask>0x7FF7FF7</resetMask>
          <fields>
            <field>
              <name>VACTIVE_HEIGHT</name>
              <description></description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VACTIVE_START</name>
              <description></description>
              <bitRange>[14:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VTOL</name>
              <description>000: 525 line 
001: 625 line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_525_line</name>
                  <description>525 line</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_625_line</name>
                  <description>625 line</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK2</name>
          <description>TVD VLOCK Control Register2</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE0070</resetValue>
          <resetMask>0x1F007F</resetMask>
          <fields>
            <field>
              <name>HSYNC_DETECTOR</name>
              <description>Hsync detector disable end line</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DECTECTOR</name>
              <description>Hsync dectector disable start line</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB1</name>
          <description>TVD WB DMA Control Register1</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x2D00020</resetValue>
          <resetMask>0xFFF017F</resetMask>
          <fields>
            <field>
              <name>HACTIVE_STRIDE</name>
              <description>Horizontal active line stride.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_ADDR_VALID</name>
              <description>0: invalid 
1: valid</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>invalid</name>
                  <description>invalid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>valid</name>
                  <description>valid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLIP_FIELD</name>
              <description>flip_field This bit flips even/odd fields</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_FRAME_MODE</name>
              <description>0: odd field or even field(desided by bit2) 
1: frame</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>odd</name>
                  <description>odd field or even field(desided by bit2)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>frame</name>
                  <description>frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_MB_MODE</name>
              <description>0: planar mode 
1: mb mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>planar_mode</name>
                  <description>planar mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>mb_mode</name>
                  <description>mb mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HYSCALE_EN</name>
              <description>hyscale en</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>0: field 0 only 
1: filed 1 only</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>field</name>
                  <description>field 0 only</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>filed</name>
                  <description>filed 1 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_FORMAT</name>
              <description>0: YUV420 
1: YUV422</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUV420</name>
                  <description>YUV420</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB2</name>
          <description>TVD WB DMA Control Register2</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0xF002D0</resetValue>
          <resetMask>0x7FF0FFF</resetMask>
          <fields>
            <field>
              <name>VACTIVE_NUM</name>
              <description>Vertical active line number.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_NUM</name>
              <description>Horizontal active pixel number.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB3</name>
          <description>TVD WB DMA Control Register3</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_Y_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB4</name>
          <description>TVD WB DMA Control Register4</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_C_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP1</name>
          <description>TVD YC Seperation Control Register1</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x4209</resetValue>
          <resetMask>0x3FF1FFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_CORING_ENABLE</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>2D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOTCH_FACTOR</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COMB_FILTER_BUFFER_CLEAR</name>
              <description>0: not clear 
1: clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_clear</name>
                  <description>not clear</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PAL_CHROMA_LEVEL</name>
              <description>Chroma level threshold for chroma comb filter select</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_BANDPASS_FILTER_EN</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECAM_NOTCH_WIDE</name>
              <description>Notch bandwidth 
0: narraw 
1: wide</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>narraw</name>
                  <description>narraw</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>wide</name>
                  <description>wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>2D_COMB_FILTER_MODE</name>
              <description>For NTSC 
0000: 2D comb 0001,0010: Reserved 
0011: 1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2D</name>
                  <description>2D comb 0001,0010: Reserved</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1D</name>
                  <description>1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
                  <value>0b0011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_DIS</name>
              <description>0: Enable 3D comb filter 
1: Disable 3D comb filter</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 3D comb filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 3D comb filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_MODE</name>
              <description>000: 2D mode 
001: 3D YC separation mode1 010,011: Reserved 
100: 3D YC separation mode2</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP2</name>
          <description>TVD YC Seperation Control Register2</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0xFF6440AF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VERTICAL_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_CHROMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_LUMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVD3</name>
      <description>TVD3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C34000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TVD_CLAMP_AGC1</name>
          <description>TVD CLAMP &amp; AGC Control Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xA001DD02</resetValue>
          <resetMask>0xFF01FF03</resetMask>
          <fields>
            <field>
              <name>CAGC_TARGET</name>
              <description>These bits set the chroma AGC target</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CAGC_EN</name>
              <description>0: off 
1: on</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>off</name>
                  <description>off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>on</name>
                  <description>on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_TARGET</name>
              <description>When AGC_EN = 1 , the AGC_TARGET is used to directly digital AGC circuit. When AGC_EN = 0 , the AGC_TARGET is used to directly drive the analog PGA. (64 represents 1x, 32 represents 0.5x).</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_FREQUENCE</name>
              <description>0: AGC gain update once per line 
1: AGC gain update once per frame</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per_line</name>
                  <description>AGC gain update once per line</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_gain_update_once_per</name>
                  <description>AGC gain update once per frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_EN</name>
              <description>0: AGC disable 
1: AGC enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AGC_disable</name>
                  <description>AGC disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AGC_enable</name>
                  <description>AGC enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLAMP_AGC2</name>
          <description>TVD CLAMP &amp; AGC Control Register2</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x86826440</resetValue>
          <resetMask>0x9FFFFF7F</resetMask>
          <fields>
            <field>
              <name>BLACK_LEVEL_CLAMP</name>
              <description>0: subtraction 0 
1: subtraction 16</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>subtraction_0</name>
                  <description>subtraction 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>subtraction_16</name>
                  <description>subtraction 16</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_GATE_BEGIN</name>
              <description>Count from hsync to the next line AGC gate</description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_BACKPORCH_DELAY</name>
              <description>Count from sync tip to back porch gate</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AGC_GATE_WIDTH</name>
              <description>AGC gate width</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK1</name>
          <description>TVD Chroma Lock Control Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x463201</resetValue>
          <resetMask>0x1DFFFF0F</resetMask>
          <fields>
            <field>
              <name>COLOR_STD_NTSC</name>
              <description>COLOR_STD_NTSC 
0: NTSC358 
1: NTSC443 Only valid when COLOR_STD set as NTSC</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NTSC358</name>
                  <description>NTSC358</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NTSC443</name>
                  <description>NTSC443 Only valid when COLOR_STD set as NTSC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_LPF</name>
              <description>CHROMA_LPF 
00: Narrow 
01: Middle 
10: Wide 
11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Middle</name>
                  <description>Middle</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WIDE_BURST_GATE</name>
              <description>wide_burst_gate 
0: Narrow burst gate 
1: Wide burst gate</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow burst gate</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide burst gate</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BURST_GATE_END_TIME</name>
              <description>Burst gate end time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_GATE_START_TIME</name>
              <description>Burst gate start time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_STD</name>
              <description>COLOR_STD 
000: NTSC 
001: PAL (I,B,G,H,D,N) 
010: PAL (M) 
011: PAL (CN) 
100: SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COLOR_KILL_EN</name>
              <description>COLOR KILL EN 
1: Disable color when chroma unlock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable color when chroma unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_CLOCK2</name>
          <description>TVD Chroma Lock Control Register2</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x21F07C1F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C_SAMPLE_STEP</name>
              <description>C_SAMPLE_STEP = F /Fin * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_DEBUG1</name>
          <description>TVD Debug Control Register1</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x100000</resetValue>
          <resetMask>0xFFFFFF00</resetMask>
          <fields>
            <field>
              <name>CLAMP_UPDN_CYCLES</name>
              <description>CLAMP_UPDN_CYCLES</description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_DN_START_WRITE</name>
              <description>CLAMP_DN_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_UP_START_WRITE</name>
              <description>CLAMP_UP_START Write 0x1 to make clamp up, clamp up value is determined by . Note that this bit is only valid when is set as 0x1.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLAMP_MODE</name>
              <description>CLAMP_MODE 
0: normal, auto clamp control 
1: debug mode, clamp control by register</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal, auto clamp control</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, clamp control by register</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFE_GAIN_MODE</name>
              <description>AFE_GAIN_MODE 
0: auto gain mode 
1: debug mode, AFE gain is determined by .</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>auto</name>
                  <description>auto gain mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>debug</name>
                  <description>debug mode, AFE gain is determined by .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_RESET_GAIN_ENABLE</name>
              <description>UNLOCK_RESET_GAIN_ENABLE</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION_RESET_GAIN_ENABLE</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRUNCATION2_RESET_GAIN_ENABLE</name>
              <description>TRUNCATION2_RESET_GAIN_ENABLE</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_HIGH</name>
              <description>TVIN LOCK_HIGH</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TVIN_LOCK_DEBUG</name>
              <description>TVIN LOCK_DEBUG</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFE_GAIN_VALUE</name>
              <description>AFE_GAIN_VALUE</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_EN</name>
          <description>TVD Module Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x6008001</resetMask>
          <fields>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK2(WHEN_UNLOCKED</name>
              <description>en lock disable write back2(when unlocked,auto disable wb)</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN_LOCK_DISABLE_WRITE_BACK1(ONLY_START</name>
              <description>en lock disable write back1(only start wb when locked)</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLR_RSMP_FIFO</name>
              <description>0: release 
1: clear Set 0x1 then 0x0 to reset resample FIFO.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>release</name>
                  <description>release</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear Set 0x1 then 0x0 to reset resample FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVD_EN_CH</name>
              <description>0:disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE1</name>
          <description>TVD Enhancement Control Register1</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x14208000</resetValue>
          <resetMask>0x3FFFFF0F</resetMask>
          <fields>
            <field>
              <name>SHARP_COEF2</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_COEF1</name>
              <description>Y = Y + YH *(SHARP_COEF1/SHARP_COEF2)</description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHARP_EN</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BRIGHT_OFFSET</name>
              <description>Set 0x00, brightness offset is -32. Set 0x20, brightness offset is 0. Set 0xFF, brightness offset is max.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTRAST_GAIN</name>
              <description>Set 0x00, contrast gain is min. Set 0x80, contrast gain is 1. Set 0xFF, contrast gain is max.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YC_DELAY</name>
              <description>0000: Y and C no delay 
0001: Y delay 1 cycle to C 
0010: Y delay 2 cycle to C 
0011: Y delay 3 cycle to C 
0100: Y delay 4 cycle to C 
0101: Y delay 5 cycle to C 
0110: Y delay 6 cycle to C 
0111: Y delay 7 cycle to C 
1000: Reserved 
1001: Reserved 
1010: Reserved 
1011: C delay 5 cycle to Y 
1100: C delay 4 cycle to Y 
1101: C delay 3 cycle to Y 
1110: C delay 2 cycle to Y 
1111: C delay 1 cycle to Y</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_and_C</name>
                  <description>Y and C no delay</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_1_cycle</name>
                  <description>Y delay 1 cycle to C</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_2_cycle</name>
                  <description>Y delay 2 cycle to C</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_3_cycle</name>
                  <description>Y delay 3 cycle to C</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_4_cycle</name>
                  <description>Y delay 4 cycle to C</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_5_cycle</name>
                  <description>Y delay 5 cycle to C</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_6_cycle</name>
                  <description>Y delay 6 cycle to C</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_delay_7_cycle</name>
                  <description>Y delay 7 cycle to C</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_5_cycle</name>
                  <description>C delay 5 cycle to Y</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_4_cycle</name>
                  <description>C delay 4 cycle to Y</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_3_cycle</name>
                  <description>C delay 3 cycle to Y</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_2_cycle</name>
                  <description>C delay 2 cycle to Y</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_delay_1_cycle</name>
                  <description>C delay 1 cycle to Y</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE2</name>
          <description>TVD Enhancement Control Register2</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x680</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>CHROMA_ENHANCE_STRENGTH</name>
              <description>00: mild 
01: low 
10: middle 
11: high</description>
              <bitRange>[10:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mild</name>
                  <description>mild</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>low</name>
                  <description>low</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>middle</name>
                  <description>middle</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>high</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_ENHANCE_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SATURATION_GAIN</name>
              <description>Set 0x00, saturation gain is min. Set 0x80, saturation gain is 1. Set 0xFF, saturation gain is max.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_ENHANCE3</name>
          <description>TVD Enhancement Control Register3</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>CB_CR_GAIN_EN</name>
              <description></description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CR_GAIN</name>
              <description></description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_GAIN</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK1</name>
          <description>TVD HLOCK Control Register1</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x20000000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>H_SAMPLE_STEP</name>
              <description>H_SAMPLE_STEP = F /F * 2^30</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK2</name>
          <description>TVD HLOCK Control Register2</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x4ED60000</resetValue>
          <resetMask>0xFFFF000F</resetMask>
          <fields>
            <field>
              <name>HSYNC_FILTER_GATE_END_TIME</name>
              <description>These bits specify the end of the horizontal-blank-interval window. Default = 78</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_FILTER_GATE_START_TIME</name>
              <description>These bits specify the beginning of the horizontal-blank-interval window. Default = -42</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HTOL</name>
              <description>0000: 858 
0001: 864 0010~0111: Reserved Horizontal total pixels per line.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_858</name>
                  <description>858</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_864</name>
                  <description>864 0010~0111: Reserved Horizontal total pixels per line.</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK3</name>
          <description>TVD HLOCK Control Register3</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0xFE9502D</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_END</name>
              <description>Hsync tip detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_TIP_DETECT_WINDOW_START</name>
              <description>Hsync tip detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_END</name>
              <description>Hsync rising detect window end time</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_DETECT_WINDOW_START</name>
              <description>Hsync rising detect window start time</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK4</name>
          <description>TVD HLOCK Control Register4</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x3E3E8000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HSYNC_FINE_TO_COARSE_OFFSET</name>
              <description>Hsync fine to coarse offset</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_RISING_TIME_FOR_FINE</name>
              <description>Hsync rising time for fine detect</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_END_TIME</name>
              <description>Hsync detect window end time for corase detect</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DETECT_WINDOW_START_TIME</name>
              <description>Hsync detect window start time for coarse detection</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_HLOCK5</name>
          <description>TVD HLOCK Control Register5</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4E225082</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_END_TIME</name>
              <description>Backporch detect window end time</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BACKPORCH_DETECT_WINDOW_START_TIME</name>
              <description>Backporch detect window start time</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_WIDTH</name>
              <description>HACTIVE_WIDTH</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_START</name>
              <description>HACTIVE_START</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_CTL</name>
          <description>TVD DMA Interrupt Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10001FB</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANNEL1_FRAME_END</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_U_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PB_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_PR_O_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_EN</name>
              <description>0: IRQ disable 
1: IRQ enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IRQ_disable</name>
                  <description>IRQ disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ_enable</name>
                  <description>IRQ enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_IRQ_STATUS</name>
          <description>TVD DMA Interrupt Status Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF10101B3</resetMask>
          <fields>
            <field>
              <name>FIFO_3D_TX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_TX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_3D_RX_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAME_FINISH_FLAG</name>
              <description>This bit automatically set every write back frame. Set 0x1 to clear this bit.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>WB_ADDR_CHANGE_ERR</name>
              <description>Write back address change error</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_Y_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_U</name>
              <description>0: FIFO work normal 
1: FIFO underflow Write 0x1 to clear this bit.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_underflow</name>
                  <description>FIFO underflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_Y_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_C_O</name>
              <description>0: FIFO work normal 
1: FIFO overflow Write 0x1 to clear this bit.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_work</name>
                  <description>FIFO work normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_overflow</name>
                  <description>FIFO overflow Write 0x1 to clear this bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK</name>
              <description>0: TVD status no change 
1: TVD status change from lock to unlock</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from lock to unlock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: TVD status no change 
1: TVD status change from unlock to lock</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TVD_status_no_change</name>
                  <description>TVD status no change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TVD_status_change</name>
                  <description>TVD status change from unlock to lock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_MODE</name>
          <description>TVD Mode Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0x137</resetMask>
          <fields>
            <field>
              <name>BLUE_MODE_COLOR</name>
              <description>0: blue 
1: black</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>blue</name>
                  <description>blue</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>black</name>
                  <description>black</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BLUE</name>
              <description>DISPLAY MODE 
00: Disabled 
01: Enabled 
10: Auto 
11: reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROGRESSIVE_MODE</name>
              <description>0: interlace mode 
1: progressive mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interlace_mode</name>
                  <description>interlace mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>progressive_mode</name>
                  <description>progressive mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SVIDEO_MODE</name>
              <description>0: cvbs 
1: S-Video</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>cvbs</name>
                  <description>cvbs</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>s_Video</name>
                  <description>S-Video</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YPBPR_MODE</name>
              <description>0: Disable the component input 
1: Enable the component input</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the component input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the component input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS1</name>
          <description>TVD Debug Status Register1</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_MAGNITUDE_STATUS</name>
              <description>These bits contain the chroma magnitude.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_DIGITAL_GAIN_STATUS</name>
              <description>These bits contain the digital AGC gain value.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AGC_ANALOG_GAIN_STATUS</name>
              <description>These bits contain the analog AGC gain value.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS2</name>
          <description>TVD Debug Status Register2</description>
          <addressOffset>0x184</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS3</name>
          <description>TVD Debug Status Register3</description>
          <addressOffset>0x188</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>HORIZONTAL_SYNC_DTO_INCREMENT_STATUS</name>
              <description></description>
              <bitRange>[29:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS4</name>
          <description>TVD Debug Status Register4</description>
          <addressOffset>0x18C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>VCR_REW_VCR_REWIND_DETECTED</name>
              <description>VCR_REW VCR Rewind Detected</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_FF_VCR_FAST_FORWARD_DETECTED</name>
              <description>VCR_FF VCR Fast-Forward Detected</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_TRICK_VCR_TRICK_MODE_DETECTED</name>
              <description>VCR_TRICK VCR Trick-Mode Detected</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VCR_VCR_DETECTED</name>
              <description>VCR VCR Detected</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NOISY_NOISY_SIGNAL_DETECTED</name>
              <description>NOISY Noisy Signal Detected. This bit is set when the detected noise value (status register 7Fh) is greater than the value programmed into the `noise_thresh` register (05h).</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCAN_LINES</name>
              <description>625LINES_DETECTED 625 Scan Lines Detected</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SECAM_DETECTED_SECAM_COLOUR_MODE</name>
              <description>SECAM_DETECTED SECAM Colour Mode Detected</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAL_DETECTED_PAL_COLOUR_MODE</name>
              <description>PAL_DETECTED PAL Colour Mode Detected</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>VNON_STANDARD_VERTICAL_FREQUENCY_NON_STANDARD</name>
              <description>VNON_STANDARD Vertical frequency non-standard input signal Detected</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HNON_STANDARD_HORIZONTAL_FREQUENCY_NON_STANDARD</name>
              <description>HNON_STANDARD Horizontal frequency non-standard input signal Detected</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PROSCAN_DETECTED_PROGRESSIVE_SCAN_DETECTED</name>
              <description>PROSCAN_DETECTED Progressive Scan Detected</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_COLOUR_STRIPES_DETECTED</name>
              <description>MACROVISION_COLOUR_STRIPES_DETECTED. The number indicates the number of colour stripe lines in each group</description>
              <bitRange>[7:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>MACROVISION_VBI_PSEUDO_SYNC_PULSES_DETECTION</name>
              <description>MACROVISION_VBI_PSEUDO-SYNC_PULSES_DETECTION 
1: Detected 
0: Undetected</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Detected</name>
                  <description>Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Undetected</name>
                  <description>Undetected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_PLL_LOCKED_TO_COLOUR_BURST</name>
              <description>CHROMA_PLL_LOCKED_TO_COLOUR_BURST 
1: Locked 
0: Unlocked</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VERTICAL_LOCK</name>
              <description>VERTICAL_LOCK 
1: Locked 
0: Unlocked</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HORIZONTAL_LINE_LOCKED</name>
              <description>HORIZONTAL_LINE_LOCKED 
1: Locked 
0: Unlocked</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NO_SIGNAL_DETECTION</name>
              <description>NO_SIGNAL_DETECTION 
1: No Signal Detected 
0: Signal Detected</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Signal</name>
                  <description>No Signal Detected</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Signal</name>
                  <description>Signal Detected</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS5</name>
          <description>TVD Debug Status Register5</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFBFF</resetMask>
          <fields>
            <field>
              <name>BLANK_LEVEL</name>
              <description></description>
              <bitRange>[31:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SYNC_LEVEL</name>
              <description></description>
              <bitRange>[21:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ADC_DATA_SHOW</name>
              <description></description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_DATA_VALUE</name>
              <description></description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_STATUS6</name>
          <description>TVD Debug Status Register6</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>MASK_UNKNOWN</name>
              <description></description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_SECAM</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_NTSC443</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PAL60</name>
              <description></description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALCN</name>
              <description></description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MASK_PALM</name>
              <description></description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTO_DETECT_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TV</name>
              <description>STANDARD 
001: V525_NTSC 
010: V625_PAL 
011: V525_PALM 
100: V625_PALN 
101: V525_PAL60 
110: V525_NTSC443 
111: V625_SECAM</description>
              <bitRange>[3:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>V525_NTSC</name>
                  <description>V525_NTSC</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PAL</name>
                  <description>V625_PAL</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PALM</name>
                  <description>V525_PALM</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_PALN</name>
                  <description>V625_PALN</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_PAL60</name>
                  <description>V525_PAL60</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V525_NTSC443</name>
                  <description>V525_NTSC443</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V625_SECAM</name>
                  <description>V625_SECAM</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AUTO_DETECT_FINISH</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK1</name>
          <description>TVD VLOCK Control Register1</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x610220</resetValue>
          <resetMask>0x7FF7FF7</resetMask>
          <fields>
            <field>
              <name>VACTIVE_HEIGHT</name>
              <description></description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VACTIVE_START</name>
              <description></description>
              <bitRange>[14:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VTOL</name>
              <description>000: 525 line 
001: 625 line</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_525_line</name>
                  <description>525 line</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_625_line</name>
                  <description>625 line</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_VLOCK2</name>
          <description>TVD VLOCK Control Register2</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE0070</resetValue>
          <resetMask>0x1F007F</resetMask>
          <fields>
            <field>
              <name>HSYNC_DETECTOR</name>
              <description>Hsync detector disable end line</description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_DECTECTOR</name>
              <description>Hsync dectector disable start line</description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB1</name>
          <description>TVD WB DMA Control Register1</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x2D00020</resetValue>
          <resetMask>0xFFF017F</resetMask>
          <fields>
            <field>
              <name>HACTIVE_STRIDE</name>
              <description>Horizontal active line stride.</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_ADDR_VALID</name>
              <description>0: invalid 
1: valid</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>invalid</name>
                  <description>invalid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>valid</name>
                  <description>valid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLIP_FIELD</name>
              <description>flip_field This bit flips even/odd fields</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WB_FRAME_MODE</name>
              <description>0: odd field or even field(desided by bit2) 
1: frame</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>odd</name>
                  <description>odd field or even field(desided by bit2)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>frame</name>
                  <description>frame</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_MB_MODE</name>
              <description>0: planar mode 
1: mb mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>planar_mode</name>
                  <description>planar mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>mb_mode</name>
                  <description>mb mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HYSCALE_EN</name>
              <description>hyscale en</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>0: field 0 only 
1: filed 1 only</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>field</name>
                  <description>field 0 only</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>filed</name>
                  <description>filed 1 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_FORMAT</name>
              <description>0: YUV420 
1: YUV422</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUV420</name>
                  <description>YUV420</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WB_EN</name>
              <description>0: disable 
1: enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB2</name>
          <description>TVD WB DMA Control Register2</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0xF002D0</resetValue>
          <resetMask>0x7FF0FFF</resetMask>
          <fields>
            <field>
              <name>VACTIVE_NUM</name>
              <description>Vertical active line number.</description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HACTIVE_NUM</name>
              <description>Horizontal active pixel number.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB3</name>
          <description>TVD WB DMA Control Register3</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_Y_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_WB4</name>
          <description>TVD WB DMA Control Register4</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CH1_C_ADDR</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP1</name>
          <description>TVD YC Seperation Control Register1</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x4209</resetValue>
          <resetMask>0x3FF1FFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_CORING_ENABLE</name>
              <description></description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>2D_COMB_FACTOR</name>
              <description></description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOTCH_FACTOR</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COMB_FILTER_BUFFER_CLEAR</name>
              <description>0: not clear 
1: clear</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_clear</name>
                  <description>not clear</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>clear</name>
                  <description>clear</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PAL_CHROMA_LEVEL</name>
              <description>Chroma level threshold for chroma comb filter select</description>
              <bitRange>[15:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_BANDPASS_FILTER_EN</name>
              <description></description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECAM_NOTCH_WIDE</name>
              <description>Notch bandwidth 
0: narraw 
1: wide</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>narraw</name>
                  <description>narraw</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>wide</name>
                  <description>wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>2D_COMB_FILTER_MODE</name>
              <description>For NTSC 
0000: 2D comb 0001,0010: Reserved 
0011: 1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2D</name>
                  <description>2D comb 0001,0010: Reserved</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1D</name>
                  <description>1D comb 0100,0101,0110,0111,1000: Reserved For PAL 0= 2D comb filter1 1= 1D comb filter1 2= 2D comb filter2 3= 1D comb filter2 4= 1D comb filter3 5=Reserved 6= 2D comb filter3 7,8= Reserved</description>
                  <value>0b0011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_DIS</name>
              <description>0: Enable 3D comb filter 
1: Disable 3D comb filter</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable 3D comb filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable 3D comb filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_COMB_FILTER_MODE</name>
              <description>000: 2D mode 
001: 3D YC separation mode1 010,011: Reserved 
100: 3D YC separation mode2</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVD_YC_SEP2</name>
          <description>TVD YC Seperation Control Register2</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0xFF6440AF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VERTICAL_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_NOISE_FACTOR</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[23:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_THRESHOLD</name>
              <description></description>
              <bitRange>[15:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MOTION_DETECT_NOISE_DETECT_EN</name>
              <description></description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LUMA_VERTICAL_FILTER_GAIN</name>
              <description></description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_CHROMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HORIZONTAL_LUMA_FILTER_GAIN</name>
              <description></description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVE_TOP</name>
      <description>TVE_TOP</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C90000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>4</dim>
          <dimIncrement>32</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x20</addressOffset>
          <register>
            <name>TVE_DAC_CFG0</name>
            <description>TV Encoder DAC CFG0 Register</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x80004000</resetValue>
            <resetMask>0x83FFF311</resetMask>
            <fields>
              <field>
                <name>DAC_CLOCK_INVERT</name>
                <description>0: Not invert 
1: Invert</description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Not_invert</name>
                    <description>Not invert</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Invert</name>
                    <description>Invert</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CALI_IN</name>
                <description></description>
                <bitRange>[25:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>LOW_BIAS</name>
                <description>500uA to 4mA</description>
                <bitRange>[15:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>BIAS_EXT_SEL</name>
                <description>0: Disable 
1: Enable (a_sel_bias_adda)</description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (a_sel_bias_adda)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>BIAS_INT_SEL</name>
                <description>0: Disable 
1: Enable (a_sel_bias_res)</description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (a_sel_bias_res)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>BIAS_REF_INT_EN</name>
                <description>0: Disable 
1: Enable (a_en_resref)</description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (a_en_resref)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_EN</name>
                <description>0: Disable 
1: Enable</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TVE_DAC_CFG1</name>
            <description>TV Encoder DAC CFG1 Register</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x3A</resetValue>
            <resetMask>0x33F</resetMask>
            <fields>
              <field>
                <name>REF_EXT_SEL</name>
                <description>0: Disable 
1: Enable (a_sel_detref_ldo)</description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (a_sel_detref_ldo)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>REF_INT_SEL</name>
                <description>0: Disable 
1: Enable (a_sel_detref_res)</description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (a_sel_detref_res)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>REF2_SEL</name>
                <description>00: 0.25V 
01: 0.30V 
10: 0.35V 
11: 0.40V (a_refslct2&lt;1:0&gt;)</description>
                <bitRange>[5:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_0_point_25V</name>
                    <description>0.25V</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_30V</name>
                    <description>0.30V</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_35V</name>
                    <description>0.35V</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_40V</name>
                    <description>0.40V (a_refslct2&lt;1:0&gt;)</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>REF1_SEL</name>
                <description>0000: 0.50V 
0001: 0.55V 
0010: 0.60V 
0011: 0.65V 
0100: 0.70V 
0101: 0.75V 
0110: 0.80V 
0111: 0.85V 
1000: 0.90V 
1001: 0.95V 
1010: 1.00V 
1011: 1.05V 
1100: 1.10V 
1101: 1.15V 
1110: 1.20V 
1111: 1.25V (a_refslct1&lt;3:0&gt;)</description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_0_point_50V</name>
                    <description>0.50V</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_55V</name>
                    <description>0.55V</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_60V</name>
                    <description>0.60V</description>
                    <value>0b0010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_65V</name>
                    <description>0.65V</description>
                    <value>0b0011</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_70V</name>
                    <description>0.70V</description>
                    <value>0b0100</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_75V</name>
                    <description>0.75V</description>
                    <value>0b0101</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_80V</name>
                    <description>0.80V</description>
                    <value>0b0110</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_85V</name>
                    <description>0.85V</description>
                    <value>0b0111</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_90V</name>
                    <description>0.90V</description>
                    <value>0b1000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_0_point_95V</name>
                    <description>0.95V</description>
                    <value>0b1001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_point_00V</name>
                    <description>1.00V</description>
                    <value>0b1010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_point_05V</name>
                    <description>1.05V</description>
                    <value>0b1011</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_point_10V</name>
                    <description>1.10V</description>
                    <value>0b1100</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_point_15V</name>
                    <description>1.15V</description>
                    <value>0b1101</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_point_20V</name>
                    <description>1.20V</description>
                    <value>0b1110</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_point_25V</name>
                    <description>1.25V (a_refslct1&lt;3:0&gt;)</description>
                    <value>0b1111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TVE_DAC_CFG2</name>
            <description>TV Encoder DAC CFG2 Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x10</resetValue>
            <resetMask>0x1FFF</resetMask>
            <fields>
              <field>
                <name>B_I</name>
                <description>B ( I config output current for different peak voltage)</description>
                <bitRange>[12:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>S2S1</name>
                <description>S2S1</description>
                <bitRange>[7:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>R_SET</name>
                <description>R_SET</description>
                <bitRange>[5:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TVE_DAC_CFG3</name>
            <description>TV Encoder DAC CFG2 Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3FF0001</resetMask>
            <fields>
              <field>
                <name>FORCE_DATA_SET</name>
                <description>Force DAC input data</description>
                <bitRange>[25:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>FORCE_DATA_EN</name>
                <description>0:DAC input data from TVE 
1: DAC input data from FORCE_DATA_SET</description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DAC</name>
                    <description>DAC input data from FORCE_DATA_SET</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TVE_DAC_MAP</name>
            <description>TV Encoder DAC MAP Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x73</resetMask>
            <fields>
              <field>
                <name>DAC_MAP</name>
                <description>000: OUT0 
001: OUT1 
010: OUT2 
011: OUT3 Others: Reserved</description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>OUT0</name>
                    <description>OUT0</description>
                    <value>0b000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>OUT1</name>
                    <description>OUT1</description>
                    <value>0b001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>OUT2</name>
                    <description>OUT2</description>
                    <value>0b010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>OUT3</name>
                    <description>OUT3 Others: Reserved</description>
                    <value>0b011</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_SEL</name>
                <description>00: NO 
01: TVE0 
10: TVE1 
11: Reserved</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>NO</name>
                    <description>NO</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>TVE0</name>
                    <description>TVE0</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>TVE1</name>
                    <description>TVE1</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TVE_DAC_STATUS</name>
            <description>TV Encoder DAC STAUTS Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3</resetMask>
            <fields>
              <field>
                <name>DAC_STATUS</name>
                <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Unconnected</name>
                    <description>Unconnected</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Connected</name>
                    <description>Connected</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Short</name>
                    <description>Short to ground</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TVE_DAC_TEST</name>
          <description>TV Encoder DAC TEST Register</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF0031</resetMask>
          <fields>
            <field>
              <name>DAC_TEST_LENGTH</name>
              <description>DAC TEST DATA LENGTH</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_TEST_SEL</name>
              <description>00: DAC0 
01: DAC1 
10: DAC2 
11: DAC3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC0</name>
                  <description>DAC0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC1</name>
                  <description>DAC1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC2</name>
                  <description>DAC2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC3</name>
                  <description>DAC3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_TEST_ENABLE</name>
              <description>0: Reserved 
1: Repeat DAC data from DAC sram</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Repeat</name>
                  <description>Repeat DAC data from DAC sram</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVE0</name>
      <description>TVE0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C94000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TVE_000_REG</name>
          <description>TV Encoder Clock Gating Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x90700001</resetMask>
          <fields>
            <field>
              <name>CLOCK_GATE_DIS</name>
              <description>CLOCK_GATE_DIS 
0: Enable 
1: Disable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BIST_EN</name>
              <description>BIST_EN 
0: Normal mode 
1: Bist mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bist_mode</name>
                  <description>Bist mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UPSAMPLE_FOR_YPBPR</name>
              <description>upsample for YPbPr 0:1x 1:2x</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UPSAMPLE_FOR_CVBS</name>
              <description>upsample for CVBS Out up sample 
00: 27MHz 
01: 54MHz 
10: 108MHz 
11: 216MHz</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>27MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>54MHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_108MHz</name>
                  <description>108MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_216MHz</name>
                  <description>216MHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE_EN</name>
              <description>TVE_EN 
0: Disable 
1: Enable Note: Video Encoder enable, default disable, write 1 to take it out of the reset state</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: Video Encoder enable, default disable, write 1 to take it out of the reset state</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_004_REG</name>
          <description>TV Encoder Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x3F1F031F</resetMask>
          <fields>
            <field>
              <name>BYPASS_TV</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_SRC_SEL</name>
              <description>00: TV Encoder 
01: LCD controller, override all other TV encoder setting, the DAC clock can from LCD controller. 
10: DAC test mode,DAC using DAC clock 
11: DAC test mode, DAC using AHB clock</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CONTROL_LOGIC_CLOCK_SEL</name>
              <description>0: Using 27MHz clock or 74.25MHz clock depend on CCU setting 
1: Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>Using 27MHz clock or 74.25MHz clock depend on CCU setting</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CORE_DATAPATH_LOGIC_CLOCK_SEL</name>
              <description>0: Using 27MHz clock or 74.25MHz clock depend on CCU setting 
1: Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>Using 27MHz clock or 74.25MHz clock depend on CCU setting</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CORE_CONTROL_LOGIC_CLOCK_SEL</name>
              <description>0: Using 27MHz clock or 74.25MHz clock depend on CCU setting 
1: Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>Using 27MHz clock or 74.25MHz clock depend on CCU setting</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CB_CR_SEQ_FOR_422_MODE</name>
              <description>0: Cb first 
1: Cr first</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cb</name>
                  <description>Cb first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cr</name>
                  <description>Cr first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_CHROMA_DATA_SAMPLING_RATE_SEL</name>
              <description>0: 4:4:4 
1: 4:2:2</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_colon_4_colon_4</name>
                  <description>4:4:4</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_colon_2_colon_2</name>
                  <description>4:2:2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YUV_RGB_OUTPUT_EN</name>
              <description>0: CVBS or/and Y/C 
1: YUV (or RGB) Note: Only apply to SD interlace mode, when in progressive mode, output YPbPr (RGB) only</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CVBS</name>
                  <description>CVBS or/and Y/C</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV</name>
                  <description>YUV (or RGB) Note: Only apply to SD interlace mode, when in progressive mode, output YPbPr (RGB) only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YC_EN</name>
              <description>0: Y/C is disable 
1: Y/C enable Note: S-port Video enable Selection. This bit selects whether the S-port(Y/C) video output is enabled or disabled.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_slash_C</name>
                  <description>Y/C is disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_C_enable</name>
                  <description>Y/C enable Note: S-port Video enable Selection. This bit selects whether the S-port(Y/C) video output is enabled or disabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CVBS_EN</name>
              <description>0: Composite video is disabled, Only Y/C is enable 
1: Composite video is enabled., CVBS and Y/C enable Note: Composite Video enable Selection This bit selects whether the composite video output (CVBS) is enabled or disabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Composite video is disabled, Only Y/C is enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Composite video is enabled., CVBS and Y/C enable Note: Composite Video enable Selection This bit selects whether the composite video output (CVBS) is enabled or disabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COLOR_BAR_TYPE</name>
              <description>0: 75/7.5/75/7.5 (NTSC), 100/0/75/0(PAL) 
1: 100/7.5/100/7.5(NTSC), 100/0/100/0(PAL)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_75_slash_7_point_5_slash_75_slash_7_point_5</name>
                  <description>75/7.5/75/7.5 (NTSC), 100/0/75/0(PAL)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100_slash_7_point_5_slash_100_slash_7_point_5_openingparen_NTSC_closingparen_</name>
                  <description>100/7.5/100/7.5(NTSC), 100/0/100/0(PAL)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COLOR_BAR_MODE</name>
              <description>0: The Video Encoder input is coming from the Display Engineer 
1: The Video Encoder input is coming from an internal standard color bar generator. Note: Standard Color bar input selection This bit selects whether the Video Encoder video data input is replaced by an internal standard color bar generator or not.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>coming_from_the_Display</name>
                  <description>The Video Encoder input is coming from the Display Engineer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>coming_from_an</name>
                  <description>The Video Encoder input is coming from an internal standard color bar generator. Note: Standard Color bar input selection This bit selects whether the Video Encoder video data input is replaced by an internal standard color bar generator or not.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE_1080I_1250LINE_SEL</name>
              <description>0: 1125 Line mode 
1: 1250 Line mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1125</name>
                  <description>1125 Line mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1250</name>
                  <description>1250 Line mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVMODE_SELECT</name>
              <description>0000: 480i 
0001: 576i 
0010: 480p 
0011: 576p 
01xx: Reserved 
100x: Reserved 
101x: 720p 
110x: 1080i 
111x: 1080p Note: Changing this register value will cause some relative register setting to relative value.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_480i</name>
                  <description>480i</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_576i</name>
                  <description>576i</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_480p</name>
                  <description>480p</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_576p</name>
                  <description>576p</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_720p</name>
                  <description>720p</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1080i</name>
                  <description>1080i</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1080p</name>
                  <description>1080p Note: Changing this register value will cause some relative register setting to relative value.</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_008_REG</name>
          <description>TV Encoder DAC Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0</resetMask>
          <fields>
            <field>
              <name>DAC3_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC2_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC1_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[9:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC0_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_00C_REG</name>
          <description>TV Encoder Notch and DAC Delay Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x2014924</resetValue>
          <resetMask>0xCFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_FILTER_ACTIVE_VALID</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LUMA_FILTER_LTI_ENABLE</name>
              <description>0: Disable Luma filter lti 
1: Enable Luma filter lti</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Luma filter lti</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Luma filter lti</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Y_DELAY_BEFORE_DITHER</name>
              <description></description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HD_MODE_CB_FILTER_BYPASS</name>
              <description>0: Bypass Enable 
1: Bypass Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass_Enable</name>
                  <description>Bypass Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass_Disable</name>
                  <description>Bypass Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HD_MODE_CR_FILTER_BYPASS</name>
              <description>0: Bypass Enable 
1: Bypass Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass_Enable</name>
                  <description>Bypass Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass_Disable</name>
                  <description>Bypass Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_1_444_EN</name>
              <description>0: Chroma Filter 1 444 Disable 
1: Chroma Filter 1 444 Enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_1_444_Disable</name>
                  <description>Chroma Filter 1 444 Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_1_444_Enable</name>
                  <description>Chroma Filter 1 444 Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_HD_MODE_FILTER_EN</name>
              <description>0: Chroma HD Filter Disable 
1: Chroma HD Filter Enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_HD_Filter_Disable</name>
                  <description>Chroma HD Filter Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_HD_Filter_Enable</name>
                  <description>Chroma HD Filter Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_STAGE_1_BYPASS</name>
              <description>0: Chroma Filter Stage 1 Enable 
1: Chroma Filter Stage 1 bypass</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_1_Enable</name>
                  <description>Chroma Filter Stage 1 Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_1_bypass</name>
                  <description>Chroma Filter Stage 1 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_STAGE_2_BYPASS</name>
              <description>0: Chroma Filter Stage 2 Enable 
1: Chroma Filter Stage 2 bypass</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_2_Enable</name>
                  <description>Chroma Filter Stage 2 Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_2_bypass</name>
                  <description>Chroma Filter Stage 2 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_STAGE_3_BYPASS</name>
              <description>0: Chroma Filter Stage 3 Enable 
1: Chroma Filter Stage 3 bypass</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_3_Enable</name>
                  <description>Chroma Filter Stage 3 Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_3_bypass</name>
                  <description>Chroma Filter Stage 3 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LUMA_FILTER_BYPASS</name>
              <description>0: Luma Filter Enable 
1: Luma Filter bypass</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Luma_Filter_Enable</name>
                  <description>Luma Filter Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma_Filter_bypass</name>
                  <description>Luma Filter bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOTCH_EN</name>
              <description>0: The luma notch filter is bypassed 
1: The luma notch filter is operating Luma notch filter on/off selection Note: This bit selects if the luma notch filter is operating or bypassed.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypassed</name>
                  <description>The luma notch filter is bypassed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>operating</name>
                  <description>The luma notch filter is operating Luma notch filter on/off selection Note: This bit selects if the luma notch filter is operating or bypassed.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>C_DELAY_BEFORE_DITHER</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC3_DELAY</name>
              <description>000: The DAC3 lags DAC0 by 4 encoder clock cycles 
001: The DAC3 lags DAC0 by 3 encoder clock cycles 
010: The DAC3 lags DAC0 by 2 encoder clock cycles 
011: The DAC3 lags DAC0 by 1 encoder clock cycle 
100: There is no delay between the DAC0 and DAC3 signals 
001: The DAC0 lags DAC3 by 1 encoder clock cycle 
010: The DAC0 lags DAC3 by 2 encoder clock cycles 
011: The DAC0 lags DAC3 by 3 encoder clock cycles DAC3 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC3 and DAC0 selection. These bits select the relative delay between the DAC3 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC3 lagging the DAC0 samples to 3 encoder clock cycles of DAC3 preceding the DAC0 samples.</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_4</name>
                  <description>The DAC3 lags DAC0 by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_3</name>
                  <description>The DAC3 lags DAC0 by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_2</name>
                  <description>The DAC3 lags DAC0 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_1</name>
                  <description>The DAC3 lags DAC0 by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_DAC0</name>
                  <description>There is no delay between the DAC0 and DAC3 signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC3_by_1</name>
                  <description>The DAC0 lags DAC3 by 1 encoder clock cycle</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC3_by_2</name>
                  <description>The DAC0 lags DAC3 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC3_by_3</name>
                  <description>The DAC0 lags DAC3 by 3 encoder clock cycles DAC3 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC3 and DAC0 selection. These bits select the relative delay between the DAC3 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC3 lagging the DAC0 samples to 3 encoder clock cycles of DAC3 preceding the DAC0 samples.</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC2_DELAY</name>
              <description>000: The DAC2 lags DAC0 by 4 encoder clock cycles 
001: The DAC2 lags DAC0 by 3 encoder clock cycles 
010: The DAC2 lags DAC0 by 2 encoder clock cycles 
011: The DAC2 lags DAC0 by 1 encoder clock cycle 
100: There is no delay between the DAC0 and DAC2 signals 
001: The DAC0 lags DAC2 by 1 encoder clock cycle 
010: The DAC0 lags DAC2 by 2 encoder clock cycles 
011: The DAC0 lags DAC2 by D encoder clock cycles DAC2 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC2 and DAC0 selection. These bits select the relative delay between the DAC2 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC2 lagging the DAC0 samples to 3 encoder clock cycles of DAC2 preceding the DAC0 samples.</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_4</name>
                  <description>The DAC2 lags DAC0 by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_3</name>
                  <description>The DAC2 lags DAC0 by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_2</name>
                  <description>The DAC2 lags DAC0 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_1</name>
                  <description>The DAC2 lags DAC0 by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_DAC0</name>
                  <description>There is no delay between the DAC0 and DAC2 signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC2_by_1</name>
                  <description>The DAC0 lags DAC2 by 1 encoder clock cycle</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC2_by_2</name>
                  <description>The DAC0 lags DAC2 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC2_by_D</name>
                  <description>The DAC0 lags DAC2 by D encoder clock cycles DAC2 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC2 and DAC0 selection. These bits select the relative delay between the DAC2 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC2 lagging the DAC0 samples to 3 encoder clock cycles of DAC2 preceding the DAC0 samples.</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC1_DELAY</name>
              <description>000: The DAC1 lags DAC0 by 4 encoder clock cycles 
001: The DAC1 lags DAC0 by 3 encoder clock cycles 
010: The DAC1 lags DAC0 by 2 encoder clock cycles DAC1 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC1 and DAC0 selection. These bits select the relative delay between the DAC1 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC1 lagging the DAC0 samples to 3 encoder clock cycles of DAC1 preceding the DAC0 samples. 
011: The DAC1 lags DAC0 by 1 encoder clock cycle 
100: There is no delay between the DAC1 and DAC0 signals 
001: The DAC0 lags DAC1 by 1 encoder clock cycle 
010: The DAC0 lags DAC1 by 2 encoder clock cycles 
011: The DAC0 lags DAC1 by D encoder clock cycles</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_4</name>
                  <description>The DAC1 lags DAC0 by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_3</name>
                  <description>The DAC1 lags DAC0 by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_2</name>
                  <description>The DAC1 lags DAC0 by 2 encoder clock cycles DAC1 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC1 and DAC0 selection. These bits select the relative delay between the DAC1 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC1 lagging the DAC0 samples to 3 encoder clock cycles of DAC1 preceding the DAC0 samples.</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_1</name>
                  <description>The DAC1 lags DAC0 by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_DAC1</name>
                  <description>There is no delay between the DAC1 and DAC0 signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC1_by_1</name>
                  <description>The DAC0 lags DAC1 by 1 encoder clock cycle</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC1_by_2</name>
                  <description>The DAC0 lags DAC1 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC1_by_D</name>
                  <description>The DAC0 lags DAC1 by D encoder clock cycles</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YC_DELAY</name>
              <description>luma and chroma paths relative delays (default=4 stages) Relative delay between U/V and Y selection. These bits select the relative delay between the U and V samples and Y samples. The delay range from 4 encoder clock cycles of Y lagging the U and V samples to 3 encoder clock cycles of Y preceding the U and V samples. 
000: The Y lags C by 4 encoder clock cycles 
001: The Y lags C by 3 encoder clock cycles 
010: The Y lags C by 2 encoder clock cycles 
011: The Y lags C by 1 encoder clock cycle 
100: There is no delay between the Y and C signals 
101: The C lags Y by 1 encoder clock cycle 
110: The C lags Y by 2 encoder clock cycles 
111: The C lags Y by 3 encoder clock cycles</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_lags_C_by_4</name>
                  <description>The Y lags C by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_lags_C_by_3</name>
                  <description>The Y lags C by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_lags_C_by_2</name>
                  <description>The Y lags C by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_lags_C_by_1</name>
                  <description>The Y lags C by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_Y</name>
                  <description>There is no delay between the Y and C signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_lags_Y_by_1</name>
                  <description>The C lags Y by 1 encoder clock cycle</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_lags_Y_by_2</name>
                  <description>The C lags Y by 2 encoder clock cycles</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_lags_Y_by_3</name>
                  <description>The C lags Y by 3 encoder clock cycles</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_010_REG</name>
          <description>TV Encoder chroma frequency Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x21F07C1F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_FREQ</name>
              <description>Specify the ratio between the color burst frequency. 32 bits unsigned fraction. Default value is h21f07c1f, which is compatible with NTSC specs. 3.5795455 MHz (X`21F07C1F`): NTSC-M, NTSC-J 4.43361875 MHz(X`2A098ACB`): PAL-B, D, G, H,I, N 3.582056 MHz (X`21F69446`): PAL-N(Argentina) 3.579611 MHz (X`21E6EFE3`): PAL-M</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_014_REG</name>
          <description>TV Encoder Front/Back Porch Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x760020</resetValue>
          <resetMask>0x1FF0FFF</resetMask>
          <fields>
            <field>
              <name>BACK_PORCH</name>
              <description>Specify the width of the back porch in encoder clock cycles. Min value is ( +17 . 8 bits unsigned integer. Default value is 118. 720p mode, is 260 1080i/p mode, is 192</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRONT_PORCH</name>
              <description>Must be even. Specify the width of the front porch in encoder clock cycles. 6 bits unsigned even integer. Allowed range is 10 to 62. Default value is 32 in 1080i mode is 44.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_018_REG</name>
          <description>TV Encoder HD mode VSYNC Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x16</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>BROAD_PLUS_CYCLE_NUMBER_IN_HD_MODE_VSYNC</name>
              <description></description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRONT_PORCH_LIKE_IN_HD_MODE_VSYNC</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_01C_REG</name>
          <description>TV Encoder Line Number Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x16020D</resetValue>
          <resetMask>0xFF07FF</resetMask>
          <fields>
            <field>
              <name>FIRST_VIDEO_LINE</name>
              <description>Specify the index of the first line in a field/frame to have active video. 8 bits unsigned integer. For interlaced video: When VSync5=B`0`, FirstVideoLine is restricted to be greater than 7. When VSync5=B`1`, FirstVideoLine is restricted to be greater than 9. Default value is 21.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NUM_LINES</name>
              <description>Specify the total number of lines in a video frame. 11 bits unsigned integer. Allowed range is 0 to 2048. Default value is 525. For interlaced video: When NTSC, and FirstVideoLine is greater than 20, then NumLines is restricted to be greater than 2*(FirstVideoLine+18). When NTSC, and FirstVideoLine is not greater than 20, then NumLines is restricted to be greater than 77. When PAL, and FirstVideoLine is greater than 22, then NumLines is restricted to be greater than 2*(FirstVideoLine+18). When PAL, and FirstVideoLine is not greater than 22, then NumLines is restricted to be greater than 81. If NumLines is even, then it is restricted to be divisible by 4. If NumLines is odd, then it is restricted to be divisible by 4 with a remainder of 1.</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_020_REG</name>
          <description>TV Encoder Level Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0xF0011A</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>BLANK_LEVEL</name>
              <description>Specify the blank level setting for active lines. 10 bits unsigned integer. Allowed range 0 to 1023. Default value is 0xF0(dec240).</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLACK_LEVEL</name>
              <description>Specify the black level setting. 10 bits unsigned integer. Allowed range is 240 to 1023. Default value is 282.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_030_REG</name>
          <description>TV Encoder Auto Detection Enable Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>DAC3_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC3_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_034_REG</name>
          <description>TV Encoder Auto Detection Interrupt Status Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DAC3_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC3 auto detection interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC2 auto detection interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC1 auto detection interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC0 auto detection interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_038_REG</name>
          <description>TV Encoder Auto Detection Status Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3030303</resetMask>
          <fields>
            <field>
              <name>DAC3_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC2_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC1_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC0_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_03C_REG</name>
          <description>TV Encoder Auto Detection de-bounce Setting Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFF</resetMask>
          <fields>
            <field>
              <name>DAC_TEST_REGISTER</name>
              <description></description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC3_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_0F8_REG</name>
          <description>TV Encoder Auto Detect Configuration Register0</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>DETECT_PULSE_VALUE</name>
              <description>Use for DAC data input at auto detect pluse</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_0FC_REG</name>
          <description>TV Encoder Auto Detect Configuration Register1</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF7FFF</resetMask>
          <fields>
            <field>
              <name>DETECT_PULSE_PERIODS</name>
              <description>Use 32K clock</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DETECT_PULSE_START</name>
              <description></description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_100_REG</name>
          <description>TV Encoder Color Burst Phase Reset Configuration Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>COLOR_PHASE_RESET</name>
              <description>Color burst phase period selection These bits select the number of fields or lines after which the color burst phase is reset to its initial value as specified by the ChromaPhase parameter, This parameter is application only for interlaced video. 
00: 8 field 
01: 4 field 
10: 2 lines 
11: only once</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 field</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 field</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 lines</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>only_once</name>
                  <description>only once</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_104_REG</name>
          <description>TV Encoder VSYNC Number Register</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>VSYNC5</name>
              <description>VSync5 Number of equalization pulse selection This bit selects whether the number of equalization pulses is 5 or 6. This parameter is applicable only for interlaced video. 
0: 5 equalization pulse(default) 
1: 6 equalization pulses</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5</name>
                  <description>5 equalization pulse(default)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6</name>
                  <description>6 equalization pulses</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_108_REG</name>
          <description>TV Encoder Notch Filter Frequency Register</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>NOTCH_FREQ</name>
              <description>Luma notch filter center frequency selection These bits select the luma notch filter (which is a band-reject filter) center frequency. In two of the selections, the filter width affects also the selection of the center frequency. 
000: 1.1875 
001: 1.1406 
010: 1.0938 when notch_wide value is B`1` (this selection is proper for CCIR-NTSC), or 1.0000 when notch_wide value is B`0` 
011: 0.9922. This selection is proper for NTSC with square pixels 
100: 0.9531. This selection is proper for PAL with square pixel 
101: 0.8359 when notch_wide value is B`1` (this selection is proper for CCIR-PAL), or 0.7734 when notch_wide value is B`0` 
110: 0.7813 
111: 0.7188</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_point_1875</name>
                  <description>1.1875</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_1406</name>
                  <description>1.1406</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_0938</name>
                  <description>1.0938 when notch_wide value is B`1` (this selection is proper for CCIR-NTSC), or 1.0000 when notch_wide value is B`0`</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9922</name>
                  <description>0.9922. This selection is proper for NTSC with square pixels</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9531</name>
                  <description>0.9531. This selection is proper for PAL with square pixel</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_8359</name>
                  <description>0.8359 when notch_wide value is B`1` (this selection is proper for CCIR-PAL), or 0.7734 when notch_wide value is B`0`</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_7813</name>
                  <description>0.7813</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_7188</name>
                  <description>0.7188</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_10C_REG</name>
          <description>TV Encoder Cb/Cr Level/Gain Register</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x4F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CR_BURST_LEVEL</name>
              <description>Specify the amplitude of the Cr burst. 8 bit 2`s complement integer. Allowed range is (-127) to 127. Default value is 0.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_BURST_LEVEL</name>
              <description>Specify the amplitude of the Cb burst. 8 bit 2`s complement integer. Allowed range is (-127) to 127. Default value is 60.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_110_REG</name>
          <description>TV Encoder Tint and Color Burst Phase Register</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF00FF</resetMask>
          <fields>
            <field>
              <name>TINT</name>
              <description>Specify the tint adjustment of the chroma signal for CVBS and Y/C outputs. The adjustment is effected by setting the sub-carrier phase to the value of this parameter. 8.8 bit unsigned fraction. Units are cycles of the color burst frequency. Default value is 0.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_PHASE</name>
              <description>Specify the color burst initial phase ( . 8 bit unsigned fraction. Units are cycles of the color burst frequency. Default value is X`00`. The color burst is set to this phase at the first and then reset to the same value at further s as specified by the bits of the parameter (see above)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_114_REG</name>
          <description>TV Encoder Burst Width Register</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x16447E</resetValue>
          <resetMask>0xFF7F7FFF</resetMask>
          <fields>
            <field>
              <name>BACK_PORCH</name>
              <description>Breezeway like in HD mode VSync 720p mode, is 220 2080i/p mode is 88(default)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BREEZEWAY</name>
              <description>Must be even. Specify the width of the breezeway in encoder clock cycles. 5 bit unsigned integer. Allowed range is 0 to 31. Default value is 22 In 1080i mode, is 44 In 1080p mode, is 44 In 720p mode,is 40</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_WIDTH</name>
              <description>Specify the width of the color frequency burst in encoder clock cycles. 7 bit unsigned integer. Allowed range is 0 to 127. Default value is 68. In hd mode, ignored</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_WIDTH</name>
              <description>Specify the width of the horizontal sync pulse in encoder clock cycles. Min value is 16. Max value is ( ). Default value is 126. The sum of and is restricted to be divisible by 4. In 720p mode, is 40 In 1080i/p mode, is 44</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_118_REG</name>
          <description>TV Encoder Cb/Cr Gain Register</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CR_GAIN</name>
              <description>Specify the Cr color gain. 8 bit unsigned fraction. Default value is 139.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_GAIN</name>
              <description>Specify the Cb color gain. 8 bit unsigned fraction. Default value is 139.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_11C_REG</name>
          <description>TV Encoder Sync and VBI Level Register</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x1000F0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>SYNC_LEVEL</name>
              <description>Specify the sync pulse level setting. 8 bit unsigned integer. Allowed range is 0 to -1 or -1 (whichever is smaller).</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>V_BLANK_LEVEL</name>
              <description>VBlank_Level Specify the blank level setting for non active lines. 10 bit unsigned integer. Allow range 0 to 1023.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_120_REG</name>
          <description>TV Encoder White Level Register</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x1E80320</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HD_SYNC_BREEZEWAY_LEVEL</name>
              <description>Specify the breezeway level setting. 10 bit unsigned integer. Allowed range is 0 to 1023. Default value is 488.</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WHITE_LEVEL</name>
              <description>Specify the white level setting. 10 bit unsigned integer. Allowed range is black_level+1 or vbi_blank_level +1 (whichever is greater) to 1023. Default value is 800.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_124_REG</name>
          <description>TV Encoder Video Active Line Register</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x5A0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>ACTIVE_LINE</name>
              <description>Specify the width of the video line in encoder clock cycles. 12 bit unsigned multiple of 4 integer. Allowed range is 0 to 4092 Default value is 1440.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_128_REG</name>
          <description>TV Encoder Video Chroma BW and CompGain Register</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30003</resetMask>
          <fields>
            <field>
              <name>CHROMA_BW</name>
              <description>Chroma filter bandwidth selection This bit specifies whether the bandwidth of the chroma filter is: 
00: Narrow width, 0.6MHz 
01: Wide width 1.2MHz. 
10: Extra width 1.8MHz 
11: Ultra width 2.5MHz Default is 0.6MHz(value 0)</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow width, 0.6MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide width 1.2MHz.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Extra</name>
                  <description>Extra width 1.8MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Ultra</name>
                  <description>Ultra width 2.5MHz Default is 0.6MHz(value 0)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMP_CH_GAIN</name>
              <description>Chroma gain selection for the composite video signal. These bits specify the gain of the chroma signal for composing with the luma signal to generate the composite video signal:  
00: 100% (B`00`), 
01: 25% 
10: 50% 
11: 75%</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_100_percent_</name>
                  <description>100% (B`00`),</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_25_percent_</name>
                  <description>25%</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_50_percent_</name>
                  <description>50%</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_75_percent_</name>
                  <description>75%</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_12C_REG</name>
          <description>TV Encoder Register</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x101</resetValue>
          <resetMask>0x101</resetMask>
          <fields>
            <field>
              <name>NOTCH_WIDTH</name>
              <description>Luma notch filter width selection This bit selects the luma notch filter (which is a band-reject filter) width. 
0: Narrow 
1: Wide</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMP_YUV_EN</name>
              <description>This bit selects if the components video output are the RGB components or the YUV components. 
0: The three component outputs are the RGB components. 
1: The three component outputs are the YUV components, (i.e. the color conversion unit is by-passed)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>three_component_outputs_are_the_RGB</name>
                  <description>The three component outputs are the RGB components.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>three_component_outputs_are_the_YUV</name>
                  <description>The three component outputs are the YUV components, (i.e. the color conversion unit is by-passed)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_130_REG</name>
          <description>TV Encoder Re-sync parameters Register</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x100001</resetValue>
          <resetMask>0xC7FF07FF</resetMask>
          <fields>
            <field>
              <name>RE_SYNC_FIELD</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_SYNC_DIS</name>
              <description>0: Re-Sync Enable 
1: Re-Sync Disable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>re_Sync_Enable</name>
                  <description>Re-Sync Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>re_Sync_Disable</name>
                  <description>Re-Sync Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RE_SYNC_LINE_NUM</name>
              <description></description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_SYNC_PIXEL_NUM</name>
              <description></description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_134_REG</name>
          <description>TV Encoder Slave Parameter Register</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x101</resetMask>
          <fields>
            <field>
              <name>SLAVE_THRESH</name>
              <description>Horizontal line adjustment threshold selection This bit selects whether the number of lines after which the Video Encoder starts the horizontal line length adjustment is slave mode is 0 or 30. 
0: Number of lines is 0 
1: Number of lines is 30</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Number of lines is 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Number of lines is 30</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLAVE_MODE</name>
              <description>Slave mode selection This bit selects whether the Video Encoder is sync slave, partial slave or sync master. It should be set to B`0`. 
0: The Video Encoder is not a full sync slave (i.e. it is a partial sync slave or a sync master) 
1: Reserved</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Video</name>
                  <description>The Video Encoder is not a full sync slave (i.e. it is a partial sync slave or a sync master)</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_138_REG</name>
          <description>TV Encoder Configuration Register0</description>
          <addressOffset>0x138</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x101</resetMask>
          <fields>
            <field>
              <name>INVERT_TOP</name>
              <description>Field parity input signal (top_field) polarity selection. This bit selects whether the top field is indicated by a high level of the field parity signal or by the low level. The bit is applicable both when the Video Encoder is the sync master and when the Video Encoder is the sync slave. 
0: Top field is indicated by low level 
1: Top field is indicated by high level</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>indicated_by_low_level</name>
                  <description>Top field is indicated by low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>indicated_by_high_level</name>
                  <description>Top field is indicated by high level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UV_ORDER</name>
              <description>This bit selects if the sample order at the chroma input to the Video Encoder is Cb first (i.e. Cb 0 Cr 0 Cb 1 Cr 1) or Cr first (i.e. Cr 0 Cb 0 Cr 1 Cb 1). 
0: The chroma sample input order is Cb first 
1: The chroma sample input order is Cr first</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cb</name>
                  <description>The chroma sample input order is Cb first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cr</name>
                  <description>The chroma sample input order is Cr first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_13C_REG</name>
          <description>TV Encoder Configuration Register1</description>
          <addressOffset>0x13C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7010001</resetMask>
          <fields>
            <field>
              <name>RGB_SYNC</name>
              <description>R, G and B signals sync embedding selection. These bits specify whether the sync signal is added to each of the R, G and B components (B`1`) or not (B`0`). Bit *26+ specify if the R signal have embedded syncs, bit [25] specify if the G signal have embedded syncs and bit [24] specify if the B signal have embedded syncs. When comp_yuv is equal to B`1`, these bits are N.A. and should be set to B`000`. When the value is different from B`000`, should be set to B`1`.</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RGB_SETUP</name>
              <description>`Set-up` enable for RGB outputs. This bit specifies if the `set-up` implied value (black_level - blank_level) specified for the CVBS signal is used also for the RGB signals. 
0: The `set-up` is not used, or N.A. i.e. comp_yuv is equal to B`1`. 
1: The implied `set-up` is used for the RGB signals</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>`set_minus_up`</name>
                  <description>The `set-up` is not used, or N.A. i.e. comp_yuv is equal to B`1`.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>implied</name>
                  <description>The implied `set-up` is used for the RGB signals</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASS_YCLAMP</name>
              <description>Y input clamping selection This bit selects whether the Video Encoder Y input is clamped to 64 to 940 or not. When not clamped the expected range is 0 to 1023. The U and V inputs are always clamped to the range 64 to 960. 
0: The Video Encoder Y input is clamped 
1: The Video Encoder Y input is not clamped</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>clamped</name>
                  <description>The Video Encoder Y input is clamped</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_clamped</name>
                  <description>The Video Encoder Y input is not clamped</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_380_REG</name>
          <description>TV Encoder Low Pass Control Register</description>
          <addressOffset>0x380</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F01</resetMask>
          <fields>
            <field>
              <name>USER_DEFLICKER_COEF</name>
              <description>up : coef/32 Center :1-coef/16 Down :coef/32</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_COEF_DEFLICKER</name>
              <description>0: Auto deflicker 
1: User deflicker</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto deflicker</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>User</name>
                  <description>User deflicker</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_DEFLICKER</name>
              <description>0: Disable deflicker 
1: Enable deflicker</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable deflicker</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable deflicker</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN</name>
              <description>LP function enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_384_REG</name>
          <description>TV Encoder Low Pass Filter Control Register</description>
          <addressOffset>0x384</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F3F3F</resetMask>
          <fields>
            <field>
              <name>HP_RATIO</name>
              <description>Default high-pass filter ratio Note: in two's complement. Range from -31 to 31.</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BP0_RATIO</name>
              <description>Default band-pass filter0 ratio Note: in two's complement. Range from -31 to 31.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BP1_RATIO</name>
              <description>Default band-pass filter1 ratio Note: in two's complement. Range from -31 to 31.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_388_REG</name>
          <description>TV Encoder Low Pass Gain Register</description>
          <addressOffset>0x388</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>GAIN</name>
              <description>Peaking gain setting.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_38C_REG</name>
          <description>TV Encoder Low Pass Gain Control Register</description>
          <addressOffset>0x38C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF001F</resetMask>
          <fields>
            <field>
              <name>DIF_UP</name>
              <description>Gain control: limitation threshold.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BETA</name>
              <description>Gain control: large gain limitation.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_390_REG</name>
          <description>TV Encoder Low Pass Shoot Control Register</description>
          <addressOffset>0x390</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>NEG_GAIN</name>
              <description>Undershoot gain control.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_394_REG</name>
          <description>TV Encoder Low Pass Coring Register</description>
          <addressOffset>0x394</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CORTHR</name>
              <description>Coring threshold.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_3A0_REG</name>
          <description>TV Encoder Noise Reduction Register</description>
          <addressOffset>0x3A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF0001</resetMask>
          <fields>
            <field>
              <name>T_VALUE</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TVE1</name>
      <description>TVE1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C98000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TVE_000_REG</name>
          <description>TV Encoder Clock Gating Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x90700001</resetMask>
          <fields>
            <field>
              <name>CLOCK_GATE_DIS</name>
              <description>CLOCK_GATE_DIS 
0: Enable 
1: Disable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BIST_EN</name>
              <description>BIST_EN 
0: Normal mode 
1: Bist mode</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bist_mode</name>
                  <description>Bist mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UPSAMPLE_FOR_YPBPR</name>
              <description>upsample for YPbPr 0:1x 1:2x</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UPSAMPLE_FOR_CVBS</name>
              <description>upsample for CVBS Out up sample 
00: 27MHz 
01: 54MHz 
10: 108MHz 
11: 216MHz</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>27MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>54MHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_108MHz</name>
                  <description>108MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_216MHz</name>
                  <description>216MHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE_EN</name>
              <description>TVE_EN 
0: Disable 
1: Enable Note: Video Encoder enable, default disable, write 1 to take it out of the reset state</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: Video Encoder enable, default disable, write 1 to take it out of the reset state</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_004_REG</name>
          <description>TV Encoder Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x3F1F031F</resetMask>
          <fields>
            <field>
              <name>BYPASS_TV</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_SRC_SEL</name>
              <description>00: TV Encoder 
01: LCD controller, override all other TV encoder setting, the DAC clock can from LCD controller. 
10: DAC test mode,DAC using DAC clock 
11: DAC test mode, DAC using AHB clock</description>
              <bitRange>[28:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CONTROL_LOGIC_CLOCK_SEL</name>
              <description>0: Using 27MHz clock or 74.25MHz clock depend on CCU setting 
1: Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>Using 27MHz clock or 74.25MHz clock depend on CCU setting</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CORE_DATAPATH_LOGIC_CLOCK_SEL</name>
              <description>0: Using 27MHz clock or 74.25MHz clock depend on CCU setting 
1: Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>Using 27MHz clock or 74.25MHz clock depend on CCU setting</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CORE_CONTROL_LOGIC_CLOCK_SEL</name>
              <description>0: Using 27MHz clock or 74.25MHz clock depend on CCU setting 
1: Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_27MHz</name>
                  <description>Using 27MHz clock or 74.25MHz clock depend on CCU setting</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_54MHz</name>
                  <description>Using 54MHz clock or 148.5MHz clock depend on CCU setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CB_CR_SEQ_FOR_422_MODE</name>
              <description>0: Cb first 
1: Cr first</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cb</name>
                  <description>Cb first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cr</name>
                  <description>Cr first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_CHROMA_DATA_SAMPLING_RATE_SEL</name>
              <description>0: 4:4:4 
1: 4:2:2</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_colon_4_colon_4</name>
                  <description>4:4:4</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_colon_2_colon_2</name>
                  <description>4:2:2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YUV_RGB_OUTPUT_EN</name>
              <description>0: CVBS or/and Y/C 
1: YUV (or RGB) Note: Only apply to SD interlace mode, when in progressive mode, output YPbPr (RGB) only</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CVBS</name>
                  <description>CVBS or/and Y/C</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV</name>
                  <description>YUV (or RGB) Note: Only apply to SD interlace mode, when in progressive mode, output YPbPr (RGB) only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YC_EN</name>
              <description>0: Y/C is disable 
1: Y/C enable Note: S-port Video enable Selection. This bit selects whether the S-port(Y/C) video output is enabled or disabled.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_slash_C</name>
                  <description>Y/C is disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_C_enable</name>
                  <description>Y/C enable Note: S-port Video enable Selection. This bit selects whether the S-port(Y/C) video output is enabled or disabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CVBS_EN</name>
              <description>0: Composite video is disabled, Only Y/C is enable 
1: Composite video is enabled., CVBS and Y/C enable Note: Composite Video enable Selection This bit selects whether the composite video output (CVBS) is enabled or disabled.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Composite video is disabled, Only Y/C is enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Composite video is enabled., CVBS and Y/C enable Note: Composite Video enable Selection This bit selects whether the composite video output (CVBS) is enabled or disabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COLOR_BAR_TYPE</name>
              <description>0: 75/7.5/75/7.5 (NTSC), 100/0/75/0(PAL) 
1: 100/7.5/100/7.5(NTSC), 100/0/100/0(PAL)</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_75_slash_7_point_5_slash_75_slash_7_point_5</name>
                  <description>75/7.5/75/7.5 (NTSC), 100/0/75/0(PAL)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100_slash_7_point_5_slash_100_slash_7_point_5_openingparen_NTSC_closingparen_</name>
                  <description>100/7.5/100/7.5(NTSC), 100/0/100/0(PAL)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COLOR_BAR_MODE</name>
              <description>0: The Video Encoder input is coming from the Display Engineer 
1: The Video Encoder input is coming from an internal standard color bar generator. Note: Standard Color bar input selection This bit selects whether the Video Encoder video data input is replaced by an internal standard color bar generator or not.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>coming_from_the_Display</name>
                  <description>The Video Encoder input is coming from the Display Engineer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>coming_from_an</name>
                  <description>The Video Encoder input is coming from an internal standard color bar generator. Note: Standard Color bar input selection This bit selects whether the Video Encoder video data input is replaced by an internal standard color bar generator or not.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE_1080I_1250LINE_SEL</name>
              <description>0: 1125 Line mode 
1: 1250 Line mode</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1125</name>
                  <description>1125 Line mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1250</name>
                  <description>1250 Line mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVMODE_SELECT</name>
              <description>0000: 480i 
0001: 576i 
0010: 480p 
0011: 576p 
01xx: Reserved 
100x: Reserved 
101x: 720p 
110x: 1080i 
111x: 1080p Note: Changing this register value will cause some relative register setting to relative value.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_480i</name>
                  <description>480i</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_576i</name>
                  <description>576i</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_480p</name>
                  <description>480p</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_576p</name>
                  <description>576p</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_720p</name>
                  <description>720p</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1080i</name>
                  <description>1080i</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1080p</name>
                  <description>1080p Note: Changing this register value will cause some relative register setting to relative value.</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_008_REG</name>
          <description>TV Encoder DAC Register1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0</resetMask>
          <fields>
            <field>
              <name>DAC3_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC2_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC1_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[9:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC0_SRC_SEL</name>
              <description>000: Composite 
001: Luma 
010: Chroma 
011: Reserved 
100: Y/Green 
101: U/Pb/Blue 
110: V/Pr/Red 
111: Reserved</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Composite</name>
                  <description>Composite</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma</name>
                  <description>Luma</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma</name>
                  <description>Chroma</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_slash_Green</name>
                  <description>Y/Green</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>U_slash_Pb_slash_Blue</name>
                  <description>U/Pb/Blue</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>V_slash_Pr_slash_Red</name>
                  <description>V/Pr/Red</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_00C_REG</name>
          <description>TV Encoder Notch and DAC Delay Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x2014924</resetValue>
          <resetMask>0xCFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_FILTER_ACTIVE_VALID</name>
              <description>0: Disable 
1: Enable</description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LUMA_FILTER_LTI_ENABLE</name>
              <description>0: Disable Luma filter lti 
1: Enable Luma filter lti</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Luma filter lti</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Luma filter lti</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>Y_DELAY_BEFORE_DITHER</name>
              <description></description>
              <bitRange>[27:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HD_MODE_CB_FILTER_BYPASS</name>
              <description>0: Bypass Enable 
1: Bypass Disable</description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass_Enable</name>
                  <description>Bypass Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass_Disable</name>
                  <description>Bypass Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HD_MODE_CR_FILTER_BYPASS</name>
              <description>0: Bypass Enable 
1: Bypass Disable</description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass_Enable</name>
                  <description>Bypass Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Bypass_Disable</name>
                  <description>Bypass Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_1_444_EN</name>
              <description>0: Chroma Filter 1 444 Disable 
1: Chroma Filter 1 444 Enable</description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_1_444_Disable</name>
                  <description>Chroma Filter 1 444 Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_1_444_Enable</name>
                  <description>Chroma Filter 1 444 Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_HD_MODE_FILTER_EN</name>
              <description>0: Chroma HD Filter Disable 
1: Chroma HD Filter Enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_HD_Filter_Disable</name>
                  <description>Chroma HD Filter Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_HD_Filter_Enable</name>
                  <description>Chroma HD Filter Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_STAGE_1_BYPASS</name>
              <description>0: Chroma Filter Stage 1 Enable 
1: Chroma Filter Stage 1 bypass</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_1_Enable</name>
                  <description>Chroma Filter Stage 1 Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_1_bypass</name>
                  <description>Chroma Filter Stage 1 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_STAGE_2_BYPASS</name>
              <description>0: Chroma Filter Stage 2 Enable 
1: Chroma Filter Stage 2 bypass</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_2_Enable</name>
                  <description>Chroma Filter Stage 2 Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_2_bypass</name>
                  <description>Chroma Filter Stage 2 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHROMA_FILTER_STAGE_3_BYPASS</name>
              <description>0: Chroma Filter Stage 3 Enable 
1: Chroma Filter Stage 3 bypass</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_3_Enable</name>
                  <description>Chroma Filter Stage 3 Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chroma_Filter_Stage_3_bypass</name>
                  <description>Chroma Filter Stage 3 bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LUMA_FILTER_BYPASS</name>
              <description>0: Luma Filter Enable 
1: Luma Filter bypass</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Luma_Filter_Enable</name>
                  <description>Luma Filter Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Luma_Filter_bypass</name>
                  <description>Luma Filter bypass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NOTCH_EN</name>
              <description>0: The luma notch filter is bypassed 
1: The luma notch filter is operating Luma notch filter on/off selection Note: This bit selects if the luma notch filter is operating or bypassed.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypassed</name>
                  <description>The luma notch filter is bypassed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>operating</name>
                  <description>The luma notch filter is operating Luma notch filter on/off selection Note: This bit selects if the luma notch filter is operating or bypassed.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>C_DELAY_BEFORE_DITHER</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC3_DELAY</name>
              <description>000: The DAC3 lags DAC0 by 4 encoder clock cycles 
001: The DAC3 lags DAC0 by 3 encoder clock cycles 
010: The DAC3 lags DAC0 by 2 encoder clock cycles 
011: The DAC3 lags DAC0 by 1 encoder clock cycle 
100: There is no delay between the DAC0 and DAC3 signals 
001: The DAC0 lags DAC3 by 1 encoder clock cycle 
010: The DAC0 lags DAC3 by 2 encoder clock cycles 
011: The DAC0 lags DAC3 by 3 encoder clock cycles DAC3 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC3 and DAC0 selection. These bits select the relative delay between the DAC3 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC3 lagging the DAC0 samples to 3 encoder clock cycles of DAC3 preceding the DAC0 samples.</description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_4</name>
                  <description>The DAC3 lags DAC0 by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_3</name>
                  <description>The DAC3 lags DAC0 by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_2</name>
                  <description>The DAC3 lags DAC0 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC3_lags_DAC0_by_1</name>
                  <description>The DAC3 lags DAC0 by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_DAC0</name>
                  <description>There is no delay between the DAC0 and DAC3 signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC3_by_1</name>
                  <description>The DAC0 lags DAC3 by 1 encoder clock cycle</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC3_by_2</name>
                  <description>The DAC0 lags DAC3 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC3_by_3</name>
                  <description>The DAC0 lags DAC3 by 3 encoder clock cycles DAC3 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC3 and DAC0 selection. These bits select the relative delay between the DAC3 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC3 lagging the DAC0 samples to 3 encoder clock cycles of DAC3 preceding the DAC0 samples.</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC2_DELAY</name>
              <description>000: The DAC2 lags DAC0 by 4 encoder clock cycles 
001: The DAC2 lags DAC0 by 3 encoder clock cycles 
010: The DAC2 lags DAC0 by 2 encoder clock cycles 
011: The DAC2 lags DAC0 by 1 encoder clock cycle 
100: There is no delay between the DAC0 and DAC2 signals 
001: The DAC0 lags DAC2 by 1 encoder clock cycle 
010: The DAC0 lags DAC2 by 2 encoder clock cycles 
011: The DAC0 lags DAC2 by D encoder clock cycles DAC2 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC2 and DAC0 selection. These bits select the relative delay between the DAC2 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC2 lagging the DAC0 samples to 3 encoder clock cycles of DAC2 preceding the DAC0 samples.</description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_4</name>
                  <description>The DAC2 lags DAC0 by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_3</name>
                  <description>The DAC2 lags DAC0 by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_2</name>
                  <description>The DAC2 lags DAC0 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC2_lags_DAC0_by_1</name>
                  <description>The DAC2 lags DAC0 by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_DAC0</name>
                  <description>There is no delay between the DAC0 and DAC2 signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC2_by_1</name>
                  <description>The DAC0 lags DAC2 by 1 encoder clock cycle</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC2_by_2</name>
                  <description>The DAC0 lags DAC2 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC2_by_D</name>
                  <description>The DAC0 lags DAC2 by D encoder clock cycles DAC2 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC2 and DAC0 selection. These bits select the relative delay between the DAC2 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC2 lagging the DAC0 samples to 3 encoder clock cycles of DAC2 preceding the DAC0 samples.</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC1_DELAY</name>
              <description>000: The DAC1 lags DAC0 by 4 encoder clock cycles 
001: The DAC1 lags DAC0 by 3 encoder clock cycles 
010: The DAC1 lags DAC0 by 2 encoder clock cycles DAC1 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC1 and DAC0 selection. These bits select the relative delay between the DAC1 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC1 lagging the DAC0 samples to 3 encoder clock cycles of DAC1 preceding the DAC0 samples. 
011: The DAC1 lags DAC0 by 1 encoder clock cycle 
100: There is no delay between the DAC1 and DAC0 signals 
001: The DAC0 lags DAC1 by 1 encoder clock cycle 
010: The DAC0 lags DAC1 by 2 encoder clock cycles 
011: The DAC0 lags DAC1 by D encoder clock cycles</description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_4</name>
                  <description>The DAC1 lags DAC0 by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_3</name>
                  <description>The DAC1 lags DAC0 by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_2</name>
                  <description>The DAC1 lags DAC0 by 2 encoder clock cycles DAC1 and DAC0 paths relative delays (default=4 stages) Relative delay between DAC1 and DAC0 selection. These bits select the relative delay between the DAC1 samples and DAC0 samples. The delay range from 4 encoder clock cycles of DAC1 lagging the DAC0 samples to 3 encoder clock cycles of DAC1 preceding the DAC0 samples.</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC1_lags_DAC0_by_1</name>
                  <description>The DAC1 lags DAC0 by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_DAC1</name>
                  <description>There is no delay between the DAC1 and DAC0 signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC1_by_1</name>
                  <description>The DAC0 lags DAC1 by 1 encoder clock cycle</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC1_by_2</name>
                  <description>The DAC0 lags DAC1 by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC0_lags_DAC1_by_D</name>
                  <description>The DAC0 lags DAC1 by D encoder clock cycles</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YC_DELAY</name>
              <description>luma and chroma paths relative delays (default=4 stages) Relative delay between U/V and Y selection. These bits select the relative delay between the U and V samples and Y samples. The delay range from 4 encoder clock cycles of Y lagging the U and V samples to 3 encoder clock cycles of Y preceding the U and V samples. 
000: The Y lags C by 4 encoder clock cycles 
001: The Y lags C by 3 encoder clock cycles 
010: The Y lags C by 2 encoder clock cycles 
011: The Y lags C by 1 encoder clock cycle 
100: There is no delay between the Y and C signals 
101: The C lags Y by 1 encoder clock cycle 
110: The C lags Y by 2 encoder clock cycles 
111: The C lags Y by 3 encoder clock cycles</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Y_lags_C_by_4</name>
                  <description>The Y lags C by 4 encoder clock cycles</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_lags_C_by_3</name>
                  <description>The Y lags C by 3 encoder clock cycles</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_lags_C_by_2</name>
                  <description>The Y lags C by 2 encoder clock cycles</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Y_lags_C_by_1</name>
                  <description>The Y lags C by 1 encoder clock cycle</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_delay_between_the_Y</name>
                  <description>There is no delay between the Y and C signals</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_lags_Y_by_1</name>
                  <description>The C lags Y by 1 encoder clock cycle</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_lags_Y_by_2</name>
                  <description>The C lags Y by 2 encoder clock cycles</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>C_lags_Y_by_3</name>
                  <description>The C lags Y by 3 encoder clock cycles</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_010_REG</name>
          <description>TV Encoder chroma frequency Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x21F07C1F</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CHROMA_FREQ</name>
              <description>Specify the ratio between the color burst frequency. 32 bits unsigned fraction. Default value is h21f07c1f, which is compatible with NTSC specs. 3.5795455 MHz (X`21F07C1F`): NTSC-M, NTSC-J 4.43361875 MHz(X`2A098ACB`): PAL-B, D, G, H,I, N 3.582056 MHz (X`21F69446`): PAL-N(Argentina) 3.579611 MHz (X`21E6EFE3`): PAL-M</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_014_REG</name>
          <description>TV Encoder Front/Back Porch Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x760020</resetValue>
          <resetMask>0x1FF0FFF</resetMask>
          <fields>
            <field>
              <name>BACK_PORCH</name>
              <description>Specify the width of the back porch in encoder clock cycles. Min value is ( +17 . 8 bits unsigned integer. Default value is 118. 720p mode, is 260 1080i/p mode, is 192</description>
              <bitRange>[24:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRONT_PORCH</name>
              <description>Must be even. Specify the width of the front porch in encoder clock cycles. 6 bits unsigned even integer. Allowed range is 10 to 62. Default value is 32 in 1080i mode is 44.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_018_REG</name>
          <description>TV Encoder HD mode VSYNC Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x16</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>BROAD_PLUS_CYCLE_NUMBER_IN_HD_MODE_VSYNC</name>
              <description></description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRONT_PORCH_LIKE_IN_HD_MODE_VSYNC</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_01C_REG</name>
          <description>TV Encoder Line Number Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x16020D</resetValue>
          <resetMask>0xFF07FF</resetMask>
          <fields>
            <field>
              <name>FIRST_VIDEO_LINE</name>
              <description>Specify the index of the first line in a field/frame to have active video. 8 bits unsigned integer. For interlaced video: When VSync5=B`0`, FirstVideoLine is restricted to be greater than 7. When VSync5=B`1`, FirstVideoLine is restricted to be greater than 9. Default value is 21.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NUM_LINES</name>
              <description>Specify the total number of lines in a video frame. 11 bits unsigned integer. Allowed range is 0 to 2048. Default value is 525. For interlaced video: When NTSC, and FirstVideoLine is greater than 20, then NumLines is restricted to be greater than 2*(FirstVideoLine+18). When NTSC, and FirstVideoLine is not greater than 20, then NumLines is restricted to be greater than 77. When PAL, and FirstVideoLine is greater than 22, then NumLines is restricted to be greater than 2*(FirstVideoLine+18). When PAL, and FirstVideoLine is not greater than 22, then NumLines is restricted to be greater than 81. If NumLines is even, then it is restricted to be divisible by 4. If NumLines is odd, then it is restricted to be divisible by 4 with a remainder of 1.</description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_020_REG</name>
          <description>TV Encoder Level Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0xF0011A</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>BLANK_LEVEL</name>
              <description>Specify the blank level setting for active lines. 10 bits unsigned integer. Allowed range 0 to 1023. Default value is 0xF0(dec240).</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLACK_LEVEL</name>
              <description>Specify the black level setting. 10 bits unsigned integer. Allowed range is 240 to 1023. Default value is 282.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_030_REG</name>
          <description>TV Encoder Auto Detection Enable Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>DAC3_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_AUTO_DETECT_INTERRUPT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC3_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_AUTO_DETECT_ENABLE</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_034_REG</name>
          <description>TV Encoder Auto Detection Interrupt Status Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>DAC3_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC3 auto detection interrupt</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC2 auto detection interrupt</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC1 auto detection interrupt</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_AUTO_DETECT_INTERRUPT_ACTIVE_FLAG</name>
              <description>Write 1 to inactive DAC0 auto detection interrupt</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_038_REG</name>
          <description>TV Encoder Auto Detection Status Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3030303</resetMask>
          <fields>
            <field>
              <name>DAC3_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC2_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC1_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC0_STATUS</name>
              <description>00: Unconnected 
01: Connected 
11: Short to ground 
10: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unconnected</name>
                  <description>Unconnected</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Connected</name>
                  <description>Connected</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short to ground</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_03C_REG</name>
          <description>TV Encoder Auto Detection de-bounce Setting Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFF</resetMask>
          <fields>
            <field>
              <name>DAC_TEST_REGISTER</name>
              <description></description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC3_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC2_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC1_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC0_DE_BOUNCE_TIMES</name>
              <description></description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_0F8_REG</name>
          <description>TV Encoder Auto Detect Configuration Register0</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>DETECT_PULSE_VALUE</name>
              <description>Use for DAC data input at auto detect pluse</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_0FC_REG</name>
          <description>TV Encoder Auto Detect Configuration Register1</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF7FFF</resetMask>
          <fields>
            <field>
              <name>DETECT_PULSE_PERIODS</name>
              <description>Use 32K clock</description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DETECT_PULSE_START</name>
              <description></description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_100_REG</name>
          <description>TV Encoder Color Burst Phase Reset Configuration Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>COLOR_PHASE_RESET</name>
              <description>Color burst phase period selection These bits select the number of fields or lines after which the color burst phase is reset to its initial value as specified by the ChromaPhase parameter, This parameter is application only for interlaced video. 
00: 8 field 
01: 4 field 
10: 2 lines 
11: only once</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 field</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 field</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 lines</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>only_once</name>
                  <description>only once</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_104_REG</name>
          <description>TV Encoder VSYNC Number Register</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>VSYNC5</name>
              <description>VSync5 Number of equalization pulse selection This bit selects whether the number of equalization pulses is 5 or 6. This parameter is applicable only for interlaced video. 
0: 5 equalization pulse(default) 
1: 6 equalization pulses</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5</name>
                  <description>5 equalization pulse(default)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6</name>
                  <description>6 equalization pulses</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_108_REG</name>
          <description>TV Encoder Notch Filter Frequency Register</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>NOTCH_FREQ</name>
              <description>Luma notch filter center frequency selection These bits select the luma notch filter (which is a band-reject filter) center frequency. In two of the selections, the filter width affects also the selection of the center frequency. 
000: 1.1875 
001: 1.1406 
010: 1.0938 when notch_wide value is B`1` (this selection is proper for CCIR-NTSC), or 1.0000 when notch_wide value is B`0` 
011: 0.9922. This selection is proper for NTSC with square pixels 
100: 0.9531. This selection is proper for PAL with square pixel 
101: 0.8359 when notch_wide value is B`1` (this selection is proper for CCIR-PAL), or 0.7734 when notch_wide value is B`0` 
110: 0.7813 
111: 0.7188</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_point_1875</name>
                  <description>1.1875</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_1406</name>
                  <description>1.1406</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_0938</name>
                  <description>1.0938 when notch_wide value is B`1` (this selection is proper for CCIR-NTSC), or 1.0000 when notch_wide value is B`0`</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9922</name>
                  <description>0.9922. This selection is proper for NTSC with square pixels</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9531</name>
                  <description>0.9531. This selection is proper for PAL with square pixel</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_8359</name>
                  <description>0.8359 when notch_wide value is B`1` (this selection is proper for CCIR-PAL), or 0.7734 when notch_wide value is B`0`</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_7813</name>
                  <description>0.7813</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_7188</name>
                  <description>0.7188</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_10C_REG</name>
          <description>TV Encoder Cb/Cr Level/Gain Register</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x4F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CR_BURST_LEVEL</name>
              <description>Specify the amplitude of the Cr burst. 8 bit 2`s complement integer. Allowed range is (-127) to 127. Default value is 0.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_BURST_LEVEL</name>
              <description>Specify the amplitude of the Cb burst. 8 bit 2`s complement integer. Allowed range is (-127) to 127. Default value is 60.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_110_REG</name>
          <description>TV Encoder Tint and Color Burst Phase Register</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF00FF</resetMask>
          <fields>
            <field>
              <name>TINT</name>
              <description>Specify the tint adjustment of the chroma signal for CVBS and Y/C outputs. The adjustment is effected by setting the sub-carrier phase to the value of this parameter. 8.8 bit unsigned fraction. Units are cycles of the color burst frequency. Default value is 0.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHROMA_PHASE</name>
              <description>Specify the color burst initial phase ( . 8 bit unsigned fraction. Units are cycles of the color burst frequency. Default value is X`00`. The color burst is set to this phase at the first and then reset to the same value at further s as specified by the bits of the parameter (see above)</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_114_REG</name>
          <description>TV Encoder Burst Width Register</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x16447E</resetValue>
          <resetMask>0xFF7F7FFF</resetMask>
          <fields>
            <field>
              <name>BACK_PORCH</name>
              <description>Breezeway like in HD mode VSync 720p mode, is 220 2080i/p mode is 88(default)</description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BREEZEWAY</name>
              <description>Must be even. Specify the width of the breezeway in encoder clock cycles. 5 bit unsigned integer. Allowed range is 0 to 31. Default value is 22 In 1080i mode, is 44 In 1080p mode, is 44 In 720p mode,is 40</description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BURST_WIDTH</name>
              <description>Specify the width of the color frequency burst in encoder clock cycles. 7 bit unsigned integer. Allowed range is 0 to 127. Default value is 68. In hd mode, ignored</description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSYNC_WIDTH</name>
              <description>Specify the width of the horizontal sync pulse in encoder clock cycles. Min value is 16. Max value is ( ). Default value is 126. The sum of and is restricted to be divisible by 4. In 720p mode, is 40 In 1080i/p mode, is 44</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_118_REG</name>
          <description>TV Encoder Cb/Cr Gain Register</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CR_GAIN</name>
              <description>Specify the Cr color gain. 8 bit unsigned fraction. Default value is 139.</description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_GAIN</name>
              <description>Specify the Cb color gain. 8 bit unsigned fraction. Default value is 139.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_11C_REG</name>
          <description>TV Encoder Sync and VBI Level Register</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x1000F0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>SYNC_LEVEL</name>
              <description>Specify the sync pulse level setting. 8 bit unsigned integer. Allowed range is 0 to -1 or -1 (whichever is smaller).</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>V_BLANK_LEVEL</name>
              <description>VBlank_Level Specify the blank level setting for non active lines. 10 bit unsigned integer. Allow range 0 to 1023.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_120_REG</name>
          <description>TV Encoder White Level Register</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x1E80320</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HD_SYNC_BREEZEWAY_LEVEL</name>
              <description>Specify the breezeway level setting. 10 bit unsigned integer. Allowed range is 0 to 1023. Default value is 488.</description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WHITE_LEVEL</name>
              <description>Specify the white level setting. 10 bit unsigned integer. Allowed range is black_level+1 or vbi_blank_level +1 (whichever is greater) to 1023. Default value is 800.</description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_124_REG</name>
          <description>TV Encoder Video Active Line Register</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x5A0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>ACTIVE_LINE</name>
              <description>Specify the width of the video line in encoder clock cycles. 12 bit unsigned multiple of 4 integer. Allowed range is 0 to 4092 Default value is 1440.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_128_REG</name>
          <description>TV Encoder Video Chroma BW and CompGain Register</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30003</resetMask>
          <fields>
            <field>
              <name>CHROMA_BW</name>
              <description>Chroma filter bandwidth selection This bit specifies whether the bandwidth of the chroma filter is: 
00: Narrow width, 0.6MHz 
01: Wide width 1.2MHz. 
10: Extra width 1.8MHz 
11: Ultra width 2.5MHz Default is 0.6MHz(value 0)</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow width, 0.6MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide width 1.2MHz.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Extra</name>
                  <description>Extra width 1.8MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Ultra</name>
                  <description>Ultra width 2.5MHz Default is 0.6MHz(value 0)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMP_CH_GAIN</name>
              <description>Chroma gain selection for the composite video signal. These bits specify the gain of the chroma signal for composing with the luma signal to generate the composite video signal:  
00: 100% (B`00`), 
01: 25% 
10: 50% 
11: 75%</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_100_percent_</name>
                  <description>100% (B`00`),</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_25_percent_</name>
                  <description>25%</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_50_percent_</name>
                  <description>50%</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_75_percent_</name>
                  <description>75%</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_12C_REG</name>
          <description>TV Encoder Register</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x101</resetValue>
          <resetMask>0x101</resetMask>
          <fields>
            <field>
              <name>NOTCH_WIDTH</name>
              <description>Luma notch filter width selection This bit selects the luma notch filter (which is a band-reject filter) width. 
0: Narrow 
1: Wide</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>COMP_YUV_EN</name>
              <description>This bit selects if the components video output are the RGB components or the YUV components. 
0: The three component outputs are the RGB components. 
1: The three component outputs are the YUV components, (i.e. the color conversion unit is by-passed)</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>three_component_outputs_are_the_RGB</name>
                  <description>The three component outputs are the RGB components.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>three_component_outputs_are_the_YUV</name>
                  <description>The three component outputs are the YUV components, (i.e. the color conversion unit is by-passed)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_130_REG</name>
          <description>TV Encoder Re-sync parameters Register</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x100001</resetValue>
          <resetMask>0xC7FF07FF</resetMask>
          <fields>
            <field>
              <name>RE_SYNC_FIELD</name>
              <description></description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_SYNC_DIS</name>
              <description>0: Re-Sync Enable 
1: Re-Sync Disable</description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>re_Sync_Enable</name>
                  <description>Re-Sync Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>re_Sync_Disable</name>
                  <description>Re-Sync Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RE_SYNC_LINE_NUM</name>
              <description></description>
              <bitRange>[26:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_SYNC_PIXEL_NUM</name>
              <description></description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_134_REG</name>
          <description>TV Encoder Slave Parameter Register</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x101</resetMask>
          <fields>
            <field>
              <name>SLAVE_THRESH</name>
              <description>Horizontal line adjustment threshold selection This bit selects whether the number of lines after which the Video Encoder starts the horizontal line length adjustment is slave mode is 0 or 30. 
0: Number of lines is 0 
1: Number of lines is 30</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>0</name>
                  <description>Number of lines is 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>30</name>
                  <description>Number of lines is 30</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SLAVE_MODE</name>
              <description>Slave mode selection This bit selects whether the Video Encoder is sync slave, partial slave or sync master. It should be set to B`0`. 
0: The Video Encoder is not a full sync slave (i.e. it is a partial sync slave or a sync master) 
1: Reserved</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Video</name>
                  <description>The Video Encoder is not a full sync slave (i.e. it is a partial sync slave or a sync master)</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_138_REG</name>
          <description>TV Encoder Configuration Register0</description>
          <addressOffset>0x138</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x101</resetMask>
          <fields>
            <field>
              <name>INVERT_TOP</name>
              <description>Field parity input signal (top_field) polarity selection. This bit selects whether the top field is indicated by a high level of the field parity signal or by the low level. The bit is applicable both when the Video Encoder is the sync master and when the Video Encoder is the sync slave. 
0: Top field is indicated by low level 
1: Top field is indicated by high level</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>indicated_by_low_level</name>
                  <description>Top field is indicated by low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>indicated_by_high_level</name>
                  <description>Top field is indicated by high level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UV_ORDER</name>
              <description>This bit selects if the sample order at the chroma input to the Video Encoder is Cb first (i.e. Cb 0 Cr 0 Cb 1 Cr 1) or Cr first (i.e. Cr 0 Cb 0 Cr 1 Cb 1). 
0: The chroma sample input order is Cb first 
1: The chroma sample input order is Cr first</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cb</name>
                  <description>The chroma sample input order is Cb first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cr</name>
                  <description>The chroma sample input order is Cr first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_13C_REG</name>
          <description>TV Encoder Configuration Register1</description>
          <addressOffset>0x13C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7010001</resetMask>
          <fields>
            <field>
              <name>RGB_SYNC</name>
              <description>R, G and B signals sync embedding selection. These bits specify whether the sync signal is added to each of the R, G and B components (B`1`) or not (B`0`). Bit *26+ specify if the R signal have embedded syncs, bit [25] specify if the G signal have embedded syncs and bit [24] specify if the B signal have embedded syncs. When comp_yuv is equal to B`1`, these bits are N.A. and should be set to B`000`. When the value is different from B`000`, should be set to B`1`.</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RGB_SETUP</name>
              <description>`Set-up` enable for RGB outputs. This bit specifies if the `set-up` implied value (black_level - blank_level) specified for the CVBS signal is used also for the RGB signals. 
0: The `set-up` is not used, or N.A. i.e. comp_yuv is equal to B`1`. 
1: The implied `set-up` is used for the RGB signals</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>`set_minus_up`</name>
                  <description>The `set-up` is not used, or N.A. i.e. comp_yuv is equal to B`1`.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>implied</name>
                  <description>The implied `set-up` is used for the RGB signals</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BYPASS_YCLAMP</name>
              <description>Y input clamping selection This bit selects whether the Video Encoder Y input is clamped to 64 to 940 or not. When not clamped the expected range is 0 to 1023. The U and V inputs are always clamped to the range 64 to 960. 
0: The Video Encoder Y input is clamped 
1: The Video Encoder Y input is not clamped</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>clamped</name>
                  <description>The Video Encoder Y input is clamped</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_clamped</name>
                  <description>The Video Encoder Y input is not clamped</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_380_REG</name>
          <description>TV Encoder Low Pass Control Register</description>
          <addressOffset>0x380</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F01</resetMask>
          <fields>
            <field>
              <name>USER_DEFLICKER_COEF</name>
              <description>up : coef/32 Center :1-coef/16 Down :coef/32</description>
              <bitRange>[13:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_COEF_DEFLICKER</name>
              <description>0: Auto deflicker 
1: User deflicker</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto deflicker</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>User</name>
                  <description>User deflicker</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENABLE_DEFLICKER</name>
              <description>0: Disable deflicker 
1: Enable deflicker</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable deflicker</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable deflicker</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN</name>
              <description>LP function enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_384_REG</name>
          <description>TV Encoder Low Pass Filter Control Register</description>
          <addressOffset>0x384</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F3F3F</resetMask>
          <fields>
            <field>
              <name>HP_RATIO</name>
              <description>Default high-pass filter ratio Note: in two's complement. Range from -31 to 31.</description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BP0_RATIO</name>
              <description>Default band-pass filter0 ratio Note: in two's complement. Range from -31 to 31.</description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BP1_RATIO</name>
              <description>Default band-pass filter1 ratio Note: in two's complement. Range from -31 to 31.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_388_REG</name>
          <description>TV Encoder Low Pass Gain Register</description>
          <addressOffset>0x388</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>GAIN</name>
              <description>Peaking gain setting.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_38C_REG</name>
          <description>TV Encoder Low Pass Gain Control Register</description>
          <addressOffset>0x38C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF001F</resetMask>
          <fields>
            <field>
              <name>DIF_UP</name>
              <description>Gain control: limitation threshold.</description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BETA</name>
              <description>Gain control: large gain limitation.</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_390_REG</name>
          <description>TV Encoder Low Pass Shoot Control Register</description>
          <addressOffset>0x390</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>NEG_GAIN</name>
              <description>Undershoot gain control.</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_394_REG</name>
          <description>TV Encoder Low Pass Coring Register</description>
          <addressOffset>0x394</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CORTHR</name>
              <description>Coring threshold.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_3A0_REG</name>
          <description>TV Encoder Noise Reduction Register</description>
          <addressOffset>0x3A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF0001</resetMask>
          <fields>
            <field>
              <name>T_VALUE</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EN</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TWI0</name>
      <description>TWI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2AC00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TWI_ADDR</name>
          <description>TWI Slave Address</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLA</name>
              <description>Slave address 7-bit addressing SLA6, SLA5, SLA4, SLA3, SLA2, SLA1, SLA0 10-bit addressing 1, 1, 1, 1, 0, SLAX[9:8]</description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GCE</name>
              <description>General call address enable 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_CCR</name>
          <description>TWI Clock Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>CLK_M</name>
              <description></description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_N</name>
              <description>The TWI bus is sampled by the TWI at the frequency defined by F0: Fsamp = F 0 = Fin / 2^CLK_N The TWI OSCL output frequency, in master mode, is F1 / 10: F1 = F0 / (CLK_M + 1) Foscl = F1 / 10 = Fin / (2^CLK_N * (CLK_M + 1)*10) For Example Fin = 48Mhz (APB clock input) For 400kHz full speed 2Wire, CLK_N = 2, CLK_M=2 F0 = 48M/2^2=12Mhz, F1= F0/(10*(2+1)) = 0.4Mhz For 100Khz standard speed 2Wire, CLK_N=2, CLK_M=11 F0=48M/2^2=12Mhz, F1=F0/(10*(11+1)) = 0.1Mhz</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_CNTR</name>
          <description>TWI Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFC</resetMask>
          <fields>
            <field>
              <name>INT_EN</name>
              <description>Interrupt Enable 
0: The interrupt line always low 
1: The interrupt line will go high when is set.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interrupt_line_always_low</name>
                  <description>The interrupt line always low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>interrupt_line_will_go</name>
                  <description>The interrupt line will go high when is set.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_EN</name>
              <description>TWI Bus Enable 
0: The TWI bus inputs ISDA/ISCL are ignored and the TWI Controller will not respond to any address on the bus 
1: The TWI will respond to calls to its slave address and the general call address if the bit in the is set. Note: In master operation mode, this bit should be set to `1`.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TWI_bus</name>
                  <description>The TWI bus inputs ISDA/ISCL are ignored and the TWI Controller will not respond to any address on the bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI_will_respond</name>
                  <description>The TWI will respond to calls to its slave address and the general call address if the bit in the is set. Note: In master operation mode, this bit should be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M_STA</name>
              <description>Master Mode Start When is set to `1`, TWI Controller enters master mode and will transmit a START condition on the bus when the bus is free. If the bit is set to `1` when the TWI Controller is already in master mode and one or more bytes have been transmitted, then a repeated START condition will be sent. If the bit is set to `1` when the TWI is being accessed in slave mode, the TWI will complete the data transfer in slave mode then enter master mode when the bus has been released. The bit is cleared automatically after a START condition has been sent: writing a `0` to this bit has no effect.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_STP</name>
              <description>Master Mode Stop If is set to `1` in master mode, a STOP condition is transmitted on the TWI bus. If the bit is set to `1` in slave mode, the TWI will behave as if a STOP condition has been received, but no STOP condition will be transmitted on the TWI bus. If both M_STA and bits are set, the TWI will first transmit the STOP condition (if in master mode) then transmit the START condition. The bit is cleared automatically, writing a `0` to this bit has no effect.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>INT_FLAG</name>
              <description>Interrupt Flag is automatically set to `1` when any of 28 (out of the possible 29) states is entered (see ` ` below). The only state that does not set is state F8h. If the bit is set, the interrupt line goes high when IFLG is set to `1`. If the TWI is operating in slave mode, data transfer is suspended when is set and the low period of the TWI bus clock line (SCL) is stretched until `1` is written to . The TWI clock line is then released and the interrupt line goes low.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>A_ACK</name>
              <description>Assert Acknowledge When A_ACK is set to `1`, an Acknowledge (low level on SDA) will be sent during the acknowledge clock pulse on the TWI bus if: (1). Either the whole of a matching 7-bit slave address or the first or the second byte of a matching 10-bit slave address has been received. (2). The general call address has been received and the bit in the register is set to `1`. (3). A data byte has been received in master or slave mode. When A_ACK is `0`, a Not Acknowledge (high level on SDA) will be sent when a data byte is received in master or slave mode. If A_ACK is cleared to `0` in slave transmitter mode, the byte in the register is assumed to be the `last byte`. After this byte has been transmitted, the TWI will enter state C8h then return to the idle state (status code F8h) when is cleared. The TWI will not respond as a slave unless A_ACK is set.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_DATA</name>
          <description>TWI Data Byte</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TWI_DATA</name>
              <description>Data byte for transmitting or received</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_DVFSCR</name>
          <description>TWI_DVFSCR</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>MS_PRIORITY</name>
              <description>CPU and DVFS BUSY set priority select  
0: CPU has higher priority 
1: DVFS has higher priority</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CPU</name>
                  <description>CPU has higher priority</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DVFS</name>
                  <description>DVFS has higher priority</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU_BUSY_SET</name>
              <description>CPU Busy set</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DVFC_BUSY_SET</name>
              <description>DVFS Busy set</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_EFR</name>
          <description>TWI Enhance Feature Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>DBN</name>
              <description>Data Byte number follow Read Command Control 
00: No Data Byte to be written after read command 
01: Only 1 byte data to be written after read command 
10: 2 bytes data can be written after read command 
11: 3 bytes data can be written after read command</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Data</name>
                  <description>No Data Byte to be written after read command</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Only_1</name>
                  <description>Only 1 byte data to be written after read command</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 bytes data can be written after read command</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3</name>
                  <description>3 bytes data can be written after read command</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_LCR</name>
          <description>TWI Line Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x3A</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>SCL_STATE</name>
              <description>Current state of TWI_SCL 
0: Low 
1: High</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDA_STATE</name>
              <description>Current state of TWI_SDA 
0: Low 
1: High</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCL_CTL</name>
              <description>TWI_SCL line state control bit When line control mode is enabled (bit[2] set), the value of this bit decides the output level of TWI_SCL. 
0: Output low level 
1: Output high level</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Output_low_level</name>
                  <description>Output low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output_high_level</name>
                  <description>Output high level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCL_CTL_EN</name>
              <description>TWI_SCL line state control enable When this bit is set, the state of TWI_SCL is controlled by the value of bit[3]. 
0: Disable TWI_SCL line control mode 
1: Enable TWI_SCL line control mode</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable TWI_SCL line control mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable TWI_SCL line control mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDA_CTL</name>
              <description>TWI_SDA line state control bit When line control mode is enabled (bit[0] set), the value of this bit decides the output level of TWI_SDA. 
0: Output low level 
1: Output high level</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Output_low_level</name>
                  <description>Output low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output_high_level</name>
                  <description>Output high level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDA_CTL_EN</name>
              <description>TWI_SDA line state control enable When this bit is set, the state of TWI_SDA is controlled by the value of bit[1]. 
0: Disable TWI_SDA line control mode 
1: Enable TWI_SDA line control mode</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable TWI_SDA line control mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable TWI_SDA line control mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_SRST</name>
          <description>TWI Software Reset</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>SOFT_RST</name>
              <description>Soft Reset Write `1` to this bit to reset the TWI and clear to `0` when completing Soft Reset operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_STAT</name>
          <description>TWI Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0xF8</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA</name>
              <description>Status Information Byte Code Status 
0x00: Bus error 
0x08: START condition transmitted 
0x10: Repeated START condition transmitted 
0x18: Address + Write bit transmitted, ACK received 
0x20: Address + Write bit transmitted, ACK not received 
0x28: Data byte transmitted in master mode, ACK received 
0x30: Data byte transmitted in master mode, ACK not received 
0x38: Arbitration lost in address or data byte 
0x40: Address + Read bit transmitted, ACK received 
0x48: Address + Read bit transmitted, ACK not received 
0x50: Data byte received in master mode, ACK transmitted 
0x58: Data byte received in master mode, not ACK transmitted 
0x60: Slave address + Write bit received, ACK transmitted 
0x68: Arbitration lost in address as master, slave address + Write bit received, ACK transmitted 
0x70: General Call address received, ACK transmitted 
0x78: Arbitration lost in address as master, General Call address received, ACK transmitted 
0x80: Data byte received after slave address received, ACK transmitted 
0x88: Data byte received after slave address received, not ACK transmitted 
0x90: Data byte received after General Call received, ACK transmitted 
0x98: Data byte received after General Call received, not ACK transmitted 
0xA0: STOP or repeated START condition received in slave mode 
0xA8: Slave address + Read bit received, ACK transmitted 
0xB0: Arbitration lost in address as master, slave address + Read bit received, ACK transmitted 
0xB8: Data byte transmitted in slave mode, ACK received 
0xC0: Data byte transmitted in slave mode, ACK not received 
0xC8: Last byte transmitted in slave mode, ACK received 
0xD0: Second Address byte + Write bit transmitted, ACK received 
0xD8: Second Address byte + Write bit transmitted, ACK not received 
0xF8: No relevant status information, INT_FLAG=0 Others: Reserved</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_XADDR</name>
          <description>TWI Extended Slave Address</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLAX</name>
              <description>Extend Slave Address SLAX[7:0]</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="TWI0">
      <name>TWI1</name>
      <description>TWI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2B000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TWI0">
      <name>TWI2</name>
      <description>TWI2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2B400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TWI0">
      <name>TWI3</name>
      <description>TWI3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2B800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TWI0">
      <name>TWI4</name>
      <description>TWI4</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2C000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>UART0</name>
      <description>UART0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART1</name>
      <description>UART1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART2</name>
      <description>UART2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART3</name>
      <description>UART3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART4</name>
      <description>UART4</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C29000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART5</name>
      <description>UART5</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C29400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART6</name>
      <description>UART6</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C29800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART7</name>
      <description>UART7</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C29C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the bit is set and the UART is not busy ( = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full</description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when is disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full</description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1</description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is `self-clearing`. It is not necessary to clear this bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset.</description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF7</resetMask>
          <fields>
            <field>
              <name>PTE</name>
              <description>TX_REQ Transmit In DMA1 mode ( is 1,FIFO is open),if PTE signal is high, DMA request is sent when TFL is not larger than TRIG. If PTE signal is low, DMA request is sent when FIFO is empty. DMA request could fall when FIFO is full. In DMA0 mode( is 0,FIFO is closed),if PTE signal is high and FIFO is open, DMA request is sent when TFL is not larger than TRIG. If these conditions are not satisfied, then DRQ will fall. If PTE signal is high and FIFO is closed, DMA request is sent when THRE is empty. If these conditions are not satisfied, then DRQ will fall. If PTE signal is low, DMA request is sent when FIFO is empty.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DMA_PTE_RX</name>
              <description>RX_DRQ Receive In DMA1 mode, when RFL is not less than TRIG or the receiver timeout is happened, DRQ is sent , or else DRQ is low. In DMA0 mode, if DMA_PTE_RX is 1 and FIFO is open, REQ is sent when RFL is not less than TRIG, or else not sent.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using to change the baud rate or register configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change register configuration (except for the bit) and baudrate register ( and ) when the UART is busy ( is 1). 
1: Enable change when busy</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 
0: Halt TX disabled 
1: Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Halt TX disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( ) 
1: Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( )/TX Holding Register ( ) and Interrupt Enable Register( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register( ) and Divisor Latch High Register( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( is set to 1) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( = 0) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one).  
0: Odd Parity 
1: Even Parity</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If the bit is set to `1` and the bit is set to 5, one and a half stop bit is transmitted. Otherwise, two stop bit is transmitted. Note that regardless of the number of stop bit selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bit when is zero, else 2 stop bit</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bit when is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( = 0) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bit 
01: 6 bit 
10: 7 bit 
11: 8 bit</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bit</name>
                  <description>5 bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bit</name>
                  <description>6 bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bit</name>
                  <description>7 bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the register provided there are no subsequent errors in the FIFO.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to `1` whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to `1` whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data. If in UART mode ( is disabled), it is set whenever the serial input, sin, is held in a logic `0` state for longer than the sum of start time + data bits + parity + stop . If in infrared mode ( is enabled), it is set whenever the serial input, sir_in, is continuously pulsed to logic `0` for longer than the sum of start time + data bits + parity + stop . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the bit. In the non-FIFO mode, the indication occurs immediately and persists until the LSR is read.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no framing error 1:framing error Reading the LSR clears the FE bit.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the bit is set if a break interrupt has occurred, as indicated by the bit. 
0: no parity error 
1: parity error Reading the LSR clears the PE bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 
0: IrDA SIR Mode disable 
1: IrDA SIR Mode enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode ( is disabled), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode ( is enabled), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( = 0), the rts_n signal is set low by programming to high.In Auto Flow Control, AFCE_MODE is enabled and active ( = 1) and FIFOs enable ( = 1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in Loopback mode ( = 1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0:dtr_n de-asserted (logic 1) 1:dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( = 1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the (dcd_n) is asserted, it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0)</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0)</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the (dsr_n) bit is asserted, it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In (UART_MCR[4] is set to 1), is the same as .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: If the bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In (UART_MCR[4] = 1), DDSR reflects changes on . Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In (UART_MCR[4] = 1), reflects changes on . Note: If the bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the bit in the register is set. If in FIFO mode and FIFOs are enabled ( = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to when the bit is set.  If in FIFO mode and FIFOs are enabled ( = 1) and is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost.</description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_full</name>
                  <description>Receive FIFO full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO is not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
