<?xml version="1.0" encoding="utf-8"?>
<device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.3" xsi:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>Allwinner</vendor>
  <vendorID>sunxi</vendorID>
  <name>A64</name>
  <series>A64</series>
  <version>0.1</version>
  <description>A64</description>
  <licenseText>questionable</licenseText>
  <cpu>
    <name>CA53</name>
    <revision>0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>0</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>64</width>
  <size>32</size>
  <access>read-write</access>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>AC</name>
      <description>AC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AC_ADC_DAPLAT</name>
          <description>ADC DAP Left Attack Time Register</description>
          <addressOffset>0x42C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>LEFT_ATTACK_TIME_COEFFICIENT</name>
              <description>Left attack time coefficient setting 
0000: 1x32/fs 
0001: 2x32/fs ------------------------ 
7FFF: 2 x32/fs T=(n+1)*32/fs When the gain decreases, the actual gain will decrease 0.5dB at every attack time. </description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLCTRL</name>
          <description>ADC DAP Left Channel Control Register</description>
          <addressOffset>0x408</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>LEFT_AGC_ENABLE</name>
              <description>Left AGC enable 
0: disable    1: enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_HPF_ENABLE</name>
              <description>Left HPF enable 
0: disable    1: enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_NOISE_DETECT_ENABLE</name>
              <description>Left Noise detect enable 
0: disable    1: enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_HYSTERESIS</name>
              <description>Left Hysteresis setting 
00: 1dB 
01: 2dB 
10: 4dB 
11: disable; </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1dB</name>
                  <description>1dB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2dB</name>
                  <description>2dB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4dB</name>
                  <description>4dB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable;</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_NOISE_DEBOUNCE_TIME</name>
              <description>Left Noise debounce time 
0000: disable 
0001: 4/fs 
0010: 8/fs ------------ 
1111: 16*4096/fs T=2 /fs, except N=0 </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_slash_fs</name>
                  <description>4/fs</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_slash_fs</name>
                  <description>8/fs ------------</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_4096_slash_fs</name>
                  <description>16*4096/fs T=2 /fs, except N=0</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_SIGNAL_DEBOUNCE_TIME</name>
              <description>Left Signal debounce time 
0000: disable 
0001: 4/fs 
0010: 8/fs ------------ 
1111: 16*4096/fs T=2 /fs, except N=0 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_slash_fs</name>
                  <description>4/fs</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_slash_fs</name>
                  <description>8/fs ------------</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_4096_slash_fs</name>
                  <description>16*4096/fs T=2 /fs, except N=0</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLDT</name>
          <description>ADC DAP Left Decay Time Register</description>
          <addressOffset>0x428</addressOffset>
          <resetValue>0x1F</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>LEFT_DECAY_TIME_COEFFICIENT</name>
              <description>(32x32fs) Left decay time coefficient setting  
0000: 1x32/fs 
0001: 2x32/fs ------------------------ 
7FFF: 2 x32/fs T=(n+1)*32/fs When the gain increases, the actual gain will increase 0.5dB at every decay time. </description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLHAC</name>
          <description>ADC DAP Left High Average Coef Register</description>
          <addressOffset>0x418</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_CHANNEL</name>
              <description>Left channel output signal average level coefficient setting(the coefficient [reg06[10:0],reg07] is 3.24 format 2s complement)  </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLHNAC</name>
          <description>ADC DAP Left Input Signal High Average Coef Register</description>
          <addressOffset>0x43C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT</name>
              <description>Left input signal average filter coefficient to check noise or not(the coefficient [reg0f[10:0],reg10] is 3.24 format 2s complement), always the same as the left output signal average filter's. </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLLAC</name>
          <description>ADC DAP Left Low Average Coef Register</description>
          <addressOffset>0x41C</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_CHANNEL</name>
              <description>Left channel output signal average level coefficient setting(the coefficient [reg07[10:0],reg08] is 3.24 format 2s complement)  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLLNAC</name>
          <description>ADC DAP Left Input Signal Low Average Coef Register</description>
          <addressOffset>0x440</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT</name>
              <description>Left input signal average filter coefficient to check noise or not(the coefficient [reg0f[10:0],reg10] is 3.24 format 2s complement)  always the same as the left output signal average filter's </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLSTA</name>
          <description>ADC DAP Left Status Register</description>
          <addressOffset>0x400</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_AGC_SATURATION_FLAG</name>
              <description>Left AGC saturation flag </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LEFT_AGC_NOISE_THRESHOLD_FLAG</name>
              <description>Left AGC noise-threshold flag </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LEFT_GAIN_APPLIED</name>
              <description>Left Gain applied by AGC (7.1 format 2s complement(-20dB - 40dB), 0.5B/ step) 
0x50: 40dB 
0x4F: 39.5dB --------------- 
0x00: 00dB 
0xFF: -0.5dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_40dB</name>
                  <description>40dB</description>
                  <value>0x50</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_39_point_5dB</name>
                  <description>39.5dB ---------------</description>
                  <value>0x4F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_00dB</name>
                  <description>00dB</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_5dB</name>
                  <description>-0.5dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPLTL</name>
          <description>ADC DAP Left Target Level Register</description>
          <addressOffset>0x410</addressOffset>
          <resetValue>0x2C28</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LEFT_CHANNEL_TARGET_LEVEL</name>
              <description>Left channel target level setting(-1dB -- -30dB).(6.0format 2s complement)  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LEFT_CHANNEL_MAX_GAIN</name>
              <description>Left channel max gain setting(0-40dB).(7.1format 2s complement)  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPNTH</name>
          <description>ADC DAP Noise Threshold Register</description>
          <addressOffset>0x438</addressOffset>
          <resetValue>0x1E1E</resetValue>
          <resetMask>0x1F1F</resetMask>
          <fields>
            <field>
              <name>LEFT_CHANNEL_NOISE_THRESHOLD</name>
              <description>Left channel noise threshold setting. 
0x00: -30dB 
0x01: -32dB 
0x02: -34dB -------------------------------------------- 
0x1D: -88dB 
0x1E: -90dB 
0x1F: -90dB(the same as 0x1E) </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_minus_30dB</name>
                  <description>-30dB</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_32dB</name>
                  <description>-32dB</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_34dB</name>
                  <description>-34dB --------------------------------------------</description>
                  <value>0x02</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_88dB</name>
                  <description>-88dB</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_90dB</name>
                  <description>-90dB</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_90dB_openingparen_the</name>
                  <description>-90dB(the same as 0x1E)</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_CHANNEL_NOISE_THRESHOLD</name>
              <description>Right channel noise threshold setting(-90 -- -30dB). 
0x00: -30dB 
0x01: -32dB 
0x02: -34dB -------------------------------------------- 
0x1D: -88dB 
0x1E: -90dB 
0x1F: -90dB(the same as 0x1E) </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_minus_30dB</name>
                  <description>-30dB</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_32dB</name>
                  <description>-32dB</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_34dB</name>
                  <description>-34dB --------------------------------------------</description>
                  <value>0x02</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_88dB</name>
                  <description>-88dB</description>
                  <value>0x1D</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_90dB</name>
                  <description>-90dB</description>
                  <value>0x1E</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_90dB_openingparen_the</name>
                  <description>-90dB(the same as 0x1E)</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRAT</name>
          <description>ADC DAP Right Attack Time Register</description>
          <addressOffset>0x434</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_ATTACK_TIME_COEFFICIENT</name>
              <description>Right attack time coefficient setting 
0000: 1x32/fs 
0001: 2x32/fs ------------------------ 
7FFF: 2 x32/fs T=(n+1)*32/fs When the gain decreases, the actual gain will decrease 0.5dB at every attack time.</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRCTRL</name>
          <description>ADC DAP Right Channel Control Register</description>
          <addressOffset>0x40C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_AGC_ENABLE</name>
              <description>Right AGC enable 
0: disable     1: enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_HPF_ENABLE</name>
              <description>Right HPF enable 
0: disable     1: enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_NOISE_DETECT_ENABLE</name>
              <description>Right Noise detect enable 
0: disable     1: enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_HYSTERESIS</name>
              <description>Right Hysteresis setting 
00: 1dB 
01: 2dB 
10: 4dB 
11: disable </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1dB</name>
                  <description>1dB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2dB</name>
                  <description>2dB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4dB</name>
                  <description>4dB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_NOISE_DEBOUNCE_TIME</name>
              <description>Right Noise debounce time 
0000: disable 
0001: 4/fs 
0010: 8/fs ------------ 
1111: 16*4096/fs T=2 /fs ,except N=0 </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_slash_fs</name>
                  <description>4/fs</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_slash_fs</name>
                  <description>8/fs ------------</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_4096_slash_fs</name>
                  <description>16*4096/fs T=2 /fs ,except N=0</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_SIGNAL_DEBOUNCE_TIME</name>
              <description>Right Signal debounce time 
0000: disable 
0001: 4/fs 
0010: 8/fs ------------ 
1111: 16*4096/fs T=2 /fs, except N=0 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_slash_fs</name>
                  <description>4/fs</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_slash_fs</name>
                  <description>8/fs ------------</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_4096_slash_fs</name>
                  <description>16*4096/fs T=2 /fs, except N=0</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRDT</name>
          <description>ADC DAP Right Decay Time Register</description>
          <addressOffset>0x430</addressOffset>
          <resetValue>0x1F</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_DECAY_TIME_COEFFICIENT</name>
              <description>(32x32fs) Right decay time coefficient setting  
0000: 1x32/fs 
0001: 2x32/fs ------------------------ 
7FFF: 2 x32/fs T=(n+1)*32/fs When the gain increases, the actual gain will increase 0.5dB at every decay time. </description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRHAC</name>
          <description>ADC DAP Right High Average Coef Register</description>
          <addressOffset>0x420</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>RIGHT_CHANNEL</name>
              <description>Right channel output signal average level coefficient setting(the coefficient [reg08[10:0],reg09] is 3.24 format 2s complement)  </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRHNAC</name>
          <description>ADC DAP Right Input Signal High Average Coef Register</description>
          <addressOffset>0x444</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>RIGHT</name>
              <description>Right input signal average filter coefficient to check noise or not(the coefficient [reg11[10:0],reg12] is 3.24 format 2s complement), always the same as the right output signal average filter's </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRLAC</name>
          <description>ADC DAP Right Low Average Coef Register</description>
          <addressOffset>0x424</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_CHANNEL</name>
              <description>Right channel output signal average level coefficient setting(the coefficient [reg08[10:0],reg09] is 3.24 format 2s complement)   </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRLNAC</name>
          <description>ADC DAP Right Input Signal Low Average Coef Register</description>
          <addressOffset>0x448</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>RIGHT</name>
              <description>Right input signal average filter coefficient to check noise or not(the coefficient [reg11[10:0],reg12] is 3.24 format 2s complement),  always the same as the right output signal average filter's </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRSTA</name>
          <description>ADC DAP Right Status Register</description>
          <addressOffset>0x404</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_AGC_SATURATION_FLAG</name>
              <description>Right AGC saturation flag </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RIGHT_AGC_NOISE_THRESHOLD_FLAG</name>
              <description>Right AGC noise-threshold flag </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RIGHT_GAIN_APPLIED</name>
              <description>Right Gain applied by AGC (7.1 format 2s complement(-20dB - 40dB), 0.5dB /step)  
0x50: 40dB 
0x4F: 39.5dB --------------- 
0x00: 00dB 
0xFF: -0.5dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_40dB</name>
                  <description>40dB</description>
                  <value>0x50</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_39_point_5dB</name>
                  <description>39.5dB ---------------</description>
                  <value>0x4F</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_00dB</name>
                  <description>00dB</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_0_point_5dB</name>
                  <description>-0.5dB</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAPRTL</name>
          <description>ADC DAP Right Target Level Register</description>
          <addressOffset>0x414</addressOffset>
          <resetValue>0x2C28</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_CHANNEL_TARGET_LEVEL</name>
              <description>Right channel target level setting(-1dB -- -30dB).(6.0format 2s complement)  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RIGHT_CHANNEL_MAX_GAIN</name>
              <description>Right channel max gain setting (0-40dB). (7.1format 2s complement)  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAC_DAPCTRL</name>
          <description>DAC DAP Control Register</description>
          <addressOffset>0x480</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>DRC1_ENABLE_CONTROL</name>
              <description>DRC1 enable control 
0: disable   1: enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRC1_LEFT_CHANNEL</name>
              <description>DRC1 Left channel HPF enable control 
0: disable   1: enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRC1_RIGHT_CHANNEL</name>
              <description>DRC1 Right channel HPF enable control 
0: disable   1: enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRC0_ENABLE_CONTROL</name>
              <description>DRC0 enable control 
0: disable   1: enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRC0_LEFT_CHANNEL</name>
              <description>DRC0 Left channel HPF enable control 
0: disable   1: enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRC0_RIGHT_CHANNEL</name>
              <description>DRC0 Right channel HPF enable control 
0: disable   1: enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAPHHPFC</name>
          <description>ADC DAP High HPF Coef Register</description>
          <addressOffset>0x44C</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting(the coefficient [reg13[10:0],reg14] is 3.24 format 2s complement) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAPLHPFC</name>
          <description>ADC DAP Low HPF Coef Register</description>
          <addressOffset>0x450</addressOffset>
          <resetValue>0xFAC1</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting(the coefficient [reg13[10:0],reg14] is 3.24 format 2s complement) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DAPOPT</name>
          <description>ADC DAP Optimum Register</description>
          <addressOffset>0x454</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x737</resetMask>
          <fields>
            <field>
              <name>LEFT_ENERGY_DEFAULT_VALUE</name>
              <description>Left energy default value setting (include the input and output) 
0: min 
1: max </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>min</name>
                  <description>min</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>max</name>
                  <description>max</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_CHANNEL_GAIN_HYSTERSIS</name>
              <description>Left channel gain hystersis setting. The different between target level and the signal level must larger than the hystersis when the gain change.  
00: 0.4375db 
01: 0.9375db 
10: 1.9375db 
11: 3db </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_4375db</name>
                  <description>0.4375db</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9375db</name>
                  <description>0.9375db</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_9375db</name>
                  <description>1.9375db</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3db</name>
                  <description>3db</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_SIGNAL_AVERAGE_FILTER_COEFFICIENT</name>
              <description>The input signal average filter coefficient setting 
0: is the [reg0f[10:0], reg10] and [reg11[1:0], reg12]; 
1: is the [reg06[10:0], reg07] and [reg08[1:0], reg09]; </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>is_the_[reg0f[10_colon_0]</name>
                  <description>is the [reg0f[10:0], reg10] and [reg11[1:0], reg12];</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>is_the_[reg06[10_colon_0]</name>
                  <description>is the [reg06[10:0], reg07] and [reg08[1:0], reg09];</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_OUTPUT_WHEN_THE_CHANNEL</name>
              <description>AGC output when the channel in noise state 
0: output is zero 
1: output is the input data </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>zero</name>
                  <description>output is zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>the_input</name>
                  <description>output is the input data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_ENERGY_DEFAULT_VALUE</name>
              <description>Right energy default value setting (include the input and output) 
0: min 
1: max </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>min</name>
                  <description>min</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>max</name>
                  <description>max</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_CHANNEL_GAIN_HYSTERSIS</name>
              <description>Right channel gain hystersis setting. The different between target level and the signal level must larger than the hystersis when the gain change.  
00: 0.4375db 
01: 0.9375db 
10: 1.9375db 
11: 3db </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_4375db</name>
                  <description>0.4375db</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9375db</name>
                  <description>0.9375db</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_9375db</name>
                  <description>1.9375db</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3db</name>
                  <description>3db</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_CTRL</name>
          <description>DRC0 Control Register</description>
          <addressOffset>0x608</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0xBFFF</resetMask>
          <fields>
            <field>
              <name>DRC_DELAY_BUFFER_DATA_OUTPUT</name>
              <description>DRC delay buffer data output state when drc delay function is enble and the drc funciton disable. After disable drc function and this bit go to 0, the user should write the drc delay function bit to 0; 0 : not complete 1 : is complete </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIGNAL_DELAY_TIME</name>
              <description>Signal delay time setting 6'h00 : (8x1)fs 6'h01 : (8x2)fs 6'h02 : (8x3)fs ---------------------------------------- 6'h2e : (8*47)fs 6'h2f : (8*48)fs 6'h30 -- 6'h3f : (8*48)fs Delay time = 8*(n+1)fs, n&lt;6'h30; When the delay function is disable, the signal delay time is unused. </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_BUFFER_USE_OR_NOT</name>
              <description>The delay buffer use or not when the drc disable and the drc buffer data output completely 0 : don't use the buffer  1 : use the buffer  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MAX_LIMIT_ENABLE</name>
              <description>DRC gain max limit enable 0 : disable 1 : enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MIN_LIMIT_ENABLE</name>
              <description>DRC gain min limit enable. when this fuction enable, it will overwrite the noise detect funciton. 0 : disable 1 : enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_THE_DRC_TO_DETECT</name>
              <description>Control the drc to detect noise when ET enable  0 : disable 1 : enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIGNAL_FUNCTION_SELECT</name>
              <description>Signal function Select 0 : RMS filter 1 : Peak filter When Signal function Select Peak filter, the RMS parameter is unused. (AC_DRC_LRMSHAT / AC_DRC_LRMSLAT / AC_DRC_LRMSHAT / AC_DRC_LRMSLAT) When Signal function Select RMS filter, the Peak filter parameter is unused.(AC_DRC_LPFHAT / AC_DRC_LPFLAT / AC_DRC_RPFHAT / AC_DRC_RPFLAT / AC_DRC_LPFHRT / AC_DRC_LPFLRT / AC_DRC_RPFHRT / AC_DRC_RPFLRT) </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_FUNCTION_ENABLE</name>
              <description>Delay function enable 0 : disable 1 : enable When the Delay function enable is disable, the Signal delay time is unused. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_LT_ENABLE</name>
              <description>DRC LT enable 0 : disable 1 : enable When the DRC LT is disable the LT, Kl and OPL parameter is unused. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_ET_ENABLE</name>
              <description>DRC ET enable 0 : disable 1 : enable When the DRC ET is disable the ET, Ke and OPE parameter is unused. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_EPSHC</name>
          <description>DRC0 Expander Smooth Time High Coef Register</description>
          <addressOffset>0x6AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_EPSLC</name>
          <description>DRC0 Expander Smooth Time Low Coef Register</description>
          <addressOffset>0x6B0</addressOffset>
          <resetValue>0x640C</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HCT</name>
          <description>DRC0 Compressor Theshold High Setting Register</description>
          <addressOffset>0x63C</addressOffset>
          <resetValue>0x6A4</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HET</name>
          <description>DRC0 Expander Theshold High Setting Register</description>
          <addressOffset>0x66C</addressOffset>
          <resetValue>0xBA0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HHPFC</name>
          <description>DRC0 High HPF Coef Register</description>
          <addressOffset>0x600</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format.  </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HK1</name>
          <description>AC_DRC0_HK1</description>
          <addressOffset>0x65C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, there, R is the ratio of the limiter, which always is interger. The format is 8.24. (50 :1) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HKC</name>
          <description>DRC0 Compressor Slope High Setting Register</description>
          <addressOffset>0x644</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 8.24. (2 : 1) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HKE</name>
          <description>DRC0 Expander Slope High Setting Register</description>
          <addressOffset>0x674</addressOffset>
          <resetValue>0x50</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 50. The format is 8.24. (1:5) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HKN</name>
          <description>DRC0 Linear Slope High Setting Register</description>
          <addressOffset>0x684</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger . The format is 8.24. (1:1) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HLT</name>
          <description>DRC0 Limiter Theshold High Setting Register</description>
          <addressOffset>0x654</addressOffset>
          <resetValue>0x1A9</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HOPC</name>
          <description>DRC0 Compressor High Output at Compressor Threshold  Register</description>
          <addressOffset>0x64C</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation -OPC/6.0206 The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HOPE</name>
          <description>DRC0 Expander High Output at Expander Threshold</description>
          <addressOffset>0x67C</addressOffset>
          <resetValue>0xF45F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24  (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HOPL</name>
          <description>DRC0 Limiter High Output at Limiter Threshold</description>
          <addressOffset>0x664</addressOffset>
          <resetValue>0xFBD8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24  (-25dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HPFHGAIN</name>
          <description>AC_DRC0_HPFHGAIN</description>
          <addressOffset>0x6B8</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>HPF_COEFFICIENT_GAIN</name>
              <description>The gain of the hpf coefficient setting which format is 3.24.(gain = 1) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_HPFLGAIN</name>
          <description>AC_DRC0_HPFLGAIN</description>
          <addressOffset>0x6BC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HPF_COEFFICIENT_GAIN</name>
              <description>The gain of the hpf coefficient setting which format is 3.24.(gain = 1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LCT</name>
          <description>DRC0 Compressor Slope High Setting Register</description>
          <addressOffset>0x640</addressOffset>
          <resetValue>0xD3C0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LET</name>
          <description>DRC0 Expander Theshold Low Setting Register</description>
          <addressOffset>0x670</addressOffset>
          <resetValue>0x7291</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LHPFC</name>
          <description>DRC0 Low HPF Coef Register</description>
          <addressOffset>0x604</addressOffset>
          <resetValue>0xFAC1</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LK1</name>
          <description>AC_DRC0_LK1</description>
          <addressOffset>0x660</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, there, R is the ratio of the limiter, which always is interger. The format is 8.24. (50 :1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LKC</name>
          <description>DRC0 Compressor Slope Low Setting Register</description>
          <addressOffset>0x648</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 8.24. (2 : 1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LKE</name>
          <description>DRC0 Expander Slope Low Setting Register</description>
          <addressOffset>0x678</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 50. The format is 8.24. (1:5) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LKN</name>
          <description>DRC0 Linear Slope Low Setting Register</description>
          <addressOffset>0x688</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger . The format is 8.24. (1:1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LLT</name>
          <description>DRC0 Limiter Theshold Low Setting Register</description>
          <addressOffset>0x658</addressOffset>
          <resetValue>0x34F0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LOPC</name>
          <description>DRC0 Compressor Low Output at Compressor Threshold  Register</description>
          <addressOffset>0x650</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation OPC/6.0206 The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LOPE</name>
          <description>DRC0 Expander Low Output at Expander Threshold</description>
          <addressOffset>0x680</addressOffset>
          <resetValue>0x8D6E</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24  (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LOPL</name>
          <description>DRC0 Limiter Low Output at Limiter Threshold</description>
          <addressOffset>0x668</addressOffset>
          <resetValue>0xFBA7</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24  (-25dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LPFHAT</name>
          <description>DRC0 Left Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x60C</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms)  </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LPFHRT</name>
          <description>DRC0 Left Peak Filter High Release Time Coef Register</description>
          <addressOffset>0x61C</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LPFLAT</name>
          <description>DRC0 Left Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x610</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LPFLRT</name>
          <description>DRC0 Left Peak Filter Low Release Time Coef Register</description>
          <addressOffset>0x620</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LRMSHAT</name>
          <description>DRC0 Left RMS Filter High Coef Register</description>
          <addressOffset>0x62C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_LRMSLAT</name>
          <description>DRC0 Left RMS Filter Low Coef Register</description>
          <addressOffset>0x630</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_MNGHS</name>
          <description>DRC0 MIN Gain High Setting Register</description>
          <addressOffset>0x6A4</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -60dB MNG  -40dB  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_MNGLS</name>
          <description>DRC0 MIN Gain Low Setting Register</description>
          <addressOffset>0x6A8</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting which determine by equation MNG/6.0206. The format is 8.24 and must -60dB MNG  -40dB  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_MXGHS</name>
          <description>DRC0 MAX Gain High Setting Register</description>
          <addressOffset>0x69C</addressOffset>
          <resetValue>0xFE56</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG&lt; 30dB (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_MXGLS</name>
          <description>DRC0 MAX Gain Low Setting Register</description>
          <addressOffset>0x6A0</addressOffset>
          <resetValue>0xCB0F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG &lt; 30dB (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_OPT</name>
          <description>DRC0 Optimum Register</description>
          <addressOffset>0x6B4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_USE_THE_EXPANDER</name>
              <description>The gain smooth use the expander coiffcient when the energy in expander range 0 : use the normal smooth coeffcient 1 : use the expander coeffcient </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GAIN_NORMAL_SMOOTH_COEFFICEINT_SELECTION</name>
              <description>The gain normal smooth coefficeint selection mode set 0 : both release and attack coeffcient use hysteresis; 1 : only the attack coeffcient use hysteresis; </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MIN_OF_ENERGY_SET_IN</name>
              <description>The min of energy set in Peak detect mode  0 : -120dB     1 : -210dB </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENERGY_MODE_SELECT_IN_RMS</name>
              <description>The energy mode select in rms detect mode 0 : the energy is RMS 1 : the energy is square of RMS </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_DATA_OUPUT_WHEN_DRC</name>
              <description>DRC data ouput when DRC disable and DRC delay data output complete. 0 : the ouput is the input music data; 1 : the output is 0 ; </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_DEFAUT_VALUE</name>
              <description>DRC gain defaut value setting 
0: The default gain is 1 
1: The default gain is 0 </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>1</name>
                  <description>The default gain is 1</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>0</name>
                  <description>The default gain is 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GAIN_SMOOTH_HYSTERESIS</name>
              <description>The hysteresis of the gain smooth filter to use the decay time coefficient or the attack time coefficient.  When in the decay time state, if g(n-1)-g(n)&gt;hysteresis, then the state will change to attack time state, and when in the attack time, if g(n)-g(n-1)&gt;hysteresis, then the state will change to decay time state. Note the hysteresis of 0x00 and 0x04 is the same. 
00000:  
00001:  
00010:  
00011:  
00100:  ----------------- 
10011:  10100 ~11111: 1 hysteresis =  ,except n=0x00, and n less 0x14.  </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_00000</name>
                  <description>0b00000</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_00001</name>
                  <description>0b00001</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_00010</name>
                  <description>0b00010</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_00011</name>
                  <description>0b00011</description>
                  <value>0b00011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus__minus__minus__minus__minus__minus__minus__minus__minus__minus__minus__minus__minus__minus__minus__minus__minus_</name>
                  <description>-----------------</description>
                  <value>0b00100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10100</name>
                  <description>10100 ~11111: 1 hysteresis =  ,except n=0x00, and n less 0x14.</description>
                  <value>0b10011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_RPFHAT</name>
          <description>DRC0 Right Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x614</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_RPFHRT</name>
          <description>DRC0 Right Peak filter High Release Time Coef Register</description>
          <addressOffset>0x624</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_RPFLAT</name>
          <description>DRC0 Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x618</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_RPFLRT</name>
          <description>DRC0 Right Peak filter Low Release Time Coef Register</description>
          <addressOffset>0x628</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that AT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_RRMSHAT</name>
          <description>DRC0 Right RMS Filter High Coef Register</description>
          <addressOffset>0x634</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_RRMSLAT</name>
          <description>DRC0 Right RMS Filter Low Coef Register</description>
          <addressOffset>0x638</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_SFHAT</name>
          <description>DRC0 Smooth filter Gain High Attack Time Coef Register</description>
          <addressOffset>0x68C</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_SFHRT</name>
          <description>DRC0  Smooth  filter  Gain  High  Release  Time  Coef  Register</description>
          <addressOffset>0x694</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_SFLAT</name>
          <description>DRC0 Smooth filter Gain Low Attack Time Coef Register</description>
          <addressOffset>0x690</addressOffset>
          <resetValue>0x5600</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC0_SFLRT</name>
          <description>DRC0 Smooth filter Gain Low Release Time Coef Register</description>
          <addressOffset>0x698</addressOffset>
          <resetValue>0xF04</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_CTRL</name>
          <description>DRC1 Control Register</description>
          <addressOffset>0x708</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0xBFFF</resetMask>
          <fields>
            <field>
              <name>DRC_DELAY_BUFFER_DATA_OUTPUT</name>
              <description>DRC delay buffer data output state when drc delay function is enble and the drc funciton disable. After disable drc function and this bit go to 0, the user should write the drc delay function bit to 0; 0 : not complete 1 : is complete </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SIGNAL_DELAY_TIME</name>
              <description>Signal delay time setting 6'h00 : (8x1)fs 6'h01 : (8x2)fs 6'h02 : (8x3)fs ---------------------------------------- 6'h2e : (8*47)fs 6'h2f : (8*48)fs 6'h30 -- 6'h3f : (8*48)fs Delay time = 8*(n+1)fs, n&lt;6'h30; When the delay function is disable, the signal delay time is unused. </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_BUFFER_USE_OR_NOT</name>
              <description>The delay buffer use or not when the drc disable and the drc buffer data output completely 0 : don't use the buffer  1 : use the buffer  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MAX_LIMIT_ENABLE</name>
              <description>DRC gain max limit enable 0 : disable 1 : enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_GAIN_MIN_LIMIT_ENABLE</name>
              <description>DRC gain min limit enable. when this fuction enable, it will overwrite the noise detect funciton. 0 : disable 1 : enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_THE_DRC_TO_DETECT</name>
              <description>Control the drc to detect noise when ET enable  0 : disable 1 : enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SIGNAL_FUNCTION_SELECT</name>
              <description>Signal function Select 0 : RMS filter 1 : Peak filter When Signal function Select Peak filter, the RMS parameter is unused. (AC_DRC_LRMSHAT / AC_DRC_LRMSLAT / AC_DRC_LRMSHAT / AC_DRC_LRMSLAT) When Signal function Select RMS filter, the Peak filter parameter is unused.(AC_DRC_LPFHAT / AC_DRC_LPFLAT / AC_DRC_RPFHAT / AC_DRC_RPFLAT / AC_DRC_LPFHRT / AC_DRC_LPFLRT / AC_DRC_RPFHRT / AC_DRC_RPFLRT) </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DELAY_FUNCTION_ENABLE</name>
              <description>Delay function enable 0 : disable 1 : enable When the Delay function enable is disable, the Signal delay time is unused. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_LT_ENABLE</name>
              <description>DRC LT enable 0 : disable 1 : enable When the DRC LT is disable the LT, Kl and OPL parameter is unused. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRC_ET_ENABLE</name>
              <description>DRC ET enable 0 : disable 1 : enable When the DRC ET is disable the ET, Ke and OPE parameter is unused. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_EPSHC</name>
          <description>DRC1 Expander Smooth Time High Coef Register</description>
          <addressOffset>0x7AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_EPSLC</name>
          <description>DRC1 Expander Smooth Time Low Coef Register</description>
          <addressOffset>0x7B0</addressOffset>
          <resetValue>0x640C</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE</name>
              <description>The gain smooth filter release and attack time parameter setting in expander region, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HCT</name>
          <description>DRC1 Compressor Theshold High Setting Register</description>
          <addressOffset>0x73C</addressOffset>
          <resetValue>0x6A4</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HET</name>
          <description>DRC1 Expander Theshold High Setting Register</description>
          <addressOffset>0x76C</addressOffset>
          <resetValue>0xBA0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HHPFC</name>
          <description>DRC1 High HPF Coef Register</description>
          <addressOffset>0x700</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format.  </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HK1</name>
          <description>AC_DRC1_HK1</description>
          <addressOffset>0x75C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, there, R is the ratio of the limiter, which always is interger. The format is 8.24. (50 :1) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HKC</name>
          <description>DRC1 Compressor Slope High Setting Register</description>
          <addressOffset>0x744</addressOffset>
          <resetValue>0x800</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 8.24. (2 : 1) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HKE</name>
          <description>DRC1 Expander Slope High Setting Register</description>
          <addressOffset>0x774</addressOffset>
          <resetValue>0x50</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 50. The format is 8.24. (1:5) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HKN</name>
          <description>DRC1 Linear Slope High Setting Register</description>
          <addressOffset>0x784</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger. The format is 8.24. (1:1) </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HLT</name>
          <description>DRC1 Limiter Theshold High Setting Register</description>
          <addressOffset>0x754</addressOffset>
          <resetValue>0x1A9</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HOPC</name>
          <description>DRC1 Compressor High Output at Compressor Threshold  Register</description>
          <addressOffset>0x74C</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation -OPC/6.0206 The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HOPE</name>
          <description>DRC1 Expander High Output at Expander Threshold</description>
          <addressOffset>0x77C</addressOffset>
          <resetValue>0xF45F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24  (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HOPL</name>
          <description>DRC1 Limiter High Output at Limiter Threshold</description>
          <addressOffset>0x764</addressOffset>
          <resetValue>0xFBD8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24  (-25dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HPFHGAIN</name>
          <description>AC_DRC1_HPFHGAIN</description>
          <addressOffset>0x7B8</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>HPF_COEFFICIENT_GAIN</name>
              <description>The gain of the hpf coefficient setting which format is 3.24.(gain = 1) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_HPFLGAIN</name>
          <description>AC_DRC1_HPFLGAIN</description>
          <addressOffset>0x7BC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HPF_COEFFICIENT_GAIN</name>
              <description>The gain of the hpf coefficient setting which format is 3.24.(gain = 1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LCT</name>
          <description>DRC1 Compressor Slope High Setting Register</description>
          <addressOffset>0x740</addressOffset>
          <resetValue>0xD3C0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_THRESHOLD</name>
              <description>The compressor threshold setting, which set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LET</name>
          <description>DRC1 Expander Theshold Low Setting Register</description>
          <addressOffset>0x770</addressOffset>
          <resetValue>0x7291</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_THRESHOLD</name>
              <description>The expander threshold setting, which set by the equation that ETin = -ET/6.0206, The format is 8.24. (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LHPFC</name>
          <description>DRC1 Low HPF Coef Register</description>
          <addressOffset>0x704</addressOffset>
          <resetValue>0xFAC1</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HPF</name>
              <description>coefficient setting and the data is 3.24 format. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LK1</name>
          <description>AC_DRC1_LK1</description>
          <addressOffset>0x760</addressOffset>
          <resetValue>0x1EB8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_SLOPE</name>
              <description>The slope of the limiter which determine by the equation that Kl = 1/R, there, R is the ratio of the limiter, which always is interger. The format is 8.24. (50 :1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LKC</name>
          <description>DRC1 Compressor Slope Low Setting Register</description>
          <addressOffset>0x748</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_SLOPE</name>
              <description>The slope of the compressor which determine by the equation that Kc = 1/R, there, R is the ratio of the compressor, which always is interger. The format is 8.24. (2 : 1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LKE</name>
          <description>DRC1 Expander Slope Low Setting Register</description>
          <addressOffset>0x778</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_SLOPE</name>
              <description>The slope of the expander which determine by the equation that Ke = 1/R, there, R is the ratio of the expander, which always is interger and the ke must larger than 50. The format is 8.24. (1:5) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LKN</name>
          <description>DRC1 Linear Slope Low Setting Register</description>
          <addressOffset>0x788</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LINEAR_SLOPE</name>
              <description>The slope of the linear which determine by the equation that Kn = 1/R, there, R is the ratio of the linear, which always is interger. The format is 8.24. (1:1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LLT</name>
          <description>DRC1 Limiter Theshold Low Setting Register</description>
          <addressOffset>0x758</addressOffset>
          <resetValue>0x34F0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_THRESHOLD</name>
              <description>The limiter threshold setting, which set by the equation that LTin = -LT/6.0206, The format is 8.24. (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LOPC</name>
          <description>DRC1 Compressor Low Output at Compressor Threshold  Register</description>
          <addressOffset>0x750</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>COMPRESSOR_OUTPUT</name>
              <description>The output of the compressor which determine by the equation OPC/6.0206 The format is 8.24  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LOPE</name>
          <description>DRC1 Expander Low Output at Expander Threshold</description>
          <addressOffset>0x780</addressOffset>
          <resetValue>0x8D6E</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EXPANDER_OUTPUT</name>
              <description>The output of the expander which determine by equation OPE/6.0206. The format is 8.24  (-70dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LOPL</name>
          <description>DRC1 Limiter Low Output at Limiter Threshold</description>
          <addressOffset>0x768</addressOffset>
          <resetValue>0xFBA7</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LIMITER_OUTPUT</name>
              <description>The output of the limiter which determine by equation OPT/6.0206. The format is 8.24  (-25dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LPFHAT</name>
          <description>DRC1 Left Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x70C</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms)  </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LPFHRT</name>
          <description>DRC1 Left Peak Filter High Release Time Coef Register</description>
          <addressOffset>0x71C</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LPFLAT</name>
          <description>DRC1 Left Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x710</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LPFLRT</name>
          <description>DRC1 Left Peak Filter Low Release Time Coef Register</description>
          <addressOffset>0x720</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LRMSHAT</name>
          <description>DRC1 Left RMS Filter High Coef Register</description>
          <addressOffset>0x72C</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_LRMSLAT</name>
          <description>DRC1 Left RMS Filter Low Coef Register</description>
          <addressOffset>0x730</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The left RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_MNGHS</name>
          <description>DRC1 MIN Gain High Setting Register</description>
          <addressOffset>0x7A4</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -60dB MNG  -40dB  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_MNGLS</name>
          <description>DRC1 MIN Gain Low Setting Register</description>
          <addressOffset>0x7A8</addressOffset>
          <resetValue>0x2C3F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting which determine by equation MNG/6.0206. The format is 8.24 and must -60dB MNG  -40dB  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_MXGHS</name>
          <description>DRC1 MAX Gain High Setting Register</description>
          <addressOffset>0x79C</addressOffset>
          <resetValue>0xFE56</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG&lt; 30dB (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_MXGLS</name>
          <description>DRC1 MAX Gain Low Setting Register</description>
          <addressOffset>0x7A0</addressOffset>
          <resetValue>0xCB0F</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAX_GAIN</name>
              <description>The max gain setting which determine by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG &lt; 30dB (-10dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_RPFHAT</name>
          <description>DRC1 Right Peak Filter High Attack Time Coef Register</description>
          <addressOffset>0x714</addressOffset>
          <resetValue>0xB</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_RPFHRT</name>
          <description>DRC1 Right Peak filter High Release Time Coef Register</description>
          <addressOffset>0x724</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_RPFLAT</name>
          <description>DRC1 Peak Filter Low Attack Time Coef Register</description>
          <addressOffset>0x718</addressOffset>
          <resetValue>0x77BF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
              <description>The left peak filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_RPFLRT</name>
          <description>DRC1 Right Peak filter Low Release Time Coef Register</description>
          <addressOffset>0x728</addressOffset>
          <resetValue>0xE1F8</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
              <description>The left peak filter release time parameter setting, which determine by the equation that AT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_RRMSHAT</name>
          <description>DRC1 Right RMS Filter High Coef Register</description>
          <addressOffset>0x734</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_RRMSLAT</name>
          <description>DRC1 Right RMS Filter Low Coef Register</description>
          <addressOffset>0x738</addressOffset>
          <resetValue>0x2BAF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
              <description>The right RMS filter average time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_SFHAT</name>
          <description>DRC1 Smooth filter Gain High Attack Time Coef Register</description>
          <addressOffset>0x78C</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_SFHRT</name>
          <description>DRC1  Smooth  filter  Gain  High  Release  Time  Coef  Register</description>
          <addressOffset>0x794</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
              <bitRange>[10:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_SFLAT</name>
          <description>DRC1 Smooth filter Gain Low Attack Time Coef Register</description>
          <addressOffset>0x790</addressOffset>
          <resetValue>0x5600</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SMOOTH_FILTER_ATTACK_TIME</name>
              <description>The smooth filter attack time parameter setting, which determine by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_DRC1_SFLRT</name>
          <description>DRC1 Smooth filter Gain Low Release Time Coef Register</description>
          <addressOffset>0x798</addressOffset>
          <resetValue>0xF04</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
              <description>The gain smooth filter release time parameter setting, which determine by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_DBG_CTRL</name>
          <description>ADC Debug Control Register</description>
          <addressOffset>0x308</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ADSW</name>
              <description>ADC input channel swap enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INTERFACE</name>
              <description>Interface between ADDA digital part and ADDA analog part debug control. Normal Normal BCLK2/LRCK2/ADCDAT2/DACDAT2 BCLK3/LRCK3/ADCDAT3/DACDAT3 is multiplexed as follows: BCLK2 CKAD_A input to ADC analog part LRCK2 Normal ADCDAT2 ADIN_L[1] output from ADC analog part DACDAT2 ADIN_L[0] output from ADC analog part BCLK3 CKAD_A output from ADC digital part LRCK3 Normal ADCDAT3 ADIN_L/R[1] input to ADC digital part DACDAT3 ADIN_L/R[0] input to ADC digital part BCLK2/LRCK2/ADADAT2/DACDAT2 BCLK3/LRCK3/ADCDAT3/DACDAT3 is multiplexed as follows: BCLK2 CKAD_A input to ADC analog part LRCK2 Normal ADCDAT2 ADIN_R[1] output from ADC analog part DACDAT2 ADIN_R[0] output from ADC analog part BCLK3 CKAD_A output from ADC digital part LRCK3 Normal ADCDAT3 ADIN_L/R[1] input to ADC digital part DACDAT3 ADIN_L/R[0] input to ADC digital part BCLK2/LRCK2/ADADAT2/DACDAT2 BCLK3/LRCK3/ADCDAT3/DACDAT3 is multiplexed as follows: BCLK2 CKDA_A output from DAC digital part LRCK2 DAOUT_L[6] output from DAC digital part ADCDAT2 DAOUT_L[5] output from DAC digital part DACDAT2 DAOUT_L[4] output from DAC digital part BCLK3 DAOUT_L[3] output from DAC digital part LRCK3 DAOUT_L[2] output from DAC digital part ADCDAT3 DAOUT_L[1] output from DAC digital part DACDAT3 DAOUT_L[0] output from DAC digital part BCLK2/LRCK2/ADADAT2/DACDAT2 BCLK3/LRCK3/ADCDAT3/DACDAT3 is multiplexed as follows: BCLK2 CKDA_A output from DAC digital part LRCK2 DAOUT_R[6] output from DAC digital part ADCDAT2 DAOUT_R[5] output from DAC digital part DACDAT2 DAOUT_R[4] output from DAC digital part BCLK3 DAOUT_R[3] output from DAC digital part LRCK3 DAOUT_R[2] output from DAC digital part ADCDAT3 DAOUT_R[1] output from DAC digital part DACDAT3 DAOUT_R[0] output from DAC digital part BCLK2/LRCK2/ADADAT2/DACDAT2 BCLK3/LRCK3/ADCDAT3/DACDAT3 is multiplexed as follows: BCLK2 CKDA_A input to DAC analog part LRCK2 DAOUT_L/R[6] input to DAC analog part ADCDAT2 DAOUT_L/R[5] input to DAC analog part DACDAT2 DAOUT_L/R[4] input to DAC analog part BCLK3 DAOUT_L/R[3] input to DAC analog part LRCK3 DAOUT_L/R[2] input to DAC analog part ADCDAT3 DAOUT_L/R[1] input to DAC analog part DACDAT3 DAOUT_L/R[0] input to DAC analog part BCLK2/LRCK2/ADADAT2/DACDAT2 BCLK3/LRCK3/ADCDAT3/DACDAT3 is multiplexed as follows: BCLK2 CKDA_A input to DAC analog part LRCK2 DAOUT_L/R[6] input to DAC analog part ADCDAT2 DAOUT_L/R[5] input to DAC analog part DACDAT2 DAOUT_L/R[4] input to DAC analog part BCLK3 DAOUT_L/R[3] input to DAC analog part LRCK3 DAOUT_L/R[2] input to DAC analog part ADCDAT3 DAOUT_L/R[1] input to DAC analog part DACDAT3 DAOUT_L/R[0] input to DAC analog part </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_DIG_CTRL</name>
          <description>ADC Digital Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ENAD</name>
              <description>ADC Digital part enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENDM</name>
              <description>Digital microphone enable 
0: Analog ADC mode 
1: </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Analog</name>
                  <description>Analog ADC mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>0b1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADFIR32</name>
              <description>Enable 32-tap FIR filter 
0: 64-tap 
1: 32-tap </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64_minus_tap</name>
                  <description>64-tap</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_minus_tap</name>
                  <description>32-tap</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DORS_SELECT</name>
              <description>Digital Microphone Oversample Rate Select 0 128fs 1 64fs </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADOUT_DTS</name>
              <description>ADC Delay Time For transmitting data after ENAD 00:5ms 01:10ms 10:20ms 11:30ms </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADOUT_DLY</name>
              <description>ADC Delay Function enable for transmitting data after ENAD 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DOSR</name>
              <description>Digital Microphone Oversampling Rate 0:64 fs 1:128fs </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_VOL_CTRL</name>
          <description>ADC Volume Control Register</description>
          <addressOffset>0x304</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ADC_VOL_L</name>
              <description>ADC left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_VOL_R</name>
              <description>ADC left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AGC_ENA</name>
          <description>AGC Enable Register</description>
          <addressOffset>0x4D0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_ADC0L_AGC_ENA</name>
              <description>AIF1 ADC timeslot 0 left channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC0R_AGC_ENA</name>
              <description>AIF1 ADC timeslot 0 right channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC1L_AGC_ENA</name>
              <description>AIF1 ADC timeslot 1 left channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC1R_AGC_ENA</name>
              <description>AIF1 ADC timeslot 1 right channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_ADCL_AGC_ENA</name>
              <description>AIF2 ADC left channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_ADCR_AGC_ENA</name>
              <description>AIF2 ADC right channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_DACL_AGC_ENA</name>
              <description>AIF2 DAC left channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_DACR_AGC_ENA</name>
              <description>AIF2 DAC right channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADCL_AGC_ENA</name>
              <description>ADC left channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADCR_AGC_ENA</name>
              <description>ADC right channel AGC enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1CLK_CTRL</name>
          <description>AIF1 BCLK/LRCK Control Register</description>
          <addressOffset>0x240</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_MSTR_MOD</name>
              <description>AIF1 Audio Interface mode select 0 = Master mode 1 = Slave mode </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_BCLK_INV</name>
              <description>AIF1 BCLK Polarity 
0: Normal 
1: Inverted </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverted</name>
                  <description>Inverted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_LRCK_INV</name>
              <description>AIF1 LRCK Polarity 
0: Normal 
1: Inverted </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverted</name>
                  <description>Inverted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_BCLK_DIV</name>
              <description>Select the AIF1CLK/BCLK1 ratio 
0000: AIF1CLK/1 
0001: AIF1CLK/2 
0010: AIF1CLK/4 
0011: AIF1CLK/6 
0100: AIF1CLK/8 
0101: AIF1CLK/12 
0110: AIF1CLK/16 
0111: AIF1CLK/24 
1000: AIF1CLK/32 
1001: AIF1CLK/48 
1010: AIF1CLK/64 
1011: AIF1CLK/96 
1100: AIF1CLK/128 
1101: AIF1CLK/192 
1110: Reserved 
1111: Reserved </description>
              <bitRange>[12:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AIF1CLK_slash_1</name>
                  <description>AIF1CLK/1</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_2</name>
                  <description>AIF1CLK/2</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_4</name>
                  <description>AIF1CLK/4</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_6</name>
                  <description>AIF1CLK/6</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_8</name>
                  <description>AIF1CLK/8</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_12</name>
                  <description>AIF1CLK/12</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_16</name>
                  <description>AIF1CLK/16</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_24</name>
                  <description>AIF1CLK/24</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_32</name>
                  <description>AIF1CLK/32</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_48</name>
                  <description>AIF1CLK/48</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_64</name>
                  <description>AIF1CLK/64</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_96</name>
                  <description>AIF1CLK/96</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_128</name>
                  <description>AIF1CLK/128</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF1CLK_slash_192</name>
                  <description>AIF1CLK/192</description>
                  <value>0b1101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_LRCK_DIV</name>
              <description>Select the BCLK1/LRCK ratio 
000: 16 
001: 32 
010: 64 
011: 128 
100: 256 
1xx: Reserved </description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_WORD_SIZ</name>
              <description>AIF1 digital interface word size 
00: 8bit 
01: 16bit 
10: 20bit 
11: 24bit </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8bit</name>
                  <description>8bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit</name>
                  <description>16bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20bit</name>
                  <description>20bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit</name>
                  <description>24bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DATA_FMT</name>
              <description>AIF1 digital interface data format 
00: I2S mode 
01: Left mode 
10: Right mode 
11: DSP mode </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>I2S_mode</name>
                  <description>I2S mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left_mode</name>
                  <description>Left mode</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Right_mode</name>
                  <description>Right mode</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DSP_mode</name>
                  <description>DSP mode</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSP_MONO_PCM</name>
              <description>DSP Mono mode select 
0: Stereo mode select 
1: Mono mode select </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stereo_mode</name>
                  <description>Stereo mode select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mono_mode</name>
                  <description>Mono mode select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_TDMM_ENA</name>
              <description>AIF1 TDM Mode enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_ADCDAT_CTRL</name>
          <description>AIF1 ADCDAT Control Register</description>
          <addressOffset>0x244</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_ADC0L_ENA</name>
              <description>AIF1 ADC Timeslot 0 left channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC0R_ENA</name>
              <description>AIF1 ADC Timeslot 0 right channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC1L_ENA</name>
              <description>AIF1 ADC Timeslot 1 left channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC1R_ENA</name>
              <description>AIF1 ADC Timeslot 1 right channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC0L_SRC</name>
              <description>AIF1 ADC Timeslot 0 left channel data source select 
00: AIF1 ADC0L 
01: AIF1 ADC0R 
10: (AIF1 ADC0L+AIF1 ADC0R) 
11: (AIF1 ADC0L+AIF1 ADC0R)/2 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC0R_SRC</name>
              <description>AIF1 ADC Timeslot 0 right channel data source select 
00: AIF1 ADC0R 
01: AIF1 ADC0L 
10: (AIF1 ADC0L+AIF1 ADC0R) 
11: (AIF1 ADC0L+AIF1 ADC0R)/2 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC1L_SRC</name>
              <description>AIF1 ADC Timeslot 1 left channel data source select 
00: AIF1 ADC1L 
01: AIF1 ADC1R 
10: (AIF1 ADC1L+AIF1 ADC1R) 
11: (AIF1 ADC1L+AIF1 ADC1R)/2 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC1R_SRC</name>
              <description>AIF1 ADC Timeslot 1 right channel data source select 
00: AIF1 ADC1R 
01: AIF1 ADC1L 
10: (AIF1 ADC1L+AIF1 ADC1R) 
11: (AIF1 ADC1L+AIF1 ADC1R)/2 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADCP_ENA</name>
              <description>AIF1 ADC Companding enable(8-bit mode only) 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADCUL_ENA</name>
              <description>AIF1 ADC Companding mode select 
0: A-law 
1: u-law </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Alaw</name>
                  <description>A-law</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ulaw</name>
                  <description>u-law</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_SLOT_SIZ</name>
              <description>Select the slot size(only in TDM mode) 
00: 8 
01: 16 
10: 32 
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_DACDAT_CTRL</name>
          <description>AIF1 DACDAT Control Register</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_DAC0L_ENA</name>
              <description>AIF1 DAC Timeslot 0 left channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DAC0R_ENA</name>
              <description>AIF1 DAC Timeslot 0 right channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DAC1L_ENA</name>
              <description>AIF1 DAC Timeslot 1 left channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DAC1R_ENA</name>
              <description>AIF1 DAC Timeslot 1 right channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DAC0L_SRC</name>
              <description>AIF1 DAC Timeslot 0 left channel data source select 
00: AIF1 DAC0L 
01: AIF1 DA0R 
10: (AIF1 DAC0L+AIF1 DAC0R) 
11: (AIF1 DAC0L+AIF1 DAC0R)/2 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_DAC0R_SRC</name>
              <description>AIF1 DAC Timeslot 0 right channel data source select 
00: AIF1 DAC0R 
01: AIF1 DAC0L 
10: (AIF1 DAC0L+AIF1 DAC0R) 
11: (AIF1 DAC0L+AIF1 DAC0R)/2 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_DAC1L_SRC</name>
              <description>AIF1 DAC Timeslot 1 left channel data source select 
00: AIF1 DAC1L 
01: AIF1 DAC1R 
10: (AIF1 DAC1L+AIF1 DAC1R) 
11: (AIF1 DAC1L+AIF1 DAC1R)/2 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_DAC1R_SRC</name>
              <description>AIF1 DAC Timeslot 1 right channel data source select 
00: AIF1 DAC1R 
01: AIF1 DAC1L 
10: (AIF1 DAC1L+AIF1 DAC1R) 
11: (AIF1 DAC1L+AIF1 DAC1R)/2 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_DACP_ENA</name>
              <description>AIF1 DAC Companding enable(8-bit mode only) 
00: Disable 
01: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_DACUL_ENA</name>
              <description>AIF1 DAC Companding mode select 
0: A-law 
1: u-law </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Alaw</name>
                  <description>A-law</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ulaw</name>
                  <description>u-law</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_LOOP_ENA</name>
              <description>AIF1 loopback enable 
0: No loopback 
1: Loopback(ADCDAT1 data output to DACDAT1 data input) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_loopback</name>
                  <description>No loopback</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loopback_openingparen_ADCDAT1_data</name>
                  <description>Loopback(ADCDAT1 data output to DACDAT1 data input)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_MXR_GAIN</name>
          <description>AIF1 Digital Mixer Gain Control Register</description>
          <addressOffset>0x260</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_ADC0L_MXR_GAIN</name>
              <description>AIF1 ADC Timeslot 0 left channel mixer gain control 
0: 0dB  1: -6dB Bit15: AIF1 DAC0L data Bit14: AIF2 DACL data Bit13: ADCL data Bit12: AIF2 DACR data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC0R_MXR_GAIN</name>
              <description>AIF1 ADC Timeslot 0 right channel mixer gain control 
0: 0dB  1: -6dB Bit11: AIF1 DAC0R data Bit10: AIF2 DACR data Bit9: ADCR data Bit8: AIF2 DACL data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC1L_MXR_GAIN</name>
              <description>AIF1 ADC Timeslot 1 left channel mixer gain control 
0: 0dB  1: -6dB Bit7: AIF2 DACL data Bit6: ADCL data </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC1R_MXR_GAIN</name>
              <description>AIF1 ADC Timeslot 1 right channel mixer gain control 
0: 0dB  1: -6dB Bit3: AIF2 DACR data Bit2: ADCR data </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_MXR_SRC</name>
          <description>AIF1_MXR_SRC</description>
          <addressOffset>0x24C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_ADC0L_MXL_SRC</name>
              <description>AIF1 ADC Timeslot 0 left channel mixer source select 
0: Disable  1: Enable Bit15: AIF1 DAC0L data Bit14: AIF2 DACL data Bit13: ADCL data Bit12: AIF2 DACR data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC0R_MXR_SRC</name>
              <description>AIF1 ADC Timeslot 0 right channel mixer source select 
0: Disable  1: Enable Bit11: AIF1 DAC0R data Bit10: AIF2 DACR data Bit9: ADCR data Bit8: AIF2 DACL data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC1L_MXR_SRC</name>
              <description>AIF1 ADC Timeslot 1 left channel mixer source select 
0: Disable  1: Enable Bit7: AIF2 DACL data Bit6: ADCL data </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC1R_MXR_SRC</name>
              <description>AIF1 ADC Timeslot 1 right channel mixer source select 
0: Disable  1: Enable Bit3: AIF2 DACR data Bit2: ADCR data </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_RXD_CTRL</name>
          <description>AIF1 Receiver Data Discarding Control Register</description>
          <addressOffset>0x264</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AFTER</name>
              <description>After data receiving progress begins, the first N-data will be discarded. N defined as follows: 
0x00: None discarded 
0x01: 1-data discarded ... 
0xFF: 255-data discarded </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>None</name>
                  <description>None discarded</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_minus_data</name>
                  <description>1-data discarded ...</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_255_minus_data</name>
                  <description>255-data discarded</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_VOL_CTRL1</name>
          <description>AIF1 Volume Control 1 Register</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_ADC0L_VOL</name>
              <description>AIF1 ADC Timeslot 0 left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC0R_VOL</name>
              <description>AIF1 ADC Timeslot 0 right channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_VOL_CTRL2</name>
          <description>AIF1 Volume Control 2 Register</description>
          <addressOffset>0x254</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_ADC1L_VOL</name>
              <description>AIF1 ADC Timeslot 1 left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC1R_VOL</name>
              <description>AIF1 ADC Timeslot 1 right channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_VOL_CTRL3</name>
          <description>AIF1 Volume Control 3 Register</description>
          <addressOffset>0x258</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_DAC0L_VOL</name>
              <description>AIF1 DAC Timeslot 0 left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DAC0R_VOL</name>
              <description>AIF1 DAC Timeslot 0 right channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF1_VOL_CTRL4</name>
          <description>AIF1 Volume Control 4 Register</description>
          <addressOffset>0x25C</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF1_DAC0L_VOL</name>
              <description>AIF1 DAC Timeslot 0 left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DAC1R_VOL</name>
              <description>AIF1 DAC Timeslot 1 right channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_ADCDAT_CTRL</name>
          <description>AIF2 ADCDAT Control Register</description>
          <addressOffset>0x284</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFD</resetMask>
          <fields>
            <field>
              <name>AIF2_ADCL_EN</name>
              <description>AIF2 ADC left channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_ADCR_EN</name>
              <description>AIF2 ADC right channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_ADCL_SRC</name>
              <description>AIF2 ADC left channel data source select 
00: AIF2 ADCL 
01: AIF2 ADCR 
10: (AIF2 ADCL+AIF2 ADCR) 
11: (AIF2 ADCL+AIF2 ADCR)/2 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_ADCR_SRC</name>
              <description>AIF2 ADC right channel data source select 
00: AIF2 ADCR 
01: AIF2 ADCL 
10: (AIF2 ADCL+AIF2 ADCR) 
11: (AIF2 ADCL+AIF2 ADCR)/2 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_ADCP_ENA</name>
              <description>AIF2 ADC Companding enable(8-bit mode only) 
00: Disable 
01: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_ADCUL_ENA</name>
              <description>AIF2 ADC Companding mode select 
0: A-law 
1: u-law </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Alaw</name>
                  <description>A-law</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ulaw</name>
                  <description>u-law</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_LOOP_EN</name>
              <description>AIF2 loopback enable 
0: No loopback 
1: Loopback(ADCDAT2 data output to DACDAT2 data input) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_loopback</name>
                  <description>No loopback</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loopback_openingparen_ADCDAT2_data</name>
                  <description>Loopback(ADCDAT2 data output to DACDAT2 data input)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_CLK_CTRL</name>
          <description>AIF2 BCLK/LRCK Control Register</description>
          <addressOffset>0x280</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF2_MSTR_MOD</name>
              <description>AIF2 Audio Interface mode select 0 = Master mode 1 = Slave mode </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_BCLK_INV</name>
              <description>AIF2 BCLK Polarity 
0: Normal 
1: Inverted </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverted</name>
                  <description>Inverted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_LRCK_INV</name>
              <description>AIF2 LRCK Polarity 
0: Normal 
1: Inverted </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverted</name>
                  <description>Inverted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_BCLK_DIV</name>
              <description>Select the AIF2CLK/BCLK2 ratio 
0000: AIF2CLK/1 
0001: AIF2CLK/2 
0010: AIF2CLK/4 
0011: AIF2CLK/6 
0100: AIF2CLK/8 
0101: AIF2CLK/12 
0110: AIF2CLK/16 
0111: AIF2CLK/24 
1000: AIF2CLK/32 
1001: AIF2CLK/48 
1010: AIF2CLK/64 
1011: AIF2CLK/96 
1100: AIF2CLK/128 
1101: AIF2CLK/192 
1110: Reserved 
1111: Reserved </description>
              <bitRange>[12:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AIF2CLK_slash_1</name>
                  <description>AIF2CLK/1</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_2</name>
                  <description>AIF2CLK/2</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_4</name>
                  <description>AIF2CLK/4</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_6</name>
                  <description>AIF2CLK/6</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_8</name>
                  <description>AIF2CLK/8</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_12</name>
                  <description>AIF2CLK/12</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_16</name>
                  <description>AIF2CLK/16</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_24</name>
                  <description>AIF2CLK/24</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_32</name>
                  <description>AIF2CLK/32</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_48</name>
                  <description>AIF2CLK/48</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_64</name>
                  <description>AIF2CLK/64</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_96</name>
                  <description>AIF2CLK/96</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_128</name>
                  <description>AIF2CLK/128</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK_slash_192</name>
                  <description>AIF2CLK/192</description>
                  <value>0b1101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_LRCK_DIV</name>
              <description>Select the BCLK2/LRCK2 ratio 
000: 16 
001: 32 
010: 64 
011: 128 
100: 256 
1xx: Reserved </description>
              <bitRange>[8:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_WORD_SIZ</name>
              <description>AIF2 digital interface world length 
00: 8bit 
01: 16bit 
10: 20bit 
11: 24bit </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8bit</name>
                  <description>8bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit</name>
                  <description>16bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20bit</name>
                  <description>20bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit</name>
                  <description>24bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_DATA_FMT</name>
              <description>AIF digital interface data format 
00: I2S mode 
01: Left mode 
10: Right mode 
11: DSP mode </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>I2S_mode</name>
                  <description>I2S mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left_mode</name>
                  <description>Left mode</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Right_mode</name>
                  <description>Right mode</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DSP_mode</name>
                  <description>DSP mode</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_MONO_PCM</name>
              <description>AIF2 Mono PCM mode select 
0: Stereo mode select 
1: Mono mode select </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stereo_mode</name>
                  <description>Stereo mode select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mono_mode</name>
                  <description>Mono mode select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_DACDAT_CTRL</name>
          <description>AIF2 DACDAT Control Register</description>
          <addressOffset>0x288</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF2_DACL_ENA</name>
              <description>AIF2 DAC left channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_DACR_ENA</name>
              <description>AIF2 DAC right channel enable 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_DACL_SRC</name>
              <description>AIF2 DAC left channel data source select 
00: AIF2 DACL 
01: AIF2 DACR 
10: (AIF2 DACL+AIF2 DACR) 
11: (AIF2 DACL+AIF2 DACR)/2 </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_DACR_SRC</name>
              <description>AIF2 DAC right channel data source select 
00: AIF2 DACR 
01: AIF2 DACL 
10: (AIF2 DACL+AIF2 DACR) 
11: (AIF2 DACL+AIF2 DACR)/2 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_DACP_ENA</name>
              <description>AIF2 DAC Companding enable(8-bit mode only) 
00: Disable 
01: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_DACUL_ENA</name>
              <description>AIF2 DAC Companding mode select 
0: A-law 
1: u-law </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Alaw</name>
                  <description>A-law</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ulaw</name>
                  <description>u-law</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_MXR_GAIN</name>
          <description>AIF2 Digital Mixer Gain Control Register</description>
          <addressOffset>0x2A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF2_ADCL_MXR_GAIN</name>
              <description>AIF2 ADC left channel mixer gain control 
0: 0dB  1: -6dB Bit15: AIF1 DAC0L data Bit14: AIF1 DAC1L data Bit13: AIF2 DACR data Bit12: ADCL data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_ADCR_MXR_GAIN</name>
              <description>AIF2 ADC right channel mixer gain control 
0: 0dB  1: -6dB Bit11: AIF1 DAC0R data Bit10: AIF1 DAC1R data Bit9: AIF2 DACL data Bit8: ADCR data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_MXR_SRC</name>
          <description>AIF2 Digital Mixer Source Select Register</description>
          <addressOffset>0x28C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF2_ADCL_MXR_SRC</name>
              <description>AIF2 ADC left channel mixer source select 
0: Disable  1:Enable Bit15: AIF1 DAC0L data Bit14: AIF1 DAC1L data Bit13: AIF2 DACR data Bit12: ADCL data </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_ADCR_MXR_SRC</name>
              <description>AIF2 ADC right channel mixer source select 
0: Disable  1:Enable Bit11: AIF1 DA0R data Bit10: AIF1 DA1R data Bit9: AIF2 DACL data Bit8: ADCR data </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_RXD_CTRL</name>
          <description>AIF2 Receiver Data Discarding Control Register</description>
          <addressOffset>0x2A4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AFTER</name>
              <description>After data receiving progress begins, the first N-data will be discarded. N defined as follows: 
0x00: None discarded 
0x01: 1-data discarded ... 
0xFF: 255-data discarded </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>None</name>
                  <description>None discarded</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_minus_data</name>
                  <description>1-data discarded ...</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_255_minus_data</name>
                  <description>255-data discarded</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_VOL_CTRL1</name>
          <description>AIF2 Volume Control 1 Register</description>
          <addressOffset>0x290</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF2_ADCL_VOL</name>
              <description>AIF2 ADC left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_ADCR_VOL</name>
              <description>AIF2 ADC right channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF2_VOL_CTRL2</name>
          <description>AIF2 Volume Control 2 Register</description>
          <addressOffset>0x298</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF2_ADCL_VOL</name>
              <description>AIF2 ADC left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_DACR_VOL</name>
              <description>AIF2 DAC right channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF3_ADCDAT_CTRL</name>
          <description>AIF3 ADCDAT Control Register</description>
          <addressOffset>0x2C4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF3_ADCP_ENA</name>
              <description>AIF3 ADC Companding enable 
00: Disable 
01: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF3_ADUL_ENA</name>
              <description>AIF3 ADC Companding mode select 
0: A-law 
1: u-law </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Alaw</name>
                  <description>A-law</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ulaw</name>
                  <description>u-law</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF3_CLK_CTRL</name>
          <description>AIF3 BCLK/LRCK Control Register</description>
          <addressOffset>0x2C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF3_BCLK_INV</name>
              <description>AIF3 BCLK Polarity 
0: Normal 
1: Inverted </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverted</name>
                  <description>Inverted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF3_LRCK_INV</name>
              <description>AIF3 LRCK Polarity 
0: Normal 
1: Inverted </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverted</name>
                  <description>Inverted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF3_WORD_SIZ</name>
              <description>AIF3 digital interface world length 
00: 8bit 
01: 16bit 
10: 20bit 
11: 24bit </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8bit</name>
                  <description>8bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit</name>
                  <description>16bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20bit</name>
                  <description>20bit</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit</name>
                  <description>24bit</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF3_CLOCK_SRC</name>
              <description>AIF3 BCLK/LRCK source control 
0: BCLK/LRCK Come from AIF1 
1: BCLK/LRCK Come from AIF2 
2: BCLK/LRCK is generated by AIF3, and the source clock is AIF1CLK 
3: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>generated_by</name>
                  <description>BCLK/LRCK is generated by AIF3, and the source clock is AIF1CLK</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF3_DACDAT_CTRL</name>
          <description>AIF3 DACDAT Control Register</description>
          <addressOffset>0x2C8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF3_DACP_ENA</name>
              <description>AIF3 DAC Companding enable(8-bit mode only) 
00: Disable 
01: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF3_DAUL_ENA</name>
              <description>AIF3 DAC Companding mode select 
00: u-law 
01: A-law </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF3_LOOP_ENA</name>
              <description>AIF3 loopback enable 
0: No loopback 
1: Loopback(ADCDAT3 data output to DACDAT3 data input) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_loopback</name>
                  <description>No loopback</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loopback_openingparen_ADCDAT3_data</name>
                  <description>Loopback(ADCDAT3 data output to DACDAT3 data input)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF3_RXD_CTRL</name>
          <description>AIF3 Receiver Data Discarding Control Register</description>
          <addressOffset>0x2E4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AFTER</name>
              <description>After data receiving progress begins, the first N-data will be discarded. N defined as follows: 
0x00: None discarded 
0x01: 1-data discarded ... 
0xFF: 255-data discarded </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>None</name>
                  <description>None discarded</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_minus_data</name>
                  <description>1-data discarded ...</description>
                  <value>0x01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_255_minus_data</name>
                  <description>255-data discarded</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AIF3_SGP_CTRL</name>
          <description>AIF3 Signal Path Control Register</description>
          <addressOffset>0x2CC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>AIF3_ADC_SRC</name>
              <description>AIF3 PCM output source select 
00: None 
01: AIF2 ADC left channel 
10: AIF2 ADC right channel 
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_DAC_SRC</name>
              <description>AIF2 DAC input source select 
00: Left and right inputs from AIF2 
01: Left input from AIF3; Right input from AIF2 
10: Left input from AIF2; Right input from AIF3 
11: Reserved </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Left_and_right_inputs</name>
                  <description>Left and right inputs from AIF2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left_input_from_AIF3</name>
                  <description>Left input from AIF3; Right input from AIF2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left_input_from_AIF2</name>
                  <description>Left input from AIF2; Right input from AIF3</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF3_PINS_TRI</name>
              <description>AIF3 Pins Tri-state Control 0 = AIF3 pins operate normally 1 = Tri-state all AIF3 interface pins </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Codec_RST</name>
          <description>Chip Soft Reset Register</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>DAC_DBG_CTRL</name>
          <description>DAC Debug Control Register</description>
          <addressOffset>0x328</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DASW</name>
              <description>DAC output channel swap enable 0:Disable   1:Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENDWA_N</name>
              <description>DWA Function Disable 
0: Enable 
1: Disable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_MOD_DBG</name>
              <description>DAC Modulator Debug 
0: DAC Modulator Normal Mode 
1: DAC Modulator Debug Mode </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DAC_Modulator_Normal</name>
                  <description>DAC Modulator Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DAC_Modulator_Debug</name>
                  <description>DAC Modulator Debug Mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_PTN_SEL</name>
              <description>DAC Pattern Select 
00: Normal(Audio sample from DAC mixer) 
01: -6 dB sin wave 
10: -60 dB sin wave 
11: zero data </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_openingparen_Audio_sample</name>
                  <description>Normal(Audio sample from DAC mixer)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_6_dB</name>
                  <description>-6 dB sin wave</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_60_dB</name>
                  <description>-60 dB sin wave</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>zero_data</name>
                  <description>zero data</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DVC</name>
              <description>Digital volume control, ATT=DVC[5:0]*(-1.16dB) 64 steps, -1.16dB/step </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_DIG_CTRL</name>
          <description>DAC Digital Control Register</description>
          <addressOffset>0x320</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ENDA</name>
              <description>DAC Digital Part Enable 
0: Disabe 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabe</name>
                  <description>Disabe</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ENHPF</name>
              <description>HPF Function Enable 
0: Enable 
1: Disable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAFIR32</name>
              <description>Enable 32-tap FIR filter 
0: 64-tap 
1: 32-tap </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64_minus_tap</name>
                  <description>64-tap</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_minus_tap</name>
                  <description>32-tap</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODQU</name>
              <description>Internal DAC Quantization Levels Levels=[7*(21+MODQU[3:0])]/128 Default levels=7*21/128=1.15 </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_MXR_GAIN</name>
          <description>DAC Digital Mixer Gain Control Register</description>
          <addressOffset>0x334</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DACL_MXR_GAIN</name>
              <description>DAC left channel mixer gain control 
0: 0dB  1: -6dB Bit15: AIF1 DAC0L Bit14: AIF1 DAC1L Bit13: AIF2 DACL Bit12: ADCL </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DACR_MXR_GAIN</name>
              <description>DAC right channel mixer gain control 
0: 0dB  1: -6dB Bit11: AIF1 DAC0R Bit10: AIF1 DAC1R Bit9: AIF2 DACR Bit8: ADCR </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_MXR_SRC</name>
          <description>DAC Digital Mixer Source Select Register</description>
          <addressOffset>0x330</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DACL_MXR_SRC</name>
              <description>DAC left channel mixer source select 
0: Disable  1:Enable Bit15: AIF1 DAC0L Bit14: AIF1 DAC1L Bit13: AIF2 DACL Bit12: ADCL </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DACR_MXR_SRC</name>
              <description>DAC right channel mixer source select 
0: Disable  1:Enable Bit11: AIF1 DAC0R Bit10: AIF1 DAC1R Bit9: AIF2 DACR Bit8: ADCR </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DAC_VOL_CTRL</name>
          <description>DAC Volume Control Register</description>
          <addressOffset>0x324</addressOffset>
          <resetValue>0xA0A0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>DAC_VOL_L</name>
              <description>DAC left channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_VOL_R</name>
              <description>DAC right channel volume (-119.25dB To 71.25dB, 0.75dB/Step) 
0x00: Mute 
0x01: -119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mute</name>
                  <description>Mute</description>
                  <value>0x00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_minus_119_point_25dB</name>
                  <description>-119.25dB ......... 0x9F = -0.75dB 0xA0 = 0dB 0xA1 = 0.75dB ......... 0xFF = 71.25dB</description>
                  <value>0x01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_CLKD</name>
          <description>Digital Audio Clock Divide Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>MCLKO_EN</name>
              <description>0: Disable MCLK Output 
1: Enable MCLK Output Notes: Whether in Slave or Master mode, when this bit is set to 1, MCLK should be output. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable MCLK Output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable MCLK Output Notes: Whether in Slave or Master mode, when this bit is set to 1, MCLK should be output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCLKDIV</name>
              <description>BCLK Divide Ratio from MCLK 
000: Divide by 2 (BCLK = MCLK/2) 
001: Divide by 4 
010: Divide by 6 
011: Divide by 8 
100: Divide by 12 
101: Divide by 16 
110: Divide by 32 
111: Divide by 64 </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2 (BCLK = MCLK/2)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLKDIV</name>
              <description>MCLK Divide Ratio from Audio PLL Output 
0000: Divide by 1 
0001: Divide by 2 
0010: Divide by 4 
0011: Divide by 6 
0100: Divide by 8 
0101: Divide by 12 
0110: Divide by 16 
0111: Divide by 24 
1000: Divide by 32 
1001: Divide by 48 
1010: Divide by 64 Others : Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64 Others : Reserved</description>
                  <value>0b1010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_CTL</name>
          <description>Digital Audio Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x17F</resetMask>
          <fields>
            <field>
              <name>SDO_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASS</name>
              <description>Audio sample select when TX FIFO under run 
0: Sending zero 
1: Sending last audio sample </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sending_zero</name>
                  <description>Sending zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sending_last</name>
                  <description>Sending last audio sample</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MS</name>
              <description>Master Slave Select 
0: Master 
1: Slave </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Master</name>
                  <description>Master</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Slave</name>
                  <description>Slave</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCM</name>
              <description>0: I2S Interface 
1: PCM Interface </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>I2S</name>
                  <description>I2S Interface</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM</name>
                  <description>PCM Interface</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop back test 
0: Normal mode 
1: Loop back test When set `1`, connecting the SDO with the SDI in Master mode. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop back test When set `1`, connecting the SDO with the SDI in Master mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmitter Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_FAT0</name>
          <description>Digital Audio Format Register 0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xC</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>LRCP</name>
              <description>Left/ Right Clock Parity 
0: Normal 
1: Inverted In DSP/ PCM mode 
0: MSB is available on 2nd BCLK rising edge after LRC rising edge 
1: MSB is available on 1st BCLK rising edge after LRC rising edge </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BCP</name>
              <description>BCLK Parity 
0: Normal 
1: Inverted </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverted</name>
                  <description>Inverted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SR</name>
              <description>Sample Resolution 
00: 16-bits 
01: 20-bits 
10: 24-bits 
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bits</name>
                  <description>16-bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bits</name>
                  <description>20-bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bits</name>
                  <description>24-bits</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WSS</name>
              <description>Word Select Size 
00: 16 BCLK 
01: 20 BCLK 
10: 24 BCLK 
11: 32 BCLK </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 BCLK</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20</name>
                  <description>20 BCLK</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24</name>
                  <description>24 BCLK</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32 BCLK</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FMT</name>
              <description>Serial Data Format 
00: Standard I2S Format 
01: Left Justified Format 
10: Right Justified Format 
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Standard</name>
                  <description>Standard I2S Format</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left</name>
                  <description>Left Justified Format</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Right</name>
                  <description>Right Justified Format</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_FAT1</name>
          <description>Digital Audio Format Register 1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x4020</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>PCM_SYNC_PERIOD</name>
              <description>PCM SYNC Period Clock Number 
000: 16 BCLK period 
001: 32 BCLK period 
010: 64 BCLK period 
011: 128 BCLK period 
100: 256 BCLK period Others : Reserved </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 BCLK period</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32 BCLK period</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 BCLK period</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 BCLK period</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 BCLK period Others : Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCM_SYNC_OUT</name>
              <description>PCM Sync Out 
0: Enable PCM_SYNC output in Master mode 
1: Suppress PCM_SYNC whilst keeping PCM_CLK running. Some Codec utilize this to enter a low power state. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable PCM_SYNC output in Master mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Suppress</name>
                  <description>Suppress PCM_SYNC whilst keeping PCM_CLK running. Some Codec utilize this to enter a low power state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PCM</name>
              <description>Out Mute Write 1 force PCM_OUT to 0 </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MLS</name>
              <description>MSB / LSB First Select 
0: MSB First 
1: LSB First </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEXT</name>
              <description>Sign Extend (only for 16 bits slot) 
0: Zeros or audio gain padding at LSB position 
1: Sign extension at MSB position When writing the bit is 0, the unused bits are audio gain for 13-bit linear sample and zeros padding for 8-bit companding sample. When writing the bit is 1, the unused bits are both sign extension. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Zeros</name>
                  <description>Zeros or audio gain padding at LSB position</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sign</name>
                  <description>Sign extension at MSB position When writing the bit is 0, the unused bits are audio gain for 13-bit linear sample and zeros padding for 8-bit companding sample. When writing the bit is 1, the unused bits are both sign extension.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SI</name>
              <description>Slot Index 
00: the 1st slot 
01: the 2nd slot 
10: the 3rd slot 
11: the 4th slot </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st</name>
                  <description>the 1st slot</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2nd</name>
                  <description>the 2nd slot</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3rd</name>
                  <description>the 3rd slot</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4th</name>
                  <description>the 4th slot</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SW</name>
              <description>Slot Width 
0: 8 clocks width 
1: 16 clocks width Notes: For A-law or u-law PCM sample, if this bit is set to 1, eight zero bits are following with PCM sample. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 clocks width</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 clocks width Notes: For A-law or u-law PCM sample, if this bit is set to 1, eight zero bits are following with PCM sample.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSYNC</name>
              <description>Short Sync Select 
0: Long Frame Sync 
1: Short Frame Sync It should be set `1` for 8 clocks width slot. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Long</name>
                  <description>Long Frame Sync</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short Frame Sync It should be set `1` for 8 clocks width slot.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PDM</name>
              <description>PCM Data Mode 
00: 16-bits Linear PCM 
01: 8-bits Linear PCM 
10: 8-bits u-law 
11: 8-bits A-law </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bits_Linear</name>
                  <description>16-bits Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_Linear</name>
                  <description>8-bits Linear PCM</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_ulaw</name>
                  <description>8-bits u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_Alaw</name>
                  <description>8-bits A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_PDM</name>
              <description>PCM Data Mode 
00: 16-bits Linear PCM 
01: 8-bits Linear PCM 
10: 8-bits u-law 
11: 8-bits A-law </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bits_Linear</name>
                  <description>16-bits Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_Linear</name>
                  <description>8-bits Linear PCM</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_ulaw</name>
                  <description>8-bits u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_Alaw</name>
                  <description>8-bits A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_FCTL</name>
          <description>Digital Audio FIFO Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x400F0</resetValue>
          <resetMask>0x8307F3F7</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable 
0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TX FIFO, self clear to `0`. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRX</name>
              <description>Write `1` to flush RX FIFO, self clear to `0`. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO Empty Trigger Level Interrupt and DMA request trigger level for TXFIFO normal condition Trigger Level = TXTL </description>
              <bitRange>[18:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RX FIFO Trigger Level Interrupt and DMA request trigger level for RXFIFO normal condition Trigger Level = RXTL + 1 </description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TX FIFO Input Mode (Mode 0, 1) 
0: Valid data at the MSB of TXFIFO register 
1: Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I[23:0] = {TXFIFO[31:12], 4`h0} Mode 1: FIFO_I[23:0] = {TXFIFO[19:0], 4`h0} </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I[23:0] = {TXFIFO[31:12], 4`h0} Mode 1: FIFO_I[23:0] = {TXFIFO[19:0], 4`h0}</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RX FIFO Output Mode (Mode 0, 1, 2, 3) 
00: Expanding `0` at LSB of DA_RXFIFO register. 
01: Expanding received sample sign bit at MSB of DA_RXFIFO register. 
10: Truncating received samples at high half-word of DA_RXFIFO register and low half-word of DA_RXFIFO register is filled by `0`. 
11: Truncating received samples at low half-word of DA_RXFIFO register and high half-word of DA_RXFIFO register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: RXFIFO[31:0] = {FIFO_O[19:0], 12`h0} Mode 1: RXFIFO[31:0] = {12{FIFO_O[19]}, FIFO_O[19:0]} Mode 2: RXFIFO[31:0] = {FIFO_O[19:4], 16`h0} Mode 3: RXFIFO[31:0] = {16{FIFO_O[19], FIFO_O[19:4]} </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`_at_LSB_of</name>
                  <description>Expanding `0` at LSB of DA_RXFIFO register.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample_sign_bit</name>
                  <description>Expanding received sample sign bit at MSB of DA_RXFIFO register.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_high</name>
                  <description>Truncating received samples at high half-word of DA_RXFIFO register and low half-word of DA_RXFIFO register is filled by `0`.</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_low</name>
                  <description>Truncating received samples at low half-word of DA_RXFIFO register and high half-word of DA_RXFIFO register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: RXFIFO[31:0] = {FIFO_O[19:0], 12`h0} Mode 1: RXFIFO[31:0] = {12{FIFO_O[19]}, FIFO_O[19:0]} Mode 2: RXFIFO[31:0] = {FIFO_O[19:4], 16`h0} Mode 3: RXFIFO[31:0] = {16{FIFO_O[19], FIFO_O[19:4]}</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_FSTA</name>
          <description>Digital Audio FIFO Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x10800000</resetValue>
          <resetMask>0x10FF017F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TX FIFO Empty 
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO (&gt;= 1 word) </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word Counter </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RX FIFO Available 
0: No available data in RX FIFO 
1: More than one sample in RX FIFO (&gt;= 1 word) </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one sample in RX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RX FIFO Available Sample Word Counter </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_INT</name>
          <description>Digital Audio Interrupt Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TX_DRQ</name>
              <description>TX FIFO Empty DRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable When set to `1`, an interrupt happens when writing new audio data if TX FIFO is full. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, an interrupt happens when writing new audio data if TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RX FIFO Data Available DRQ Enable 
0: Disable 
1: Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RX FIFO. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RX FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXUI_EN</name>
              <description>RX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RX FIFO Data Available Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_ISTA</name>
          <description>Digital Audio Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Under run Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Under run Pending Interrupt </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Under run Pending Interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Overrun Pending Interrupt Write `1` to clear this interrupt </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt Write `1` to clear this interrupt or automatic clear if interrupt condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXU_INT</name>
              <description>RX FIFO Under run Pending Interrupt 
0: No Pending Interrupt 1:FIFO Under run Pending Interrupt Write 1 to clear this interrupt </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt 1:FIFO Under run Pending Interrupt Write 1 to clear this interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RX FIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ  Write `1` to clear this interrupt </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ  Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RX FIFO Data Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ Write `1` to clear this interrupt or automatic clear if interrupt condition fails. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_RXCHMAP</name>
          <description>Digital Audio RX Channel Mapping Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x3210</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>RX_CH3_MAP</name>
              <description>RX Channel3 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH2_MAP</name>
              <description>RX Channel2 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH1_MAP</name>
              <description>RX Channel1 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH0_MAP</name>
              <description>RX Channel0 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_RXCHSEL</name>
          <description>Digital Audio RX Channel Select register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RX_CHSEL</name>
              <description>RX Channel Select 
0: 1-ch 
1: 2-ch 
2: 3-ch 
3: 4-ch Others: Reserved </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_minus_ch</name>
                  <description>3-ch</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_minus_ch</name>
                  <description>4-ch Others: Reserved</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_RXCNT</name>
          <description>Digital Audio TX Sample Counter Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample Counter The audio sample number of writing into RXFIFO. When one sample is written by I2S_AP Engine, the RX sample counter register increases by one. The RX sample counter register can be set to any initial valve at any time. After been updated by the initial value, the counter register should count on base of this initial value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_RXFIFO</name>
          <description>Digital Audio RX FIFO Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_TXCHMAP</name>
          <description>Digital Audio TX Channel Mapping Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x3210</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>TX_CH3_MAP</name>
              <description>TX Channel3 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH2_MAP</name>
              <description>TX Channel2 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH1_MAP</name>
              <description>TX Channel1 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH0_MAP</name>
              <description>TX Channel0 Mapping 
000: 1 sample 
001: 2 sample 
010: 3 sample 
011: 4 sample 
1xx: Reserved </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_sample</name>
                  <description>1 sample</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_sample</name>
                  <description>2 sample</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_sample</name>
                  <description>3 sample</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_sample</name>
                  <description>4 sample</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_TXCHSEL</name>
          <description>Digital Audio TX Channel Select register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TX_CHSEL</name>
              <description>TX Channel Select 
0: 1-ch 
1: 2-ch 
2: 3-ch 
3: 4-ch </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_minus_ch</name>
                  <description>3-ch</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_minus_ch</name>
                  <description>4-ch</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_TXCNT</name>
          <description>Digital Audio RX Sample Counter Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of sending into TXFIFO. When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial valve at any time. After been updated by the initial value, the counter register should count on base of this initial value.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DA_TXFIFO</name>
          <description>Digital Audio TX FIFO Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample.</description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRC_ENA</name>
          <description>DRC Enable Register</description>
          <addressOffset>0x4D4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0F0</resetMask>
          <fields>
            <field>
              <name>AIF1_DAC0_DRC0_ENA</name>
              <description>AIF1 DAC timeslot 0 DRC0 enable 
0: Disable 
1: Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_DAC1_DRC0_ENA</name>
              <description>AIF1 DAC timeslot 1 DRC0 enable 
0: Disable 
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_DAC_DRC0_ENA</name>
              <description>AIF2 DAC DRC0 enable 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAC_DRC0_ENA</name>
              <description>DAC DRC0 enable 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1_ADC0_DRC1_ENA</name>
              <description>AIF1 ADC timeslot 0 DRC1 enable 0 : Disable 1 : Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF1_ADC1_DRC1_ENA</name>
              <description>AIF1 ADC timeslot 1 DRC1 enable 0 : Disable 1 : Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AIF2_ADC_DRC1_ENA</name>
              <description>AIF2 ADC DRC1 enable 0 : Disable 1 : Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_DRC1_ENA</name>
              <description>ADC_DRC1 enable 0 : Disable 1 : Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMIC_CTRL1</name>
          <description>HMIC Control 1 Register</description>
          <addressOffset>0x310</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0xFF79</resetMask>
          <fields>
            <field>
              <name>HMIC_M_DEBOUNCE_WHEN_THE_MIC</name>
              <description>HMIC_M Debounce when the MIC Key down or up. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MDATA_THRESHOLD_DEBOUNCE</name>
              <description>MDATA_Threshold_Debounce 00:0 01:1 10:2 
11: Reserve(default 1) </description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reserve_openingparen_default</name>
                  <description>Reserve(default 1)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>JACK_IN_IRQ_EN_MIC_DETECT_INTERRUPT_SET</name>
              <description>JACK_IN_IRQ_EN MIC Detect Interrupt Set 0 : disable 1 : enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>JACK_OUT_IRQ_EN_MIC_DETECT_INTERRUPT_SET</name>
              <description>JACK_OUT_IRQ_EN MIC Detect Interrupt Set 0 : disable 1 : enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MIC_DET_IRQ_EN_MIC_DETECT_INTERRUPT_SET</name>
              <description>MIC_DET_IRQ_EN MIC Detect Interrupt Set 0:disable 1:enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HMIC_CTRL2</name>
          <description>HMIC Control 2 Register</description>
          <addressOffset>0x314</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xDFC0</resetMask>
          <fields>
            <field>
              <name>HMIC_SAMPLE_SELECT</name>
              <description>Down Sample Setting Select 00 : Down by 1, 128Hz 01 : Down by 2, 64Hz 10 : Down by 4, 32Hz 11 : Down by 8, 16Hz </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MDATA_THRESHOLD</name>
              <description>MIC DATA De-Bounce DATA </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HMIC_SF</name>
              <description>Hmic Smooth Filter setting 
00: by pass 
01: (x1+x2)/2 
10: (x1+x2+x3+x4)/4 
11: (x1+x2+x3+x4+x5+x6+x7+x8)/8 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>by</name>
                  <description>by pass</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_openingparen_x1_plus_x2_closingparen__slash_2</name>
                  <description>(x1+x2)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_openingparen_x1_plus_x2_plus_x3_plus_x4_closingparen__slash_4</name>
                  <description>(x1+x2+x3+x4)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_openingparen_x1_plus_x2_plus_x3_plus_x4_plus_x5_plus_x6_plus_x7_plus_x8_closingparen__slash_8</name>
                  <description>(x1+x2+x3+x4+x5+x6+x7+x8)/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HMIC_STS</name>
          <description>HMIC Status Register</description>
          <addressOffset>0x318</addressOffset>
          <resetValue>0xE000</resetValue>
          <resetMask>0xFF59</resetMask>
          <fields>
            <field>
              <name>MDATA_THRESHOLD_EN</name>
              <description>0 : The MIC Threshold Data write by user 1 : The MIC Threshold Data is auto write </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MDATA_DISCARD</name>
              <description>After MIC DATA data receiving, the first N-data will be discarded. N defined as follows: 00 0; None discarded 01 1; 1-data discarded 10 2; 2-data discarded 11 4; 4-data discarded </description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HMIC_DATA</name>
              <description>HMIC Average Data </description>
              <bitRange>[12:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>JACK</name>
              <description>Jack Detect Status 0:Not MIC/Accessory present 1:MIC/Accessory is present(impedance is &lt; 30K ohm) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>JACK_DET_OIRQ</name>
              <description>Jack output detect pending interrupt 
0: No Pending IRQ 1:Pending IRQ Writing 1 clear pending </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ 1:Pending IRQ Writing 1 clear pending</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>JACK_DET_IIRQ</name>
              <description>Jack input detect pending interrupt 
0: No Pending IRQ 
1: Pending IRQ Writing 1 clear pending </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending IRQ Writing 1 clear pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIC_DET_ST</name>
              <description>MIC Detect Pending interrupt 0:No pending IRQ 1:Pending IRQ Writing 1 clear pending </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>JACK_MIC_CTRL</name>
          <description>JACK_MIC_CTRL</description>
          <addressOffset>0x1D</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>JACKDETEN</name>
              <description>Jack detect enable 
0: disable, 1: enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable, 1: enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INNERRESEN</name>
              <description>Inner 2.2k resistor between hbias and micdet enable 
0: disable, 1: enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable, 1: enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HMICBIASEN</name>
              <description>Handset Microphone Bias enable 
0: disable, 1: enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable, 1: enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICADCEN</name>
              <description>Microphone detect ADC enable 
0: disable, 1: enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable, 1: enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>POPFREE</name>
              <description>When this bit is 0, HBIAS MICADC is controlled by registor </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOPLEN</name>
              <description>Enable the function to auto pull low micdet when jack removal 
0: disable, 1: enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable, 1: enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MICDETPL</name>
              <description>When this bit is 1and AUTOPLEN is 0, the micdet is pull to gnd </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOD_CLK_ENA</name>
          <description>Module Clock Control Register</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MODULE</name>
              <description>Module clock enable control 0-Clock disable 1-Clock enable BIT15-AIF1 BIT14-AIF2 BIT13-AIF3 BIT12-Reserved BIT11-SRC1 BIT10-SRC2 BIT9-Reserved BIT8-Reserved BIT7-HPF &amp; AGC BIT6-HPF &amp; DRC0 BIT5-HPF &amp; DRC1 BIT4-Reserved BIT3-ADC Digital BIT2-DAC Digital BIT1-Reserved BIT0-Reserved </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MOD_RST_CTL</name>
          <description>Module Reset Control Register</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MODULE</name>
              <description>Module reset control 0-Reset asserted 1-Reset de-asserted BIT15-AIF1 BIT14-AIF2 BIT13-AIF3 BIT12-Reserved BIT11-SRC1 BIT10-SRC2 BIT9-Reserved BIT8-Reserved BIT7-HPF &amp; AGC BIT6-HPF &amp; DRC0 BIT5-HPF &amp; DRC1 BIT4-Reserved BIT3-ADC Digital BIT2-DAC Digital BIT1-Reserved BIT0-Reserved </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC1_CTRL1</name>
          <description>SRC1 Control 1 Register</description>
          <addressOffset>0x4E0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC1_RATI_ENA</name>
              <description>SRC1 Manual setting ratio enable 0-disable 1-enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRC1_LOCK_STS</name>
              <description>SRC1 Ratio lock status 0-not locked 1-locked </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC1_FIFO_OVR</name>
              <description>SRC1 FIFO Overflow status 0-normal 1-overflowed </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC1_FIFO_LEV__8_6</name>
              <description>SRC1_FIFO_LEV_[8:6] SRC1 FIFO Level high 3-bit </description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC1_RATI_SET__25_16</name>
              <description>SRC1_RATI_SET_[25:16] Manual setting ratio high 10-bit </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC1_CTRL2</name>
          <description>SRC1 Control 2 Register</description>
          <addressOffset>0x4E4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC1_RATI_SET__15_0</name>
              <description>SRC1_RATI_SET_[15:0] Manual setting ratio low 16-bit </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC1_CTRL3</name>
          <description>SRC1 Control 3 Register</description>
          <addressOffset>0x4E8</addressOffset>
          <resetValue>0x40</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC1_FIFO_LEV__5_0</name>
              <description>SRC1_FIFO_LEV_[5:0] SRC1 FIFO Level low 6-bit </description>
              <bitRange>[15:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC1_RATI_VAL__25_16</name>
              <description>SRC1_RATI_VAL_[25:16] Calculated ratio high 10-bit </description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC1_CTRL4</name>
          <description>SRC1 Control 4 Register</description>
          <addressOffset>0x4EC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC1_RATI_VAL__15_0</name>
              <description>SRC1_RATI_VAL_[15:0] Calculated ratio low 16-bit</description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC2_CTRL1</name>
          <description>SRC2 Control 1 Register</description>
          <addressOffset>0x4F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC2_RATI_ENA</name>
              <description>SRC2 Manual setting ratio enable 0-disable 1-enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRC2_LOCK_STS</name>
              <description>SRC2 Ratio lock status 0-not locked 1-locked </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC2_FIFO_OVR</name>
              <description>SRC2 FIFO Overflow status 0-normal 1-overflowed </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC2_FIFO_LEV__8_6</name>
              <description>SRC2_FIFO_LEV_[8:6] SRC2 FIFO Level high 3-bit </description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC2_RATI_SET__25_16</name>
              <description>SRC2_RATI_SET_[25:16] Manual setting ratio high 10-bit </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC2_CTRL2</name>
          <description>SRC2 Control 2 Register</description>
          <addressOffset>0x4F4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC2_RATI_SET__15_0</name>
              <description>SRC2_RATI_SET_[15:0] Manual setting ratio low 16-bit </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC2_CTRL3</name>
          <description>SRC2 Control 3 Register</description>
          <addressOffset>0x4F8</addressOffset>
          <resetValue>0x40</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC2_FIFO_LEV__5_0</name>
              <description>SRC2_FIFO_LEV_[5:0] SRC2 FIFO Level low 6-bit </description>
              <bitRange>[15:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC2_RATI_VAL__25_16</name>
              <description>SRC2_RATI_VAL_[25:16] Calculated ratio high 10-bit </description>
              <bitRange>[9:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC2_CTRL4</name>
          <description>SRC2 Control 4 Register</description>
          <addressOffset>0x4FC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC2_RATI_VAL__15_0</name>
              <description>SRC2_RATI_VAL_[15:0] Calculated ratio low 16-bit </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC_BISTCR</name>
          <description>SRC Bist control Register</description>
          <addressOffset>0x4D8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRAM_BIST_REGISTER_SELECT</name>
              <description> SRAM BIST Register Select </description>
              <bitRange>[15:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_BIST_ADDRESS_MODE_SELECT</name>
              <description> SRAM BIST Address MODE Select </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_BIST_WRITE_DATA_PATTERN</name>
              <description> SRAM BIST Write Data Pattern 
0: 0x0000_0000 
1: 0x5555_5555 
2: 0x3333_3333 
3: 0x0f0f_0f0f 
4: 0x00ff_00ff 
5: 0x0000_ffff Others, reserved. </description>
              <bitRange>[11:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0x3333_3333</name>
                  <description>0x3333_3333</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x0f0f_0f0f</name>
                  <description>0x0f0f_0f0f</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x00ff_00ff</name>
                  <description>0x00ff_00ff</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x0000_ffff</name>
                  <description>0x0000_ffff Others, reserved.</description>
                  <value>5</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRAM_BIST_ENABLE_A_POSITIVE</name>
              <description> SRAM BIST Enable A positive edge will trigger the SRAM BIST to start  </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRC2_ROM_CHECKSUM_ERROR</name>
              <description>SRC2 ROM CheckSum Error 
0: No Error    1: Error </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error</name>
                  <description>Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2_ROM_CHECKXOR_ERROR</name>
              <description>SRC2 ROM CheckXor Error 
0: No Error    1: Error </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error</name>
                  <description>Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2_ROM_BIST_BUSY</name>
              <description>SRC2 ROM BIST Busy 
0: Idle    1: Busy </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2_ROM_BIST_ENABLE</name>
              <description>SRC2 ROM BIST Enable A positive edge will trigger the ROM BIST to start  </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRC1_ROM_CHECKSUM_ERROR</name>
              <description>SRC1 ROM CheckSum Error 
0: No Error    1: Error </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error</name>
                  <description>Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_ROM_CHECKXOR_ERROR</name>
              <description>SRC1 ROM CheckXor Error 
0: No Error    1: Error </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error</name>
                  <description>Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_ROM_BIST_BUSY</name>
              <description>SRC1 ROM BIST Busy 
0: Idle    1: Busy </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_ROM_BIST_ENABLE</name>
              <description>SRC1 ROM BIST Enable A positive edge will trigger the ROM BIST to start  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SRC_BISTST</name>
          <description>SRC Bist Status Register</description>
          <addressOffset>0x4DC</addressOffset>
          <resetValue>0x202</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SRC2_SRAM_BIST_ERROR_STATUS</name>
              <description>SRC2 SRAM BIST Error Status 
0: No Error    1: Error </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error</name>
                  <description>Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2_SRAM_BIST_ERROR_PATTERN</name>
              <description>SRC2 SRAM BIST Error Pattern </description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC2_SRAM_BIST_ERROR_CYCLES</name>
              <description>SRC2 SRAM BIST Error Cycles </description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC2_SRAM_BIST_STOP</name>
              <description>SRC2 SRAM BIST Stop 
0: Running    1: Stop </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Running</name>
                  <description>Running</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2_SRAM_BIST_BUSY</name>
              <description>SRC2 SRAM BIST Busy 
0: Idle    1: Busy </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_SRAM_BIST_ERROR_STATUS</name>
              <description>SRC1 SRAM BIST Error Status 
0: No Error    1: Error </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Error</name>
                  <description>No Error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error</name>
                  <description>Error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_SRAM_BIST_ERROR_PATTERN</name>
              <description>SRC1 SRAM BIST Error Pattern </description>
              <bitRange>[6:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC1_SRAM_BIST_ERROR_CYCLES</name>
              <description>SRC1 SRAM BIST Error Cycles </description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SRC1_SRAM_BIST_STOP</name>
              <description>SRC1 SRAM BIST Stop 
0: Running    1: Stop </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Running</name>
                  <description>Running</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_SRAM_BIST_BUSY</name>
              <description>SRC1 SRAM BIST Busy 
0: Idle    1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYSCLK_CTL</name>
          <description>System Clock Control Register</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>AIF1CLK_ENA</name>
              <description>AIF1CLK Enable 
0: Disable 
1: Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF1CLK_SRC</name>
              <description>AIF1CLK Source Select 
00: MLCK1 
01: Reserved 
1X: pll2_1x </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MLCK1</name>
                  <description>MLCK1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pll2_1x</name>
                  <description>pll2_1x</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2CLK_ENA</name>
              <description>AIF2CLK Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2CLK_SRC</name>
              <description>AIF2CLK Source Select 
00: MLCK1 
01: Reserved 
1X: pll2_1x </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MLCK1</name>
                  <description>MLCK1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pll2_1x</name>
                  <description>pll2_1x</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSCLK_ENA</name>
              <description>SYSCLK Enable 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYSCLK_SRC</name>
              <description>System Clock Source Select 
0: AIF1CLK 
1: AIF2CLK </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AIF1CLK</name>
                  <description>AIF1CLK</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2CLK</name>
                  <description>AIF2CLK</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYS_DVC_CLK</name>
          <description>SYS_DVC_CLK</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>AIFDVC_FS_SEL</name>
              <description>0 : DVC output to AIF sync 1 : normal </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYS_SRC_CLK</name>
          <description>System SRC Clock Source Select Register</description>
          <addressOffset>0x21C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>SRC_CLK_SLT</name>
              <description>System SRC module output clock source select 
00: normal mode  
01: src1 output sample rate select DAC clk 
10: src2 input sample rate select ADC clk 
11: reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal_mode</name>
                  <description>normal mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>src1</name>
                  <description>src1 output sample rate select DAC clk</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>src2</name>
                  <description>src2 input sample rate select ADC clk</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SYS_SR_CTRL</name>
          <description>System Sample rate &amp; SRC Configuration Register</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF0F</resetMask>
          <fields>
            <field>
              <name>AIF1_FS</name>
              <description>AIF1 Sample Rate 
0000: 8KHz 
0001: 11.025KHz 
0010: 12KHz 
0011: 16KHz 
0100: 22.05KHz 
0101: 24KHz 
0110: 32KHz 
0111: 44.1KHz 
1000: 48KHz 
1001: 96KHz 
1010: 192KHz Other: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8KHz</name>
                  <description>8KHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025KHz</name>
                  <description>11.025KHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12KHz</name>
                  <description>12KHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16KHz</name>
                  <description>16KHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05KHz</name>
                  <description>22.05KHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24KHz</name>
                  <description>24KHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1KHz</name>
                  <description>44.1KHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48KHz</name>
                  <description>48KHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96KHz</name>
                  <description>96KHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192KHz</name>
                  <description>192KHz Other: Reserved</description>
                  <value>0b1010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AIF2_FS</name>
              <description>AIF2 Sample Rate 
0000: 8KHz 
0001: 11.025KHz 
0010: 12KHz 
0011: 16KHz 
0100: 22.05KHz 
0101: 24KHz 
0110: 32KHz 
0111: 44.1KHz 
1000: 48KHz 
1001: 96KHz 
1010: 192KHz Other: Reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8KHz</name>
                  <description>8KHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025KHz</name>
                  <description>11.025KHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12KHz</name>
                  <description>12KHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16KHz</name>
                  <description>16KHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05KHz</name>
                  <description>22.05KHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24KHz</name>
                  <description>24KHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1KHz</name>
                  <description>44.1KHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48KHz</name>
                  <description>48KHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96KHz</name>
                  <description>96KHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192KHz</name>
                  <description>192KHz Other: Reserved</description>
                  <value>0b1010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_ENA</name>
              <description>SRC1 Enable. SRC1 Performs sample rate conversion of digital audio input to the codec. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC1_SRC</name>
              <description>From which the input data will come. 
0: AIF1 DAC Timeslot 0 
1: AIF2 DAC </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AIF1</name>
                  <description>AIF1 DAC Timeslot 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2</name>
                  <description>AIF2 DAC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2_ENA</name>
              <description>SRC2 Enable. SRC2 Performs sample rate conversion of digital audio output from the codec. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SRC2_SRC</name>
              <description>To which the converted data will be output. 
0: AIF1 ADC Timeslot 0 
1: AIF2 ADC </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AIF1</name>
                  <description>AIF1 ADC Timeslot 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2</name>
                  <description>AIF2 ADC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CCU</name>
      <description>CCU</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AC_DIG_CLK_REG</name>
          <description>AC Digital Clock Register</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>SCLK_1X_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = 1X Clock Output. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = 1X Clock Output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_4X_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK=4X Clock Output. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK=4X Clock Output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB1_APB1_CFG_REG</name>
          <description>AHB1/APB1 Configuration Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x1010</resetValue>
          <resetMask>0x33F0</resetMask>
          <fields>
            <field>
              <name>AHB1_CLK_SRC_SEL</name>
              <description>00: LOSC 
01: OSC24M 
10: AXI 
11: PLL_PERIPH0(1X)/ AHB1_PRE_DIV. </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AXI</name>
                  <description>AXI</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen__slash_</name>
                  <description>PLL_PERIPH0(1X)/ AHB1_PRE_DIV.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APB1_CLK_RATIO</name>
              <description>APB1 Clock Divide Ratio. APB1 clock source is AHB1 clock. 
00: /2 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB1_PRE_DIV</name>
              <description>AHB1 Clock Pre Divide Ratio  
00: /1 
01: /2 
10: /3 
11: /4. </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB1_CLK_DIV_RATIO</name>
              <description>AHB1 Clock Divide Ratio. 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB2_CFG_REG</name>
          <description>AHB2 Configuration Register</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>AHB2_CLK_CFG</name>
              <description>00: AHB1 Clock 
01: PLL_PERIPH0(1X)/2 
1X: / EMAC ,USB HCI0 default clock source is AHB2 Clock. Its default value is 300Mhz. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AHB1</name>
                  <description>AHB1 Clock</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen__slash_2</name>
                  <description>PLL_PERIPH0(1X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/ EMAC ,USB HCI0 default clock source is AHB2 Clock. Its default value is 300Mhz.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>APB2_CFG_REG</name>
          <description>APB2_CFG_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x303001F</resetMask>
          <fields>
            <field>
              <name>APB2_CLK_SRC_SEL</name>
              <description>APB2 Clock Source Select 
00: LOSC 
01: OSC24M 
1X: PLL_PERIPH0(2X). This clock is used for some special module apbclk(UART TWI). Because these modules need special clock rate even if the apb1clk changed. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X). This clock is used for some special module apbclk(UART TWI). Because these modules need special clock rate even if the apb1clk changed.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_RAT_N</name>
              <description>Clock Per Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_RAT_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 32. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CLK_REG</name>
          <description>AVS Clock Register</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK= OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG0</name>
          <description>Bus Clock Gating Register 0</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x33BE6762</resetMask>
          <fields>
            <field>
              <name>USBOHCI0_GATING</name>
              <description>Gating Clock for USB OHCI0 
0: Mask 
1: Pass </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_OHCI_GATING</name>
              <description>Gating Clock for USB-OTG-OHCI 
0: Mask 
1: Pass </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI0_GATING</name>
              <description>Gating Clock For USB EHCI0 
0: Mask 
1: Pass </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_EHCI_GATING</name>
              <description>Gating Clock For USB-OTG-EHCI 
0: Mask 
1: Pass </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_DEVICE_GATING</name>
              <description>USB-OTG-Device_GATING. Gating Clock For USB OTG Device 
0: Mask 
1: Pass </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI1_GATING</name>
              <description>Gating Clock For SPI1 
0: Mask 
1: Pass. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_GATING</name>
              <description>Gating Clock For SPI0 
0: Mask 
1: Pass. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSTMR_GATING</name>
              <description>Gating Clock For High Speed Timer 
0: Mask 
1: Pass. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TS_GATING</name>
              <description>Gating Clock For TS 
0: Mask 
1: Pass </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_GATING</name>
              <description>Gating Clock For EMAC 
0: Mask 
1: Pass </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_GATING</name>
              <description>Gating Clock For DRAM 
0: Mask 
1: Pass. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_GATING</name>
              <description>Gating Clock For NAND 
0: Mask 
1: Pass. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC2_GATING</name>
              <description>Gating Clock For SMHC2 
0: Mask 
1: Pass. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC1_GATING</name>
              <description>Gating Clock For SMHC1 
0: Mask 
1: Pass. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC0_GATING</name>
              <description>Gating Clock For SMHC0 
0: Mask 
1: Pass. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_GATING</name>
              <description>Gating Clock For DMA 
0: Mask 
1: Pass. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_GATING</name>
              <description>Gating Clock For CE 
0: Mask 
1: Pass. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIPIDSI_GATING</name>
              <description>Gating Clock For MIPI DSI 
0: Mask 
1: Pass. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG1</name>
          <description>Bus Clock Gating Register 1</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x701939</resetMask>
          <fields>
            <field>
              <name>SPINLOCK_GATING</name>
              <description>0: Mask 
1: Pass. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSGBOX_GATING</name>
              <description>0: Mask 
1: Pass. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPU_GATING</name>
              <description>0: Mask 
1: Pass. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DE_GATING</name>
              <description>0: Mask 
1: Pass. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI_GATING</name>
              <description>0: Mask 
1: Pass. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_GATING</name>
              <description>0: Mask 
1: Pass. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEINTERLACE_GATING</name>
              <description>Gating Clock For DEINTERLACE 
0: Mask 
1: Pass </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_GATING</name>
              <description>Gating Clock For TCON1 
0: Mask 
1: Pass. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_GATING</name>
              <description>Gating Clock For TCON0 
0: Mask 
1: Pass. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_GATING</name>
              <description>Gating Clock For VE 
0: Mask 
1: Pass. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG2</name>
          <description>Bus Clock Gating Register 2</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7123</resetMask>
          <fields>
            <field>
              <name>I2S/PCM_2_GATING</name>
              <description>Gating Clock For I2S/PCM-2 
0: Mask 
1: Pass. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM_1_GATING</name>
              <description>Gating Clock For I2S/PCM-1 
0: Mask 
1: Pass. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM_0_GATING</name>
              <description>Gating Clock For I2S/PCM-0 
0: Mask 
1: Pass. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_GATING</name>
              <description>Gating Clock For THS  
0: Mask 
1: Pass </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO_GATING</name>
              <description>Gating Clock For PIO  
0: Mask 
1: Pass. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPDIF_GATING</name>
              <description>Gating Clock For SPDIF  
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC_DIG_GATING</name>
              <description>Gating Clock For AC Digital 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG3</name>
          <description>Bus Clock Gating Register 3</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F0027</resetMask>
          <fields>
            <field>
              <name>UART4_GATING</name>
              <description>Gating Clock For UART4  
0: Mask 
1: Pass. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART3_GATING</name>
              <description>Gating Clock For UART3 
0: Mask 
1: Pass. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_GATING</name>
              <description>Gating Clock For UART2 
0: Mask 
1: Pass. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_GATING</name>
              <description>Gating Clock For UART1 
0: Mask 
1: Pass. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_GATING</name>
              <description>Gating Clock For UART0 
0: Mask 
1: Pass. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR_GATING</name>
              <description>Gating Clock For SCR 
0: Mask 
1: Pass </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_GATING</name>
              <description>Gating Clock For TWI2 
0: Mask 
1: Pass. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_GATING</name>
              <description>Gating Clock For TWI1 
0: Mask 
1: Pass. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_GATING</name>
              <description>Gating Clock For TWI0 
0: Mask 
1: Pass. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG4</name>
          <description>Bus Clock Gating Register 4</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80</resetMask>
          <fields>
            <field>
              <name>DBGSYS_GATING</name>
              <description>Gating Clock For DBGSYS 
0: Mask 
1: Pass </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG0</name>
          <description>Bus Software Reset Register 0</description>
          <addressOffset>0x2C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x33BE6762</resetMask>
          <fields>
            <field>
              <name>USB_OHCI0_RST</name>
              <description>USB-OHCI0 Reset Control 
0: Assert 
1: De-assert </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_OHCI_RST</name>
              <description>USB-OTG-OHCI Reset Control 
0: Assert 
1: De-assert </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_EHCI0_RST</name>
              <description>USB-EHCI0 Reset Control 
0: Assert 
1: De-assert. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_EHCI_RST</name>
              <description>USB-OTG-EHCI Reset Control 
0: Assert 
1: De-assert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_DEVICE_RST</name>
              <description>USB-OTG-Device_RST. USB-OTG-Device Reset Control 
0: Assert 
1: De-assert </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI1_RST</name>
              <description>SPI1 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_RST</name>
              <description>SPI0 Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSTMR_RST</name>
              <description>HSTMR Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TS_RST</name>
              <description>TS Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RST</name>
              <description>EMAC Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRAM_RST</name>
              <description>SDRAM AHB Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_RST</name>
              <description>NAND Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC2_RST</name>
              <description>SMHC2 Reset. 
0: Assert 
1: De-assert. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC1_RST</name>
              <description>SMHC1 Reset. 
0: Assert 
1: De-assert. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC0_RST</name>
              <description>SMHC0 Reset. 
0: Assert 
1: De-assert. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_RST</name>
              <description>CE Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIPI_DSI_RST</name>
              <description>MIPI DSI Reset. 
0: Assert 
1: De-assert. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG1</name>
          <description>Bus Software Reset Register 1</description>
          <addressOffset>0x2C4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80701D39</resetMask>
          <fields>
            <field>
              <name>DBGSYS_RST</name>
              <description>DBGSYS Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPINLOCK_RST</name>
              <description>SPINLOCK Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSGBOX_RST</name>
              <description>MSGBOX Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPU_RST</name>
              <description>GPU Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DE_RST</name>
              <description>DE Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI1_RST</name>
              <description>HDMI1 Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI0_RST</name>
              <description>HDMI0 Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_RST</name>
              <description>CSI Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEINTERLACE_RST</name>
              <description>DEINTERLACE Reset. 
0: Assert 1:De-assert </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert 1:De-assert</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_RST</name>
              <description>TCON1 Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_RST</name>
              <description>TCON0 Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_RST</name>
              <description>VE Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG2</name>
          <description>Bus Software Reset Register 2</description>
          <addressOffset>0x2C8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>LVDS_RST</name>
              <description>LVDS Reset. 
0: Assert 
1: De-assert. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG3</name>
          <description>Bus Software Reset Register 3</description>
          <addressOffset>0x2D0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7103</resetMask>
          <fields>
            <field>
              <name>I2S_PCM_2_RST</name>
              <description>I2S_PCM_2 Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S_PCM_1_RST</name>
              <description>I2S_PCM_1 Reset. 
0: Assert  
1: De-assert. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S_PCM_0_RST</name>
              <description>I2S_PCM_0 Reset. 
0: Assert 
1: De-assert. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_RST</name>
              <description>THS Reset. 
0: Assert  
1: De-assert </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OWA_RST</name>
              <description>OWA Reset. 
0: Assert  
1: De-assert </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC_RST</name>
              <description>AC Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG4</name>
          <description>Bus Software Reset Register 4</description>
          <addressOffset>0x2D8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F0027</resetMask>
          <fields>
            <field>
              <name>UART4_RST</name>
              <description>UART4 Reset. 
0: Assert 
1: De-assert. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART3_RST</name>
              <description>UART3 Reset. 
0: Assert   
1: De-assert. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_RST</name>
              <description>UART2 Reset. 
0: Assert   
1: De-assert. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_RST</name>
              <description>UART1 Reset. 
0: Assert   
1: De-assert. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_RST</name>
              <description>UART0 Reset. 
0: Assert   
1: De-assert. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR_RST</name>
              <description>SCR Reset. 
0: Assert 
1: De-assert </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_RST</name>
              <description>TWI2 Reset. 
0: Assert   
1: De-assert. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_RST</name>
              <description>TWI1 Reset. 
0: Assert   
1: De-assert. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_RST</name>
              <description>TWI0 Reset. 
0: Assert   
1: De-assert. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCU_SEC_SWITCH_REG</name>
          <description>CCU_SEC_SWITCH_REG</description>
          <addressOffset>0x2F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>MBUS_SEC</name>
              <description>MBUS clock register security 0:Secure 1:Non-secure Including MBUS Reset Register and MBUS Clock Register </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUS_SEC</name>
              <description>Bus relevant registers` security 0:Secure 1:Non-secure Including AXI/AHB/APB relevant registers,such as CPUX/AXI Configuration Register,AHB1/APB1 Configuration Register,APB2 Configuration Register, AHB2 Configuration Register. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_SEC</name>
              <description>PLL relevant registers` security. 0:Secure 1:Non-secure Including PLL_CPUX Control Register, PLL_AUDIO Control Register, PLL_VIDEO0 Control Register, PLL_VIDEO1 Control Register, PLL_VE Control Register, PLL_DDR0 Control Register,PLL_DDR1 Control Register, PLL_PERIPH0 Control Register, PLL_PERIPH1 Control Register,PLL_GPU Control Register, PLL_MIPI Control Register, PLL_HSIC Control Register,  PLL_DE Control Register and offset from 0x200 to 0x2B0 relevant registers.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CLK_REG</name>
          <description>CE Clock Register</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 400MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0 2X 
10: PLL_PERIPH1 2X 
11: /. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0</name>
                  <description>PLL_PERIPH0 2X</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1</name>
                  <description>PLL_PERIPH1 2X</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUX_AXI_CFG_REG</name>
          <description>CPUX_AXI_CFG_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30303</resetMask>
          <fields>
            <field>
              <name>CPUX_CLK_SRC_SEL</name>
              <description>CPUX Clock Source Select. CPUX Clock = Clock Source 
00: LOSC 
01: OSC24M 
1X: PLL_CPUX If the clock source is changed, at most to wait for 8 present running clock cycles. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_CPUX</name>
                  <description>PLL_CPUX If the clock source is changed, at most to wait for 8 present running clock cycles.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU_APB_CLK_DIV</name>
              <description>00: /1 
01: /2 
10: /3 
11: /4 Note: System APB clock source is CPU clock source. </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4 Note: System APB clock source is CPU clock source.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AXI_CLK_DIV_RATIO</name>
              <description>AXI Clock Divide Ratio. AXI Clock source is CPU clock source. 
00: /1 
01: /2 
10: /3 
11: /4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_CLK_REG</name>
          <description>CSI Clock Register</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x870F871F</resetMask>
          <fields>
            <field>
              <name>CSI_SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK= Special Clock Source/CSI_SCLK_DIV_M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= Special Clock Source/CSI_SCLK_DIV_M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_SRC_SEL</name>
              <description>Special Clock Source Select 
000: PLL_PERIPH0(1X) 
001: PLL_PERIPH1(1X) Others: / </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_SCLK_DIV_M</name>
              <description>CSI Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_MCLK_GATING</name>
              <description>Gating Master Clock 
0: Clock is OFF 
1: Clock is ON This clock =Master Clock Source/ CSI_MCLK_DIV_M. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This clock =Master Clock Source/ CSI_MCLK_DIV_M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLK_SRC_SEL</name>
              <description>Master Clock Source Select 
000: OSC24M 
001: PLL_VIDEO1(1X) 
010: PLL_PERIPH1 Others: / </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1</name>
                  <description>PLL_PERIPH1 Others: /</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_MCLK_DIV_M</name>
              <description>CSI Master Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 32. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_MISC_CLK_REG</name>
          <description>CSI_MISC Clock Register</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CSI_MISC_SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DEINTERLACE_CLK_REG</name>
          <description>DEINTERLACE Clock Register</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/ Divider M </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/ Divider M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_PERIPH0(1X) 
001: PLL_PERIPH1(1X) Others: / </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DE_CLK_REG</name>
          <description>DE Clock Register</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON This special clock = Clock Source/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This special clock = Clock Source/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_PERIPH0(2X) 
001: PLL_DE Others: / </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_CFG_REG</name>
          <description>DRAM Configuration Register</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80310003</resetMask>
          <fields>
            <field>
              <name>DRAM_CTR_RST</name>
              <description>DRAM Controller Reset For AHB Clock Domain. 
0: Assert 
1: De-assert. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_SRC_SELECT</name>
              <description>00: PLL_DDR0 
01: PLL_DDR1 
1X: /.</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR1</name>
                  <description>PLL_DDR1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRCLK_UPD</name>
              <description>SDRCLK Configuration Update.  0:Invalid 1:Valid. Note: Set this bit will validate Configuration . It will be auto cleared after the Configuration is valid. The DRAMCLK Source is from PLL_DDR. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRAM_DIV_M</name>
              <description>DRAMCLK Divider of Configuration. The clock is divided by (m+1). The divider M should be from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_CLK_GATING_REG</name>
          <description>DRAM Clock Gating Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TS_DCLK_GATING</name>
              <description>Gating DRAM Clock For TS 
0: Mask 
1: Pass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEINTERLACE_DCLK_GATING</name>
              <description>Gating DRAM SCLK(1X) For DEINTERLACE 
0: Mask 
1: Pass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_DCLK_GATING</name>
              <description>Gating DRAM Clock For CSI 
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_DCLK_GATING</name>
              <description>Gating DRAM Clock For VE 
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPU_CLK_REG</name>
          <description>GPU Clock Register</description>
          <addressOffset>0x1A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000007</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>0: Clock is OFF 
1: Clock is ON. SCLK= PLL_GPU/Divider N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= PLL_GPU/Divider N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (N) The select clock source is pre-divided by( n+1). The divider N is from 1 to 8. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_CLK_REG</name>
          <description>HDMI Clock Register</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK= Clock Source/ Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= Clock Source/ Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>Special Clock Source Select 
00: PLL_VIDEO0(1X) 01:PLL_VIDEO1(1X) Others: /  </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X) 01:PLL_VIDEO1(1X) Others: /</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_SLOW_CLK_REG</name>
          <description>HDMI Slow Clock Register</description>
          <addressOffset>0x154</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>HDMI_DDC_CLK_GATING</name>
              <description>0: Clock is OFF 
1: Clock is ON. SCLK = OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_0_CLK_REG</name>
          <description>I2S_PCM_0_CLK_REG</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen_</name>
                  <description>PLL_AUDIO(8X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_2</name>
                  <description>PLL_AUDIO(8X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_4</name>
                  <description>PLL_AUDIO(8X)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_1_CLK_REG</name>
          <description>I2S_PCM_1_CLK_REG</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO (8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_2_CLK_REG</name>
          <description>I2S_PCM_2_CLK_REG</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen_</name>
                  <description>PLL_AUDIO(8X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_2</name>
                  <description>PLL_AUDIO(8X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_4</name>
                  <description>PLL_AUDIO(8X)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_CLK_REG</name>
          <description>MBUS Clock Register</description>
          <addressOffset>0x15C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000007</resetMask>
          <fields>
            <field>
              <name>MBUS_SCLK_GATING</name>
              <description>Gating Clock for MBUS 
0: Clock is OFF 
1: Clock is ON. MBUS_CLOCK = Clock Source/Divider M </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. MBUS_CLOCK = Clock Source/Divider M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBUS_SCLK_SRC</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_DDR0 
11: PLL_DDR1. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR1</name>
                  <description>PLL_DDR1.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBUS_SCLK_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 8. Note: If the clock has been changed ,it must wait for at least 16 cycles.  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_RST_REG</name>
          <description>MBUS Reset Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x80000000</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>MBUS_RESET</name>
              <description>0: Assert 
1: De-assert. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MIPI_DSI_CLK_REG</name>
          <description>MIPI_DSI Clock Register</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x830F</resetMask>
          <fields>
            <field>
              <name>DSI_DPHY_GATING</name>
              <description>Gating DSI DPHY Clock  
0: Clock is OFF 
1: Clock is ON. This DSI DPHY clock =Clock Source/ DPHY_CLK_DIV_M. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. This DSI DPHY clock =Clock Source/ DPHY_CLK_DIV_M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSI_DPHY_SRC_SEL</name>
              <description>DSI DPHY Clock Source Select. 
00: PLL_VIDEO0(1X) 
01: / 
10: PLL_PERIPH0(1X) 
11: /. </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DPHY_CLK_DIV_M</name>
              <description>DSI DPHY Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NAND_CLK_REG</name>
          <description>NAND Clock Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0 
10: PLL_PERIPH1 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0</name>
                  <description>PLL_PERIPH0</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1</name>
                  <description>PLL_PERIPH1</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_CLK_REG</name>
          <description>OWA_CLK_REG</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK= PLL_AUDIO/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= PLL_AUDIO/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_BIAS_REG</name>
          <description>PLL_AUDIO Bias Register</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias Current[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_CTRL_REG</name>
          <description>PLL_AUDIO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x35514</resetValue>
          <resetMask>0x910F7F1F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL is for Audio. The PLL_AUDIO= (24MHz*N)/(M*P). The PLL_AUDIO(8X) = (24MHz*N*2)/M Note:  3 N/M 21.  (24MHz*N)/P must be in the range of 72MHz~504MHz. PLL_AUDIO default is 24.571MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL is for Audio. The PLL_AUDIO= (24MHz*N)/(M*P). The PLL_AUDIO(8X) = (24MHz*N*2)/M Note:  3 N/M 21.  (24MHz*N)/P must be in the range of 72MHz~504MHz. PLL_AUDIO default is 24.571MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. In this case, the PLL_FACTOR_N only low 4 bits are valid (N: The range is from 1 to 16). </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In this case, the PLL_FACTOR_N only low 4 bits are valid (N: The range is from 1 to 16).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_POSTDIV_P</name>
              <description>Post-div factor (P= Factor+1) The range is from 1 to 16. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 ... Factor=127, N=128. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor(M = Factor+1). The range is from 1 to 32. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_PAT_CTRL_REG</name>
          <description>PLL_AUDIO Pattern Control Register</description>
          <addressOffset>0x284</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_BIAS_REG</name>
          <description>PLL_CPUX Bias Register</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x8100200</resetValue>
          <resetMask>0x9F1F070F</resetMask>
          <fields>
            <field>
              <name>VCO_RST</name>
              <description>VCO reset in. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXG_MODE</name>
              <description>Exchange Mode. Note: CPU PLL source will select PLL_PERIPH0 instead of PLL_CPU </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[3:0]. </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK_CTRL</name>
              <description>PLL Lock Time Control[2:0]. </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACT_CTRL</name>
              <description>PLL Damping Factor Control[3:0]. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_CTRL_REG</name>
          <description>PLL_CPUX Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x91031F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable The PLL Output= (24MHz*N*K)/(M*P). The PLL output is for the CPUX Clock. Note: 10 N*K 88,The P factor only can be used when PLL output frequency is less than 240MHz. The PLL output clock must be in the range of 240MHz~2.1GHz. The default of CPUX Clock is 408MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable The PLL Output= (24MHz*N*K)/(M*P). The PLL output is for the CPUX Clock. Note: 10 N*K 88,The P factor only can be used when PLL output frequency is less than 240MHz. The PLL output clock must be in the range of 240MHz~2.1GHz. The default of CPUX Clock is 408MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPUX_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_OUT_EXT_DIVP</name>
              <description>PLL Output external divider P 
00: /1 
01: /2 
10: /4 
11: / </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31, N=32 </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M. (M=Factor + 1) The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_PAT_CTRL_REG</name>
          <description>PLL_CPUX Pattern Control Register</description>
          <addressOffset>0x280</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_TUN_REG</name>
          <description>PLL_CPUX Tuning Register</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0xA101000</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_BAND_WID_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL_EN</name>
              <description>VCO Gain Control Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL</name>
              <description>VCO Gain Control Bits[2:0]. </description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INIT_FREQ_CTRL</name>
              <description>PLL Initial Frequency Control[6:0]. </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD</name>
              <description>C-Reg-Od For Verify. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_IN</name>
              <description>C-B-In[6:0] For Verify. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD1</name>
              <description>C-Reg-Od1 For Verify. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_OUT</name>
              <description>C-B-Out[6:0] For Verify. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_BIAS_REG</name>
          <description>PLL_DDR0 Bias Register</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x81104000</resetValue>
          <resetMask>0xF31F700F</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias Control[3:0]. </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_GAIN_CTRL_EN</name>
              <description>PLL VCO Gain Control Enable. 
0: Disable 
1: Enable. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_GAIN_CTRL</name>
              <description>PLL VCO Gain Control Bit[2:0]. </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[3:0]. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_CTRL_REG</name>
          <description>PLL_DDR0 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x91101F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_DDR0 = (24MHz*N*K)/M. Note: 10 N*K 77(give priority to the choice of K 2) (24MHz*N*K) must be in the range of 240MHz~1.8GHz. PLL_DDR0 default is 408MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_DDR0 = (24MHz*N*K)/M. Note: 10 N*K 77(give priority to the choice of K 2) (24MHz*N*K) must be in the range of 240MHz~1.8GHz. PLL_DDR0 default is 408MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DDR0_CFG_UPDATE</name>
              <description>PLL_DDR0 Configuration Update. When PLL_DDR0 has been changed, this bit should be set to 1 to validate the PLL, otherwise the change would be invalid. And this bit would be cleared automatically after the PLL change is valid. 
0: No effect 
1: Validating the PLL_DDR0. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Validating</name>
                  <description>Validating the PLL_DDR0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32. </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M.(M = Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_PAT_CTRL_REG</name>
          <description>PLL_DDR0 Pattern Control Register</description>
          <addressOffset>0x290</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR0_TUN_REG</name>
          <description>PLL_DDR0 Tuning Register</description>
          <addressOffset>0x260</addressOffset>
          <resetValue>0x14880000</resetValue>
          <resetMask>0x17FFFFFF</resetMask>
          <fields>
            <field>
              <name>VREG1_OUT_EN</name>
              <description>Vreg1 Out Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_LTIME_CTRL</name>
              <description>PLL Lock Time Control[2:0]. </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VCO_RST</name>
              <description>VCO Reset In. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INIT_FREQ_CTRL</name>
              <description>PLL Initial Frequency Control[6:0]. </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OD1</name>
              <description>Reg-Od1 For Verify. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>B_IN</name>
              <description>B-In[6:0] For Verify. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OD</name>
              <description>Reg-Od For Verify. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>B_OUT</name>
              <description>B-Out[6:0] For Verify. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_BIAS_REG</name>
          <description>PLL_DDR1 Bias Register</description>
          <addressOffset>0x24C</addressOffset>
          <resetValue>0x10010000</resetValue>
          <resetMask>0x1F1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_CTRL_REG</name>
          <description>PLL_DDR1 Control Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x1800</resetValue>
          <resetMask>0xD1007F03</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_DDR1 = 24MHz*N/M. Note: 16 N 75. 24MHz*N/M must be in the range of 192MHz~1.6GHz. Its default is 600 MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_DDR1 = 24MHz*N/M. Note: 16 N 75. 24MHz*N/M must be in the range of 192MHz~1.6GHz. Its default is 600 MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRPLL_UPD</name>
              <description>SDRPLL Configuration Update.  Note: When PLL_DDR1 has changed, this bit should be set to 1 to validate the PLL, otherwise the change is invalid. It will be auto cleared after the PLL is valid. 
0: No effect 
1: To validate the PLL_DDR1. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>To_validate</name>
                  <description>To validate the PLL_DDR1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0:Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>N= Factor +1.  The range is from 0 to 127 </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>M= Factor +1.  The range is from 0 to 4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_PAT_CTRL_REG0</name>
          <description>PLL_DDR1 Pattern Control Register0</description>
          <addressOffset>0x2AC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
10: / 
11: Triangular. </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz. </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR1_PAT_CTRL_REG1</name>
          <description>PLL_DDR1 Pattern Control Register1</description>
          <addressOffset>0x2B0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x111FFFF</resetMask>
          <fields>
            <field>
              <name>DITHER_EN</name>
              <description></description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_EN</name>
              <description></description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAC_IN</name>
              <description></description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR_CFG_REG</name>
          <description>PLL_DDR Configuration Register</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0xCCCA0000</resetValue>
          <resetMask>0xFFFF107F</resetMask>
          <fields>
            <field>
              <name>PLL_SSC</name>
              <description>The amplitude of SSC must be the integer times of (2^Step). Spread Frequency Amplitude =(SSC Amplitude +2^Step)*24/(2^17),unit is Mhz </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DDR1_MODE</name>
              <description>0: Normal Mode 
1: Continuously Frequency Scale. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Continuously</name>
                  <description>Continuously Frequency Scale.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DDR1_PHASE_COMPENSATE</name>
              <description>The value of bit[6:4] is based on 24M clock, then the default PLL_DDR phase compensate is (3/24000000) s. </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DDR1_STEP</name>
              <description>0000: 0.00439MHz/us (576/2^17) 
0001: 0.00879MHz/us (576/2^16) 
0010: 0.01758MHz/us (576/2^15) 
0011: 0.03516MHz/us (576/2^14) 
0100: 0.07031MHz/us (576/2^13) 
0101: 0.14062MHz/us (576/2^12) 
0110: 0.28125MHz/us (576/2^11) 
0111: 0.56250MHz/us (576/2^10) 
1000: 1.12500MHz/us (576/2^9) 
1001: 2.25000MHz/us (576/2^8) 
1010: 4.50000Mhz/us (576/2^7) 
1011: 9.00000Mhz/us (576/2^6) Others: 0.00439MHz/us (576/2^17). </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_00439MHz_slash_us</name>
                  <description>0.00439MHz/us (576/2^17)</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_00879MHz_slash_us</name>
                  <description>0.00879MHz/us (576/2^16)</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_01758MHz_slash_us</name>
                  <description>0.01758MHz/us (576/2^15)</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_03516MHz_slash_us</name>
                  <description>0.03516MHz/us (576/2^14)</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_07031MHz_slash_us</name>
                  <description>0.07031MHz/us (576/2^13)</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_14062MHz_slash_us</name>
                  <description>0.14062MHz/us (576/2^12)</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_28125MHz_slash_us</name>
                  <description>0.28125MHz/us (576/2^11)</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_56250MHz_slash_us</name>
                  <description>0.56250MHz/us (576/2^10)</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_12500MHz_slash_us</name>
                  <description>1.12500MHz/us (576/2^9)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_25000MHz_slash_us</name>
                  <description>2.25000MHz/us (576/2^8)</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_point_50000Mhz_slash_us</name>
                  <description>4.50000Mhz/us (576/2^7)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9_point_00000Mhz_slash_us</name>
                  <description>9.00000Mhz/us (576/2^6) Others: 0.00439MHz/us (576/2^17).</description>
                  <value>0b1011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_BIAS_REG</name>
          <description>PLL_DE Bias Register</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_CTRL_REG</name>
          <description>PLL_DE Control Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable In the integer mode, The PLL Output= (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. Its default is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable In the integer mode, The PLL Output= (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. Its default is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL=0(PLL_PREDIV_M factor must be set to 0); no meaning when PLL_MODE_SEL =1. 
0: PLL Output=270MHz 
1: PLL Output =297MHz </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode Note: When in Fractional mode, the Pre Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode Note: When in Fractional mode, the Pre Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ... Factor=0x7F, N=128 </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Per Divider (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_PAT_CTRL_REG</name>
          <description>PLL_DE Pattern Control Register</description>
          <addressOffset>0x2A8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_BIAS_REG</name>
          <description>PLL_GPU Bias Register</description>
          <addressOffset>0x23C</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_CTRL_REG</name>
          <description>PLL_GPU Control Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, The PLL_GPU = (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_GPU default is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, The PLL_GPU = (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_GPU default is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL=0(PLL_PREDIV_M factor must be set to 0); no meaning when PLL_MODE_SEL =1. 
0: PLL Output=270MHz 
1: PLL Output=297MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output_equals_297MHz</name>
                  <description>PLL Output=297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode. 
1: Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ... Factor=127,N=128. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Pre Divider (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_PAT_CTRL_REG</name>
          <description>PLL_GPU Pattern Control Register</description>
          <addressOffset>0x29C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_HSIC_BIAS_REG</name>
          <description>PLL_HSIC Bias Register</description>
          <addressOffset>0x244</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_HSIC_CTRL_REG</name>
          <description>PLL_HSIC Control Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x3001300</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, The PLL_HSIC = (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_HSIC default is 480MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, The PLL_HSIC = (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_HSIC default is 480MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL=0(PLL_PREDIV_M factor must be set to 0); no meaning when PLL_MODE_SEL =1. 
0: PLL Output=270MHz 
1: PLL Output=297MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output_equals_297MHz</name>
                  <description>PLL Output=297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ... Factor=0x7F,N=128. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Per Divider (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_HSIC_PAT_CTRL_REG</name>
          <description>PLL_HSIC Pattern Control Register</description>
          <addressOffset>0x2A4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_LOCK_CTRL_REG</name>
          <description>PLL Lock Control Register</description>
          <addressOffset>0x320</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x11F71FFF</resetMask>
          <fields>
            <field>
              <name>MODE_SEL</name>
              <description>Mode Select 
0: Old Mode 
1: New Mode </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Old</name>
                  <description>Old Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>New</name>
                  <description>New Mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBG_EN</name>
              <description>Debug Enable 
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBG_SEL</name>
              <description>Debug Select 
0000: PLL_CPUX 
0001: PLL_AUDIO 
0010: PLL_VIDEO0 
0011: PLL_VE 
0100: PLL_DDR0 
0101: PLL_PERIPH0 
0110: PLL_VIDEO1 
0111: PLL_GPU 
1000: PLL_MIPI 
1001: PLL_HSIC 
1010: PLL_DE 
1011: PLL_DDR1 
1100: PLL_PERIPH1 Others: / </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_CPUX</name>
                  <description>PLL_CPUX</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0</name>
                  <description>PLL_VIDEO0</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VE</name>
                  <description>PLL_VE</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR0</name>
                  <description>PLL_DDR0</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0</name>
                  <description>PLL_PERIPH0</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1</name>
                  <description>PLL_VIDEO1</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_GPU</name>
                  <description>PLL_GPU</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_HSIC</name>
                  <description>PLL_HSIC</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR1</name>
                  <description>PLL_DDR1</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1</name>
                  <description>PLL_PERIPH1 Others: /</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UNLOCK_LEVEL</name>
              <description>Unlock Level  
00: 21-29 Clock Cycles 
01: 22-28 Clock Cycles 
1X: 20-30 Clock Cycles </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_21_minus_29</name>
                  <description>21-29 Clock Cycles</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_minus_28</name>
                  <description>22-28 Clock Cycles</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_minus_30</name>
                  <description>20-30 Clock Cycles</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_LEVEL</name>
              <description>Lock Level  
0: 24-26 Clock Cycles 
1: 23-27 Clock Cycles </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24_minus_26</name>
                  <description>24-26 Clock Cycles</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_23_minus_27</name>
                  <description>23-27 Clock Cycles</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK_EN</name>
              <description>Lock Enable Bit12: PLL_PERIPH1 Bit11: PLL_DDR1 Bit10: PLL_DE Bit9: PLL_HSIC Bit8: PLL_MIPI Bit7: PLL_GPU Bit6: PLL_VIDEO1 Bit5: PLL_PERIPH0 Bit4: PLL_DDR0 Bit3: PLL_VE Bit2: PLL_VIDEO0 Bit1: PLL_AUDIO Bit0: PLL_CPUX </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_BIAS_REG</name>
          <description>PLL_MIPI Bias Register</description>
          <addressOffset>0x240</addressOffset>
          <resetValue>0xF8100400</resetValue>
          <resetMask>0xFF1F0701</resetMask>
          <fields>
            <field>
              <name>VCO_RST</name>
              <description>VCO Reset In. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLLVDD_LDO_OUT_CTRL</name>
              <description>PLLVDD LDO Output Control. PLL_IN_POWER_SEL=1       PLL_IN_POWER_SEL=0 000:1.00v                  000:1.20v 001:1.02v                  001:1.225v 010:1.04v                  010:1.25v 011:1.06v                  011:1.275v 
100: 1.08v                  100:1.30v 101:1.10v                  101:1.325v 110:1.12v                  110:1.35v 111:1.14v.                  111:1.375v The PLL_IN_PWR_SEL is in the PLL_MIPI Tuning Register. </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_point_08v</name>
                  <description>1.08v</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_30v</name>
                  <description>1.30v 101:1.10v                  101:1.325v 110:1.12v                  110:1.35v 111:1.14v.                  111:1.375v The PLL_IN_PWR_SEL is in the PLL_MIPI Tuning Register.</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control [3:0]. </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK_CTRL</name>
              <description>PLL Lock Time Control[2:0]. </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACT_CTRL</name>
              <description>PLL Damping Factor Control. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_CTRL_REG</name>
          <description>PLL_MIPI Control Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x515</resetValue>
          <resetMask>0x9EF30F3F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_MIPI= (PLL_VIDEO0(1X)*N*K)/M  when VFB_SEL=0 (MIPI mode).  When VFB_SEL=1, the PLL Output is depend on these bits: sint_frac,sdiv2, s6p25_7p5 , pll_feedback_div.6 Note: K 2;M/N 3; (PLL_VIDEO0)/M 24MHz;  PLL_MIPI must be in the range of 500MHz~1.4GHz. PLL_MIPI default value is 594MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_MIPI= (PLL_VIDEO0(1X)*N*K)/M  when VFB_SEL=0 (MIPI mode).  When VFB_SEL=1, the PLL Output is depend on these bits: sint_frac,sdiv2, s6p25_7p5 , pll_feedback_div.6 Note: K 2;M/N 3; (PLL_VIDEO0)/M 24MHz;  PLL_MIPI must be in the range of 500MHz~1.4GHz. PLL_MIPI default value is 594MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SINT_FRAC</name>
              <description>When VFB_SEL=1, PLL mode control, otherwise no meaning. 
0: Integer Mode 
1: Fractional Mode. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDIV2</name>
              <description>PLL clock output when VFB_SEL=1; no meaning when VFB_SEL =0 
0: PLL Output 
1: PLL Output X2. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S6P25_7P5</name>
              <description>PLL Output is selected by this bit when VFB_SEL=1 and SINT_FRAC=1, otherwise no meaning. 
0: PLL Output=PLL Input*6.25 
1: PLL Output= PLL Input *7.5. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_PLL</name>
                  <description>PLL Output=PLL Input*6.25</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output_equals_</name>
                  <description>PLL Output= PLL Input *7.5.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LDO1_EN</name>
              <description>On-chip LDO1 Enable. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LDO2_EN</name>
              <description>On-chip LDO2 Enable. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_SRC</name>
              <description>PLL Source Select. 
0: VIDEO0 PLL 
1: /. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>VIDEO0</name>
                  <description>VIDEO0 PLL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FEEDBACK_DIV</name>
              <description>PLL feed-back divider control. PLL clock output when VFB_SEL=1; no meaning when VFB_SEL =0 0:Divided by 5 1:Divided by 7. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VFB_SEL</name>
              <description>0: MIPI Mode(N, K, M valid) 1:HDMI Mode(sint_frac,sdiv2,s6p25_7p5 , pll_feedback_div valid) </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MIPI</name>
                  <description>MIPI Mode(N, K, M valid) 1:HDMI Mode(sint_frac,sdiv2,s6p25_7p5 , pll_feedback_div valid)</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 ... Factor=15,N=16; </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 2 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Pre Divider (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_PAT_CTRL_REG</name>
          <description>PLL_MIPI Pattern Control Register</description>
          <addressOffset>0x2A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular. </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz. </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_MIPI_TUN_REG</name>
          <description>PLL_MIPI Tuning Register</description>
          <addressOffset>0x270</addressOffset>
          <resetValue>0x8A002000</resetValue>
          <resetMask>0xBFBFBF80</resetMask>
          <fields>
            <field>
              <name>PLL_INPUT_POWER_SEL</name>
              <description>0:2.5V 1:3.0V. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VREG_OUT_EN</name>
              <description>For Verify </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BAND_WID_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL_EN</name>
              <description>VCO Gain Control Enable. 
0: Disable 
1: Enable. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL</name>
              <description>VCO Gain Control Bits[2:0]. </description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_INT</name>
              <description>For Verify[5:0]. </description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD</name>
              <description>C-Reg-Od For Verify </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_IN</name>
              <description>C-B-In[5:0] For Verify </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD1</name>
              <description>C-Reg-Od1 For Verify </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_OUT</name>
              <description>C-B-Out[5:0] For Verify </description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH0_BIAS_REG</name>
          <description>PLL_PERIPH0 Bias Register</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x10100010</resetValue>
          <resetMask>0x1F1F0013</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CUR_CTRL</name>
              <description>PLL Bias Current Control. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[1:0]. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH0_CTRL_REG</name>
          <description>PLL_PERIPH0 Control Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x41811</resetValue>
          <resetMask>0x93071F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_PERIPH0(1X) = 24MHz*N*K/2. The PLL_PERIPH0(2X) = 24MHz*N*K. Note: 21 N*K 58(give priority to the choice of K 2) The PLL_PERIPH0(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K clock must be in the range of 504MHz~1.4GHz.  PLL_PERIPH0(2X) default is 1.2GHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_PERIPH0(1X) = 24MHz*N*K/2. The PLL_PERIPH0(2X) = 24MHz*N*K. Note: 21 N*K 58(give priority to the choice of K 2) The PLL_PERIPH0(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K clock must be in the range of 504MHz~1.4GHz.  PLL_PERIPH0(2X) default is 1.2GHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BYPASS_EN</name>
              <description>PLL Output Bypass Enable. 
0: Disable 
1: Enable If the bypass is enabled, the PLL output is 24MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If the bypass is enabled, the PLL output is 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CLK_OUT_EN</name>
              <description>PLL clock output enable. 
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_OUT_EN</name>
              <description>PLL 24MHz Output Enable. 
0: Disable  
1: Enable When 25MHz crystal used, this PLL can output 24MHz. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When 25MHz crystal used, this PLL can output 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_POST_DIV</name>
              <description>PLL 24M Output Clock Post Divider (When 25MHz crystal used). 1/2/3/4. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ... Factor=31, N=32 </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M (M = Factor + 1) is only valid in plltest debug. The PLL_PERIPH back door clock output =24MHz*N*K/M. The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_BIAS_REG</name>
          <description>PLL_PERIPH1 Bias Register</description>
          <addressOffset>0x21C</addressOffset>
          <resetValue>0x10100010</resetValue>
          <resetMask>0x1F1F0013</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control. 
0: Narrow 
1: Wide. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[1:0]. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_CTRL_REG</name>
          <description>PLL_PERIPH1 Control Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x41811</resetValue>
          <resetMask>0x93171F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. The PLL_PERIPH0(1X) = 24MHz*N*K/2. The PLL_PERIPH0(2X) = 24MHz*N*K. Note: 21 N*K 58(give priority to the choice of K 2) The PLL_PERIPH1(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K clock must be in the range of 504MHz~1.4GHz.  PLL_PERIPH0(2X) default is 1.2GHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. The PLL_PERIPH0(1X) = 24MHz*N*K/2. The PLL_PERIPH0(2X) = 24MHz*N*K. Note: 21 N*K 58(give priority to the choice of K 2) The PLL_PERIPH1(2X) should be fixed to 1.2GHz, it is not recommended to vary this value arbitrarily. 24MHz*N*K clock must be in the range of 504MHz~1.4GHz.  PLL_PERIPH0(2X) default is 1.2GHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BYPASS_EN</name>
              <description>PLL Output Bypass Enable. 
0: Disable 
1: Enable. If the bypass is enabled, the PLL output is 24MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. If the bypass is enabled, the PLL output is 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CLK_OUT_EN</name>
              <description>PLL clock output enable.(Just for the SATA Phy) 
0: Disable 
1: Enable. 23:21 / / / </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. 23:21 / / /</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_OUT_EN</name>
              <description>PLL 24MHz Output Enable. 
0: Disable  
1: Enable.  When 25MHz crystal used, this PLL can output 24MHz. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.  When 25MHz crystal used, this PLL can output 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_POST_DIV</name>
              <description>PLL 24M Output Clock Post Divider (When 25MHz crystal used). 1/2/3/4. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ... Factor=31,N=32. </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M (M = Factor + 1) is only valid in plltest debug. The PLL_PERIPH back door clock output =24MHz*N*K/M. The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_PAT_CTRL_REG</name>
          <description>PLL_PERIPH1 Pattern Control Register</description>
          <addressOffset>0x27C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular. </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz. </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_STABLE_TIME_REG0</name>
          <description>PLL Stable Time Register0</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_LOCK_TIME</name>
              <description>PLL Lock Time (Unit: us). Note: When any PLL (except PLL_CPU) is enabled or changed, the corresponding PLL lock bit will be set after the PLL STABLE Time. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_STABLE_TIME_REG1</name>
          <description>PLL Stable Time Register1</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_CPU_LOCK_TIME</name>
              <description>PLL_CPU Lock Time (Unit: us). Note: When PLL_CPU is enabled or changed, the PLL_CPU lock bit will be set after the PLL_CPU STABLE Time. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_BIAS_REG</name>
          <description>PLL_VE Bias Register</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_CTRL_REG</name>
          <description>PLL_VE Control Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode, The PLL_VE = (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_VE default is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode, The PLL_VE = (24MHz*N)/M. In the fractional mode, the PLL Output is select by bit 25. Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz. PLL_VE default is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL=0(PLL_PREDIV_M factor must be set to 0); No meaning when PLL_MODE_SEL =1. 
0: PLL Output=270MHz 
1: PLL Output =297MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. 19:15 / / / </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. 19:15 / / /</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=31,N=32 ... Factor=127,N=128. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre Divider (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_PAT_CTRL_REG</name>
          <description>PLL_VE Pattern Control Register</description>
          <addressOffset>0x28C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_BIAS_REG</name>
          <description>PLL_VIDEO0 Bias Register</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_CTRL_REG</name>
          <description>PLL_VIDEO0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0xD3107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode,  PLL_VIDEO0(1X) = (24MHz*N)/M.  PLL_VIDEO0(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is select by bit 25.  Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz.  PLL_VIDEO0(1X) default is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode,  PLL_VIDEO0(1X) = (24MHz*N)/M.  PLL_VIDEO0(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is select by bit 25.  Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz.  PLL_VIDEO0(1X) default is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE</name>
              <description>0: Manual Mode 
1: Auto Mode (Controlled by DE). </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Manual</name>
                  <description>Manual Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Mode (Controlled by DE).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL=0(PLL_PREDIV_M factor must be set to 0); No meaning when PLL_MODE_SEL =1. 
0: PLL Output=270MHz 
1: PLL Output =297MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=127,N=128. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor(M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO0_PAT_CTRL_REG</name>
          <description>PLL_VIDEO0 Pattern Control Register</description>
          <addressOffset>0x288</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_BIAS_REG</name>
          <description>PLL_VIDEO1 Bias Register</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_CUR_BIAS_CTRL</name>
              <description>PLL Current Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_CTRL_REG</name>
          <description>PLL_VIDEO1 Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0xD3107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable. In the integer mode,  PLL_VIDEO1(1X) = (24MHz*N)/M.  PLL_VIDEO1(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is select by bit 25.  Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz.  PLL_VIDEO1(1X) default is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable. In the integer mode,  PLL_VIDEO1(1X) = (24MHz*N)/M.  PLL_VIDEO1(2X) =( (24MHz*N)/M)*2. In the fractional mode, the PLL Output is select by bit 25.  Note: 8 N/M 25 (24MHz*N)/M must be in the range of 192MHz~600MHz.  PLL_VIDEO1(1X) default is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE</name>
              <description>0: Manual Mode 
1: Auto Mode (Controlled by DE). </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Manual</name>
                  <description>Manual Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Mode (Controlled by DE).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL has been stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL has been stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL=0(PLL_PREDIV_M factor must be set to 0); No meaning when PLL_MODE_SEL =1. 
0: PLL Output=270MHz 
1: PLL Output =297MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode. Note: When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ... Factor=127,N=128. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor(M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO1_PAT_CTRL_REG</name>
          <description>PLL_VIDEO1 Pattern Control Register</description>
          <addressOffset>0x298</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode. 
00: DC=0 
01: DC=1 
1X: Triangular. </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency. 
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz. </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS_CNT_REG</name>
          <description>PS Counter Register</description>
          <addressOffset>0x304</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PS_CNT</name>
              <description>PS Counter. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS_CTRL_REG</name>
          <description>PS Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>DEC_SEL</name>
              <description>Device Select </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DET_FIN</name>
              <description>Detect Finish. 
0: Unfinished 
1: Finished Set 1 to this bit will clear it. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unfinished</name>
                  <description>Unfinished</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Finished</name>
                  <description>Finished Set 1 to this bit will clear it.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLY_SEL</name>
              <description>Delay Select 
0: 1 Cycle 
1: 2 Cycles </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_Cycle</name>
                  <description>1 Cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 Cycles</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OSC_SEL</name>
              <description>OSC Select. 
00: IDLE 
01: SVT 
10: LVT 
11: ULVT </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>IDLE</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SVT</name>
                  <description>SVT</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVT</name>
                  <description>LVT</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ULVT</name>
                  <description>ULVT</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_DET</name>
              <description>Time detect. 
000: 0.5/4 us 
001: 0.5/2 us 
002: 0.5/1 us 
003: 0.5*2us ........... 111:0.5*2^5us </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_5_slash_4</name>
                  <description>0.5/4 us</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_slash_2</name>
                  <description>0.5/2 us</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_slash_1</name>
                  <description>0.5/1 us</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_times_2us</name>
                  <description>0.5*2us ........... 111:0.5*2^5us</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MOD_EN</name>
              <description>Module enable. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC0_CLK_REG</name>
          <description>SMHC0_CLK_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 384MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC1_CLK_REG</name>
          <description>SMHC1_CLK_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 384MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC2_CLK_REG</name>
          <description>SMHC2_CLK_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 384MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: /. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI0_CLK_REG</name>
          <description>SPI0 Clock Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK = Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI1_CLK_REG</name>
          <description>SPI1 Clock Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz) 
0: Clock is OFF 
1: Clock is ON. SCLK= Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK= Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n) 
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CLK_REG</name>
          <description>TCON0 Clock Register</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x87000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
000: PLL_MIPI 
001: / 
010: PLL_VIDEO0(2X) 011~111: /. </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_MIPI</name>
                  <description>PLL_MIPI</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_2X_closingparen_</name>
                  <description>PLL_VIDEO0(2X) 011~111: /.</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CLK_REG</name>
          <description>TCON1 Clock Register</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = Clock Source/ Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = Clock Source/ Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>Special Clock Source Select 
00: PLL_VIDEO0(1X) 
01: / 
10: PLL_VIDEO1(1X) 
11: /. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO0_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO0(1X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO1_openingparen_1X_closingparen_</name>
                  <description>PLL_VIDEO1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CLK_REG</name>
          <description>THS Clock Register</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000003</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock. 
0: Clock is OFF 
1: Clock is ON This special clock = Clock Source/CLK_DIV_RATIO. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This special clock = Clock Source/CLK_DIV_RATIO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_CLK_SRC_SEL</name>
              <description>Clock Source Select 
00: OSC24M 
01: / 
10: / 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_CLK_DIV_RATIO</name>
              <description>THS clock divide ratio. 
00: /1 
01: /2 
10: /4 
11: /6 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_6</name>
                  <description>/6</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TS_CLK_REG</name>
          <description>TS Clock Register</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F03000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating of SCLK (Max Clock = 200MHz). 
0: Clock is OFF 
1: Clock is ON SCLK = Clock Source/Divider N/Divider M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK = Clock Source/Divider N/Divider M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select 
0000: OSC24M 
0001: PLL_PERIPH0(1X) Others: / </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X) Others: /</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock pre-divide ratio (n) The select clock source is pre-divided by 2^n. The divider is 1/2/4/8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBPHY_CFG_REG</name>
          <description>USBPHY Configuration Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF30F07</resetMask>
          <fields>
            <field>
              <name>OHCI1_12M_SRC_SEL</name>
              <description>OHCI1 12M Source Select  
00: 12M divided from 48M 
01: 12M divided from 24M 
10: LOSC 
11: / </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OHCI0_12M_SRC_SEL</name>
              <description>OHCI0 12M Source Select  
00: 12M divided from 48M 
01: 12M divided from 24M 
10: LOSC 
11: / </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_GATING_OHCI</name>
              <description>Gating Special Clock For OHCI(48M and 12M)  
00: Clock is OFF 
01: OTG-OHCI Clock is ON 
10: Clock is OFF 11:OTG-OHCI and OHCI0 Clock is ON </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCLK_GATING_12M</name>
              <description>Gating Special 12M Clock For HSIC 
0: Clock is OFF 
1: Clock is ON.  The special 12M clock = OSC24M/2. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  The special 12M clock = OSC24M/2.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_HSIC</name>
              <description>Gating Special Clock For HSIC 
0: Clock is OFF 
1: Clock is ON. The special clock is from PLL_HSIC. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. The special clock is from PLL_HSIC.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY1</name>
              <description>Gating Special Clock For USB PHY1 
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY0</name>
              <description>Gating Special Clock For USB PHY0 
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBHSIC_RST</name>
              <description>USB HSIC Reset Control 
0: Assert 
1: De-assert. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY1_RST</name>
              <description>USB PHY1 Reset Control 
0: Assert 
1: De-assert </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY0_RST</name>
              <description>USB PHY0 Reset Control 
0: Assert 
1: De-assert </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VE_CLK_REG</name>
          <description>VE Clock Register</description>
          <addressOffset>0x13C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80070000</resetMask>
          <fields>
            <field>
              <name>VE_SCLK_GATING</name>
              <description>Gating Special Clock 
0: Clock is OFF 
1: Clock is ON. SCLK = PLL_VE /Divider N. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON. SCLK = PLL_VE /Divider N.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (N) The select clock source is pre-divided by n+1. The divider N is from 1 to 8. </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>Thermal Sensor</name>
      <description>Thermal Sensor</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C25000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ADC_CDAT_REG</name>
          <description>ADC_CDAT_REG</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ADC_CDAT</name>
              <description>ADC calibration data</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_1_CDATA_REG</name>
          <description>THS0_1_CDATA_REG</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x8000800</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>THS1_CDATA</name>
              <description>Thermal Sensor1 calibration data</description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS0_CDATA</name>
              <description>Thermal Sensor0 calibration data </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_ALARM_CTRL_REG</name>
          <description>THS0_ALARM_CTRL_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_T_HOT</name>
              <description>Thermal sensor0 Alarm Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM0_T_HYST</name>
              <description>Thermal sensor0 Alarm threshold for hysteresis temperature  </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_DATA_REG</name>
          <description>THS0_DATA_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS0_DATA</name>
              <description>Temperature measurement data of sensor0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_SHUTDOWN_CTRL_REG</name>
          <description>THS0_SHUTDOWN_CTRL_REG</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x4E90000</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>SHUT0_T_HOT</name>
              <description>Thermal sensor0 Shutdown Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_ALARM_CTRL_REG</name>
          <description>THS1_ALARM_CTRL_REG</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM1_T_HOT</name>
              <description>Thermal sensor1 Alarm Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM1_T_HYST</name>
              <description>Thermal sensor1 Alarm threshold for hysteresis temperature  </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_DATA_REG</name>
          <description>THS1_DATA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS1_DATA</name>
              <description>Temperature measurement data of sensor1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_SHUTDOWN_CTRL_REG</name>
          <description>THS1_SHUTDOWN_CTRL_REG</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x4E90000</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>SHUT1_T_HOT</name>
              <description>Thermal sensor1 Shutdown Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS2_ALARM_CTRL_REG</name>
          <description>THS2_ALARM_CTRL_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM2_T_HOT</name>
              <description>Thermal sensor2 Alarm Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM2_T_HYST</name>
              <description>Thermal sensor2 Alarm threshold for hysteresis temperature  </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS2_CDATA_REG</name>
          <description>THS2_CDATA_REG</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x800</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS2_CDATA</name>
              <description>Thermal Sensor2 calibration data </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS2_DATA_REG</name>
          <description>THS2_DATA_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS2_DATA</name>
              <description>Temperature measurement data of sensor2</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS2_SHUTDOWN_CTRL_REG</name>
          <description>THS2_SHUTDOWN_CTRL_REG</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x4E90000</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>SHUT2_T_HOT</name>
              <description>Thermal sensor2 Shutdown Threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL_REG0</name>
          <description>THS_CTRL_REG0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SENSOR_ACQ0</name>
              <description>ADC acquire time CLK_IN/(N+1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL_REG1</name>
          <description>THS_CTRL_REG1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x320000</resetMask>
          <fields>
            <field>
              <name>THS_OP_BIAS</name>
              <description>THS OP Bias </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADC_CALI_EN</name>
              <description>ADC Calibration  
1: start Calibration, it is clear to 0 after calibration </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>start</name>
                  <description>start Calibration, it is clear to 0 after calibration</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL_REG2</name>
          <description>THS_CTRL_REG2</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x40000</resetValue>
          <resetMask>0xFFFF0007</resetMask>
          <fields>
            <field>
              <name>SENSOR_ACQ1</name>
              <description>Sensor acquire time CLK_IN/(N+1)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE2_EN</name>
              <description>Enable temperature measurement sensor2  0:Disable 1:Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE1_EN</name>
              <description>Enable temperature measurement sensor1  0:Disable 1:Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE0_EN</name>
              <description>Enable temperature measurement sensor0 0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_FILTER_REG</name>
          <description>THS_FILTER_REG</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FILTER_EN</name>
              <description>Filter Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTER_TYPE</name>
              <description>Average Filter Type 
00: 2 
01: 4 
10: 8 
11: 16 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_INT_CTRL_REG</name>
          <description>THS_INT_CTRL_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF777</resetMask>
          <fields>
            <field>
              <name>THERMAL_PER</name>
              <description>4096*(n+1)/CLK_IN</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS2_DATA_IRQ_EN</name>
              <description>Selects Temperature measurement data of sensor2   
0: No select 
1: Select </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS1_DATA_IRQ_EN</name>
              <description>Selects Temperature measurement data of sensor1   
0: No select 
1: Select </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS0_DATA_IRQ_EN</name>
              <description>Selects Temperature measurement data of sensor0   
0: No select 
1: Select </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUT_INT2_EN</name>
              <description>Selects shutdown interrupt for sensor2 
0: No select 
1: Select</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUT_INT1_EN</name>
              <description>Selects shutdown interrupt for sensor1 
0: No select 
1: Select</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUT_INT0_EN</name>
              <description>Selects shutdown interrupt for sensor0 
0: No select 
1: Select</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM_INT2_EN</name>
              <description>Selects Alert interrupt for sensor2  
0: No select 
1: Select</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM_INT1_EN</name>
              <description>Selects Alert interrupt for sensor1  
0: No select 
1: Select</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM_INT0_EN</name>
              <description>Selects Alert interrupt for sensor0  
0: No select 
1: Select</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_select</name>
                  <description>No select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_STAT_REG</name>
          <description>THS_STAT_REG</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>ALARM_OFF2_STS</name>
              <description>Alarm interrupt off pending for sensor2 Write `1` to clear this interrupt or automatic clear if interrupt condition fails </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM_OFF1_STS</name>
              <description>Alarm interrupt off pending for sensor1 Write `1` to clear this interrupt or automatic clear if interrupt condition fails </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM_OFF0_STS</name>
              <description>Alarm interrupt off pending for sensor0 Write `1` to clear this interrupt or automatic clear if interrupt condition fails </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS2_DATA_IRQ_STS</name>
              <description>Data interrupt status for sensor2  Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS1_DATA_IRQ_STS</name>
              <description>Data interrupt status for sensor1  Write `1` to clear this interrupt or automatic clear if interrupt condition fails </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS0_DATA_IRQ_STS</name>
              <description>Data interrupt status for sensor0  Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHUT_INT2_STS</name>
              <description>Shutdown interrupt status for sensor2 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHUT_INT1_STS</name>
              <description>Shutdown interrupt status for sensor1 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SHUT_INT0_STS</name>
              <description>Shutdown interrupt status for sensor0 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM_INT2_STS</name>
              <description>Alarm interrupt pending for sensor2 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM_INT1_STS</name>
              <description>Alarm interrupt pending for sensor1 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM_INT0_STS</name>
              <description>Alarm interrupt pending for sensor0 Write `1` to clear this interrupt or automatic clear if interrupt condition fails</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EMAC</name>
      <description>EMAC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C30000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>7</dim>
          <dimIncrement>8</dimIncrement>
          <dimIndex>1,2,3,4,5,6,7</dimIndex>
          <name>_x_%s</name>
          <addressOffset>0x58</addressOffset>
          <register>
            <name>ADDRx_HIGH</name>
            <description>ADDRx_HIGH</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0xFFFF</resetValue>
            <resetMask>0xFF00FFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_CTL</name>
                <description>0: MAC address x(x: 1~7) is not valid, and it will be ignored by the address filter 
1: MAC address x(x 1~7) is valid </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MAC_address_x_openingparen_x_colon__1_tilde_7_closingparen_</name>
                    <description>MAC address x(x: 1~7) is not valid, and it will be ignored by the address filter</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>MAC_address_x_openingparen_x_1_tilde_7_closingparen_</name>
                    <description>MAC address x(x 1~7) is valid</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_TYPE</name>
                <description>1: MAC address x(x:1~7) used to compare with the source address of the received frame 
0: MAC address x(x:1~7) used to compare with the destination address of the received frame </description>
                <bitRange>[30:30]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MAC_address_x_openingparen_x_colon_1_tilde_7_closingparen__used_to_compare_with_the_source</name>
                    <description>MAC address x(x:1~7) used to compare with the source address of the received frame</description>
                    <value>0b1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>MAC_address_x_openingparen_x_colon_1_tilde_7_closingparen__used_to_compare_with_the_destination</name>
                    <description>MAC address x(x:1~7) used to compare with the destination address of the received frame</description>
                    <value>0b0</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_BYTE_CTL</name>
                <description>MAC address byte control mask. The lower bit of mask controls the lower byte of in MAC address x(x:1~7). When the bit of mask is 1, do not compare the corresponding byte. </description>
                <bitRange>[29:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>MAC_ADDR_X_HIGH</name>
                <description>The upper 16bits of the MAC address x(x:1~7). </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>ADDRx_LOW</name>
            <description>ADDRx_LOW</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0xFFFFFFFF</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_X_LOW</name>
                <description>The lower 32bits of MAC address x(x:1~7). </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>ADDR0_HIGH</name>
          <description>ADDR0_HIGH</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_0_HIGH</name>
              <description>The upper 16bits of the 1 MAC address. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDR0_LOW</name>
          <description>ADDR0_LOW</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_0_LOW</name>
              <description>The lower 32bits of 1 MAC address. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BASIC_CTL_0</name>
          <description>Basic Control 0 Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SPEED</name>
              <description>00: 1000Mbps 
11: 100Mbps 
10: 10Mbps 
01: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1000Mbps</name>
                  <description>1000Mbps</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100Mbps</name>
                  <description>100Mbps</description>
                  <value>0b11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10Mbps</name>
                  <description>10Mbps</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOPBACK</name>
              <description>0: Disable;  
1: Enable; </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable;</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DUPLEX</name>
              <description>0: Half-duplex 
1: Full-duplex </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_duplex</name>
                  <description>Half-duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_duplex</name>
                  <description>Full-duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BASIC_CTL_1</name>
          <description>Basic Control 1 Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x8000000</resetValue>
          <resetMask>0x3F000003</resetMask>
          <fields>
            <field>
              <name>BURST_LEN</name>
              <description>The burst length of RX and TX DMA transfer.  </description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TX_PRI</name>
              <description>0: RX DMA and TX DMA have same priority 
1: RX DMA has priority over TX DMA </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_and</name>
                  <description>RX DMA and TX DMA have same priority</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA</name>
                  <description>RX DMA has priority over TX DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>When this bit is set, soft reset all registers and logic. All clock inputs must be valid before soft rest. This bit is cleared internally when the reset operation is completed fully. Before write any register, this bit should read a 0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_EN</name>
          <description>Interrupt Enable Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F3F</resetMask>
          <fields>
            <field>
              <name>RX_EARLY_INT_EN</name>
              <description>0: Disable early receive interrupt enable 
1: Enable early receive interrupt enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable early receive interrupt enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable early receive interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_OVERFLOW_INT_EN</name>
              <description>0: Disable overflow interrupt 
1: Enable overflow interrupt </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable overflow interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable overflow interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TIMEOUT_INT_EN</name>
              <description>0: Disable receive timeout interrupt 
1: Enable receive timeout interrupt </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive timeout interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive timeout interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DMA_STOPPED_INT_EN</name>
              <description>0: Disable receive DMA FSM stopped interrupt 
1: Enable receive DMA FSM stopped interrupt </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive DMA FSM stopped interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive DMA FSM stopped interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_BUF_UA_INT_EN</name>
              <description>0: Disable receive buffer unavailable interrupt 
1: Enable receive buffer unavailable interrupt </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive buffer unavailable interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive buffer unavailable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_INT_EN</name>
              <description>0: Disable receive interrupt 
1: Enable receive interrupt </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EARLY_INT_EN</name>
              <description>0: Disable early transmit interrupt  
1: Enable early transmit interrupt  </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable early transmit interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable early transmit interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_UNDERFLOW_INT_EN</name>
              <description>0: Disable underflow interrupt 
1: Enable underflow interrupt </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable underflow interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable underflow interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TIMEOUT_INT_EN</name>
              <description>0: Disable transmit timeout interrupt 
1: Enable transmit timeout interrupt </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit timeout interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit timeout interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_BUF_UA_INT_EN</name>
              <description>0: Disable transmit buffer available interrupt 
1: Enable transmit buffer available interrupt </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit buffer available interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit buffer available interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_STOPPED_INT_EN</name>
              <description>0: Disable transmit DMA FSM stopped interrupt 
1: Enable transmit DMA FSM stopped interrupt </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit DMA FSM stopped interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit DMA FSM stopped interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_INT_EN</name>
              <description>0: Disable transmit interrupt 
1: Enable transmit interrupt </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_STA</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x13F3F</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK_STA_INT</name>
              <description>When this bit is asserted, the link status of RGMII interface is changed. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_EARLY_INT</name>
              <description>When this bit asserted, the RX DMA had filled the first data buffer of the receive frame.  </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_OVERFLOW_INT</name>
              <description>When this bit is asserted, the RX FIFO had an overflow error. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_TIMEOUT_INT</name>
              <description>When this bit asserted, the length of receive frame is greater than 2048 bytes(10240 when JUMBO_FRM_EN is set) </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DMA_STOPPED_INT</name>
              <description>When this bit asserted, the RX DMA FSM is stopped. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_BUF_UA</name>
              <description>_INT When this asserted, the RX DMA can`t acquire next RX descriptor and RX DMA FSM is suspended. The ownership of next RX descriptor should be changed to RX DMA. The RX DMA FSM will resume when write to DMA_RX_START bit or next receive frame is coming. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_INT</name>
              <description>When this bit is asserted, a frame reception is completed. The RX DMA FSM remains in the running state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_EARLY_INT</name>
              <description>When this bit is asserted , the frame is transmitted to FIFO totally. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_UNDERFLOW_INT</name>
              <description>When this bit is asserted, the TX FIFO had an underflow error. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_TIMEOUT_INT</name>
              <description>When this bit is asserted, the transmitter had been excessively active. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_BUF_UA_INT</name>
              <description>When this asserted, the TX DMA can not acquire next TX descriptor and TX DMA FSM is suspended. The ownership of next TX descriptor should be changed to TX DMA. The TX DMA FSM will resume when write to DMA_TX_START bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DMA_STOPPED_INT</name>
              <description>When this bit is asserted, the TX DMA FSM is stopped. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_INT</name>
              <description>When this bit is asserted, a frame transmission is completed. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MII_CMD</name>
          <description>Management Interface Command Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71F1F3</resetMask>
          <fields>
            <field>
              <name>MDC_DIV_RATIO_M</name>
              <description>MDC clock divide ration(m). The source of MDC clock is AHB clock. 
000: 16 
001: 32 
010: 64 
011: 128 Others: Reserved </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 Others: Reserved</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PHY_ADDR</name>
              <description>Select a PHY device from 32 possible candidates. </description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_REG_ADDR</name>
              <description>Select register in the selected PHY device </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MII_WR</name>
              <description>0: Read register in selected PHY and return data in EMAC_GMII_DATA 
1: Write register in selected PHY using data in EMAC_GMII_DATA </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read register in selected PHY and return data in EMAC_GMII_DATA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write register in selected PHY using data in EMAC_GMII_DATA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MII_BUSY</name>
              <description>This bit indicates that a read or write operation is in progress. When prepared the data and register address for a write operation or the register address for a read operation, set this bit and start to access register in PHY.  When this bit is cleared automatically, the read or write operation is over and the data in EMAC_GMII_DATA is valid for a read operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MII_DATA</name>
          <description>Management Interface Data Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MII_DATA</name>
              <description>The 16-bit data to be written to or read from the register in the selected PHY. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RGMII_STA</name>
          <description>RGMII Status Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK</name>
              <description>The link status of RGMII interface 
0: down 
1: up </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>down</name>
                  <description>down</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>up</name>
                  <description>up</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_SPD</name>
              <description>The link speed of RGMII interface 
00: 2.5 MHz  
01: 25 MHz 
10: 125 MHz </description>
              <bitRange>[2:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_point_5</name>
                  <description>2.5 MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_25</name>
                  <description>25 MHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_125</name>
                  <description>125 MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_MD</name>
              <description>The link Mode of RGMII interface 
0: Half-Duplex 
1: Full-Duplex </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_Duplex</name>
                  <description>Half-Duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_Duplex</name>
                  <description>Full-Duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CTL_0</name>
          <description>Receive Control 0 Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF8030000</resetMask>
          <fields>
            <field>
              <name>RX_EN</name>
              <description>Enable receiver  
0: Disable receiver after current reception 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receiver after current reception</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FRM_LEN_CTL</name>
              <description>0: Allow to receive frames less than or equal to 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cuts off any bytes received after that 
1: Allow to receive frames of up to 16,384 bytes </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Allow_to_receive_frames_less</name>
                  <description>Allow to receive frames less than or equal to 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cuts off any bytes received after that</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Allow_to_receive_frames_of</name>
                  <description>Allow to receive frames of up to 16,384 bytes</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>JUMBO_FRM_EN</name>
              <description>When set, allows Jumbo frames of 9,018 bytes without reporting a giant frame error in the receive frame status. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STRIP_FCS</name>
              <description>When set, strip the Pad/FCS field on received frames only when the length`s field value is less than or equal to 1,500 bytes. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHECK_CRC</name>
              <description>When set, calculate CRC and check the IPv4 Header Checksum. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PAUSE_FRM_MD</name>
              <description>0: Only detect multicast pause frame specified in the 802.3x standard. 
1: In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Only_detect</name>
                  <description>Only detect multicast pause frame specified in the 802.3x standard.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>In</name>
                  <description>In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_EN</name>
              <description>When set, enable the functionality that decode the received pause frame and disable its transmitter for a specified time by pause frame. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CTL_1</name>
          <description>Receive Control 1 Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC1F0003F</resetMask>
          <fields>
            <field>
              <name>RX_DMA_START</name>
              <description>When set, the RX DMA will go no to work. It is cleared internally and always read a 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DMA_EN</name>
              <description>0: Stop RX DMA after finish receiving current frame  
1: Start and run RX DMA </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop RX DMA after finish receiving current frame</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run RX DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FIFO_FLOW_CTL</name>
              <description>0: Disable RX flow control 
1: Enable RX flow control based on RX_FLOW_CTL_TH_DEACT and RX_FLOW_CTL_TH_ACT  </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable RX flow control</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable RX flow control based on RX_FLOW_CTL_TH_DEACT and RX_FLOW_CTL_TH_ACT</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_DEACT</name>
              <description>The threshold for deactivating flow control in both half-duplex mode and full-duplex mode 
00: Full minus 1 KB  
01: Full minus 2 KB  
10: Full minus 3 KB  
11: Full minus 4 KB   </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_ACT</name>
              <description>The threshold for activating flow control in both half-duplex mode and full-duplex mode.  
00: Full minus 1 KB  
01: Full minus 2 KB 
10: Full minus 3 KB 
11: Full minus 4 KB  </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TH</name>
              <description>The threshold value of RX DMA FIFO. When RX_MD is 0, RX DMA starts to transfer data when the size of received frame in RX DMA FIFO is greater than the threshold. In addition, full frames with a length less than the threshold are transferred automatically.  
00: 64  
01: 32 
10: 96 
11: 128 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96</name>
                  <description>96</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ERR_FRM</name>
              <description>0: RX DMA drops frames with error 
1: RX DMA forwards frames with error </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_drops</name>
                  <description>RX DMA drops frames with error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA_forwards</name>
                  <description>RX DMA forwards frames with error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RUNT_FRM</name>
              <description>When set, forward undersized frames with no error and length less than 64bytes </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MD</name>
              <description>0: RX DMA reads data from RX DMA FIFO to host memory after the number of data in RX DAM FIFO is greater than RX_TH 
1: RX DMA reads data from RX DMA FIFO to host memory after a complete frame has been written to RX DMA FIFO </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_reads_data_from_RX_DMA_FIFO_to_host_memory_after_the_number</name>
                  <description>RX DMA reads data from RX DMA FIFO to host memory after the number of data in RX DAM FIFO is greater than RX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA_reads_data_from_RX_DMA_FIFO_to_host_memory_after_a_complete</name>
                  <description>RX DMA reads data from RX DMA FIFO to host memory after a complete frame has been written to RX DMA FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_RX_FRM</name>
              <description>The functionality that flush the frames when receive descriptors/buffers is unavailable 
0: Enable 
1: Disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_CUR_BUF</name>
          <description>RX_DMA_CUR_BUF</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive DMA buffer </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_CUR_DESC</name>
          <description>RX_DMA_CUR_DESC</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive descriptor </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_LIST</name>
          <description>RX_DMA_LIST</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DESC_LIST</name>
              <description>The base address of receive descriptor list. It must be 3 2-bit aligned. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_STA</name>
          <description>Receive DMA Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RX_DMA_STA</name>
              <description>The state of RX DMA FSM. 
000: STOP: When reset or disable RX DMA;.  
001: RUN_FETCH_DESC: Fetching RX DMA descriptor; 
011: RUN_WAIT_FRM: Waiting for frame.  
100: SUSPEND: RX descriptor unavailable;   
101: RUN_CLOSE_DESC: Closing RX descriptor. 
111: RUN_TRANS_DATA: Passing frame from host memory to RX DMA FIFO;  010, 110: Reserved.  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>STOP: When reset or disable RX DMA;.</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_FETCH_DESC</name>
                  <description>RUN_FETCH_DESC: Fetching RX DMA descriptor;</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_WAIT_FRM</name>
                  <description>RUN_WAIT_FRM: Waiting for frame.</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUSPEND</name>
                  <description>SUSPEND: RX descriptor unavailable;</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_CLOSE_DESC</name>
                  <description>RUN_CLOSE_DESC: Closing RX descriptor.</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_TRANS_DATA</name>
                  <description>RUN_TRANS_DATA: Passing frame from host memory to RX DMA FIFO;  010, 110: Reserved.</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FRM_FLT</name>
          <description>Receive Frame Filter Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80033373</resetMask>
          <fields>
            <field>
              <name>DIS_ADDR_FILTER</name>
              <description>0: Enable address filter 
1: Disable address filter  </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable address filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable address filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIS_BROADCAST</name>
              <description>0: Receive all broadcast frames 
1: Drop all broadcast frames </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive all broadcast frames</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drop</name>
                  <description>Drop all broadcast frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL_MULTICAST</name>
              <description>0: Filter multicast frame according to HASH_MULTICAST 
1: Receive all multicast frames </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter</name>
                  <description>Filter multicast frame according to HASH_MULTICAST</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive all multicast frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTL_FRM_FILTER</name>
              <description>00, 01: Drop all control frames 
10: Receive all control frames 
11: Receive all control frames when pass the address filter </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HASH_MULTICAST</name>
              <description>0: Filter multicast frames by comparing the DA field with the values in DA MAC address registers 
1: Filter multicast frames according to the hash table </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter_multicast_frames_by</name>
                  <description>Filter multicast frames by comparing the DA field with the values in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_multicast_frames_according</name>
                  <description>Filter multicast frames according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH_UNICAST</name>
              <description>0: Filter unicast frames by comparing the DA field with the values in DA MAC address registers 
1: Filter unicast frames according to the hash table </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter_unicast_frames_by</name>
                  <description>Filter unicast frames by comparing the DA field with the values in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_unicast_frames_according</name>
                  <description>Filter unicast frames according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_FILTER_EN</name>
              <description>0: Receive frames and update the result of SA filter 
1: Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive frames and update the result of SA filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_INV_FILTER</name>
              <description>0: When the SA field of current frame matches the values in SA MAC address registers, it passes the SA filter 
1: When the SA filed of current frame does not match the values in SA MAC address registers,, it passes the SA filter </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>When_the_SA_field</name>
                  <description>When the SA field of current frame matches the values in SA MAC address registers, it passes the SA filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>When_the_SA_filed</name>
                  <description>When the SA filed of current frame does not match the values in SA MAC address registers,, it passes the SA filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA_INV_FILTER</name>
              <description>0: Normal filtering of frames is performed  
1: Filter both unicast and multicast frames by comparing DA field in inverse filtering mode </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal filtering of frames is performed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_both</name>
                  <description>Filter both unicast and multicast frames by comparing DA field in inverse filtering mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLT_MD</name>
              <description>0: If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter 
1: Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST) </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>If</name>
                  <description>If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL</name>
              <description>0: Receive the frames that pass the SA/DA address filter 
1: Receive all frames and update the result of address filter(pass or fail) in the receive status word </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_the_frames</name>
                  <description>Receive the frames that pass the SA/DA address filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_all</name>
                  <description>Receive all frames and update the result of address filter(pass or fail) in the receive status word</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_HASH_0</name>
          <description>Hash Table 0 Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB_0</name>
              <description>The upper 32 bits of Hash t able for receive frame filter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_HASH_1</name>
          <description>Hash Table 1 Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB_1</name>
              <description>The lower 32 bits of Hash table for receive frame filter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CTL_0</name>
          <description>Transmit Control 0 Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TX_EN</name>
              <description>Enable transmitter. 
0: Disable transmitter after current transmission 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmitter after current transmission</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FRM_LEN_CTL</name>
              <description>0: Allow to transmit frames no more than 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cut off any bytes after that 1:Allow to transmit frames of up to 16,384 bytes </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Allow</name>
                  <description>Allow to transmit frames no more than 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cut off any bytes after that 1:Allow to transmit frames of up to 16,384 bytes</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CTL_1</name>
          <description>Transmit Control 1 Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000703</resetMask>
          <fields>
            <field>
              <name>TX_DMA_START</name>
              <description>When set this bit, the TX DMA FSM will go no to work. It is cleared internally and always read a 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DMA_EN</name>
              <description>0: Stop TX DMA after the completion of current frame transmission. 
1: Start and run TX DMA. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop TX DMA after the completion of current frame transmission.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run TX DMA.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TH</name>
              <description>The threshold value of TX DMA FIFO. When TX_MD is 0, transmission starts when the size of frame in TX DMA FIFO is greater than the threshold. In addition, full frames with a length less than the threshold are transferred automatically.  
000: 64  
001: 128 
010: 192 
011: 256  Others: Reserved </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192</name>
                  <description>192</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_MD</name>
              <description>0: Transmission starts after the number of data in TX DAM FIFO is greater than TX_TH 
1: Transmission starts after a full frame located in TX DMA FIFO </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmission_starts_after_the_number</name>
                  <description>Transmission starts after the number of data in TX DAM FIFO is greater than TX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transmission_starts_after_a_full</name>
                  <description>Transmission starts after a full frame located in TX DMA FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_TX_FIFO</name>
              <description>The functionality that flush the data in the TX FIFO. 
0: Enable 
1: Disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_CUR_BUF</name>
          <description>TX_DMA_CUR_BUF</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit DMA buffer. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_CUR_DESC</name>
          <description>TX_DMA_CUR_DESC</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit descriptor.  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_LIST</name>
          <description>TX_DMA_LIST</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DESC_LIST</name>
              <description>The base address of transmi t descriptor list. It must be 32-bit aligned. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_STA</name>
          <description>Transmit DMA Status Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TX_DMA_STA</name>
              <description>The state of Transmit DMA FSM.  
000: STOP: When reset or disable TX DMA; 
001: RUN_FETCH_DESC: Fetching TX DMA descriptor; 
010: RUN_WAIT_STA: Waiting for the status of TX frame; 
011: RUN_TRANS_DATA: Passing frame from host memory to TX DMA FIFO;  
111: RUN_CLOSE_DESC: Closing TX descriptor. 
110: SUSPEND: TX descriptor unavailable or TX DMA FIFO underflow;  100, 101: Reserved; </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>STOP: When reset or disable TX DMA;</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_FETCH_DESC</name>
                  <description>RUN_FETCH_DESC: Fetching TX DMA descriptor;</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_WAIT_STA</name>
                  <description>RUN_WAIT_STA: Waiting for the status of TX frame;</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_TRANS_DATA</name>
                  <description>RUN_TRANS_DATA: Passing frame from host memory to TX DMA FIFO;</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_CLOSE_DESC</name>
                  <description>RUN_CLOSE_DESC: Closing TX descriptor.</description>
                  <value>0b111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUSPEND</name>
                  <description>SUSPEND: TX descriptor unavailable or TX DMA FIFO underflow;  100, 101: Reserved;</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_FLOW_CTL</name>
          <description>Transmit Flow Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x803FFFF3</resetMask>
          <fields>
            <field>
              <name>TX_FLOW_CTL_STA</name>
              <description>This bit indicates a pause frame transmission is in progress. When the configuration of flow control is ready, set this bit to transmit a pause frame in full-duplex mode or activate the backpressure function. After completion of transmission, this bit will be cleared automatically. Before write register TX_FLOW_CTRL, this bit must be read as 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PAUSE_FRM_SLOT</name>
              <description>The threshold of the pause timer at which the input flow control signal is checked for automatic retransmission of pause frame. The threshold values should be always less than the PAUSE_TIME </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAUSE_TIME</name>
              <description>The pause time field in the transmitted control frame.  </description>
              <bitRange>[19:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZQP_FRM_EN</name>
              <description>When set, enable the functionality to generate Zero-Quanta Pause control frame. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FLOW_CTL_EN</name>
              <description>When set, enable flow control operation to transmit pause frames in full-duplex mode, or enable the back-pressure operation in half-duplex mode. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC</name>
      <description>RTC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F00000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ALARM0_COUNTER_REG</name>
          <description>Alarm 0 Counter Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_COUNTER</name>
              <description>Alarm 0 Counter is Based on Second. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_CUR_VLU_REG</name>
          <description>Alarm 0 Counter Current Value Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ALARM0_CUR_VLU</name>
              <description>Check Alarm 0 Counter Current Values. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_ENABLE_REG</name>
          <description>Alarm 0 Enable Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALM_0_EN</name>
              <description>Alarm 0 Enable. If this bit is set to `1`, the Alarm 0 Counter register`s valid bits will down count to zero, and the alarm pending bit will be set to `1`. 
0: Disable  
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_EN</name>
          <description>Alarm 0 IRQ Enable Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_EN</name>
              <description>Alarm 0 IRQ Enable. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_STA_REG</name>
          <description>Alarm 0 IRQ Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_PEND</name>
              <description>Alarm 0 IRQ Pending bit. 
0: No effect 
1: Pending, alarm 0 counter value is reached If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, alarm 0 counter value is reached If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_EN_REG</name>
          <description>ALARM1_EN_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>WK6_ALM1_EN</name>
              <description>Week 6 (Sunday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the bit[ : ] of are equal to the bit[ : ] of and the bit [ ] of  is 6, the week 6 alarm irq pending bit will be set to `1`.  </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the bit[ : ] of are equal to the bit[ : ] of and the bit [ ] of  is 6, the week 6 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK5_ALM1_EN</name>
              <description>Week 5 (Saturday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the bit[ : ] of are equal to the bit[ : ] of  and the bit [ ] of  is 5, the week 5 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the bit[ : ] of are equal to the bit[ : ] of  and the bit [ ] of  is 5, the week 5 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK4_ALM1_EN</name>
              <description>Week 4 (Friday) Alarm 1 Enable. 
0: Disable  
1: Enable If this bit is set to `1`, only when the bit[ : ] of  are equal to the bit[ : ] of  and the bit [ ] of is 4, the week 4 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the bit[ : ] of  are equal to the bit[ : ] of  and the bit [ ] of is 4, the week 4 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK3_ALM1_EN</name>
              <description>Week 3 (Thursday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the bit[ : ] valid bits are equal to the bit[ : ] of  and the bit [ ] of  is 3, the week 3 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the bit[ : ] valid bits are equal to the bit[ : ] of  and the bit [ ] of  is 3, the week 3 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK2_ALM1_EN</name>
              <description>Week 2 (Wednesday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the bit[ : ]  valid bits are equal to the bit[ : ] of  and the bit [ ] of  is 2, the week 2 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the bit[ : ]  valid bits are equal to the bit[ : ] of  and the bit [ ] of  is 2, the week 2 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK1_ALM1_EN</name>
              <description>Week 1 (Tuesday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the bit[ : ]  valid bits are equal to the bit[ : ] of and the bit [ ] of  is 1, the week 1 alarm irq pending bit will be set to `1`. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the bit[ : ]  valid bits are equal to the bit[ : ] of and the bit [ ] of  is 1, the week 1 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK0_ALM1_EN</name>
              <description>Week 0 (Monday) Alarm 1 Enable. 
0: Disable 
1: Enable If this bit is set to `1`, only when the bit[ : ] valid bits are equal to the bit[ : ] of  and the bit [ ] of  is 0, the week 0 alarm irq pending bit will be set to `1`.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If this bit is set to `1`, only when the bit[ : ] valid bits are equal to the bit[ : ] of  and the bit [ ] of  is 0, the week 0 alarm irq pending bit will be set to `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_EN</name>
          <description>Alarm 1 IRQ Enable Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_IRQ_EN</name>
              <description>Alarm 1 IRQ Enable. 
0: Disable 
1: Enable  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_STA_REG</name>
          <description>Alarm 1 IRQ Status Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_WEEK_IRQ_PEND</name>
              <description>Alarm 1 Week (0/1/2/3/4/5/6) IRQ Pending. 
0: No effect 
1: Pending, week counter value is reached If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, week counter value is reached If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_WK_HH_MM_SS</name>
          <description>ALARM1_WK_HH_MM_SS</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59. </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM_CONFIG_REG</name>
          <description>Alarm Config Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM_WAKEUP</name>
              <description>Configuration of alarm wake up output. 
0: Disable alarm wake up output 
1: Enable alarm wake up output  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable alarm wake up output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable alarm wake up output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_CONFIG_REG</name>
          <description>CRY_CONFIG_REG</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_ENABLE_REG</name>
          <description>CRY_ENABLE_REG</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CRY_EN</name>
              <description>Crypt enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_KEY_REG</name>
          <description>CRY_KEY_REG</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CRY_KEY</name>
              <description>Crypt Key </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPL_HOLD_OUTPUT_REG</name>
          <description>GPL Hold Output Register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>GPL11_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL11 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL10_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL10 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL9_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL9 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL8_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL8 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL7_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL7 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL6_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL6 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL5_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL5 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL4_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL4 when system`s power is changing. The outputs must be low level (0) or high level (1) or High-Z; any other output may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL3_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL3 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL2_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL2 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL1_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL1 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL0_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL0 when system`s power is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on. 
0: Hold disable 
1: Hold enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>GP_DATA_REGn[%s]</name>
          <description>GP_DATA_REGn[%s]</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GP_DATA</name>
              <description>Data [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CHARA_REG</name>
          <description>IC Characteristic Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_CHARA</name>
              <description>Key Field. Should be written at value 0x16AA. Writing any other value in this field aborts the write operation. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_DATA</name>
              <description>Return 0x16AA only if the KEY_FIELD is set as 0x16AA when read those bits, otherwise return 0x0. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTOSC_CLK_PRESCAL_REG</name>
          <description>Internal OSC Clock Prescalar Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xF</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>INTOSC_CLK_PRESCAL</name>
              <description>Internal OSC Clock Prescalar value N. 
00000: 1 
00001: 2 
00010: 3 ...... 
11111: 32  </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b00001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3</name>
                  <description>3 ......</description>
                  <value>0b00010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b11111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_AUTO_SWT_STA_REG</name>
          <description>LOSC Auto Switch Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>LOSC_AUTO_SWT_PEND</name>
              <description>LOSC auto switch pending. 
0: No effect 
1: Auto switches pending Set 1 to this bit will clear it. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto switches pending Set 1 to this bit will clear it.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL_STA</name>
              <description>Checking LOSC Clock Source Status. `N` is the value of Internal OSC Clock Prescalar register. 
0: InternalOSC / N  
1: External 32.768KHz OSC  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>InternalOSC</name>
                  <description>InternalOSC / N</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768KHz OSC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_CTRL_REG</name>
          <description>Low Oscillator Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x4000</resetValue>
          <resetMask>0xFFFF438D</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field. This field should be filled with 0x16AA, and then the bit 0 can be written with the new value. </description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>LOSC_AUTO_SWT_EN</name>
              <description>LOSC auto switch enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALM_DDHHMMSS_ACCE</name>
              <description>ALARM DD-HH-MM-SS access. After writing the ALARM DD-HH-MM-SS register, this bit is set and it will be cleared until the real writing operation is finished. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_HHMMSS_ACCE</name>
              <description>RTC HH-MM-SS access. After writing the RTC HH-MM-SS register, this bit is set and it will be cleared until the real writing operation is finished. After writing the RTC HH-MM-SS register, the HH-MM-SS register will be refreshed for at most one second. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_YYMMDD_ACCE</name>
              <description>RTC YY-MM-DD access. After writing the RTC YY-MM-DD register, this bit is set and it will be cleared until the real writing operation is finished. After writing the RTC YY-MM-DD register, the YY-MM-DD register will be refreshed for at most one second. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_LOSC_GSM</name>
              <description>External 32768Hz Crystal GSM. 
00: low 01:/ 10:/ 11:high </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>low</name>
                  <description>low 01:/ 10:/ 11:high</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL</name>
              <description>LOSC Clock source Select. `N` is the value of Internal OSC Clock Prescalar register. 
0: InternalOSC /32/ N 
1: External 32.768KHz OSC. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>InternalOSC</name>
                  <description>InternalOSC /32/ N</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768KHz OSC.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_OUT_GATING_REG</name>
          <description>LOSC output gating register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>LOSC_OUT_GATING</name>
              <description>Configuration of LOSC output, and no LOSC output by default. 
0: Enable LOSC output gating 
1: Disable LOSC output gating  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable LOSC output gating</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable LOSC output gating</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_HH_MM_SS_REG</name>
          <description>RTC Hour-Minute-Second Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xE0000000</resetMask>
          <fields>
            <field>
              <name>WK_NO</name>
              <description>Week number. 
000: Monday 
001: Tuesday 
010: Wednesday 
011: Thursday 
100: Friday 
101: Saturday 
110: Sunday 
111: / </description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Monday</name>
                  <description>Monday</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Tuesday</name>
                  <description>Tuesday</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wednesday</name>
                  <description>Wednesday</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Thursday</name>
                  <description>Thursday</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Friday</name>
                  <description>Friday</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Saturday</name>
                  <description>Saturday</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sunday</name>
                  <description>Sunday</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23 </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59 </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_YY_MM_DD_REG</name>
          <description>RTC Year-Month-Day Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x400000</resetMask>
          <fields>
            <field>
              <name>LEAP</name>
              <description>Leap Year. 
0: not, 1: Leap year. This bit can not set by hardware. It should be set or clear by software. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_1</name>
                  <description>not, 1: Leap year. This bit can not set by hardware. It should be set or clear by software.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YEAR</name>
              <description>Year. Range from 0~63. </description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONTH</name>
              <description>Month. Range from 1~12.  </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAY</name>
              <description>Day. Range from 1~31. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>VDD_RTC_REG</name>
          <description>VDD RTC Regulate Register</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>VDD_RTC_REGU</name>
              <description>These bits are useful for regulating the RTC_VIO from 0.7v to 1.4v, and the regulation step is 0.1v. 
000: 0.7v 
001: 0.8v 
010: 0.9v 
011: 1.0v 
100: 1.1v 
101: 1.2v 
110: 1.3v 
111: 1.4v </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_7v</name>
                  <description>0.7v</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_8v</name>
                  <description>0.8v</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9v</name>
                  <description>0.9v</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_0v</name>
                  <description>1.0v</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_1v</name>
                  <description>1.1v</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_2v</name>
                  <description>1.2v</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_3v</name>
                  <description>1.3v</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_4v</name>
                  <description>1.4v</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USB_HCI1</name>
      <description>USB_HCI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1B000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ASYNCLISTADDR</name>
          <description>ASYNCLISTADDR</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>LINK</name>
              <description>Link Pointer (LP) This field contains the address of the next asynchronous queue head to be executed.  These bits correspond to memory address signals [31:5], respectively. </description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPLENGTH</name>
          <description>CAPLENGTH</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CAPLENGTH</name>
              <description>The value in these bits indicates an offset to add to register base to find the beginning of the Operational Register Space. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFIGFLAG</name>
          <description>CONFIGFLAG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CONFIGURE</name>
              <description>Configure Flag(CF) Host software sets this bit as the last action in its process of configuring the Host Controller. This bit controls the default port-routing control logic as follow: Value Meaning 0 Port routing control logic default-routs each port to an implementation dependent classic host controller. 1 Port routing control logic default-routs all ports to this host controller. The default value of this field is `0`. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRINDEX</name>
          <description>FRINDEX</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>FRAME</name>
              <description>Frame Index The value in this register increment at the end of each time frame (e.g. micro-frame).Bits[N:3] are used for the Frame List current index. It Means that each location of the frame list is accessed 8 times(frames or  Micro-frames) before moving to the next index. The following illustrates Values of N based on the value of the Frame List Size field in the USBCMD register. USBCMD[Frame List Size] Number Elements N 00b 1024 12 01b 512 11 10b 256 10 11b Reserved  </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCPARAMS</name>
          <description>HCCPARAMS</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x78009</resetMask>
          <fields>
            <field>
              <name>EHCI</name>
              <description>Extended Capabilities Pointer (EECP) This optional field indicates the existence of a capabilities list. A value of 00b indicates no extended capabilities are implemented. A non-zero value in this register indicates the offset in PCI configuration space of the first EHCI extended capabiliby. The pointer value must be 40h or greater if implemented to maintain to consistency of the PCI header defined for this calss of device. The value of this field is always `00b`. </description>
              <bitRange>[18:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ISOCHRONOUS</name>
              <description>Isochronous Scheduling Threshold This field indicates, relative to the current position of the executing host controller, where software can reliably update the isochronous schedule. When bit[7] is zero, the value of the least significant 3 bits indicates the number of micro-frames a host controller can hold a set of isochronous data structures(one or more) before flushing the state. When bit[7] is a one, then host software assumes the host controller may cache an isochronous data structure for an entire frame. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ASYNCHRONOUS</name>
              <description>Asynchronous Schedule Park Capability If this bit is set to a one, then the host controller supports the park feature for high-speed queue heads in the Asynchronous Schedule. The feature can be disabled or enabled and set to a specific level by using the Asynchronous Schedule Park Mode Enable and Asynchronous Schedule Park Mode Count fields in the USBCMD register. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PROGRAMMABLE</name>
              <description>Programmable Frame List Flag If this bit is set to a zero, then system software must use a frame list length of 1024 elements with this host controller.The USBCMD register  Frame List Size field is a read-only register and should be set to zero. If set to 1,then system software can specify and use the frame list in the  USBCMD register Frame List Size field to cofigure the host controller. The frame list must always aligned on a 4K page boundary.This requirement ensures that the frame list is always physically contiguous. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCIVERSION</name>
          <description>HCIVERSION</description>
          <addressOffset>0x2</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HCIVERSION</name>
              <description>This is a 16-bits register containing a BCD encoding of the EHCI revision number supported by this host controller. The most significant byte of this register represents a major revision and the least significant byte is the minor revision. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCI_ICR</name>
          <description>HCI_ICR</description>
          <addressOffset>0x800</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x130F03</resetMask>
          <fields>
            <field>
              <name>EHCI_HS_FORCE_SET</name>
              <description>EHCI HS force Set 1 to this field force the ehci enter the high speed mode during bus reset. This field only valid when the bit 1 is set. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIC_CONNECT_DETECT_IN</name>
              <description>HSIC Connect detect 1 in this field enable the hsic phy to detect device connect pulse on the bus. This field only valid when the bit 1 is set. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIC_CONNECT_INTERRUPT_ENABLE_ENABLE</name>
              <description>HSIC Connect Interrupt Enable Enable the HSIC connect interrupt. This field only valid when the bit 1 is set. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR16_ENABLE</name>
              <description>AHB Master interface INCR16 enable 
1: Use INCR16 when appropriate 
0: do not use INCR16,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR16</name>
                  <description>Use INCR16 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>do_not_use_INCR16_comma_use</name>
                  <description>do not use INCR16,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR8_ENABLE</name>
              <description>AHB Master interface INCR8 enable 
1: Use INCR8 when appropriate 
0: do not use INCR8,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR8</name>
                  <description>Use INCR8 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>do_not_use_INCR8_comma_use</name>
                  <description>do not use INCR8,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_BURST_TYPE</name>
              <description>AHB Master interface burst type INCR4 enable 
1: Use INCR4 when appropriate 
0: do not use INCR4,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR4</name>
                  <description>Use INCR4 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>do_not_use_INCR4_comma_use</name>
                  <description>do not use INCR4,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCRX_ALIGN</name>
              <description>AHB Master interface INCRX align enable 
1: start INCRx burst only on burst x-align address 
0: Start burst on any double word boundary Note: This bit must enable if any bit of 11:9 is enabled </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>start_INCRx</name>
                  <description>start INCRx burst only on burst x-align address</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_burst</name>
                  <description>Start burst on any double word boundary Note: This bit must enable if any bit of 11:9 is enabled</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSIC</name>
              <description>HSIC  0:/ 1:HSIC This meaning is only valid when the controller is HCI1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ULPI_BYPASS_ENABLE</name>
              <description>ULPI bypass enable 
1: Enable UTMI interface, disable ULPI interface(SP used utmi    interface) 
0: Enable ULPI interface, disable UTMI interface </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable_UTMI</name>
                  <description>Enable UTMI interface, disable ULPI interface(SP used utmi    interface)</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable_ULPI</name>
                  <description>Enable ULPI interface, disable UTMI interface</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSPARAMS</name>
          <description>HCSPARAMS</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0FF80</resetMask>
          <fields>
            <field>
              <name>DEBUG_PORT_NUMBER</name>
              <description>Debug Port Number This register identifies which of the host controller ports is the debug port. The value is the port number (one based) of the debug port. This field will always be `0`. </description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMBER_OF_COMPANION</name>
              <description>Number of Companion Controller (N_CC) This field indicates the number of companion controllers associated with this USB2.0 host controller. A zero in this field indicates there are no companion host controllers. And a value larger than zero in this field indicates there are companion USB1.1 host controller(s). This field will always be `0`. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMBER_OF_PORT</name>
              <description>Number of  Port per Companion Controller(N_PCC) This field indicates the number of ports supported per companion host controller host controller. It is used to indicate the port routing configuration to system software. This field will always fix with `0`. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_ROUTING_RULES</name>
              <description>Port Routing Rules This field indicates the method used by this implementation for how all ports are mapped to companion controllers. The value of this field has the following interpretation: Value Meaning 0 The first N_PCC ports are routed to the lowest numbered function companion host controller, the next N_PCC port are routed to the next lowest function companion controller, and so on.   1 The port routing is explicitly enumerated by the first N_PORTS elements of the HCSP-PORTTOUTE array. This field will always be `0`. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>N_PORTS_THIS</name>
              <description>1 N_PORTS This field specifies the number of physical downstream ports implemented on this host controller. The value of this field determines how many port registers are addressable in the Operational Register Space. Valid values are in the range of 0x1 to 0x0f. This field is always 1. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSP_PORTROUTE</name>
          <description>HCSP_PORTROUTE</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HCSP_PORTROUTE</name>
              <description>This optional field is valid only if Port Routing Rules field in HCSPARAMS register is set to a one. This field is used to allow a host controller implementation to explicitly describe to which companion host controller each implemented port is mapped. This field is a 15-element nibble array (each 4 bit is one array element). Each array location corresponds one-to-one with a physical port provided by the host controller (e.g. PORTROUTE [0] corresponds to the first PORTSC port, PORTROUTE [1] to the second PORTSC port, etc.). The value of each element indicates to which of the companion host controllers this port is routed. Only the first N_PORTS elements have valid information. A value of zero indicates that the port is routed to the lowest numbered function companion host controller. A value of one indicates that the port is routed to the next lowest numbered function companion host controller, and so on. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSIC_STATUS</name>
          <description>HSIC_STATUS</description>
          <addressOffset>0x804</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10000</resetMask>
          <fields>
            <field>
              <name>HSIC</name>
              <description>Connect Status 1 in this field indicates a device connect pulse being detected on the bus. This field only valid when the EHCI HS force bit and the HSIC Phy Select bit is set. When the HSIC Connect Interrupt Enable is set, 1 in this bit will generate an interrupt to the system. This register is valid on HCI1. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkCurrentED__BCED_</name>
          <description>HcBulkCurrentED__BCED_</description>
          <addressOffset>0x42C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BULKCURRENTED_31_4</name>
              <description>BulkCurrentED[31:4] This is advanced to the next ED after the HC has served the present one. HC continues processing the list from where it left off in the last Frame. When it reaches the end of the Bulk list, HC checks the ControlListFilled of HcControl. If set, it copies the content of HcBulkHeadED to HcBulkCurrentED and clears the bit. If it is not set, it does nothing. HCD is only allowed to modify this register when the BulkListEnable of HcControl is cleared. When set, the HCD only reads the instantaneous value of this register. This is initially set to zero to indicate the end of the Bulk list. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULK_CURRENT_ED</name>
              <description>BulkCurrentED [3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkHeadED_BHED_</name>
          <description>HcBulkHeadED_BHED_</description>
          <addressOffset>0x428</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BHED_31_4</name>
              <description>BHED[31:4] The HcBulkHeadED register contains the physical address of the first Endpoint Descriptor of the Bulk list. HC traverses the Bulk list starting with the HcBulkHeadED pointer. The content is loaded from HCCA during the initialization of HC. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BHED_3_0</name>
              <description>BHED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcCommandStatus</name>
          <description>HcCommandStatus</description>
          <addressOffset>0x408</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000F</resetMask>
          <fields>
            <field>
              <name>SCHEDULING_OVERRUN_COUNT</name>
              <description>SchedulingOverrunCount These bits are incremented on each scheduling overrun error. It is initialized to 00b and wraps around at 11b. This will be incremented when a scheduling overrun is detected even if SchedulingOverrun in HcInterruptStatus has already been set. This is used by HCD to monitor any persistent scheduling problem. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OWERSHIP_CHANGE_REQUEST</name>
              <description>OwershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC. When set HC will set the OwnershipChange field in HcInterruptStatus. After the changeover, this bit is cleared and remains so until the next request from OS HCD. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULKL_LIST_FILLED</name>
              <description>BulklListFilled This bit is used to indicate whether there are any TDs on the Bulk list. It is set by HCD whenever it adds a TD to an ED in the Bulk list.  When HC begins to process the head of the Bulk list, it checks BLF. As long as BulkListFilled is 0, HC will not start processing the Bulk list. If BulkListFilled is 1, HC will start processing the Bulk list and will set BF to 0. If HC finds a TD on the list, then HC will set BulkListFilled to 1 causing the Bulk list processing to continue. If no TD is found on the Bulk list, and if HCD does not set BulkListFilled, then BulkListFilled will still be 0 when HC completes processing the Bulk list and Bulk list processing will stop. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_LIST_FILLED</name>
              <description>ControlListFilled This bit is used to indicate whether there are any TDs on the Control list. It is set by HCD whenever it adds a TD to an ED in the Control list. When HC begins to process the head of the Control list, it checks CLF. As long as ControlListFilled is 0, HC will not start processing the Control list. If CF is 1, HC will start processing the Control list and will set ControlListFilled to 0. If HC finds a TD on the list, then HC will set ControlListFilled to 1 causing the Control list processing to continue. If no TD is found on the Control list, and if the HCD does not set ControlListFilled, then ControlListFilled will still be 0 when HC completes processing the Control list and Control list processing will stop. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET</name>
              <description>HostControllerReset This bit is by HCD to initiate a software reset of HC. Regardless of the functional state of HC, it moves to the USBSuspend state in which most of the operational registers are reset except those stated otherwise; e.g, the InteruptRouting field of HcControl, and no Host bus accesses are allowed. This bit is cleared by HC upon the completion of the reset operation. The reset operation must be completed within 10 ms. This bit, when set, should not cause a reset to the Root Hub and no subsequent reset signaling should be asserted to its downstream ports. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControl</name>
          <description>HcControl</description>
          <addressOffset>0x404</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>REMOTE_WAKEUP_ENABLE</name>
              <description>RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wakeup feature upon the detection of upstream resume signaling. When this bit is set and the ResumeDetected bit in HcInterruptStatus is set, a remote wakeup is signaled to the host system. Setting this bit has no impact on the generation of hardware interrupt. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REMOTE_WAKEUP_CONNECTED</name>
              <description>RemoteWakeupConnected This bit indicates whether HC supports remote wakeup signaling. If remote wakeup is supported and used by the system, it is the responsibility of system firmware to set this bit during POST. HC clear the bit upon a hardware reset but does not alter it upon a software reset. Remote wakeup signaling of the host system is host-bus-specific and is not described in this specification. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPT_ROUTING</name>
              <description>InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus. If clear, all interrupt are routed to the normal host bus interrupt mechanism. If set interrupts are routed to the System Management Interrupt. HCD clears this bit upon a hardware reset, but it does not alter this bit upon a software reset. HCD uses this bit as a tag to indicate the ownership of HC. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_FUNCTIONAL_STATE</name>
              <description>HostControllerFunctionalState for USB 00b USBReset 01b USBResume 10b USBOperational 11b USBSuspend A transition to USBOperational from another state causes SOF generation to begin 1 ms later. HCD may determine whether HC has begun sending SOFs by reading the StartoFrame field of  HcInterruptStatus. This field may be changed by HC only when in the USBSUSPEND state. HC may move from the USBSUSPEND state to the USBRESUME state after detecting the resume signaling from a downstream port. HC enters USBSUSPEND after a software reset, whereas it enters USBRESET after a hardware reset. The latter also resets the Root Hub and asserts subsequent reset signaling to downstream ports. </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULK_LIST_ENABLE</name>
              <description>BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame. If cleared by HCD, processing of the Bulk list does not occur after the next SOF. HC checks this bit whenever it determines to process the list. When disabled, HCD may modify the list. If HcBulkCurrentED is pointing to an ED to be removed, HCD must advance the pointer by updating HcBulkCurrentED before re-enabling processing of the list. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_LIST_ENABLE</name>
              <description>ControlListEnable This bit is set to enable the processing of the Control list in the next Frame. If cleared by HCD, processing of the Control list does not occur after the next SOF. HC must check this bit whenever it determines to process the list. When disabled, HCD may modify the list. If HcControlCurrentED is pointing to an ED to be removed, HCD must advance the pointer by updating HcControlCurrentED before re-enabling processing of the list. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ISOCHRONOUS_ENABLE</name>
              <description>IsochronousEnable This bit is used by HCD to enable/disable processing of isochronous EDs. While processing the periodic list in a Frame, HC checks the status of this bit when it finds an Isochronous ED (F=1). If set (enabled), HC continues processing the EDs. If cleared (disabled), HC halts processing of the periodic list (which now contains only isochronous EDs) and begins processing the Bulk/Control lists. Setting this bit is guaranteed to take effect in the next Frame (not the current Frame). </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERIODIC_LIST_ENABLE</name>
              <description>PeriodicListEnable  This bit is set to enable the processing of periodic list in the next Frame. If cleared by HCD, processing of the periodic list does not occur after the next SOF. HC must check this bit before it starts processing the list. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_BULK_SERVICE_RATIO</name>
              <description>ControlBulkServiceRatio This specifies the service ratio between Control and Bulk EDs. Before processing any of the nonperiodic lists, HC must compare the ratio specified with its internal count on how many nonempty Control EDs have been processed, in determining whether to continue serving another Control ED or switching to Bulk EDs. The internal count will be retained when crossing the frame boundary. In case of reset, HCD is responsible for restoring this value. CBSR No. of Control EDs Over Bulk EDs Served 0                1:1 1                2:1 2                3:1 3                4:1 The default value is 0x0. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlCurrentED_CCED_</name>
          <description>HcControlCurrentED_CCED_</description>
          <addressOffset>0x424</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CCED_31_4</name>
              <description>CCED[31:4] The pointer is advanced to the next ED after serving the present one. HC will continue processing the list from where it left off in the last Frame. When it reaches the end of the Control list, HC checks the ControlListFilled of in HcCommandStatus. If set, it copies the content of HcControlHeadED to HcControlCurrentED and clears the bit. If not set, it does nothing.  HCD is allowed to modify this register only when the ControlListEnable of HcControl is cleared. When set, HCD only reads the instantaneous value of this register. Initially, this is set to zero to indicate the end of the Control list. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCED_3_0</name>
              <description>CCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlHeadED_CHED_</name>
          <description>HcControlHeadED_CHED_</description>
          <addressOffset>0x420</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EHCD_31_4</name>
              <description>EHCD[31:4] The HcControlHeadED register contains the physical address of the first  Endpoint Descriptor of the Control list. HC traverse the Control list starting with the HcControlHeadED pointer. The content is loaded from HCCA during the initialization of HC. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EHCD_3_0</name>
              <description>EHCD[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcDoneHead</name>
          <description>HcDoneHead</description>
          <addressOffset>0x430</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCDONEHEAD_31_4</name>
              <description>HcDoneHead[31:4] When a TD is completed, HC writes the content of HcDoneHead to the NextTD field of the TD. HC then overwrites the content of HcDoneHead with the address of this TD. This is set to zero whenever HC writes the content of this register to HCCA. It also sets the WritebackDoneHead of HcInterruptStatus. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HCDONEHEAD_3_0</name>
              <description>HcDoneHead[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmInterval_Register</name>
          <description>HcFmInterval_Register</description>
          <addressOffset>0x434</addressOffset>
          <resetValue>0x2EDF</resetValue>
          <resetMask>0xFFFF3FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_INTERVAL_TOGGLER</name>
              <description>FrameIntervalToggler HCD toggles this bit whenever it loads a new value to FrameInterval. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FS_LARGEST_DATA_PACKET</name>
              <description>FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame. The counter value represents the largest amount of data in bits which can be sent or received by the HC in a single transaction at any given time without causing scheduling overrun. The field value is calculated by the HCD. </description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INTERVAL</name>
              <description>FrameInterval This specifies the interval between two consecutive SOFs in bit times. The nominal value is set to be 11,999. HCD should store the current value of this field before resetting HC. By setting the HostControllerReset field of HcCommandStatus as this will cause the HC to reset this field to its nominal value. HCD may choose to restore the stored value upon the completion of the Reset sequence. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmNumber</name>
          <description>HcFmNumber</description>
          <addressOffset>0x43C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FRAME_NUMBER</name>
              <description>FrameNumber This is incremented when HcFmRemaining is re-loaded. It will be rolled over to 0x0 after 0x0ffff. When entering the USBOPERATIONAL state, this will be incremented automatically. The content will be written to HCCA after HC has incremented the FrameNumber at each frame boundary and sent a SOF but before HC reads the first ED in that Frame. After writing to HCCA, HC will set the StartofFrame in HcInterruptStatus. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmRemaining</name>
          <description>HcFmRemaining</description>
          <addressOffset>0x438</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_REMAINING</name>
              <description>FrameRemaining Toggle This bit is loaded from the FrameIntervalToggle field of HcFmInterval whenever FrameRemaining reaches 0. This bit is used by HCD for the synchronization between FrameInterval and FrameRemaining. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FRAM_REMAINING</name>
              <description>FramRemaining This counter is decremented at each bit time. When it reaches zero, it is reset by loading the FrameInterval value specified in HcFmInterval at the next bit time boundary. When entering the USBOPERATIONAL state, HC re-loads the content with the FrameInterval of HcFmInterval and uses the updated value from the next SOF. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcHCCA</name>
          <description>HcHCCA</description>
          <addressOffset>0x418</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCCA_31_8</name>
              <description>HCCA[31:8] This is the base address of the Host Controller Communication Area. This area is used to hold the control structures and the Interrupt table that are accessed by both the Host Controller and the Host Controller Driver. </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HCCA_7_0</name>
              <description>HCCA[7:0] The alignment restriction in HcHCCA register is evaluated by examining the number of zeros in the lower order bits. The minimum alignment is 256 bytes, therefore, bits 0 through 7 must always return 0 when read.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptDisable_Register</name>
          <description>HcInterruptDisable_Register</description>
          <addressOffset>0x414</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A written `0` to this field is ignored by HC. A `1` written to this field disables interrupt generation due events specified in the other bits of this register. This field is set after a hardware or software reset. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Root Hub Status Change; </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Frame Number Over Flow; </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Unrecoverable Error; </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Resume Detected; </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Start of  Flame; </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Write back Done Head; </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Scheduling Overrun; </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptEnable_Register</name>
          <description>HcInterruptEnable_Register</description>
          <addressOffset>0x410</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A `0` writtern to this field is ignored by HC. A `1` written to this field enables interrupt generation due to events specified in the other bits of this register. This is used by HCD as Master Interrupt Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Root Hub Status Change; </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Frame Number Over Flow;   </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Unrecoverable Error; </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Resume Detected; </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Start of  Flame; </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Write back Done Head; </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Scheduling Overrun; </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptStatus</name>
          <description>HcInterruptStatus</description>
          <addressOffset>0x40C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange This bit is set when the content of HcRhStatus or the content of any of HcRhPortStatus[NumberofDownstreamPort] has changed. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow This bit is set when the MSb of HcFmNumber (bit 15) changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been updated. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError This bit is set when HC detects a system error not related to USB. HC should not proceed with any processing nor signaling before the system error has been corrected. HCD clears this bit after HC has been reset. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling. It is the transition from no resume signaling to resume signaling causing this bit to be set. This bit is not set when HCD sets the USBRseume state. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame This bit is set by HC at each start of frame and after the update of HccaFrameNumber. HC also generates a SOF token at the same time. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead This bit is set immediately after HC has written HcDoneHead to HccaDoneHead. Further updates of the HccaDoneHead will not occur until this bit has been cleared. HCD should only clear this bit after it has saved the content of HccaDoneHead. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of HccaFrameNumber. A scheduling overrun will also cause the SchedulingOverrunCount of HcCommandStatus to be Incremented. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcLSThreshold</name>
          <description>HcLSThreshold</description>
          <addressOffset>0x444</addressOffset>
          <resetValue>0x628</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>LS_THRESHOLD</name>
              <description>LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction. The transaction is started only if FrameRemaining  this field. The value is calculated by HCD with the consideration of transmission and setup overhead. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodCurrentED</name>
          <description>HcPeriodCurrentED</description>
          <addressOffset>0x41C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PCED_31_4</name>
              <description>PCED[31:4] This is used by HC to point to the head of one of the Periodec list which will be processed in the current Frame. The content of this register is updated by HC after a periodic ED has been processed. HCD may read the content in determining which ED is currently being processed at the time of reading. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PCED_3_0</name>
              <description>PCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodicStatus</name>
          <description>HcPeriodicStatus</description>
          <addressOffset>0x440</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PERIODIC_START</name>
              <description>PeriodicStart After a hardware reset, this field is cleared. This is then set by HCD during the HC initialization. The value is calculated roughly as 10% off from HcFmInterval. A typical value will be 0x2A3F (0x3e67). When HcFmRemaining reaches the value specified, processing of the periodic lists will have priority over Control/Bulk processing. HC will therefore start processing the Interrupt list after completing the current Control or Bulk transaction that is in progress. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRevision</name>
          <description>HcRevision</description>
          <addressOffset>0x400</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>REVISION</name>
              <description>Revision This read-only field contains the BCD representation of the version of the HCI specification that is implemented by this HC. For example, a value of 0x11 corresponds to version 1.1. All of the HC implementations that are compliant with this specification will have a value of 0x10. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorA</name>
          <description>HcRhDescriptorA</description>
          <addressOffset>0x448</addressOffset>
          <resetValue>0x2001201</resetValue>
          <resetMask>0xFF001FFF</resetMask>
          <fields>
            <field>
              <name>POWERONTOPOWERGOODTIME_THIS_BYTE_SPECIFIES_THE_DURATION</name>
              <description>PowerOnToPowerGoodTime[POTPGT] This byte specifies the duration HCD has to wait before accessing a powered-on port of the Root Hub. It is implementation-specific. The unit of time is 2 ms. The duration is calculated as POTPGT * 2ms. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_OVER_CURRENT_PROTECTION</name>
              <description>NoOverCurrentProtection This bit describes how the overcurrent status for the Root Hub ports are reported. When this bit is cleared, the OverCurrentProtectionMode field specifies global or per-port reporting. 0  Over-current status is reported collectively for all downstream ports. 1 No overcurrent protection supported. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_PROTECTION_MODE</name>
              <description>OverCurrentProtectionMode This bit describes how the overcurrent status for the Root Hub ports are reported. At reset, these fields should reflect the same mode as PowerSwitchingMode. This field is valid only if the NoOverCurrentProtection field is cleared. 0 Over-current status is reported collectively for all downstream ports. 1 Over-current status is reported on per-port basis. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_TYPE_THIS_BIT_SPECIFIES_THAT</name>
              <description>Device Type This bit specifies that the Root Hub is not a compound device. The Root Hub is not permitted to be a compound device. This field should always read/write 0. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_SWITCHING_MODE</name>
              <description>PowerSwitchingMode This bit is used to specify how the power switching of the Root Hub ports is controlled. It is implementation-specific. This field is only valid if the NoPowerSwitching field is cleared. 0 All ports are powered at the same time. 1 Each port is powered individually. This mode allows port power to be controlled by either the global switch or per-port switching. If the PortPowerControlMask bit is set, the port responds only to port power commands (Set/ClearPortPower). If the port mask is cleared, then the port is controlled only by the global power switch (Set/ClearGlobalPower). </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_POWER_SWITHCING</name>
              <description>NoPowerSwithcing These bits are used to specify whether power switching is supported or ports are always powered. It is implementation-specific. When this bit is cleared, the PowerSwitchingMode specifies global or per-port switching. 0 Ports are power switched. 1 Ports are always powered on when the HC is powered on. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NUMBER_DOWNSTREAM_PORTS</name>
              <description>NumberDownstreamPorts These bits specify the number of downstream ports supported by the Root Hub. It is implementation-specific. The minimum number of ports is 1. The maximum number of ports supported. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorB_Register</name>
          <description>HcRhDescriptorB_Register</description>
          <addressOffset>0x44C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_POWER_CONTROL_MASK</name>
              <description>PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set. When set, the port's power state is only affected by per-port power control (Set/ClearPortPower). When cleared, the port is controlled by the global power switch (Set/ClearGlobalPower). If the device is configured to global switching mode (PowerSwitchingMode = 0 ), this field is not valid. Bit0 Reserved Bit1 Ganged-power mask on Port #1. Bit2 Ganged-power mask on Port #2. ...  Bit15 Ganged-power mask on Port #15. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_REMOVABLE</name>
              <description>DeviceRemovable Each bit is dedicated to a port of the Root Hub. When cleared, the attached device is removable. When set, the attached device is not removable. Bit0 Reserved Bit1 Device attached to Port #1. Bit2 Device attached to Port #2. ...  Bit15 Device attached to Port #15. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhPortStatus</name>
          <description>HcRhPortStatus</description>
          <addressOffset>0x454</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x1F011F</resetMask>
          <fields>
            <field>
              <name>PORT_RESET_STATUS_CHANGE</name>
              <description>PortResetStatusChange This bit is set at the end of the 10-ms port reset signal. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 0 port reset is not complete 1 port reset is complete </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_OVER_CURRENT_INDICATOR_CHANGE</name>
              <description>PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis. This bit is set when Root Hub changes the PortOverCurrentIndicator bit. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 0 no change in PortOverCurrentIndicator 1 PortOverCurrentIndicator has changed </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_SUSPEND_STATUS_CHANGE</name>
              <description>PortSuspendStatusChange This bit is set when the full resume sequence has been completed. This sequence includes the 20-s resume pulse, LS EOP, and 3-ms resychronization delay. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. This bit is also cleared when ResetStatusChange is set. 0 resume is not completed 1 resume completed </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_ENABLE_STATUS_CHANGE</name>
              <description>PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be cleared. Changes from HCD writes do not set this bit. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. 0 no change in PortEnableStatus 1 change in PortEnableStatus </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONNECT_STATUS_CHANGE</name>
              <description>ConnectStatusChange This bit is set whenever a connect or disconnect event occurs. The HCD writes a `1` to clear this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared when a SetPortReset,SetPortEnable, or SetPortSuspend write occurs, this bit is set to force the driver to re-evaluate the connection status since these writes should not occur if the port is disconnected. 0 no change in PortEnableStatus 1 change in PortEnableStatus  Note: If the DeviceRemovable[NDP] bit is set, this bit is set only after a Root Hub reset to inform the system that the device is attached. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_LOW_SPEED_DEVICE_ATTACHED_W_CLEAR_PORT_POWER</name>
              <description>(read)LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port. When set, a Low Speed device is attached to this port. When clear, a Full Speed device is attached to this port. This field is valid only when the CurrentConnectStatus is set. 0 full speed device attached 1 low speed device attached  (write)ClearPortPower The HCD clears the PortPowerStatus bit by writing a `1` to this bit. Writing a `0` has no effect. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_POWER_STATUS_W_SET_PORT_POWER</name>
              <description>(read)PortPowerStatus This bit reflects the port`s power status, regardless of the type of power switching implemented. This bit is cleared if an overcurrent condition is detected. HCD sets this bit by writing SetPortPower or SetGlobalPower. HCD clears this bit by writing ClearPortPower or ClearGlobalPower. Which power control switches are enabled is determined by PowerSwitchingMode and PortPortControlMask[NumberDownstreamPort]. In global switching mode(PowerSwitchingMode=0), only Set/ClearGlobalPower controls this bit. In per-port power switching (PowerSwitchingMode=1), if the PortPowerControlMask[NDP] bit for the port is set, only Set/ClearPortPower commands are enabled. If the mask is not set, only Set/ClearGlobalPower commands are enabled. When port power is disabled, CurrentConnectStatus, PortEnableStatus, PortSuspendStatus, and PortResetStatus should be reset. 0 port power is off 1 port power is on  (write)SetPortPower The HCD writes a `1` to set the PortPowerStatus bit. Writing a `0` has no effect.  Note: This bit is always reads `1b` if power switching is not supported. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_RESET_STATUS_W_SET_PORT_RESET</name>
              <description>(read)PortResetStatus When this bit is set by a write to SetPortReset, port reset signaling is asserted. When reset is completed, this bit is cleared when PortResetStatusChange is set. This bit cannot be set if CurrentConnectStatus is cleared. 0 port reset signal is not active 1 port reset signal is active  (write)SetPortReset The HCD sets the port reset signaling by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortResetStatus, but instead sets ConnectStatusChange. This informs the driver that it attempted to reset a disconnected port. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_OVER_CURRENT_INDICATOR_W_CLEAR_SUSPEND_STATUS</name>
              <description>(read)PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis. If per-port overcurrent reporting is not supported, this bit is set to 0. If cleared, all power operations are normal for this port. If set, an overcurrent condition exists on this port. This bit always reflects the overcurrent input signal. 0 no overcurrent condition. 1 overcurrent condition detected.  (write)ClearSuspendStatus The HCD writes a `1` to initiate a resume. Writing a `0` has no effect. A resume is initiated only if PortSuspendStatus is set. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_SUSPEND_STATUS_W_SET_PORT_SUSPEND</name>
              <description>(read)PortSuspendStatus This bit indicates the port is suspended or in the resume sequence. It is set by a SetSuspendState write and cleared when PortSuspendStatusChange is set at the end of the resume interval. This bit cannot be set if CurrentConnectStatus is cleared. This bit is also cleared when PortResetStatusChange is set at the end of the port reset or when the HC is placed in the USBRESUME state. If an upstream resume is in progress, it should propagate to the HC. 0 port is not suspended 1 port is suspended  (write)SetPortSuspend The HCD sets the PortSuspendStatus bit by writing a `1` to this bit. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortSuspendStatus; instead it sets ConnectStatusChange. This informs the driver that it attempted to suspend a disconnected port. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_ENABLE_STATUS_W_SET_PORT_ENABLE</name>
              <description>(read)PortEnableStatus This bit indicates whether the port is enabled or disabled. The Root Hub may clear this bit when an overcurrent condition, disconnect event, switched-off power, or operational bus error such as babble is detected. This change also causes PortEnabledStatusChange to be set. HCD sets this bit by writing SetPortEnable and clears it by writing ClearPortEnable. This bit cannot be set when CurrentConnectStatus is cleared. This bit is also set, if not already, at the completion of a port reset when ResetStatusChange is set or port suspend when SuspendStatusChange is set. 0 port is disabled 1 port is enabled  (write)SetPortEnable The HCD sets PortEnableStatus by writing a `1`. Writing a `0` has no effect. If CurrentConnectStatus is cleared, this write does not set PortEnableStatus, but instead sets ConnectStatusChange. This informs the driver that it attempted to enable a disconnected Port. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_CURRENT_CONNECT_STATUS_W_CLEAR_PORT_ENABLE</name>
              <description>(read)CurrentConnectStatus This bit reflects the current state of the downstream port. 0 No device connected 1 Device connected (write)ClearPortEnable The HCD writes a `1` to clear the PortEnableStatus bit. Writing `0` has no effect. The CurrentConnectStatus is not affected by any write. Note: This bit is always read `1` when the attached device is nonremovalble(DviceRemoveable[NumberDownstreamPort]). </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhStatus_Register</name>
          <description>HcRhStatus_Register</description>
          <addressOffset>0x450</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80038003</resetMask>
          <fields>
            <field>
              <name>WRITE_A_CLEARS_DEVICEREMOTEWAKEUPENABLE</name>
              <description>(write)ClearRemoteWakeupEnable Write a `1` clears DeviceRemoteWakeupEnable. Write a `0` has no effect. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVER_CURRENT_INDICATOR_CHANG</name>
              <description>OverCurrentIndicatorChang This bit is set by hardware when a change has occurred to the OverCurrentIndicator field of this register. The HCD clears this bit by writing a `1`.Writing a `0` has no effect. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STARTUS_CHANGE_W_SET_GLOBAL_POWER</name>
              <description>(read)LocalPowerStartusChange The Root Hub does not support the local power status features, thus, this bit is always read as `0`. (write)SetGlobalPower In global power mode (PowerSwitchingMode=0), This bit is written to `1` to turn on power to all ports (clear PortPowerStatus). In per-port power mode, it sets PortPowerStatus only on ports whose PortPowerControlMask bit is not set. Writing a `0` has no effect. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_DEVICE_REMOTE_WAKEUP_ENABLE_W_SET_REMOTE_WAKEUP_ENABLE</name>
              <description>(read)DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt. 0 ConnectStatusChange is not a remote wakeup event. 1 ConnectStatusChange is a remote wakeup event.  (write)SetRemoteWakeupEnable Writing a `1` sets DeviceRemoveWakeupEnable. Writing a `0` has no effect. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_INDICATOR</name>
              <description>OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented. When set, an overcurrent condition exists. When cleared, all power operations are normal.  If per-port overcurrent protection is implemented this bit is always `0` </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STATUS_W_CLEAR_GLOBAL_POWER</name>
              <description>(Read)LocalPowerStatus When read, this bit returns the LocalPowerStatus of the Root Hub. The Root Hub does not support the local power status feature; thus, this bit is always read as `0`. (Write)ClearGlobalPower When write, this bit is operated as the ClearGlobalPower. In global power mode (PowerSwitchingMode=0), This bit is written to `1` to turn off power to all ports (clear PortPowerStatus). In per-port power mode, it clears PortPowerStatus only on ports whose PortPowerControlMask bit is not set. Writing a `0` has no effect. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIODICLISTBASE</name>
          <description>PERIODICLISTBASE</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>BASE</name>
              <description>Base Address These bits correspond to memory address signals [31:12], respectively. This register contains the beginning address of the Periodic Frame List in the system memory.  System software loads this register prior to starting the schedule execution by the Host Controller. The memory structure referenced by this physical memory pointer is assumed to be 4-K byte aligned. The contents of this register are combined with the Frame Index Register (FRINDEX) to enable the Host Controller to step through the Periodic Frame List in sequence. </description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PORTSC</name>
          <description>PORTSC</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0x3FEDFF</resetMask>
          <fields>
            <field>
              <name>WKDSCNNT_E_WRITING</name>
              <description>WKDSCNNT_E Writing this bit to a one enables the port to be sensitive to device disconnects as wake-up events. This field is zero if Port Power is zero. The default value in this field is `0`. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WKCNNT_E_WRITING</name>
              <description>WKCNNT_E Writing this bit to a one enable the port to be sensitive to device connects as wake-up events. This field is zero if Port Power is zero. The default value in this field is `0`. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_TEST</name>
              <description>Port Test Control The value in this field specifies the test mode of the port. The encoding of the test mode bits are as follow: Bits Test Mode 0000b The port is NOT operating in a test mode. 0001b Test J_STATE 0010b Test K_STATE 0011b Test SE0_NAK 0100b Test Packet 0101b Test FORCE_ENABLE 0110b- 1111b  Reserved The default value in this field is `0000b`. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_OWNER</name>
              <description>Port Owner This bit unconditionally goes to a 0b when the Configured bit in the CONFIGFLAG register makes a 0b to 1b transition. This bit unconditionally goes to 1b whenever the Configured bit is zero. System software uses this field to release ownership of the port to selected host controller (in the event that the attached device is not a high-speed device).Software writes a one to this bit when the attached device is not a high-speed device. A one in this bit means that a companion host controller owns and controls the port. Default Value = 1b. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LINE_STATUS</name>
              <description>Line Status These bits reflect the current logical levels of the D+ (bit11) and D-(bit10) signal lines. These bits are used for detection of low-speed USB devices prior to port reset and enable sequence. This read only field is valid only when the port enable bit is zero and the current connect status bit is set to a one. The encoding of the bits are: Bit[11:10] USB State Interpretation 00b SE0 Not Low-speed device, perform EHCI reset. 10b J-state Not Low-speed device, perform EHCI reset. 01b K-state Low-speed device, release ownership of port. 11b Undefined Not Low-speed device, perform EHCI reset. This value of this field is undefined if Port Power is zero. </description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_RESET</name>
              <description>Port Reset 1=Port is in Reset. 0=Port is not in Reset. Default = 0. When software writes a one to this bit (from a zero), the bus reset sequence as defined in the USB Specification Revision 2.0 is started. Software writes a zero to this bit to terminate the bus reset sequence. Software must keep this bit at a one long enough to ensure the reset sequence, as specified in the USB Specification Revision 2.0, completes. Notes: when software writes this bit to a one , it must also write a zero to the Port Enable bit. Note that when software writes a zero to this bit there may be a delay before the bit status changes to a zero. The bit status will not read as a zero until after the reset has completed. If the port is in high-speed mode after reset is complete, the host controller will automatically enable this port (e.g. set the Port Enable bit to a one). A host controller must terminate the reset and stabilize the state of the port within 2 milliseconds of software transitioning this bit from a one to a zero. For example: if the port detects that the attached device is high-speed during reset, then the host controller must have the port in the enabled state with 2ms of software writing this bit to a zero. The HC Halted bit in the USBSTS register should be a zero before software attempts to use this bit. The host controller may hold Port Reset asserted to a one when the HC Halted bit is a one. This field is zero if Port Power is zero. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUSPEND_PORT</name>
              <description>Suspend Port Enabled Bit and Suspend bit of this register define the port states as follows: Bits[Port Enables, Suspend] Port State      0x Disable      10 Enable      11 Suspend When in suspend state, downstream propagation of data is blocked on this port, except for port reset. The blocking occurs at the end of the current transaction, if a transaction was in progress when this bit was written to 1. In the suspend state, the port is sensitive to resume detection. Not that the bit status does not change until the port is suspend and that there may be a delay in suspending a port if there is a transaction currently in progress on the USB. A write of zero to this bit is ignored by the host controller. The host controller will unconditionally set this bit to a zero when: 1. Software sets the Force Port Resume bit to a zero(from a one). 2. Software sets the Port Reset bit to a one(from a zero). If host software sets this bit to a one when the port is not enabled(i.e. Port enabled bit is a zero), the results are undefined. This field is zero if Port Power is zero. The default value in this field is `0`. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_PORT</name>
              <description>Force Port Resume 1 = Resume detected/driven on port. 0 = No resume (K-state) detected/   driven on port. Default = 0. This functionality defined for manipulating this bit depends on the value of the Suspend bit. For example, if the port is not suspend and software transitions this bit to a one, then the effects on the bus are undefined. Software sets this bit to a 1 drive resume signaling. The Host Controller sets this bit to a 1 if a J-to-K transition is detected while the port is in the Suspend state. When this bit transitions to a one because a J-to-K transition is detected, the Port Change Detect bit in the USBSTS register is also set to a one. If software sets this bit to a one, the host controller must not set the Port Change Detect bit. Note that when the EHCI controller owns the port, the resume sequence follows the defined sequence documented in the USB Specification Revision 2.0. The resume signaling (Full-speed `K`) is driven on the port as long as this remains a one. Software must appropriately time the Resume and set this bit to a zero when the appropriate amount of time has elapsed. Writing a zero (from one) causes the port to return high-speed mode (forcing the bus below the port into a high-speed idle). This bit will remain a one until the port has switched to high-speed idle. The host controller must complete this transition within 2 milliseconds of software setting this bit to a zero. This field is zero if Port Power is zero. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_CHANGE</name>
              <description>Over-current Change Default = 0. This bit gets set to a one when there is a change to Over-current Active. Software clears this bit by writing a one to this bit position. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>OVER_CURRENT_ACTIVE</name>
              <description>Over-current Active 0 = This port does not have an over-current condition. 1 = This port currently has an over-current condition. This bit will automatically transition from a one to a zero when the over current condition is removed. The default value of this bit is `0`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_ENABLE/DISABLE</name>
              <description>Port Enable/Disable Change Default = 0. 1 = Port enabled/disabled status has changed. 0 = No change. For the root hub, this bit gets set to a one only when a port is disabled due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of the USB Specification for the definition of a Port Error). Software clears this bit by writing a 1 to it. This field is zero if Port Power is zero. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>PORT_ENABLED/DISABLED</name>
              <description>Port Enabled/Disabled 1=Enable, 0=Disable. Ports can only be enabled by the host controller as a part of the reset and enable. Software cannot enable a port by writing a one to this field. The host controller will only set this bit to a one when the reset sequence determines that the attached device is a high-speed device. Ports can be disabled by either a fault condition(disconnect event or other fault condition) or by host software. Note that the bit status does not change until the port state actually changes. There may be a delay in disabling or enabling a port due to other host controller and bus events.  When the port is disabled, downstream propagation of data is blocked on this port except for reset. The default value of this field is `0`. This field is zero if Port Power is zero. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONNECT_STATUS</name>
              <description>Connect Status Change 1=Change in Current Connect Status, 0=No change, Default=0. Indicates a change has occurred in the port`s Current Connect Status. The host controller sets this bit for all changes to the port device connect status, even if system software has not cleared an existing connect status change. For example, the insertion status changes twice before system software has cleared the changed condition, hub hardware will be `setting` an already-set bit. Software sets this bit to 0 by writing a 1 to it. This field is zero if Port Power is zero. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>CURRENT_CONNECT</name>
              <description>Current Connect Status Device is present on port when the value of this field is a one, and no device is present on port when the value of this field is a zero. This value reflects the current state of the port, and may not correspond directly to the event that caused the Connect Status Change(Bit 1) to be set. This field is zero if Port Power zero. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBCMD</name>
          <description>USBCMD</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x80000</resetValue>
          <resetMask>0xFF0BFF</resetMask>
          <fields>
            <field>
              <name>INTERRUPT_THRESHOLD_CONTROL_THE_VALUE</name>
              <description>Interrupt Threshold Control The value in this field is used by system software to select the maximum rate at which the host controller will issue interrupts. The only valid values are defined below: Value Minimum Interrupt Interval 0x00 Reserved 0x01 1 micro-frame 0x02 2 micro-frame 0x04 4 micro-frame 0x08 8 micro-frame(default, equates to 1 ms) 0x10 16 micro-frame(2ms) 0x20 32 micro-frame(4ms) 0x40 64 micro-frame(8ms) Any other value in this register yields undefined results. The default value in this field is 0x08 . Software modifications to this bit while HC Halted bit is equal to zero results in undefined behavior. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_ENABLE</name>
              <description>Asynchronous Schedule Park Mode Enable If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this bit defaults to a 1 and is R/W. Otherwise the bit must be a zero and is Read Only. Software uses this bit to enable or disable Park mode. When this bit is one, Park mode is enabled. When this bit is zero, Park mode is disabled. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_COUNT</name>
              <description>Asynchronous Schedule Park Mode Count Asynchronous Park Capability bit in the HCCPARAMS register is a one, Then this field defaults to 0x3 and is W/R. Otherwise it defaults to zero and is R. It contains a count of the number of successive transactions the host controller is allowed to execute from a high-speed queue head on the Asynchronous schedule before continuing traversal of the Asynchronous schedule. Valid value are 0x1 to 0x3.Software must not write a zero to this bit when Park Mode Enable is a one as it will result in undefined behavior. </description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LIGHT_HOST_CONTROLLER_RESET_THIS</name>
              <description>Light Host Controller Reset This control bit is not required. If implemented, it allows the driver to reset the EHCI controller without affecting the state of the ports or relationship to the companion host controllers. For example, the PORSTC registers should not be reset to their default values and the CF bit setting should not go to zero (retaining port ownership relationships). A host software read of this bit as zero indicates the Light Host Controller Reset has completed and it si safe for software to re-initialize the host controller. A host software read of this bit as a one indicates the Light Host  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_DOORBELL</name>
              <description>Interrupt on Async Advance Doorbell This bit is used as a doorbell by software to tell the host controller to issue an interrupt the next time it advances asynchronous schedule. Soft- Ware must write a 1 to this bit to ring the doorbell. When the host controller has evicted all appropriate cached schedule state, it sets the Interrupt on Async Advance status bit in the USBSTS. if the Interrupt on Async Advance Enable bit in the USBINTR register is a one then the host controller will assert an interrupt at the next interrupt threshold. The host controller sets this bit to a zero after it has set the Interrupt on Async Advance status bit in the USBSTS register to a one. Software should not write a one to this bit when the asynchronous schedule is disabled. Doing so will yield undefined results. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Asynchronous Schedule Enable This bit controls whether the host controller skips processing the Asynchronous Schedule. Values mean: Bit Value Meaning 0 Do not process the Asynchronous Schedule.  1 Use the ASYNLISTADDR register to access the Asynchronous Schedule. The default value of this field is `0b`. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERIODIC_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Periodic Schedule Enable This bit controls whether the host controller skips processing the Periodic Schedule. Values mean: Bit Value Meaning 0 Do not process the Periodic Schedule.  1 Use the PERIODICLISTBASE register to access the Periodic Schedule. The default value of this field is `0b`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_LIST_SIZE_THIS_FIELD</name>
              <description>Frame List Size This field is R/W only if Programmable Frame List Flag in the HCCPARAMS registers is set to a one. This field specifies the size of the  Frame list. The size the frame list controls which bits in the Frame Index  Register should be used for the Frame List Current index. Values mean: Bits Meaning 00b 1024 elements(4096bytes)Default 01b 512 elements(2048byts) 10b 256 elements(1024bytes)For resource-constrained condition 11b reserved The default value is `00b`. </description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET_THIS_CONTROL</name>
              <description>Host Controller Reset This control bit is used by software to reset the host controller. The effects of this on Root Hub registers are similar to a Chip Hardware Reset. When software writes a one to this bit, the Host Controller resets its internal pipelines, timers, counters, state machines, etc. to their initial value. Any transaction currently in progress on USB is immediately terminated. A USB reset is not driven on downstream ports. All operational registers, including port registers and port state machines are set to their initial values. Port ownership reverts to the companion host controller(s). Software must reinitialize the host controller as described in Section 4.1 of the CHEI Specification in order to return the host controller to an operational state. This bit is set to zero by the Host Controller when the reset process is complete. Software cannot terminate the reset process early by writing a zero to this register. Software should not set this bit to a one when the HC Halted bit in the USBSTS register is a zero. Attempting to reset an actively running host controller will result in undefined behavior. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RUN/STOP_WHEN_SET</name>
              <description>Run/Stop When set to a 1, the Host Controller proceeds with execution of the schedule. When set to 0, the Host Controller completes the current and any actively pipelined transactions on the USB and then halts. The Host Controller must halt within 16 micro-frames after software clears this bit. The HC Halted bit indicates when the Host Controller has finished its pending pipelined transactions and has entered the stopped state. Software must not write a one to this field unless the Host Controller is in the Halt State. The default value is 0x0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBINTR</name>
          <description>USBINTR</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_ENABLE</name>
              <description>Interrupt on Async Advance Enable When this bit is 1, and the Interrupt on Async Advance bit in the USBSTS register is 1, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the Interrupt on Async Advance bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_SYSTEM_ERROR_ENABLE</name>
              <description>Host System Error Enable When this bit is 1, and the Host System Error Status bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Host System Error bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_LIST_ROLLOVER_ENABLE</name>
              <description>Frame List Rollover Enable When this bit is 1, and the Frame List Rollover bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Frame List Rollover bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_CHANGE_INTERRUPT_ENABLE</name>
              <description>Port Change Interrupt Enable When this bit is 1, and the Port Chang Detect bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Port Chang Detect bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_ERROR_INTERRUPT_ENABLE</name>
              <description>USB Error Interrupt Enable When this bit is 1, and the USBERRINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBERRINT bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_INTERRUPT_ENABLE_WHEN_THIS</name>
              <description>USB Interrupt Enable When this bit is 1, and the USBINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBINT bit </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBSTS</name>
          <description>USBSTS</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0xF03F</resetMask>
          <fields>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_STATUS_THE_BIT</name>
              <description>Asynchronous Schedule Status The bit reports the current real status of Asynchronous Schedule. If this bit is a zero then the status of the Asynchronous Schedule is disabled. If this bit is a one then the status of the Asynchronous Schedule is enabled. The Host Controller is not required to immediately disable or enable the Asynchronous Schedule when software transitions the Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is either enabled (1) or disabled (0).  </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PERIODIC_SCHEDULE_STATUS_THE_BIT</name>
              <description>Periodic Schedule Status The bit reports the current real status of the Periodic Schedule. If this bit is a zero then the status of the Periodic Schedule is disabled. If this bit is a one then the status of the Periodic Schedule is enabled. The Host Controller is not required to immediately disable or enable the Periodic Schedule when software transitions the Periodic Schedule Enable bit in the USBCMD register. When this bit and the Periodic Schedule Enable bit are the same value, the Periodic Schedule is either enabled (1) or disabled (0). </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RECLAMATION_THIS_IS_A_READ_ONLY</name>
              <description>Reclamation This is a read-only status bit, which is used to detect an empty asynchronous schedule. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HC_HALTED_THIS_BIT</name>
              <description>HC Halted This bit is a zero whenever the Run/Stop bit is a one. The Host Controller Sets this bit to one after it has stopped executing as a result of the Run/Stop bit being set to 0, either by software or by the Host Controller Hardware (e.g. internal error). The default value is `1`. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_SYSTEM</name>
              <description>Interrupt on Async Advance System software can force the host controller to issue an interrupt the next time the host controller advances the asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit in the USBCMD register. This status bit indicates the assertion of that interrupt source. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>HOST_SYSTEM_ERROR_THE_HOST</name>
              <description>Host System Error The Host Controller set this bit to 1 when a serious error occurs during a host system access involving the Host Controller module. When this error occurs, the Host Controller clears the Run/Stop bit in the Command register to prevent further execution of the scheduled TDs. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>FRAME_LIST_ROLLOVER_THE_HOST</name>
              <description>Frame List Rollover The Host Controller sets this bit to a one when the Frame List Index rolls over from its maximum value to zero. The exact value at which the rollover occurs depends on the frame list size. For example, if the frame list size is 1024, the Frame Index Register rolls over every time FRINDEX [13] toggles. Similarly, if the size is 512, the Host Controller sets this bit to a one every time FRINDEX [12] toggles. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>PORT_CHANGE_DETECT_THE_HOST</name>
              <description>Port Change Detect The Host Controller sets this bit to a one when any port for which the Port Owner bit is set to zero has a change bit transition from a zero to a one or a Force Port Resume bit transition from a zero to a one as a result of a J-K transition detected on a suspended port. This bit will also be set as a result of the Connect Status Chang being set to a one after system software has relinquished ownership of a connected port by writing a one to a port`s Port Owner bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>USB_ERROR_INTERRUPT_THE_HOST</name>
              <description>USB Error Interrupt The Host Controller sets this bit to 1 when completion of USB transaction results in an error condition(e.g. error counter underflow).If the TD on which the error interrupt occurred also had its IOC bit set, both. This bit and USBINT bit are set. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>USB_INTERRUPT_THE_HOST_CONTROLLER</name>
              <description>USB Interrupt The Host Controller sets this bit to a one on the completion of a USB transaction, which results in the retirement of a Transfer Descriptor that had its IOC bit set. The Host Controller also sets this bit to 1 when a short packet is detected (actual number of bytes received was less than the expected number of bytes) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TIMER</name>
      <description>TIMER</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AVS_CNT0_REG</name>
          <description>AVS Counter 0 Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT0</name>
              <description>Counter 0 for Audio/ Video Sync Application The high 32 bits of the internal 33-bits counter register. The initial value of the internal 33-bits counter register can be set by software. The LSB bit of the 33-bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting AVS_CNT0_PS to `1`. When it is paused, the counter won`t increase. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT1_REG</name>
          <description>AVS Counter 1 Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1</name>
              <description>Counter 1 for Audio/ Video Sync Application The high 32 bits of the internal 33-bits counter register. The initial value of the internal 33-bits counter register can be set by software. The LSB bit of the 33-bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting AVS_CNT1_PS to `1`. When it is paused, the counter won`t increase. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_CTL_REG</name>
          <description>AVS Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x303</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_PS</name>
              <description>Audio/Video Sync Counter 1 Pause Control 
0: Not pause 
1: Pause Counter 1. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_PS</name>
              <description>Audio/Video Sync Counter 0 Pause Control 
0: Not pause 
1: Pause Counter 0. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT1_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/ Disable. The counter source is OSC24M. 
0: Disable 
1: Enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/ Disable. The counter source is OSC24M. 
0: Disable 
1: Enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_DIV_REG</name>
          <description>AVS Divisor Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x5DB05DB</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_D</name>
              <description>Divisor N for AVS Counter 1 AVS CN1 CLK=24MHz/Divisor_N1. Divisor N1 = Bit [27:16] + 1. The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33-bits counter engine will maintain another 12-bits counter. The 12-bits counter is used for counting the cycle number of one 24Mhz clock. When the 12-bits counter reaches (&gt;= N) the divisor value, the internal 33-bits counter register will increase 1 and the 12-bits counter will reset to zero and restart again. </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AVS_CNT0_D</name>
              <description>Divisor N for AVS Counter 0 AVS CN0 CLK=24MHz/Divisor_N0. Divisor N0 = Bit [11:0] + 1 The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33-bits counter engine will maintain another 12-bits counter. The 12-bits counter is used for counting the cycle number of one 24Mhz clock. When the 12-bits counter reaches (&gt;= N) the divisor value, the internal 33-bits counter register will increase 1 and the 12-bits counter will reset to zero and restart again. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CTRL_REG</name>
          <description>Timer 0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR0_MODE</name>
              <description>Timer 0 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_PRES</name>
              <description>Select the pre-scale of timer 0 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128 </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_SRC</name>
              <description>Timer 0 Clock Source.  
00: 32K 
01: OSC24M. 
10: / 
11: / </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_32K</name>
                  <description>32K</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_RELOAD</name>
              <description>Timer 0 Reload. 
0: No effect 
1: Reload timer 0 Interval value. After the bit is set, it can not be written again before it`s cleared automatically. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 0 Interval value. After the bit is set, it can not be written again before it`s cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_EN</name>
              <description>Timer 0 Enable. 
0: Stop/Pause 
1: Start. When the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1.In timer pause state; the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. When the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1.In timer pause state; the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CUR_VALUE_REG</name>
          <description>Timer 0 Current Value Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_CUR_VALUE</name>
              <description>Timer 0 Current Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_INTV_VALUE_REG</name>
          <description>Timer 0 Interval Value Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_INTV_VALUE</name>
              <description>Timer 0 Interval Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CTRL_REG</name>
          <description>Timer 1 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR1_MODE</name>
              <description>Timer 1 mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_PRES</name>
              <description>Select the pre-scale of timer 1 clock source. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128 </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_SRC</name>
              <description>00: 32K 
01: OSC24M. 
10: / 
11: /. </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_32K</name>
                  <description>32K</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_RELOAD</name>
              <description>Timer 1 Reload. 
0: No effect  
1: Reload timer 1 Interval value. After the bit is set, it can not be written again before it`s cleared automatically. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 1 Interval value. After the bit is set, it can not be written again before it`s cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_EN</name>
              <description>Timer 1 Enable. 
0: Stop/Pause  
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CUR_VALUE_REG</name>
          <description>Timer 1 Current Value Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_CUR_VALUE</name>
              <description>Timer 1 Current Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_INTV_VALUE_REG</name>
          <description>Timer 1 Interval Value Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_INTV_VALUE</name>
              <description>Timer 1 Interval Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_EN_REG</name>
          <description>Timer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TMR1_IRQ_EN</name>
              <description>Timer 1 Interrupt Enable. 
0: No effect;  
1: Timer 1 Interval Value reached interrupt enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 1 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_EN</name>
              <description>Timer 0 Interrupt Enable. 
0: No effect;  
1: Timer 0 Interval Value reached interrupt enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 0 Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_STA_REG</name>
          <description>Timer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TMR1_IRQ_PEND</name>
              <description>Timer 1 IRQ Pending. Set 1 to the bit will clear it. 
0: No effect; 
1: Pending, timer 1 interval value is reached. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 1 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_PEND</name>
              <description>Timer 0 IRQ Pending. Set 1 to the bit will clear it. 
0: No effect; 
1: Pending, timer 0 interval value is reached. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 0 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_CFG_REG</name>
          <description>WDOG_CFG_REG</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>WDOG_CONFIG</name>
              <description>Watchdog generates a reset signal  
00: / 
01: To whole system 
10: Only interrupt 
11: / </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>To_whole</name>
                  <description>To whole system</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Only_interrupt</name>
                  <description>Only interrupt</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_CTRL_REG</name>
          <description>WDOG_CTRL_REG</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>WDOG_KEY_FIELD</name>
              <description>Watchdog Key Field. Should be written at value 0xA57. Writing any other value in this field aborts the write operation. </description>
              <bitRange>[12:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WDOG_RSTART</name>
              <description>Watchdog Restart. 
0: No effect,  
1: Restart watchdog0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Restart</name>
                  <description>Restart watchdog0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_IRQ_EN_REG</name>
          <description>WDOG_IRQ_EN_REG</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>WDOG_IRQ_EN</name>
              <description>Watchdog Interrupt Enable. 
0: No effect 
1: Watchdog interrupt enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Watchdog</name>
                  <description>Watchdog interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_IRQ_STA_REG</name>
          <description>WDOG_IRQ_STA_REG</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>WDOG_IRQ</name>
              <description>_PEND. Watchdog n IRQ Pending. Set 1 to the bit will clear it. 
0: No effect, 
1: Pending, watchdog interval value is reached. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, watchdog interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG_MODE_REG</name>
          <description>WDOG_MODE_REG</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF1</resetMask>
          <fields>
            <field>
              <name>WDOG_INTV_VALUE</name>
              <description>Watchdog Interval Value Watchdog clock source is . If the clock source is turned off, Watchdog will not work. 
0000: 16000 cycles (0.5s) 
0001: 32000 cycles (1s) 
0010: 64000 cycles (2s) 
0011: 96000 cycles (3s) 
0100: 128000 cycles (4s) 
0101: 160000 cycles (5s) 
0110: 192000 cycles (6s) 
0111: 256000 cycles (8s) 
1000: 320000 cycles (10s) 
1001: 384000 cycles (12s) 
1010: 448000 cycles (14s) 
1011: 512000 cycles (16s) others: / </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16000_cycles</name>
                  <description>16000 cycles (0.5s)</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32000_cycles</name>
                  <description>32000 cycles (1s)</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64000_cycles</name>
                  <description>64000 cycles (2s)</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96000_cycles</name>
                  <description>96000 cycles (3s)</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128000_cycles</name>
                  <description>128000 cycles (4s)</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_160000_cycles</name>
                  <description>160000 cycles (5s)</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192000_cycles</name>
                  <description>192000 cycles (6s)</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256000_cycles</name>
                  <description>256000 cycles (8s)</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_320000_cycles</name>
                  <description>320000 cycles (10s)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_384000_cycles</name>
                  <description>384000 cycles (12s)</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_448000_cycles</name>
                  <description>448000 cycles (14s)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512000_cycles</name>
                  <description>512000 cycles (16s) others: /</description>
                  <value>0b1011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WDOG_EN</name>
              <description>Watchdog Enable. 
0: No effect; 
1: Enable watchdog. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable watchdog.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CPUCFG</name>
      <description>CPUCFG</description>
      <groupName>generic</groupName>
      <baseAddress>0x1700C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CACHE_CFG_REG0</name>
          <description>Cache parameters configuration register0</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x22222222</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>L1SDT_DELAY</name>
              <description></description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1TLB_DELAY</name>
              <description></description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BTAC_DELAY</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DY_DELAY</name>
              <description></description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DT_DELAY</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DD_DELAY</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1IT_DELAY</name>
              <description></description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1ID_DELAY</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CFG_REG1</name>
          <description>Cache parameters configuration register1</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x2022020</resetValue>
          <resetMask>0x3077070</resetMask>
          <fields>
            <field>
              <name>EMAW</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMA</name>
              <description></description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2V_DELAY</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2T_DELAY</name>
              <description></description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CPU_STATUS</name>
          <description>Cluster CPU Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0xE0000</resetValue>
          <resetMask>0xF0F0F01</resetMask>
          <fields>
            <field>
              <name>SMP</name>
              <description>Indicates whether a core is taking part in coherency. 
0: Disable 
1: Enable </description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFI</name>
              <description>Indicates if a core is in WFI standby mode: 
0: Processor not in WFI standby mode. 
1: Processor in WFI standby mode </description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFE</name>
              <description>Indicates if a core is in the WFE standby mode: 
0: Processor not in WFE standby mode 
1: Processor in WFE standby mode </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFIL2</name>
              <description>Indicates if the Cluster L2 memory system is in WFI standby mode. 0:active 1:idle </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CTRL_REG0</name>
          <description>Cluster Control Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFF000F10</resetMask>
          <fields>
            <field>
              <name>SYSBAR_DISABLE</name>
              <description>Disable broadcasting of barriers onto system bus: 
0: Barriers are broadcast onto system bus,this requires an AMBA4 interconnect. 
1: Barriers are not broadcast onto the system bus.This is compatible with an AXI3 interconnect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Barriers_are_broadcast</name>
                  <description>Barriers are broadcast onto system bus,this requires an AMBA4 interconnect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Barriers_are_not_broadcast</name>
                  <description>Barriers are not broadcast onto the system bus.This is compatible with an AXI3 interconnect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_INNER</name>
              <description>Enable broadcasting of Inner Shareable transactions: 
0: Inner shareable transactions are not broadcasted externally. 
1: Inner shareable transactions are broadcasted externally. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Inner_shareable_transactions_are_not_broadcasted</name>
                  <description>Inner shareable transactions are not broadcasted externally.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inner_shareable_transactions_are_broadcasted</name>
                  <description>Inner shareable transactions are broadcasted externally.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_OUTER</name>
              <description>Enable broadcasting of outer shareable transactions: 
0: Outer Shareable transactions are not broadcasted externally. 
1: Outer Shareable transactions are broadcasted externally. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Outer_Shareable_transactions_are_not_broadcasted</name>
                  <description>Outer Shareable transactions are not broadcasted externally.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Outer_Shareable_transactions_are_broadcasted</name>
                  <description>Outer Shareable transactions are broadcasted externally.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_CACHE_MAINT</name>
              <description>Enable broadcasting of cache maintenance operations to downstream caches: 
0: Cache maintenance operations are not broadcasted to downstream caches. 
1: Cache maintenance operations are broadcasted to downstream caches. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cache_maintenance_operations_are_not_broadcasted</name>
                  <description>Cache maintenance operations are not broadcasted to downstream caches.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cache_maintenance_operations_are_broadcasted</name>
                  <description>Cache maintenance operations are broadcasted to downstream caches.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AA64N_AA32</name>
              <description>AA64nAA32 Register width state.Determines which execution state the processor boots into after a cold reset. 
0: AArch32 
1: AArch64 </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP15S_DISABLE</name>
              <description>Disable write access to some secure CP15 register. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2_RST_DISABLE</name>
              <description>Disable automatic L2 cache invalidate at reset: 
0: L2 cache is reset by hardware. 
1: L2 cache is not reset by hardware. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>reset</name>
                  <description>L2 cache is reset by hardware.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_reset</name>
                  <description>L2 cache is not reset by hardware.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CTRL_REG1</name>
          <description>Cluster Control Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ACINACTM</name>
              <description>Snoop interface is inactive and no longer accepting requests.  
0: snoop interface is active 
1: Snoop interface is inactive </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>snoop_interface_is_active</name>
                  <description>snoop interface is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Snoop_interface_is_inactive</name>
                  <description>Snoop interface is inactive</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_RST_CTRL</name>
          <description>Cluster Reset Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x11101101</resetValue>
          <resetMask>0x11FF110F</resetMask>
          <fields>
            <field>
              <name>DDR_RST</name>
              <description>AXI2MBUS logic circuit Reset. 
0: assert  
1: de-assert </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOC_DBG_RST</name>
              <description>Cluster SOC Debug P_Reset. Clear this bit will reset the SOC Debug Bus Logic and it will auto change to 1 after 64 p_cycles.  
0: assert 
1: de-assert. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBIST_RST</name>
              <description>CPUBIST Reset. The reset signal for test. 
0: assert  
1: de-assert </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HRESET</name>
              <description>Cluster H_Reset. Reset all the Cluster Logic and Cluster Interface Logic. 
0: assert 
1: de-assert. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L2_RST</name>
              <description>Cluster L2 Cache Reset 
0: assert 
1: de-assert. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>assert</name>
                  <description>assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>de-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CORE_RESET</name>
              <description>Control a core reset assert. 
0: assert 
1: de-assert. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GENER_CTRL_REG0</name>
          <description>General Control Register0</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x1F1F110</resetMask>
          <fields>
            <field>
              <name>EVENTI</name>
              <description>Event input for processor wake-up from WFE state.This bit must remain HIGH for at least one clock cycle to be visible by the cores. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXM_CLR_3_0</name>
              <description>EXM_CLR[3:0] </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLREXMONREQ</name>
              <description>Clearing of the external global exclusive monitor request.When this bit is asserted, it acts as a WFE wake-up event to all the cores in the MPCore device. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTODISABLE</name>
              <description>Disable the Cryptography Extensions. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2FLUSHREQ</name>
              <description>L2 hardware flush request. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GICCDISABLE</name>
              <description>Globally disables the CPU interface logic and routes the "External" signals directly to the processor: 
0: Enable the GIC CPU interface logic. 
1: Disable the GIC CPU interface logic. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the GIC CPU interface logic.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the GIC CPU interface logic.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>L2_STATUS_REG</name>
          <description>L2_STATUS_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x700</resetMask>
          <fields>
            <field>
              <name>L2FLUSHDONE</name>
              <description>L2 hardware flush complete </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EVENTO</name>
              <description>Event output.This bit is asserted HIGH for 3 clock cycles when any core in the cluster executes an SEV instruction. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLREXMONACK</name>
              <description>Clearing of the external global exclusive monitor acknowledge. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR0_H</name>
          <description>Reset Vector Base Address Register0_H</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU0. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR0_L</name>
          <description>Reset Vector Base Address Register0_L</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU0. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR1_H</name>
          <description>Reset Vector Base Address Register1_H</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU1. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR1_L</name>
          <description>Reset Vector Base Address Register1_L</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU1. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR2_H</name>
          <description>Reset Vector Base Address Register2_H</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU2. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR2_L</name>
          <description>Reset Vector Base Address Register2_L</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU2. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR3_H</name>
          <description>Reset Vector Base Address Register3_H</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU3. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR3_L</name>
          <description>Reset Vector Base Address Register3_L</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU3. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CSI0</name>
      <description>CSI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1CB0000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CCI_BUS_REG</name>
          <description>CCI_BUS_REG</description>
          <addressOffset>0x300C</addressOffset>
          <resetValue>0x2500</resetValue>
          <resetMask>0xFFFFFF3F</resetMask>
          <fields>
            <field>
              <name>DLY_CYC</name>
              <description>0~65535 FSCL cycles between each transmission </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DLY_TRIG</name>
              <description>0: disable 
1: execute transmission after internal counter delay when triggered </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>execute_transmission</name>
                  <description>execute transmission after internal counter delay when triggered</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_N</name>
              <description>CCI bus sampling clock F0=24MHz/2^CLK_N </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_M</name>
              <description>CCI output SCL frequency is FSCL=F1/10=(F0/(CLK_M+1))/10 </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_STA</name>
              <description>SCL current status </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SDA_STA</name>
              <description>SDA current status </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_PEN</name>
              <description>SCL PAD enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_PEN</name>
              <description>SDA PAD enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_MOV</name>
              <description>SCL manual output value </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_MOV</name>
              <description>SDA manual output value </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_MOE</name>
              <description>SCL manual output en </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_MOE</name>
              <description>SDA manual output en </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_CFG_REG</name>
          <description>CCI_CFG_REG</description>
          <addressOffset>0x3004</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0xFFFF807F</resetMask>
          <fields>
            <field>
              <name>TIMEOUT_N</name>
              <description>When sending the 9th clock, assert fail signal when slave device did not response after N*FSCL cycles. And software must do a reset to CCI module and send a stop condition to slave. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERVAL</name>
              <description>Define the interval between each packet in 40*FSCL cycles. 0~255 </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PACKET_MODE</name>
              <description>Select where to load slave id / data width 
0: Compact mode 
1: Complete mode In compact mode, slave id/register width / data width will be loaded from CCI_FMT register, only address and data read from memory. In complete mode, they will be loaded from packet memory. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Compact_mode</name>
                  <description>Compact mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Complete_mode</name>
                  <description>Complete mode In compact mode, slave id/register width / data width will be loaded from CCI_FMT register, only address and data read from memory. In complete mode, they will be loaded from packet memory.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIG_MODE</name>
              <description>Transmit mode: 
000: Immediately, no trigger 
001: Reserved 
010: CSI0 int trigger 
011: CSI1 int trigger </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Immediately</name>
                  <description>Immediately, no trigger</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0</name>
                  <description>CSI0 int trigger</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1</name>
                  <description>CSI1 int trigger</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_TRIG</name>
              <description>CSI Int trig signal select: 
0000: First HREF start 
0001: Last HREF done 
0010: Line counter trigger other: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>First</name>
                  <description>First HREF start</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Last</name>
                  <description>Last HREF done</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Line</name>
                  <description>Line counter trigger other: Reserved</description>
                  <value>0b0010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_CTRL_REG</name>
          <description>CCI_CTRL_REG</description>
          <addressOffset>0x3000</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF000003</resetMask>
          <fields>
            <field>
              <name>SINGLE_TRAN</name>
              <description>0: Transmission idle 
1: Start single transmission Automatically cleared to `0` when finished. Abort current transmission immediately if changing from `1` to `0`. If slave not respond for the expected status over the time defined by TIMEOUT, current transmission will stop. PACKET_CNT will return the sequence number when transmission fail. All format setting and data will be loaded from registers and FIFO when transmission start. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmission_idle</name>
                  <description>Transmission idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start single transmission Automatically cleared to `0` when finished. Abort current transmission immediately if changing from `1` to `0`. If slave not respond for the expected status over the time defined by TIMEOUT, current transmission will stop. PACKET_CNT will return the sequence number when transmission fail. All format setting and data will be loaded from registers and FIFO when transmission start.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REPEAT_TRAN</name>
              <description>0: transmission idle 
1: repeated transmission When this bit is set to 1, transmission repeats when trigger signal (such as VSYNC/ VCAP done ) repeats.  If changing this bit from `1` to `0` during transmission, the current transmission will be guaranteed then stop. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>transmission_idle</name>
                  <description>transmission idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>repeated_transmission</name>
                  <description>repeated transmission When this bit is set to 1, transmission repeats when trigger signal (such as VSYNC/ VCAP done ) repeats.  If changing this bit from `1` to `0` during transmission, the current transmission will be guaranteed then stop.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESTART_MODE</name>
              <description>0: RESTART 
1: STOP+START Define the CCI action after sending register address. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RESTART</name>
                  <description>RESTART</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STOP_plus_START</name>
                  <description>STOP+START Define the CCI action after sending register address.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_TRAN_MODE</name>
              <description>0: send slave_id+W 
1: do not send slave_id+W Note: Setting this bit to 1 if reading from a slave which register width is equal to 0. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>send</name>
                  <description>send slave_id+W</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>do_not_send</name>
                  <description>do not send slave_id+W Note: Setting this bit to 1 if reading from a slave which register width is equal to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRAN_RESULT</name>
              <description>000: OK 
001: FAIL Other: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CCI_STA</name>
              <description>0x00: bus error 
0x08: START condition transmitted 
0x10: Repeated START condition transmitted 
0x18: Address + Write bit transmitted, ACK received 
0x20: Address + Write bit transmitted, ACK not received 
0x28: Data byte transmitted in master mode, ACK received 
0x30: Data byte transmitted in master mode, ACK not received 
0x38: Arbitration lost in address or data byte 
0x40: Address + Read bit transmitted, ACK received 
0x48: Address + Read bit transmitted, ACK not received 
0x50: Data byte received in master mode, ACK received 
0x58: Data byte received in master mode, ACK not received 
0x01: Timeout when sending 9th SCL clk Other: Reserved </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_RESET</name>
              <description>0: normal 
1: reset </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>reset</name>
                  <description>reset</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCI_EN</name>
              <description>0: Module disable 
1: Module enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Module_disable</name>
                  <description>Module disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Module_enable</name>
                  <description>Module enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>4</dimIncrement>
          <name>CCI_FIFO_ACC_REG[%s]</name>
          <description>CCI_FIFO_ACC_REG[%s]</description>
          <addressOffset>0x3100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_FIFO</name>
              <description>From 0x100 to 0x13f, CCI data fifo is 64bytes, used in fifo input mode. CCI transmission read/write data from/to fifo in byte.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_FMT_REG</name>
          <description>CCI_FMT_REG</description>
          <addressOffset>0x3008</addressOffset>
          <resetValue>0x110001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SLV_ID</name>
              <description>7bit address </description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD</name>
              <description>0: write 
1: read </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>write</name>
                  <description>write</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>read</name>
                  <description>read</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADDR_BYTE</name>
              <description>How many bytes be sent as address 0~15 </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_BYTE</name>
              <description>How many bytes be sent/received as data 1~15 Normally use ADDR_DATA with 0_2, 1_1, 1_2, 2_1, 2_2 access mode. If DATA bytes is 0, transmission will not start. In complete mode, the ADDR_BYTE and DATA_BYTE is defined in a byte`s high/low 4bit. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PACKET_CNT</name>
              <description>FIFO data be transmitted as PACKET_CNT packets in current format. Total bytes not exceed 32bytes. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_INT_CTRL_REG</name>
          <description>CCI_INT_CTRL_REG</description>
          <addressOffset>0x3014</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30003</resetMask>
          <fields>
            <field>
              <name>S_TRAN_ERR_INT_EN</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_TRAN_COM_INT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_TRAN_ERR_PD</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_TRAN_COM_PD</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_LC_REG</name>
          <description>CCI_LC_REG</description>
          <addressOffset>0x3018</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>LN_CNT</name>
              <description>0~8191: line counter send trigger when 1st~8192th line is received.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_ACC_ITNL_CLK_CNT_REG</name>
          <description>CSI0_C0_ACC_ITNL_CLK_CNT_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ACC_CLK_CNT</name>
              <description>The accumulated value of FRM_CLK_CNT for software frame rate statics. Every interrupt of frame done, the software check this accumulated value and clear it to 0. If the ACC_CLK_CNT is larger than 1, the software has lost frame.  When frame done or vsync comes, ACC_CLK_CNT = ACC_CLK_CNT + 1, and cleared to 0 when writing 0 to this register. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ITNL_CLK_CNT</name>
              <description>The instant value of internal frame clock counter.  When frame done interrupt comes, the software can query this counter for judging whether it is the time for updating the double buffer address registers. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_BUF_LEN_REG</name>
          <description>CSI0_C0_BUF_LEN_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x1400280</resetValue>
          <resetMask>0x3FFF3FFF</resetMask>
          <fields>
            <field>
              <name>BUF_LEN_C</name>
              <description>Buffer length of chroma C in a line. Unit is byte. </description>
              <bitRange>[29:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUF_LEN</name>
              <description>Buffer length of luminance Y in a line. Unit is byte. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_CAP_STA_REG</name>
          <description>CSI0_C0_CAP_STA_REG</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FIELD_STA</name>
              <description>The status of the received field 
0: Field 0 
1: Field 1 </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Field_0</name>
                  <description>Field 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Field_1</name>
                  <description>Field 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCAP_STA</name>
              <description>Video capture in progress Indicates the CSI is capturing video image data (multiple frames). The bit is set at the start of the first frame after enabling video capture. When software disables video capture, it clears itself after the last pixel of the current frame is captured. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCAP_STA</name>
              <description>Still capture in progress Indicates the CSI is capturing still image data (single frame). The bit is set at the start of the first frame after enabling still frame capture. It clears itself after the last pixel of the first frame is captured. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means filed end. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_CFG_REG</name>
          <description>CSI0_C0_CFG_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x300200</resetValue>
          <resetMask>0xFFFF3F03</resetMask>
          <fields>
            <field>
              <name>PAD_VAL</name>
              <description>Padding value when OUTPUT_FMT is prgb888 0x00~0xff </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INPUT_FMT</name>
              <description>Input data format 
0000: RAW stream 
0001: reserved 
0010: reserved 
0011: YUV422 
0100: YUV420 Others: reserved </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAW</name>
                  <description>RAW stream</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV420</name>
                  <description>YUV420 Others: reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUTPUT_FMT</name>
              <description>Output data format When the input format is set RAW stream 
0000: field-raw-8 
0001: field-raw-10 
0010: field-raw-12 
0011: reserved 
0100: field-rgb565 
0101: field-rgb888 
0110: field-prgb888 
1000: frame-raw-8 
1001: frame-raw-10 
1010: frame-raw-12 
1011: reserved 
1100: frame-rgb565 
1101: frame-rgb888 
1110: frame-prgb888  When the input format is set YUV422 
0000: field planar YCbCr 422 
0001: field planar YCbCr 420 
0010: frame planar YCbCr 420 
0011: frame planar YCbCr 422 
0100: field planar YCbCr 422 UV combined 
0101: field planar YCbCr 420 UV combined 
0110: frame planar YCbCr 420 UV combined 
0111: frame planar YCbCr 422 UV combined 
1000: field MB YCbCr 422 
1001: field MB YCbCr 420 
1010: frame MB YCbCr 420 
1011: frame MB YCbCr 422 
1100: field planar YCbCr 422 10bit UV combined 
1101: field planar YCbCr 420 10bit UV combined 
1110: Reserved 
1111: Reserved  When the input format is set YUV420 
0000: Reserved 
0001: field planar YCbCr 420 
0010: frame planar YCbCr 420 
0011: Reserved 
0100: Reserved 
0101: field planar YCbCr 420 UV combined 
0110: frame planar YCbCr 420 UV combined 
0111: Reserved 
1000: Reserved 
1001: field MB YCbCr 420 
1010: frame MB YCbCr 420 
1011: Reserved 
1100: Reserved 
1101: field planar YCbCr 420 10bit UV combined 
1110: Reserved 
1111: Reserved  Others: reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VFLIP_EN</name>
              <description>Vertical flip enable When enabled, the received data will be arranged in vertical flip. 0:Disable 1:Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HFLIP_EN</name>
              <description>Horizontal flip enable When enabled, the received data will be arranged in horizontal flip. 0:Disable 1:Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>Field selection.  
00: capturing with field 1. 
01: capturing with field 2. 
10: capturing with either field. 
11: reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>capturing_with_field_1</name>
                  <description>capturing with field 1.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>capturing_with_field_2</name>
                  <description>capturing with field 2.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>capturing_with_either_field</name>
                  <description>capturing with either field.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_SEQ</name>
              <description>Input data sequence, only valid for YUV422 and YUV420 input format. All data interleaved in one channel: 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY Y and UV in separated channel: 
x0: UV 
x1: VU </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY Y and UV in separated channel:</description>
                  <value>0b11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UV</name>
                  <description>UV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VU</name>
                  <description>VU</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIN_SDR_WR_SIZE</name>
              <description>Minimum size of SDRAM block write 
0: 256 bytes (if hflip is enable, always select 256 bytes) 
1: 512 bytes  
2: 1k bytes 
3: 2k bytes </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1k</name>
                  <description>1k bytes</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2k</name>
                  <description>2k bytes</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_F0_BUFA_REG</name>
          <description>CSI0_C0_F0_BUFA_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F0_BUFA</name>
              <description>FIFO 0 output buffer-A address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_F1_BUFA_REG</name>
          <description>CSI0_C0_F1_BUFA_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F1_BUFA</name>
              <description>FIFO 1 output buffer-A address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_F2_BUFA_REG</name>
          <description>CSI0_C0_F2_BUFA_REG</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F2_BUFA</name>
              <description>FIFO 2 output buffer-A address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_FIFO_STAT_REG</name>
          <description>CSI0_C0_FIFO_STAT_REG</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>FIFO_FRM_MAX</name>
              <description>Indicates the maximum depth of FIFO being occupied for whole frame. Update at every vsync or framedone.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_FLIP_SIZE_REG</name>
          <description>CSI0_C0_FLIP_SIZE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x1E00280</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>VER_LEN</name>
              <description>Vertical line number when in vflip mode.  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VALID_LEN</name>
              <description>Valid components of a line when in flip mode.  </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_FRM_CLK_CNT_REG</name>
          <description>CSI0_C0_FRM_CLK_CNT_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRM_CLK_CNT</name>
              <description>Counter value between every frame. For instant hardware frame rate statics.  The internal counter is added by one every 24MHz clock cycle. When frame done or vsync comes, the internal counter value is sampled to FRM_CLK_CNT, and cleared to 0.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_HSIZE_REG</name>
          <description>CSI0_C0_HSIZE_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x5000000</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>HOR_LEN</name>
              <description>Horizontal pixel unit length. Valid pixel of a line. </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOR_START</name>
              <description>Horizontal pixel unit start. Pixel is valid from this pixel. </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_INT_EN_REG</name>
          <description>CSI0_C0_INT_EN_REG</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>VS_INT_EN</name>
              <description>vsync flag The bit is set when vsync come. And at this time load the buffer address for the coming frame. So after this irq come, change the buffer address could only effect next frame  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HB_OF_INT_EN</name>
              <description>Hblank FIFO overflow The bit is set when 3 FIFOs still overflow after the hblank. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MUL_ERR_INT_EN</name>
              <description>Multi-channel writing error Indicates error has been detected for writing data to a wrong channel. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO2_OF_INT_EN</name>
              <description>FIFO 2 overflow The bit is set when the FIFO 2 become overflow. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO1_OF_INT_EN</name>
              <description>FIFO 1 overflow The bit is set when the FIFO 1 become overflow. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO0_OF_INT_EN</name>
              <description>FIFO 0 overflow The bit is set when the FIFO 0 become overflow. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FD_INT_EN</name>
              <description>Frame done Indicates the CSI has finished capturing an image frame. Applies to video capture mode. The bit is set after each completed frame capturing data is wrote to buffer as long as video capture remains enabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CD_INT_EN</name>
              <description>Capture done Indicates the CSI has completed capturing the image data. For still capture, the bit is set when one frame data has been wrote to buffer. For video capture, the bit is set when the last frame has been wrote to buffer after video capture has been disabled. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means field end. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_INT_STA_REG</name>
          <description>CSI0_C0_INT_STA_REG</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>VS_PD</name>
              <description>vsync flag </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HB_OF_PD</name>
              <description>Hblank FIFO overflow </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MUL_ERR_PD</name>
              <description>Multi-channel writing error </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO2_OF_PD</name>
              <description>FIFO 2 overflow </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO1_OF_PD</name>
              <description>FIFO 1 overflow </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO0_OF_PD</name>
              <description>FIFO 0 overflow </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FD_PD</name>
              <description>Frame done </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CD_PD</name>
              <description>Capture done </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_PCLK_STAT_REG</name>
          <description>CSI0_C0_PCLK_STAT_REG</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x7FFF</resetValue>
          <resetMask>0x7FFF7FFF</resetMask>
          <fields>
            <field>
              <name>PCLK_CNT_LINE_MAX</name>
              <description>Indicates maximum pixel clock counter value for each line. Update at every vsync or framedone. </description>
              <bitRange>[30:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PCLK_CNT_LINE_MIN</name>
              <description>Indicates minimum pixel clock counter value for each line. Update at every vsync or framedone.</description>
              <bitRange>[14:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_SCALE_REG</name>
          <description>CSI0_C0_SCALE_REG</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>QUART_EN</name>
              <description>When this bit is set to 1, input image will be decimated to quarter size. All input format are supported.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_VSIZE_REG</name>
          <description>CSI0_C0_VSIZE_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x1E00000</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>VER_LEN</name>
              <description>Vertical line length. Valid line number of a frame. </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VER_START</name>
              <description>Vertical line start. data is valid from this line. </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_CAP_REG</name>
          <description>CSI0_CAP_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>CH0_CAP_MASK</name>
              <description>Vsync number masked before capture. </description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CH0_VCAP_ON</name>
              <description>Video capture control: Capture the video image data stream on channel 0. 
0: Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is wrote to output FIFO. 
1: Enable video capture The CSI starts capturing image data at the start of the next frame. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all of the current frame data is wrote to output FIFO.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable video capture The CSI starts capturing image data at the start of the next frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH0_SCAP_ON</name>
              <description>Still capture control: Capture a single still image frame on channel 0. 
0: Disable still capture. 
1: Enable still capture  The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self clearing and always reads as a 0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable still capture.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable still capture  The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self clearing and always reads as a 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_EN_REG</name>
          <description>CSI0_EN_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x40FF011F</resetMask>
          <fields>
            <field>
              <name>VER_EN</name>
              <description>CSI Version Register Read Enable: 
0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PTN_CYCLE</name>
              <description>Pattern generating cycle counter. The pattern in dram will be generated in cycles of PTN_CYCLE+1. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_PWDN</name>
              <description>0: SRAM in normal 
1: SRAM in power down </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SRAM_in_normal</name>
                  <description>SRAM in normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SRAM_in_power</name>
                  <description>SRAM in power down</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PTN_START</name>
              <description>CSI Pattern Generating Start 
0: Finish other: Start Software write this bit to`1` to start pattern generating from DRAM. When finished, the hardware will clear this bit to`0`automatically. Generating cycles depends on PTN_CYCLE. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Finish</name>
                  <description>Finish other: Start Software write this bit to`1` to start pattern generating from DRAM. When finished, the hardware will clear this bit to`0`automatically. Generating cycles depends on PTN_CYCLE.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_CNT_SPL</name>
              <description>Sampling time for clk counter per frame 
0: Sampling clock counter every frame done 
1: Sampling clock counter every vsync </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sampling_clock_counter_every_frame</name>
                  <description>Sampling clock counter every frame done</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sampling_clock_counter_every_vsync</name>
                  <description>Sampling clock counter every vsync</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_CNT_EN</name>
              <description>clk count per frame enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PTN_GEN_EN</name>
              <description>Pattern Generation Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_EN</name>
              <description>Enable 
0: Reset and disable the CSI module 
1: Enable the CSI module </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset_and</name>
                  <description>Reset and disable the CSI module</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the CSI module</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_FIFO_THRS_REG</name>
          <description>CSI0_FIFO_THRS_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x40F0400</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>FIFO_NEARLY_FULL_TH</name>
              <description>The threshold of FIFO being nearly full. Indicates that the ISP should stop writing. Only valid when ISP is enabled. 0~7:  The smaller the value, the flag of FIFO being nearly full is easier to reach.  </description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PTN_GEN_CLK_DIV</name>
              <description>Packet generator clock divider </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PTN_GEN_DLY</name>
              <description>Clocks delayed before pattern generating start. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_THRS</name>
              <description>When CSI0 FIFO occupied memory exceed the threshold, dram frequency can not change. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_IF_CFG_REG</name>
          <description>CSI0_IF_CFG_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x50000</resetValue>
          <resetMask>0x3F0F1F</resetMask>
          <fields>
            <field>
              <name>SRC_TYPE_SOURCE</name>
              <description>SRC_TYPE Source type 
0: Progressed 
1: Interlaced </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Progressed</name>
                  <description>Progressed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interlaced</name>
                  <description>Interlaced</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FPS_DS_FPS</name>
              <description>FPS_DS Fps down sample 
0: no down sample 
1: 1/2 fps, only receives the first frame every 2 frames </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_down</name>
                  <description>no down sample</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_slash_2</name>
                  <description>1/2 fps, only receives the first frame every 2 frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIELD</name>
              <description>FIELD For YUV HV timing, Field polarity 
0: negative(field=0 indicate odd, field=1 indicate even ) 
1: positive(field=1 indicate odd, field=0 indicate even ) For BT656 timing, Field sequence 
0: Normal sequence (field 0 first) 
1: Inverse sequence (field 1 first) </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative_openingparen_field_equals_0</name>
                  <description>negative(field=0 indicate odd, field=1 indicate even )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive_openingparen_field_equals_1</name>
                  <description>positive(field=1 indicate odd, field=0 indicate even ) For BT656 timing, Field sequence</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal sequence (field 0 first)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverse</name>
                  <description>Inverse sequence (field 1 first)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREF_POL_VREF</name>
              <description>VREF_POL Vref polarity 
0: negative 
1: positive This register is not apply to CCIR656 interface. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not apply to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HERF_POL_HREF</name>
              <description>HERF_POL Href polarity 
0: negative 
1: positive This register is not apply to CCIR656 interface. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>negative</name>
                  <description>negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>positive</name>
                  <description>positive This register is not apply to CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_POL_DATA</name>
              <description>CLK_POL Data clock type 
0: active in rising edge 
1: active in falling edge </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active_in_rising_edge</name>
                  <description>active in rising edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active_in_falling_edge</name>
                  <description>active in falling edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEQ_8PLUS2</name>
              <description>SEQ_8PLUS2 When select IF_DATA_WIDTH to be 8+2bit, odd/even pixel byte at  CSI-D[11:4] will be rearranged to D[11:2]+2`b0 at the actual csi data bus according to these sequences: 
00: 6`bx+D[9:8], D[7:0] 
01: D[9:2], 6`bx+D[1:0] 
10: D[7:0], D[9:8]+6`bx 
11: D[7:0], 6`bx+D[9:8] </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6`bx_plus_D[9_colon_8]_comma__D[7_colon_0]</name>
                  <description>6`bx+D[9:8], D[7:0]</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>D[9_colon_2]_comma__6`bx_plus_D[1_colon_0]</name>
                  <description>D[9:2], 6`bx+D[1:0]</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>D[7_colon_0]_comma__D[9_colon_8]_plus_6`bx</name>
                  <description>D[7:0], D[9:8]+6`bx</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>D[7_colon_0]_comma__6`bx_plus_D[9_colon_8]</name>
                  <description>D[7:0], 6`bx+D[9:8]</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IF_DATA_WIDTH</name>
              <description>IF_DATA_WIDTH 
00: 8 bit data bus 
01: 10 bit data bus 
10: 12 bit data bus 
11: 8+2bit data bus  </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8 bit data bus</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10_bit</name>
                  <description>10 bit data bus</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12 bit data bus</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_plus_2bit_data</name>
                  <description>8+2bit data bus</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_IF_YUV</name>
              <description>CSI_IF YUV: 
00000: YUYV422 Interleaved or RAW (All data in one data bus) CCIR656: 
00100: YUYV422 Interleaved or RAW (All data in one data bus) Others: Reserved </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV422_Interleaved_or_RAW__openingparen_All_data_in_one_data_bus_closingparen__CCIR656</name>
                  <description>YUYV422 Interleaved or RAW (All data in one data bus) CCIR656:</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUYV422_Interleaved_or_RAW__openingparen_All_data_in_one_data_bus_closingparen__Others</name>
                  <description>YUYV422 Interleaved or RAW (All data in one data bus) Others: Reserved</description>
                  <value>0b00100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_PTN_ADDR_REG</name>
          <description>CSI0_PTN_ADDR_REG</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PTN_ADDR</name>
              <description>The pattern DRAM address when generating pattern.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_PTN_LEN_REG</name>
          <description>CSI0_PTN_LEN_REG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PTN_LEN</name>
              <description>The pattern length in byte when generating pattern.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_SYNC_CNT_REG</name>
          <description>CSI0_SYNC_CNT_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_CNT</name>
              <description>The counter value between vsync of CSI0 channel 0 and vsync of CSI1 channel 0 , using 24MHz. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_VER_REG</name>
          <description>CSI0_VER_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VER</name>
              <description>Version of hardware circuit. Only can be read when version register read enable is on.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CE_NS</name>
      <description>CE_NS</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C15000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CE_CDAR</name>
          <description>Current Destination Address Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT</name>
              <description>Current destination address of the executing task </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CSAR</name>
          <description>Current Source Address Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT</name>
              <description>Current source address of the executing task </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CTR</name>
          <description>Gating Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8</resetMask>
          <fields>
            <field>
              <name>RSA_CLK_GATING_ENABLE</name>
              <description>RSA_CLK_Gating_Enable(read only for NS world) 
0: RSA clk gating enable  
1: RSA clk gating disable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RSA_clk_gating_enable</name>
                  <description>RSA clk gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RSA_clk_gating_disable</name>
                  <description>RSA clk gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIE</name>
              <description>Die Bonding ID  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ESR</name>
          <description>Task Error type Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>TASK_CHANNEL3</name>
              <description>Task channel3 error type 
xxx1: algorithm not support 
xx1x: data length error 
x1xx: keysram access error for AES. Write `1` to clear. 
1xxx: reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>algorithm</name>
                  <description>algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>keysram</name>
                  <description>keysram access error for AES. Write `1` to clear.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TASK_CHANNEL2</name>
              <description>Task channel2 error type 
xxx1: algorithm not support 
xx1x: data length error 
x1xx: keysram access error for AES. Write `1` to clear. 
1xxx: reserved </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>algorithm</name>
                  <description>algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>keysram</name>
                  <description>keysram access error for AES. Write `1` to clear.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TASK_CHANNEL1</name>
              <description>Task channel1 error type 
xxx1: algorithm not support 
xx1x: data length error 
x1xx: keysram access error for AES. Write `1` to clear. 
1xxx: reserved </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>algorithm</name>
                  <description>algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>keysram</name>
                  <description>keysram access error for AES. Write `1` to clear.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TASK_CHANNEL0</name>
              <description>Task channel0 error type xxxlgorithm not support 
xx1x: data length error 
x1xx: keysram access error for AES. Write `1` to clear. 
1xxx: reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>data</name>
                  <description>data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>keysram</name>
                  <description>keysram access error for AES. Write `1` to clear.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ICR</name>
          <description>Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK</name>
              <description>Task chaining0-3_interrupt_enable 
0: interrupt disable 
1: interrupt enable </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ISR</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK</name>
              <description>Task chaining0-3_End_Pending 
0: busy 
1: task end It indicates that the processing of encrypt /signing or decrypt/verification has been completed .  Notes: Write `1` to clear it. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TDQ</name>
          <description>Task Descriptor Queue Address</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TASK_DESCRIPTOR_QUEUE_ADDRESS</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TLR</name>
          <description>Task Load Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TASK_LOAD</name>
              <description>When set , SS starts to load the configure of task from task descriptor queue and start to perform the task if task FIFO is not full. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TPR</name>
          <description>Throughput Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IT_INDICATES_THE_THROUGHPUT</name>
              <description>It indicates the throughput of data from the whole processing. Notes: Write `0` to clear it. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TSR</name>
          <description>Task Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CURRENT</name>
              <description>Current task in run 
0: task chaining0 
1: task chaining1 
2: task chaining2 
3: task chaining3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>task_chaining2</name>
                  <description>task chaining2</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>task_chaining3</name>
                  <description>task chaining3</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="CE_NS">
      <name>CE_S</name>
      <description>CE_S</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C15800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>CIR</name>
      <description>CIR</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CIR_CTL</name>
          <description>CIR Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x133</resetMask>
          <fields>
            <field>
              <name>CGPO</name>
              <description>General Program Output (GPO) Control in CIR mode for TX Pin 
0: Low level 
1: High level </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low_level</name>
                  <description>Low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_level</name>
                  <description>High level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIR</name>
              <description>ENABLE 00~10: Reserved 
11: CIR mode enable </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mode</name>
                  <description>CIR mode enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Global Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RCR</name>
          <description>CIR_RCR</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x1828</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SCS2</name>
              <description>Bit2 of Sample Clock Select for CIR This bit is defined by SCS bits below. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATHC</name>
              <description>Active Threshold Control for CIR 0x0 -ATHR in Unit of (Sample Clock) 0x1 -ATHR in Unit of (128*Sample Clocks) </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATHR</name>
              <description>Active Threshold for CIR These bits control the duration of CIR from Idle to Active State. The duration can be calculated by ((ATHR + 1)*(ATHC? Sample Clock: 128*Sample Clock)). </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITHR</name>
              <description>Idle Threshold for CIR The Receiver uses it to decide whether the CIR command has been received. If there is no CIR signal on the air, the receiver is staying in IDLE status. One active pulse will bring the receiver from IDLE status to Receiving status. After the CIR is end, the inputting signal will keep the specified level (high or low level) for a long time. The receiver can use this idle signal duration to decide that it has received the CIR command. The corresponding flag is asserted. If the corresponding interrupt is enable, the interrupt line is asserted to CPU. When the duration of signal keeps one status (high or low level) for the specified duration ( (ITHR + 1)*128 sample_clk ), this means that the previous CIR command has been finished. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NTHR</name>
              <description>Noise Threshold for CIR When the duration of signal pulse (high or low level) is less than NTHR, the pulse is taken as noise and should be discarded by hardware. 
0: all samples are recorded into RX FIFO 
1: If the signal is only one sample duration, it is taken as noise and discarded. 
2: If the signal is less than (&lt;=) two sample duration, it is taken as noise and discarded. ... 
61: if the signal is less than (&lt;=) sixty-one sample duration, it is taken as noise and discarded. </description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCS</name>
              <description>Sample Clock Select for CIR SCS2 SCS[1] SCS[0] Sample Clock 0 0 0 ir_clk/64 0 0 1 ir_clk/128 0 1 0 ir_clk/256 0 1 1 ir_clk/512 1 0 0 ir_clk 1 0 1 Reserved 1 1 0 Reserved 1 1 1 Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXCTL</name>
          <description>CIR Receiver Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x4</resetMask>
          <fields>
            <field>
              <name>RPPI</name>
              <description>Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXFIFO</name>
          <description>CIR Receiver FIFO Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RECEIVER</name>
              <description>Receiver Byte FIFO </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXINT</name>
          <description>CIR Receiver Interrupt Control Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F33</resetMask>
          <fields>
            <field>
              <name>RAL</name>
              <description>RX FIFO Available Received Byte Level for interrupt and DMA request TRIGGER_LEVEL = RAL + 1 </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRQ_EN</name>
              <description>RX FIFO DMA Enable 
0: Disable 
1: Enable When set to `1`, the Receiver FIFO DRQ is asserted if reaching RAL. The DRQ is de-asserted when condition fails. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, the Receiver FIFO DRQ is asserted if reaching RAL. The DRQ is de-asserted when condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAI_EN</name>
              <description>RX FIFO Available Interrupt Enable 
0: Disable 
1: Enable When set to `1`, the Receiver FIFO IRQ is asserted if reaching RAL. The IRQ is de-asserted when condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, the Receiver FIFO IRQ is asserted if reaching RAL. The IRQ is de-asserted when condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPEI_EN</name>
              <description>Receiver Packet End Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI_EN</name>
              <description>Receiver FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXSTA</name>
          <description>CIR Receiver Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F93</resetMask>
          <fields>
            <field>
              <name>RAC</name>
              <description>RX FIFO Available Counter 
0: No available data in RX FIFO 
1: 1 byte available data in RX FIFO 
2: 2 byte available data in RX FIFO ... 
64: 64 byte available data in RX FIFO </description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 byte available data in RX FIFO ...</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 byte available data in RX FIFO</description>
                  <value>64</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STAT</name>
              <description>Status of CIR 0x0 - Idle 0x1 - busy </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RA</name>
              <description>RX FIFO Available 
0: RX FIFO not available according its level 
1: RX FIFO available according its level This bit is cleared by writing a `1`. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_FIFO</name>
                  <description>RX FIFO not available according its level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_FIFO_available</name>
                  <description>RX FIFO available according its level This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPE</name>
              <description>Receiver Packet End Flag 
0: STO was not detected. In CIR mode, one CIR symbol is receiving or not detected. 
1: STO field or packet abort symbol (7`b0000,000 and 8`b0000,0000 for MIR and FIR) is detected. In CIR mode, one CIR symbol is received. This bit is cleared by writing a `1`. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STO_was</name>
                  <description>STO was not detected. In CIR mode, one CIR symbol is receiving or not detected.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STO_field</name>
                  <description>STO field or packet abort symbol (7`b0000,000 and 8`b0000,0000 for MIR and FIR) is detected. In CIR mode, one CIR symbol is received. This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI</name>
              <description>Receiver FIFO Overrun 
0: Receiver FIFO not overrun 
1: Receiver FIFO overrun This bit is cleared by writing a `1`. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiver_FIFO_not_overrun</name>
                  <description>Receiver FIFO not overrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receiver_FIFO_overrun</name>
                  <description>Receiver FIFO overrun This bit is cleared by writing a `1`.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SMHC0</name>
      <description>SMHC0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0F000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CRC_STA_REG</name>
          <description>CRC_STA_REG</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CRC_STA</name>
              <description>CRC Status CRC status from card/eMMC in write operation Positive CRC status token:3`b010 Negative CRC status token:3`b101 </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA0_CRC_REG</name>
          <description>DATA0_CRC_REG</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA0_CRC</name>
              <description>Data[0] CRC CRC in data[0] from card/eMMC. In 8bit DDR mode,the higher 16 bits indicate the CRC of even data,and the lower 16bits indicate the CRC of odd data. In 4 bit DDR mode,the higher of 16 bits indicate the CRC of odd data, ,and the lower 16bits indicate the CRC of even data. In SDR mode,the higher of 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA1_CRC_REG</name>
          <description>DATA1_CRC_REG</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA1_CRC</name>
              <description>Data[1] CRC CRC in data[1] from card/eMMC. In 8bit DDR mode,the higher 16 bits indicate the CRC of even data,and the lower 16bits indicate the CRC of odd data. In 4 bit DDR mode,the higher of 16 bits indicate the CRC of odd data, ,and the lower 16bits indicate the CRC of even data. In SDR mode,the higher of 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA2_CRC_REG</name>
          <description>DATA2_CRC_REG</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA2_CRC</name>
              <description>Data[2] CRC CRC in data[2] from card/eMMC. In 8bit DDR mode,the higher 16 bits indicate the CRC of even data,and the lower 16bits indicate the CRC of odd data. In 4 bit DDR mode,the higher of 16 bits indicate the CRC of odd data, ,and the lower 16bits indicate the CRC of even data. In SDR mode,the higher of 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA3_CRC_REG</name>
          <description>DATA3_CRC_REG</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA3_CRC</name>
              <description>Data[3] CRC CRC in data[3] from card/eMMC. In 8bit DDR mode,the higher 16 bits indicate the CRC of even data,and the lower 16bits indicate the CRC of odd data. In 4 bit DDR mode,the higher of 16 bits indicate the CRC of odd data, ,and the lower 16bits indicate the CRC of even data. In SDR mode,the higher of 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA4_CRC_REG</name>
          <description>DATA4_CRC_REG</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT4_CRC</name>
              <description>Data[4] CRC CRC in data[4] form device.  In 8 bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode, the higher 16 bits indicate the CRC of odd data, and the lower 16 bits indicate the CRC of even data.  In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA5_CRC_REG</name>
          <description>DATA5_CRC_REG</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT5_CRC</name>
              <description>Data[5] CRC CRC in data[5] form device. In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA6_CRC_REG</name>
          <description>DATA6_CRC_REG</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT6_CRC</name>
              <description>Data[6] CRC CRC in data[6] form device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA7_CRC_REG</name>
          <description>DATA7_CRC_REG</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT7_CRC</name>
              <description>Data[7] CRC CRC in data[7] form device.  In 8bit DDR mode, the higher 16 bits indicate the CRC of even data, and the lower 16 bits indicate the CRC of odd data.  In 4 bit DDR mode,it is not used. In SDR mode, the higher 16 bits indicate the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EMMC_DDR_SBIT_DET_REG</name>
          <description>EMMC_DDR_SBIT_DET_REG</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>HS_MD_EN</name>
              <description>HS400 Mode Enable 0:Disable 1:Enable It is required to set this bit to '1' before initiating any data transfer CMD in HS400 mode. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HALF_START_BIT</name>
              <description>Control for start bit detection mechanism inside mstorage based on duration of start bit.  For eMMC 4.5, start bit can be:  0 : Full cycle   1 : Less than one full cycle  Set HALF_START_BIT=1 for eMMC 4.5 and above; set to 0 for SD applications. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RESP_CRC_REG</name>
          <description>RESP_CRC_REG</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RESP_CRC</name>
              <description>Response CRC Response CRC from device. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_BLKSIZ</name>
          <description>SD_BLKSIZ</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BLK_SZ</name>
              <description>Block size </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_BYTCNT</name>
          <description>SD_BYTCNT</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BYTE_CNT</name>
              <description>Byte counter Number of bytes to be transferred; should be integer multiple of Block Size(BLK_SZ) for block transfers. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_CLKDIV</name>
          <description>SD_CLKDIV</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800300FF</resetMask>
          <fields>
            <field>
              <name>MASK_DATA0</name>
              <description>0 : Do not mask data0 when updata clock ; 1 : Mask data0 when updata clock; Default : 0; </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCLK_CTRL</name>
              <description>Card Clock Output Control 0 : Card clock always on 1 : Turn off card clock when FSM in IDLE state </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCLK_ENB</name>
              <description>Card Clock Enable 0 : Card Clock off 1 : Card Clock on </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCLK_DIV</name>
              <description>Card clock divider n : Source clock is divided by 2*n.(n=0~255) when  is set, this field must be cleared. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_CMD</name>
          <description>SD_CMD</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F20FFFF</resetMask>
          <fields>
            <field>
              <name>CMD_LOAD</name>
              <description>Start Command. This bit is auto cleared when current command is sent. If there is no any response error happened, a command complete interrupt bit (CMD_OVER) will be set in register. You should not write any other command before this bit is cleared, or when a command busy interrupt bit (CMD_BUSY) will be set in register. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_SW</name>
              <description>Voltage Switch 
0: normal command 
1: Voltage switch command, set for CMD11 only </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Voltage</name>
                  <description>Voltage switch command, set for CMD11 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_ABT</name>
              <description>Boot Abort Setting this bit will terminate the boot operation. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXP_BOOT_ACK</name>
              <description>Expect Boot Acknowledge.  When Software sets this bit along in mandatory boot operation, controller expects a boot acknowledge start pattern of 0-1-0 from the selected card. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_MOD</name>
              <description>Boot Mode 2`b00: Normal command 2`b01: Mandatory Boot operation 2`b10: Alternate Boot operation 2`b11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PRG_CLK</name>
              <description>Change Clock 
0: Normal command 
1: Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Change</name>
                  <description>Change Card Clock; when this bit is set, controller will change clock domain and clock output. No command will be sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEND_INIT_SEQ</name>
              <description>Send Initialization 
0: normal command sending 
1: Send initialization sequence before sending this command. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send initialization sequence before sending this command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_ABT_CMD</name>
              <description>Stop Abort Command 
0: normal command sending 1:send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR) </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal command sending 1:send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing `I/O Abort` in SDIO CCCR)</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_PRE_OVER</name>
              <description>Wait Data Transfer Over 
0: Send command at once, do not care of data transferring 
1: Wait for data transfer completion before sending current command </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send command at once, do not care of data transferring</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wait</name>
                  <description>Wait for data transfer completion before sending current command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_CMD_FLAG</name>
              <description>Send Stop CMD Automatically (CMD12) 
0: Do not send stop command at end of data transfer 
1: Send stop command automatically at end of data transfer </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_send</name>
                  <description>Do not send stop command at end of data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send stop command automatically at end of data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_MODE</name>
              <description>Transfer Mode 
0: Block data transfer command 
1: Stream data transfer command </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Block_data</name>
                  <description>Block data transfer command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stream_data</name>
                  <description>Stream data transfer command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_DIR</name>
              <description>Transfer Direction 
0: Read operation 
1: Write operation </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write operation</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_TRANS</name>
              <description>Data Transfer 
0: without data transfer 
1: with data transfer </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>without_data</name>
                  <description>without data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>with_data</name>
                  <description>with data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHK_RESP_CRC</name>
              <description>Check Response CRC 
0: Do not check response CRC 
1: Check response CRC </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_check</name>
                  <description>Do not check response CRC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Check</name>
                  <description>Check response CRC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LONG_RESP</name>
              <description>Response Type 0:Short Response (48 bits) 1:Long Response (136 bits) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESP_RCV</name>
              <description>Response Receive 
0: Command without Response 
1: Command with Response </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command_without_Response</name>
                  <description>Command without Response</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Command_with_Response</name>
                  <description>Command with Response</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_IDX</name>
              <description>CMD Index Command index value </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_CMDARG</name>
          <description>SD_CMDARG</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_ARG</name>
              <description>Command argument </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_CTRL</name>
          <description>SD_CTRL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x80001D37</resetMask>
          <fields>
            <field>
              <name>FIFO_AC_MOD</name>
              <description>FIFO Access Mode 
1: AHB bus 
0: DMA bus </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AHB</name>
                  <description>AHB bus</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA bus</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_CMD</name>
              <description>Time unit for command line Time unit used to calculate command line time out value defined in RTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_DAT</name>
              <description>Time unit for data line Time unit used to calculate data line time out value defined in DTO_LMT. 
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_MOD_SEL</name>
              <description>DDR Mode Select Although eMMC`s HS400 speed mode is 8-bit DDR, this filed should be cleared when  is set. 
0: SDR mode  
1: DDR mode </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDR_mode</name>
                  <description>SDR mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DDR_mode</name>
                  <description>DDR mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CD_DBC_ENB</name>
              <description>Card Detect (Data[3] status) De-bounce Enable 
0: disable de-bounce 
1: enable de-bounce </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable de-bounce</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable de-bounce</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_ENB</name>
              <description>DMA Global Enable 
0: Disable DMA to transfer data, using AHB bus 
1: Enable DMA to transfer data </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable DMA to transfer data, using AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable DMA to transfer data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_ENB</name>
              <description>Global Interrupt Enable 
0: Disable interrupts 
1: Enable interrupts </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupts</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_RST</name>
              <description>FIFO Reset 
0: No change 
1: Reset FIFO </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Software Reset 
0: No change 
1: Reset SD/MMC controller </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset SD/MMC controller</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_CTYPE</name>
          <description>SD_CTYPE</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CARD_WID</name>
              <description>Card width 2`b00 : 1-bit width 2`b01 : 4-bit width 2`b1x : 8-bit width </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_IDIE_REG</name>
          <description>SD_IDIE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x337</resetMask>
          <fields>
            <field>
              <name>ERR_SUM_INT_ENB</name>
              <description>Card Error summary Interrupt Enable.  When set, it enables the Card Interrupt summary. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_UNAVL_INT_ENB</name>
              <description>Descriptor Unavailable Interrupt.  When set along with Abnormal Interrupt Summary Enable, the DU interrupt is enabled. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FERR_INT_ENB</name>
              <description>Fatal Bus Error Enable.  When set with Abnormal Interrupt Summary Enable, the Fatal Bus Error Interrupt is enabled. When reset, Fatal Bus Error Enable Interrupt is disabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_INT_ENB</name>
              <description>Receive Interrupt Enable.  When set with Normal Interrupt Summary Enable, Receive Interrupt is enabled. When reset, Receive Interrupt is disabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT_ENB</name>
              <description>Transmit Interrupt Enable.  When set with Normal Interrupt Summary Enable, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_RESP0</name>
          <description>SD_RESP0</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP0</name>
              <description>response 0 Bit[31:0] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_RESP1</name>
          <description>SD_RESP1</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP1</name>
              <description>response 1 Bit[63:31] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_RESP2</name>
          <description>SD_RESP2</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP2</name>
              <description>response 2 Bit[95:64] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_RESP3</name>
          <description>SD_RESP3</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP3</name>
              <description>response 3 Bit[127:96] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SD_TMOUT</name>
          <description>SD_TMOUT</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xFFFFFF40</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DTO_LMT</name>
              <description>Data Timeout Limit </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_LMT</name>
              <description>Response Timeout Limit </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_A12A</name>
          <description>Auto command 12 argument register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SD_A12A</name>
              <description>SD_A12A set the argument of command 12 automatically send by controller  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BUS_MODE</name>
          <description>SMHC_BUS_MODE</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800007FF</resetMask>
          <fields>
            <field>
              <name>DES_LOAD_CTRL</name>
              <description>When DMAC fetches a descriptor, if the valid bit of a descriptor is not set, DMAC FSM will go to the suspend state. Setting this bit will make DMAC re-fetch descriptor again and do the transfer normally. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>IDMAC_ENB</name>
              <description>IDMAC Enable.  When set, the IDMAC is enabled. DE is read/write. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_BUST_CTRL</name>
              <description>Fixed Burst.  Controls whether the AHB Master interface performs fixed burst transfers or not. When set, the AHB will use only SINGLE, INCR4, INCR8 during start of normal burst transfers. When reset, the AHB will use SINGLE and INCR burst transfer operations.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMAC_RST</name>
              <description>DMA Reset.  When set, the DMA Controller resets all its internal registers. SWR is read/write. It is automatically cleared after 1 clock cycle. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CSDC</name>
          <description>CRC status detect control register(only for SMHC2)</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>CRC_DET_PARA</name>
              <description>0x6:HS400 speed mode 0x3:Other speed mode </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTRL</name>
          <description>Control register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ABT_RDATA</name>
              <description>Abort Read Data 
0: Ignored 
1: After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>After</name>
                  <description>After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets bit to reset data state-machine, which is waiting for next block of data. Used in SDIO card suspends sequence.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_WAIT</name>
              <description>Read Wait 
0: Clear SDIO read wait 
1: Assert SDIO read wait </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear SDIO read wait</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert SDIO read wait</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_SEND_MMC_IRQRESQ</name>
              <description>Host Send MMC IRQ Response 
0: Ignored 
1: Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send auto IRQ response When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DDC_REG</name>
          <description>SMHC_DDC_REG</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30000</resetMask>
          <fields>
            <field>
              <name>DAT_DRV_PH_SEL</name>
              <description>Data Drive Phase Select 
0: Drive phase offset is 90 
1: Drive phase select is 180 In DDR mode, only 90 phase offset is valid. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Drive_phase_offset</name>
                  <description>Drive phase offset is 90</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drive_phase_select</name>
                  <description>Drive phase select is 180 In DDR mode, only 90 phase offset is valid.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DRV_PH_SEL</name>
              <description>Command Drive Phase Select 
0: Drive phase offset is 90 
1: Drive phase select is 180 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Drive_phase_offset</name>
                  <description>Drive phase offset is 90</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drive_phase_select</name>
                  <description>Drive phase select is 180</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DLBA_REG</name>
          <description>SMHC_DLBA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_BASE_ADDR</name>
              <description>Start of Descriptor List.  Contains the base address of the First Descriptor. The LSB bits [1:0] are ignored and taken as all-zero by the IDMAC internally. Hence these LSB bits are read-only. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DS_DL_REG</name>
          <description>SMHC_DS_DL_REG</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>DS_DL_CAL_START</name>
              <description>Data Strobe Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_CAL_DONE</name>
              <description>Data Strobe Delay Calibration Done When set, it means that sample delay chain calibration is done. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL</name>
              <description>Data Strobe Delay </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL_SW_EN</name>
              <description>Data Strobe Delay Software Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_SW</name>
              <description>Data Strobe Delay Software </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFOTH</name>
          <description>FIFO water level register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xF0000</resetValue>
          <resetMask>0x7FFFFFFF</resetMask>
          <fields>
            <field>
              <name>BSIZE_OF_TRANS</name>
              <description>Burst size of multiple transaction 3`b000: 1 transfers 3`b001: 4 3`b010: 8 3`b011: 16  Others: Reserved Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) Recommended: MSize = 16, TX_TL = 240, RX_TL = 15(for SMHC1 and SMHC2) MSize = 8, TX_TL = 248, RX_TL = 7(for SMHC0) </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TL</name>
              <description>RX Trigger Level 0x0~0xFE: RX Trigger Level is 0~254 0xFF reserved FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA is request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 15 (means greater than 15, for SMHC1 and SMHC2) 7 (means greater than 7, for SMHC0) </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_TL</name>
              <description>TX Trigger Level 0x1~0xFF: TX Trigger Level is 1~255 
0x0: no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 240(means less than or equal to 240, for SMHC1 and SMHC2) 248(means less than or equal to 248,for SMHC0) </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_trigger</name>
                  <description>no trigger FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 240(means less than or equal to 240, for SMHC1 and SMHC2) 248(means less than or equal to 248,for SMHC0)</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFO_REG</name>
          <description>SMHC_FIFO_REG</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX/RX_FIFO</name>
              <description>Data FIFO </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_HWRST</name>
          <description>Hardware reset register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HW_RESET</name>
              <description>1 : Active mode  0 : Reset  These bits cause the cards to enter pre-idle state, which requires them to be re-initialized. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDST</name>
          <description>DMAC status register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF37</resetMask>
          <fields>
            <field>
              <name>DMAC_ERR_STA</name>
              <description>Error Bits.  Indicates the type of error that caused a Bus Error. Valid only with  ( [2]) set. This field does not generate an interrupt.  3`b001: Host Abort received during transmission  3`b010: Host Abort received during reception  Others: Reserved EB is read-only. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ABN_INT_SUM</name>
              <description>Abnormal Interrupt Summary.  Logical OR of the following:  [2]: Fatal Bus Interrupt  [4]: DU bit Interrupt  [5]: Card Error Summary Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes AIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOR_INT_SUM</name>
              <description>Normal Interrupt Summary.  Logical OR of the following:  [0]: Transmit Interrupt  [1]: Receive Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes NIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_FLAG_SUM</name>
              <description>Card Error Summary.  Indicates the status of the transaction to/from the card; also present in RINTSTS. Indicates the logical OR of the following bits:  
EBE: End Bit Error  RTO: Response Timeout/Boot ACK Timeout  RCRC: Response CRC  SBE: Start Bit Error  DRTO: Data Read Timeout/BDS timeout  DCRC: Data CRC for Receive  RE: Response Error  Writing a 1 clears this bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_UNAVL_INT</name>
              <description>Descriptor Unavailable Interrupt.  This bit is set when the descriptor is unavailable due to OWN bit = 0 (DES0[31] =0). Writing a 1 clears this bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FATAL_BERR_INT</name>
              <description>Fatal Bus Error Interrupt.  Indicates that a Bus Error occurred ( [12:10]). When this bit is set, the DMA disables all its bus accesses. Writing a 1 clears this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_INT</name>
              <description>Receive Interrupt.  Indicates the completion of data reception for a descriptor. Writing a 1 clears this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT</name>
              <description>Transmit Interrupt.  Indicates that data transmission is finished for a descriptor. Writing a `1` clears this bit. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_INTMASK</name>
          <description>Interrupt mask register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL_INT_EN</name>
              <description>Card Removed Interrupt Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_INSERT_INT_EN</name>
              <description>Card Inserted Interrupt Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INT_EN</name>
              <description>SDIO Interrupt Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEE_INT_EN</name>
              <description>Data End-bit Error Interrupt Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACD_INT_EN</name>
              <description>Auto Command Done Interrupt Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSE_BC_INT_EN</name>
              <description>Data Start Error Interrupt Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_IW_INT_EN</name>
              <description>Command Busy and Illegal Write Interrupt Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FU_FO_INT_EN</name>
              <description>FIFO Underrun/Overflow Interrupt Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSTO_VSD_INT_EN</name>
              <description>Data Starvation Timeout/V1.8 Switch Done Interrupt Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTO_BDS_INT_EN</name>
              <description>Data Timeout/Boot Data Start Interrupt Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_BACK_INT_EN</name>
              <description>Response Timeout/Boot ACK Received Interrupt Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE_INT_EN</name>
              <description>Data CRC Error Interrupt Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCE_INT_EN</name>
              <description>Response CRC Error Interrupt Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRR_INT_EN</name>
              <description>Data Receive Request Interrupt Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR_INT_EN</name>
              <description>Data Transmit Request Interrupt Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTC_INT_EN</name>
              <description>Data Transfer Complete Interrupt Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC_INT_EN</name>
              <description>Command Complete Interrupt Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_INT_EN</name>
              <description>Response Error Interrupt Enable   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_MINTSTS</name>
          <description>Masked interrupt status register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>M_CARD_REMOVAL_INT</name>
              <description>Card Removed </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CARD_INSERT</name>
              <description>Card Inserted </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_SDIO_INT</name>
              <description>SDIO Interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DEE_INT</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken or received CRC status taken is negative. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACD_INT</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSE_BC_INT</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CB_IW_INT</name>
              <description>Command Busy and Illegal Write </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_FU_FO_INT</name>
              <description>FIFO Underrun/Overflow </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSTO_VSD_INT</name>
              <description>Data Starvation Timeout/V1.8 Switch Done </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTO_BDS_INT</name>
              <description>Data Timeout/Boot Data Start </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RTO_BACK_INT</name>
              <description>Response Timeout/Boot ACK Received </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DCE_INT</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RCE_INT</name>
              <description>Response CRC Error </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DRR_INT</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTR_INT</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTC_INT</name>
              <description>Data Transfer Complete </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CC_INT</name>
              <description>Command Complete </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RE_INT</name>
              <description>Response Error (no response or response CRC error) When set, Transmit Bit error or End Bit error or CMD Index error may occurs. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_NTSR_REG</name>
          <description>SMHC_NTSR_REG</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000030</resetMask>
          <fields>
            <field>
              <name>MODE_SELEC</name>
              <description>0: Old mode of Sample/Output Timing ; 
1: New mode of Sample/Output Timing; Default value : 0; </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Old_mode</name>
                  <description>Old mode of Sample/Output Timing ;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>New_mode</name>
                  <description>New mode of Sample/Output Timing; Default value : 0;</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SAMPLE_TIMING_PHASE_RX</name>
              <description>SAMPLE_TIMING_PHASE(RX) 
00: Sample timing phase offset 90 ; 
01: Sample timing phase offset 180 ; 
10: Sample timing phase offset 270 ; 
11: Ignore; Default value: 00; </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RINTSTS</name>
          <description>Raw interrupt status register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL</name>
              <description>Card Removed </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_INSERT</name>
              <description>Card Inserted </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIOI_INT</name>
              <description>SDIO Interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEE</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACD</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSE_BC</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_IW</name>
              <description>Command Busy and Illegal Write </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FU_FO</name>
              <description>FIFO Underrun/Overflow </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSTO_VSD</name>
              <description>Data Starvation Timeout/V1.8 Switch Done </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTO_BDS</name>
              <description>Data Timeout/Boot Data Start </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_BACK</name>
              <description>Response Timeout/Boot ACK Received </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCE</name>
              <description>Response CRC Error </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRR</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Transmit Request When set, it means that there are enough space in FIFO during transmitting data. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTC</name>
              <description>Data Transfer Complete </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Command Complete </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE</name>
              <description>Response Error (no response or response CRC error) When set, Transmit Bit error or End Bit error or CMD Index error may occurs. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_SAMP_DL_REG</name>
          <description>SMHC_SAMP_DL_REG</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>SAMP_DL_CAL_START</name>
              <description>Sample Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_CAL_DONE</name>
              <description>Sample Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in . </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL</name>
              <description>Sample Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of card clock nearly.  Generally, it is necessary to do drive delay calibration when card clock is changed. This bit is valid only when  is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL_SW_EN</name>
              <description>Sample Delay Software Enable When set, enable smaple delay specified at . </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_SW</name>
              <description>Sample Delay Software The relative delay between clock line and command line, data lines. It can be determined according to the value of , the cycle of card clock and device`s input timing requirement. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_STATUS</name>
          <description>Status register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x83FFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_REQ</name>
              <description>DMA Request DMA request signal state </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_LEVEL</name>
              <description>FIFO Level Number of filled locations in FIFO </description>
              <bitRange>[25:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RESP_IDX</name>
              <description>Response Index Index of previous response, including any auto-stop sent by controller </description>
              <bitRange>[16:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSM_BUSY</name>
              <description>Data FSM Busy Data transmit or receive state-machine is busy </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CARD_BUSY</name>
              <description>Card data busy Inverted version of DATA[0] 
0: card data not busy 
1: card data busy </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_data_not_busy</name>
                  <description>card data not busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_data_busy</name>
                  <description>card data busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_PRESENT</name>
              <description>Data[3] status level of DATA[3]; checks whether card is present 
0: card not present 
1: card present </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>card_not_present</name>
                  <description>card not present</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>card_present</name>
                  <description>card present</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_STA</name>
              <description>Command FSM states: 
0: Idle 
1: Send init sequence 
2: TX CMD start bit 
3: TX CMD TX bit 
4: TX CMD index + argument 
5: TX CMD CRC7 
6: TX CMD end bit 
7: RX response start bit 
8: RX response IRQ response 
9: RX response TX bit 
10: RX response CMD index 
11: RX response data 
12: RX response CRC7 
13: RX response end bit 
14: CMD path wait NCC 
15: Wait; CMD-to-response turnaround </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO full  
1: FIFO full 
0: FIFO not full </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_full</name>
                  <description>FIFO full</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO Empty 1 - FIFO Empty 0 - FIFO not Empty </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_TX_LEVEL</name>
              <description>FIFO TX Water Level flag 
0: FIFO didn`t reach transmit trigger level 
1: FIFO reached transmit trigger level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach transmit trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached transmit trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_RX_LEVEL</name>
              <description>FIFO RX Water Level flag 
0: FIFO didn`t reach receive trigger level 
1: FIFO reached receive trigger level </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn`t</name>
                  <description>FIFO didn`t reach receive trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached receive trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC0</name>
          <description>Transferred byte count0 between controller and card</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC0</name>
              <description>Transferred Count 0 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC1</name>
          <description>Transferred byte count1 between host memory and internal  FIFO</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC1</name>
              <description>Transferred Count 1 Number of bytes transferred between Host/DMA memory and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_THLD_REG</name>
          <description>SMHC_THLD_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0007</resetMask>
          <fields>
            <field>
              <name>CARD_RD_THLD</name>
              <description>Card Read Threshold Size </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_WR_THLD_ENB</name>
              <description>CARD_WR_THLD_ENB(for SMHC2 only) Card Write Threshold Enable(HS400) 
0: Card write threshold disable 
1: Card write threshold enabled Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_write_threshold_disable</name>
                  <description>Card write threshold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_write_threshold</name>
                  <description>Card write threshold enabled Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCIG</name>
              <description>Busy Clear Interrupt Generation 
0: Busy Clear Interrupt disabled 
1: Busy Clear Interrupt Enabled The application can disable this feature if it does not want to wait for a Busy Clear Interrupt. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_disabled</name>
                  <description>Busy Clear Interrupt disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Enabled</name>
                  <description>Busy Clear Interrupt Enabled The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_RD_THLD_ENB</name>
              <description>Card Read Threshold Enable 0 : Card Read Threshold Disable 1 : Card Read Threshold Enable Host controller initiates Read Transfer only if  amount of space is available in receive FIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SMHC0">
      <name>SMHC1</name>
      <description>SMHC1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C10000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="SMHC0">
      <name>SMHC2</name>
      <description>SMHC2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C11000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C02000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>8</dim>
          <dimIncrement>64</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>DMA_BCNT_LEFT_REG</name>
            <description>DMA Channel Byte Counter Left Register  (N=0~7)</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_BCNT_LEFT</name>
                <description>DMA Channel Byte Counter Left, read only. </description>
                <bitRange>[24:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CFG_REG</name>
            <description>DMA Channel Configuration Register  (N=0~7)</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x6FF06FF</resetMask>
            <fields>
              <field>
                <name>DMA_DEST_DATA_WIDTH</name>
                <description>DMA Destination Data Width. 
00: 8-bit 
01: 16-bit 
10: 32-bit 
11: 64-bit </description>
                <bitRange>[26:25]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8_bit</name>
                    <description>8-bit</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16_bit</name>
                    <description>16-bit</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32_bit</name>
                    <description>32-bit</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_64_bit</name>
                    <description>64-bit</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_DEST_BLOCK_SIZE</name>
                <description>DMA Destination Block Size. 
00: 1 
01: 4 
10: 8 
11: 16 </description>
                <bitRange>[23:22]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1</name>
                    <description>1</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4</name>
                    <description>4</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_ADDR_MODE</name>
                <description>DMA Destination Address Mode 
0: Linear Mode 
1: IO Mode </description>
                <bitRange>[21:21]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Linear</name>
                    <description>Linear Mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>IO</name>
                    <description>IO Mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_DEST_DRQ_TYPE</name>
                <description>DMA Destination DRQ Type The details in DRQ Type and Port Corresponding Relation. </description>
                <bitRange>[20:16]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DMA_SRC_DATA_WIDTH</name>
                <description>DMA Source Data Width. 
00: 8-bit 
01: 16-bit 
10: 32-bit 
11: 64-bit </description>
                <bitRange>[10:9]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8_bit</name>
                    <description>8-bit</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16_bit</name>
                    <description>16-bit</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32_bit</name>
                    <description>32-bit</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_64_bit</name>
                    <description>64-bit</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_BLOCK_SIZE</name>
                <description>DMA Source Block Size. 
00: 1 
01: 4 
10: 8 
11: 16 </description>
                <bitRange>[7:6]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1</name>
                    <description>1</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4</name>
                    <description>4</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_ADDR_MODE</name>
                <description>DMA Source Address Mode 
0: Linear Mode 
1: IO Mode </description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Linear</name>
                    <description>Linear Mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>IO</name>
                    <description>IO Mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_DRQ_TYPE</name>
                <description>DMA Source DRQ Type The details in DRQ Type and Port Corresponding Relation. </description>
                <bitRange>[4:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CUR_DEST_REG</name>
            <description>DMA Channel Current Destination Register  (N=0~7)</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_CUR_DEST</name>
                <description>DMA Channel Current Destination Address, read only. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CUR_SRC_REG</name>
            <description>(N=0~7)</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_CUR_SRC</name>
                <description>DMA Channel Current Source Address, read only. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_DESC_ADDR_REG</name>
            <description>DMA Channel Start Address Register  (N=0~7)</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_DESC_ADDR</name>
                <description>DMA Channel Descriptor Address. The Descriptor Address must be half-word aligned before DMA enable. </description>
                <bitRange>[31:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DMA_DESCPT_ADDR_HIGH</name>
                <description>This bit would be used to storing [32] bits of the descriptor address, if it is necessary. Otherwise, it should be 0. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_EN_REG</name>
            <description>DMA Channel Enable Register    (N=0~7)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>DMA_EN</name>
                <description>DMA Channel Enable 
0: Disable 
1: Enable. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_FDESC_ADDR_REG</name>
            <description>DMA Formar Descriptor Address Register  (N=0~7)</description>
            <addressOffset>0x2C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_FDESC_ADDR</name>
                <description>This register is used to storing the former value of DMA Channel Descriptor Address Register . </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_MODE_REG</name>
            <description>DMA_MODE_REG</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xC</resetMask>
            <fields>
              <field>
                <name>DMA_DST_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PARA_REG</name>
            <description>DMA Channel Parameter Register  (N=0~7)</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x500FF</resetMask>
            <fields>
              <field>
                <name>DMA_DST_HBIT_ADDR</name>
                <description></description>
                <bitRange>[18:18]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DMA_SRC_HBIT_ADDR</name>
                <description></description>
                <bitRange>[16:16]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>WAIT_CLK_CYCLE</name>
                <description>Wait clock cycle. </description>
                <bitRange>[7:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PAU_REG</name>
            <description>DMA Channel Pause Register  (N=0~7)</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>DMA_PAUSE</name>
                <description>Pausing DMA Channel Transfer Data. 
0: Resume Transferring, 
1: Pause Transferring. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Resume</name>
                    <description>Resume Transferring,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pause</name>
                    <description>Pause Transferring.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PKG_NUM_REG</name>
            <description>DMA Package Number Register  (N=0~7)</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_PKG_NUM</name>
                <description>This register will record the number of packages which has been completed in one transmission. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>DMA_AUTO_GATE_REG</name>
          <description>DMA Auto Gating Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DMA_MCLK_CIRCUIT</name>
              <description>DMA MCLK interface circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating</name>
                  <description>Auto gating disable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_COMMON_CIRCUIT</name>
              <description>DMA common circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating</name>
                  <description>Auto gating disable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_CHAN_CIRCUIT</name>
              <description>DMA channel circuit auto gating bit. 
0: Auto gating enable 
1: Auto gating disable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating</name>
                  <description>Auto gating disable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_EN_REG</name>
          <description>DMA IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_EN</name>
              <description>DMA 7 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_EN</name>
              <description>DMA 7 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_EN</name>
              <description>DMA 7 Half Package Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_EN</name>
              <description>DMA 6 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_EN</name>
              <description>DMA 6 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_EN</name>
              <description>DMA 6 Half Package Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_EN</name>
              <description>DMA 5 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_EN</name>
              <description>DMA 5 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_EN</name>
              <description>DMA 5 Half package Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_EN</name>
              <description>DMA 4 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_EN</name>
              <description>DMA 4 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_EN</name>
              <description>DMA 4 Half Package Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_EN</name>
              <description>DMA 3 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_EN</name>
              <description>DMA 3 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_EN</name>
              <description>DMA 3 Half Package Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_EN</name>
              <description>DMA 2 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_EN</name>
              <description>DMA 2 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_EN</name>
              <description>DMA 2 Half Package Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_EN</name>
              <description>DMA 1 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_EN</name>
              <description>DMA 1 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_EN</name>
              <description>DMA 1 Half Package Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_EN</name>
              <description>DMA 0 Queue End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_EN</name>
              <description>DMA 0 Package End Transfer Interrupt Enable. 
0: Disable, 1: Enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_EN</name>
              <description>DMA 0 Half Package Transfer Interrupt Enable. 
0: Disable, 1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, 1: Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_PEND_REG0</name>
          <description>DMA_IRQ_PEND_REG0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_PEND</name>
              <description>DMA 7 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_PEND</name>
              <description>DMA 7 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_PEND</name>
              <description>DMA 7 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_PEND</name>
              <description>DMA 6 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_PEND</name>
              <description>DMA 6 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_PEND</name>
              <description>DMA 6 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_PEND</name>
              <description>DMA 5 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_PEND</name>
              <description>DMA 5 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_PEND</name>
              <description>DMA 5 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_PEND</name>
              <description>DMA 4 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_PEND</name>
              <description>DMA 4 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_PEND</name>
              <description>DMA 4 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_PEND</name>
              <description>DMA 3 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_PEND</name>
              <description>DMA 3 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_PEND</name>
              <description>DMA 3 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_PEND</name>
              <description>DMA 2 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_PEND</name>
              <description>DMA 2 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_PEND</name>
              <description>DMA 2 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_PEND</name>
              <description>DMA 1 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_PEND</name>
              <description>DMA 1 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_PEND</name>
              <description>DMA 1 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_PEND</name>
              <description>DMA 0 Queue End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_PEND</name>
              <description>DMA 0 Package End Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_PEND</name>
              <description>DMA 0 Half Package Transfer Interrupt Pending. Set 1 to the bit will clear it. 
0: No effect, 1: Pending. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect, 1: Pending.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_SECURE_REG</name>
          <description>DMA_SECURE_REG</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DMA7_SEC</name>
              <description>DMA channel 7 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_SEC</name>
              <description>DMA channel 6 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_SEC</name>
              <description>DMA channel 5 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_SECURE</name>
              <description>Indicating DMA 4 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_SECURE</name>
              <description>Indicating DMA 3 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_SECURE</name>
              <description>Indicating DMA 2 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_SECURE</name>
              <description>Indicating DMA 1 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_SECURE</name>
              <description>Indicating DMA 0 security. 
0: Secure,  
1: Non-secure. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_STA_REG</name>
          <description>DMA Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x400000FF</resetMask>
          <fields>
            <field>
              <name>MBUS</name>
              <description>FIFO Status 0:Empty 1:Not Empty </description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA7_STATUS</name>
              <description>DMA Channel 7 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_STATUS</name>
              <description>DMA Channel 6 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_STATUS</name>
              <description>DMA Channel 5 Status. 
0: Idle 
1: Busy </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_STATUS</name>
              <description>DMA Channel 4 Status. 
0: Idle 
1: Busy. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_STATUS</name>
              <description>DMA Channel 3 Status. 
0: Idle 
1: Busy. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_STATUS</name>
              <description>DMA Channel 2 Status. 
0: Idle, 
1: Busy. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_STATUS</name>
              <description>DMA Channel 1 Status. 
0: Idle, 
1: Busy. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_STATUS</name>
              <description>DMA Channel 0 Status. 
0: Idle, 
1: Busy. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SMC</name>
      <description>SMC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1E000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>16</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>SMC_REGION_ATTR_REG</name>
            <description>Region Attribute Register N  (N=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xF000FF7F</resetMask>
            <fields>
              <field>
                <name>REGION_ATTR_SPN</name>
                <description>SP&lt;n&gt;. Permission setting for region &lt;n&gt;. if an AXI transaction occurs to region n, the value in the sp&lt;n&gt; field controls whether the SMC permits the transaction to proceed. . See and . </description>
                <bitRange>[31:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SUB_REGION_DISABLE</name>
                <description>Subregion_disable. Regions are split into eight equal-sized sub-regions, and each bit enables the corresponding subregion to be disabled. Bit [15] = 1 subregion 7 is disabled. Bit [14] = 1 subregion 6 is disabled. Bit [13] = 1 subregion 5 is disabled. Bit [12] = 1 subregion 4 is disabled. Bit [11] = 1 subregion 3 is disabled. Bit [10] = 1 subregion 2 is disabled. Bit [9] = 1 subregion 1 is disabled. Bit [8] = 1 subregion 0 is disabled. </description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>REGION_ATTR_SIZE</name>
                <description>Size&lt;n&gt;. Size of region&lt;n&gt;, see  for detail. </description>
                <bitRange>[6:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>REGION_ATTR_EN</name>
                <description>EN&lt;n&gt;. Enable for region&lt;n&gt;. 0 = region &lt; n&gt; is disabled. 1 = region &lt; n&gt; is enabled. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>SMC_REGION_SETUP_HI_REG</name>
            <description>Region Setup High Register N  (N=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>BASE_ADDRESS_HIGH</name>
                <description>The SMC only permits a region to start at address 0x0, or at a multiple of its region size. If you program a region size to be 8GB or more, then the SMC might ignore certain bits depending on the region size.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>SMC_REGION_SETUP_LO_REG</name>
            <description>Region Setup Low Register N  (N=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF8000</resetMask>
            <fields>
              <field>
                <name>BASE_ADDRESS_LOW</name>
                <description>Controls the base address [31:15] of region&lt;n&gt;. The SMC only permits a region to start at address 0x0, or at a multiple of its region size. For example, if the size of a region is 512MB, and it is not at address 0x0, the only valid settings for this field are: 17`b00100000000000000 17`b01000000000000000 17`b01100000000000000 17`b10000000000000000 17`b10100000000000000 17`b11000000000000000 17`b11100000000000000 </description>
                <bitRange>[31:15]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>DRM_ENDADDR_REG</name>
          <description>DRM End Address Register</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF8000</resetMask>
          <fields>
            <field>
              <name>DRM_ENDADDR_REG</name>
              <description></description>
              <bitRange>[31:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRM_ILLACCE_REG0</name>
          <description>DRM_ILLACCE_REG0</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DRM_ILLACCE_REG</name>
              <description>When a master, which is non-secure, accesses the DRM space, then the relevant bit will be set up. See for detail. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRM_MASTER_EN_REG</name>
          <description>DRM Master Enable Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800039F1</resetMask>
          <fields>
            <field>
              <name>DRM_EN</name>
              <description>DRM enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPU_WRITE_EN</name>
              <description>GPU write enable. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPU_READ_EN</name>
              <description>GPU read enable. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPU_EN</name>
              <description>GPU enable When setted the bit to 1,bit12 and bit13 will be invalid. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_ROT</name>
              <description>DE_ROT enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_INTERLACE</name>
              <description>DE_INTERLACE enable. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_RT_WB</name>
              <description>DE_RT-WB enable. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_RT_MIXER1</name>
              <description>DE_RT-MIXER1 enable. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_RT_MIXER0</name>
              <description>DE_RT-MIXER0 enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VE_DECODE_EN</name>
              <description>VE decode enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRM_STATADDR_REG</name>
          <description>DRM Start Address Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF8000</resetMask>
          <fields>
            <field>
              <name>DRM_STATADDR_REG</name>
              <description></description>
              <bitRange>[31:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_ACTION_REG</name>
          <description>SMC Action Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>SMC_INT_RESP</name>
              <description>Control how the SMC uses the bresps[1:0], rresps[1:0], and smc_int signals when a region permission failure occurs: 2`b00 = sets smc_int LOW and issues an OKEY response 2`b01 = sets smc_int LOW and issues a DECERR response 2`b10 = sets smc_int HIGH and issues an OKEY response 2`b11 = sets smc_int HIGH and issues a DECERR response </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_CONFIG_REG</name>
          <description>SMC Configuration Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1F0F</resetValue>
          <resetMask>0x3F0F</resetMask>
          <fields>
            <field>
              <name>ADDR_WIDTH_RTN</name>
              <description>Address width. Return the width of the AXI address bus. 6`b 000000-6`b011110 reserved. 6`b 011111 = 32-bit ... 6`b 111111 = 64-bit </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>REGIONS_RTN</name>
              <description>Returns the number of the regions that the SMC provides. 4`b0000 = reserved 4`b0001 = 2 regions ... 4`b1111 = 16 regions.  </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_FAIL_ADDR_REG</name>
          <description>SMC Fail Address Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIRST_ACCESS_FAIL</name>
              <description>Return the address bits [31:0] of the first access to fail a region permission check after the interrupt was cleared. For external 16-bit DDR2, the address [2:0] is fixed to zero. For external 32-bit DDR2 and 16-bit DDR3, the address [3:0] is fixed to zero. For external 32-bit DDR3, the address [4:0] is fixed to zero. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_FAIL_CTRL_REG</name>
          <description>SMC Fail Control Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1300000</resetMask>
          <fields>
            <field>
              <name>READ_WRITE</name>
              <description>This bit indicates whether the first access to fail a region permission check was a write or read as: 0 = read access 1 = write access. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NON_SECURE</name>
              <description>After clearing the interrupt status, this bit indicates whether the first access to fail a region permission check was non-secure. Read as: 0 = secure access 1 = non-secure access </description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PRIVILEGED</name>
              <description>After clearing the interrupt status, this bit indicates whether the first access to fail a region permission check was privileged. Read as: 0 = unprivileged access. 1 = privileged access </description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_FAIL_ID_REG</name>
          <description>SMC Fail ID Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF00FF</resetMask>
          <fields>
            <field>
              <name>FAIL_BST_LEN</name>
              <description>Fail burst length. 0 = 1 word length ... 0xf =16 words length </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FAIL_MASTER_ID</name>
              <description>Fail Master ID. The value stands for master id, see the  MASTER and MASTER ID for detail. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_INT_CLEAR_REG</name>
          <description>SMC Interrupt Clear Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SMC_CLR_REG</name>
              <description>Write any value to the int_clear register sets the : Status bit to 0 in the int_status register Overrun bit to 0 in the int_status register. Note: It will be auto cleared after the write operation. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_INT_STATUS_REG</name>
          <description>SMC Interrupt Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>INT_OVERRUN</name>
              <description>When set to 1, it indicates the occurrence of two or more region permission failure since the interrupt was last cleared. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INT_STATUS</name>
              <description>Return the status of the interrupt. 
0: interrupt is inactive. 
1: interrupt is active. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>inactive</name>
                  <description>interrupt is inactive.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active</name>
                  <description>interrupt is active.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_LD_RANGE_REG</name>
          <description>SMC Lock Down Range Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000000F</resetMask>
          <fields>
            <field>
              <name>LOCKDOWN_EN</name>
              <description>When set to 1, it enables the lockdown_regions field to control the regions that are to be locked. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_REGIONS_LOCKDOWN</name>
              <description>Control the number of regions to lockdown when the enable bit is set to 1. 4`b0000 = region no_of_regions-1 is locked 4`b0001 = region no_of_regions-1 to region no_of_regions-2 are locked ... 4`b1111 = region no_of_regions-1 to region no_of_regions-16 are locked </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_LD_SELECT_REG</name>
          <description>SMC Lock Down Select Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ACCESS_TYPE_SPECU</name>
              <description>Modify the access type of the speculation_control register: 
0: no effect. The speculation register remains RW. 
1: speculation_control register is RO </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_effect</name>
                  <description>no effect. The speculation register remains RW.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>speculation_control</name>
                  <description>speculation_control register is RO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACCESS_TYPE_SEC_INV_EN</name>
              <description>Modify the access type of the security_inversion_en register. 
0: no effect. Security_inversion_en register remains RW. 
1: security_inversion_en register is RO </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_effect</name>
                  <description>no effect. Security_inversion_en register remains RW.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>security_inversion_en</name>
                  <description>security_inversion_en register is RO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACCESS_TYPE_LOCKDOWN_RANGE</name>
              <description>Modify the access type of the lockdown_range register. 
0: no effect. Lockdown_range register remains RW 
1: lockdown_range register is RO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_effect</name>
                  <description>no effect. Lockdown_range register remains RW</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>lockdown_range</name>
                  <description>lockdown_range register is RO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_MST_ATTRI_REG</name>
          <description>SMC Master Attribute Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MST_ATTRI</name>
              <description>0: The secure attribute of master is up to master security extensions; 
1: The secure attribute of master is up to . </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_MST_BYP_REG</name>
          <description>SMC Master Bypass Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SMC_MASTER_BYPASS_EN</name>
              <description>SMC Master n Bypass Enable.  (n = 0~31, see the . MASTER and MASTER ID for detail.) Note: Bit[31:0] stand for Master ID [31:0] If the master n bypass enable is set to 0, the master n access must be through the SMC. 
0: Bypass Disable 
1: Bypass Enable.  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_MST_SEC_REG</name>
          <description>SMC Master Secure Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SMC_MASTER_SEC</name>
              <description>SMC Master n Secure Configuration.(n = 0~31 see the  for detail) 
0: secure 
1: non-secure. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_SEC_INV_EN_REG</name>
          <description>SMC Security Inversion Enable Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>SEC_INV_EN</name>
              <description>Security_inversion_en. Controls whether the SMC permits security inversion to occur. 0 = security inversion is not permitted. 1 = security inversion is permitted. This enables a region to be accessible to masters in Non-secure state but not accessible to masters in Secure state. See  and . </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_SPECU_CTRL_REG</name>
          <description>SMC Speculation Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>WRITE_SPECU</name>
              <description>Write_speculation. Control the write access speculation: 0 = write access speculation is enabled 1 = write access speculation is disabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>READ_SPECU</name>
              <description>Read_speculation. Control the read access speculation: 0 = read access speculation is enabled 1 = read access speculation is disabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>System Control</name>
      <description>System Control</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C00000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>EMAC_CLK_REG</name>
          <description>EMAC Clock Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>RMII_EN</name>
              <description>0 : Disable RMII Module 1 : Enable RMII Module When this bit assert, MII or RGMII interface is disabled( This means bit13 is prior to bit2) </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ETXDC</name>
              <description>Configure EMAC Transmit Clock Delay Chain. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERXDC</name>
              <description>Configure EMAC Receive Clock Delay Chain. </description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERXIE</name>
              <description>Enable EMAC Receive Clock Invertor. 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETXIE</name>
              <description>Enable EMAC Transmit Clock Invertor. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EPIT</name>
              <description>EMAC PHY Interface Type 
0: MII 
1: RGMII </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MII</name>
                  <description>MII</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII</name>
                  <description>RGMII</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETCS</name>
              <description>EMAC Transmit Clock Source 
00: Transmit clock source for MII 
01: External transmit clock source for GMII and RGMII 
10: Internal transmit clock source for GMII and RGMII 
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmit</name>
                  <description>Transmit clock source for MII</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External transmit clock source for GMII and RGMII</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal transmit clock source for GMII and RGMII</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VER_REG</name>
          <description>Version Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>UBOOT_SEL_PAD_STA</name>
              <description>U_boot Select Pin Status. 
0: U_Boot;  
1: Normal Boot. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>U_Boot</name>
                  <description>U_Boot;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Boot.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VER_BITS</name>
              <description>This read-only bit field always reads back the mask revision level of the chip. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>High Speed Timer</name>
      <description>High Speed Timer</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C60000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>HS_TMR_CTRL_REG</name>
          <description>HS Timer Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800000F3</resetMask>
          <fields>
            <field>
              <name>HS_TMR_TEST</name>
              <description>High speed timer test mode. In test mode, the low register should be set to 0x1, the high register will down counter. The counter needs to be reloaded. 
0: normal mode;  
1: test mode. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal mode;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>test</name>
                  <description>test mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_MODE</name>
              <description>High Speed Timer mode. 
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_CLK</name>
              <description>Select the pre-scale of the high speed timer clock sources. 
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: / 
110: / 
111: / </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_RELOAD</name>
              <description>High Speed Timer Reload. 
0: No effect 
1: Reload High Speed Timer Interval Value. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload High Speed Timer Interval Value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_EN</name>
              <description>High Speed Timer Enable. 
0: Stop/Pause 
1: Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start. If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to `0`, the current value counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the Software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_CURNT_HI_REG</name>
          <description>HS Timer Current Value High Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_CUR_VALUE_HI</name>
              <description>High Speed Timer Current Value [55:32]. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_CURNT_LO_REG</name>
          <description>HS Timer Current Value Low Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_CUR_VALUE_LO</name>
              <description>High Speed Timer Current Value [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_INTV_HI_REG</name>
          <description>HS Timer Interval Value High Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_INTV_VALUE_HI</name>
              <description>High Speed Timer Interval Value [55:32]. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_INTV_LO_REG</name>
          <description>HS Timer Interval Value Low Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_INTV_VALUE_LO</name>
              <description>High Speed Timer Interval Value [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_EN_REG</name>
          <description>HS Timer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HS_TMR_INT_EN</name>
              <description>High Speed Timer Interrupt Enable. 
0: No effect; 
1: High Speed Timer Interval Value reached interrupt enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Speed Timer Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_STAS_REG</name>
          <description>HS Timer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HS_TMR_IRQ_PEND</name>
              <description>High Speed Timer IRQ Pending. Set 1 to the bit will clear it. 
0: No effect; 
1: Pending, High speed timer interval value is reached. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, High speed timer interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2S/PCM 0</name>
      <description>I2S/PCM 0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>_n[%s]</name>
          <addressOffset>0x34</addressOffset>
          <register>
            <name>I2S_PCM_TXnCHMAP</name>
            <description>I2S_PCM_TXnCHMAP</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x77777777</resetMask>
            <fields>
              <field>
                <name>T_XN_CH7_MAP</name>
                <description>TXn_CH7_MAP TXn Channel7 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[30:28]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_CH6_MAP</name>
                <description>TXn_CH6_MAP TXn Channel6 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[26:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_CH5_MAP</name>
                <description>TXn_CH5_MAP TXn Channel5 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[22:20]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_CH4_MAP</name>
                <description>TXn_CH4_MAP TXn Channel4 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[18:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_CH3_MAP</name>
                <description>TXn_CH3_MAP TXn Channel3 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[14:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_CH2_MAP</name>
                <description>TXn_CH2_MAP TXn Channel2 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[10:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_CH1_MAP</name>
                <description>TXn_CH1_MAP TXn Channel1 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>T_XN_CH0_MAP</name>
                <description>TXn_CH0_MAP TXn Channel0 Mapping 
0: 1st sample ... 
7: 8th sample </description>
                <bitRange>[2:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8th_sample</name>
                    <description>8th sample</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>I2S_PCM_TXnCHSEL</name>
            <description>I2S_PCM_TXnCHSEL</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3FF7</resetMask>
            <fields>
              <field>
                <name>T_XN_OFFSET</name>
                <description>TXn_OFFSET TXn offset tune, TXn data offset to LRCK  
0: no offset n: data is offset by n BCLKs to LRCK </description>
                <bitRange>[13:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TXN_CHEN</name>
                <description>TXn_CHEN TXn Channel (slot) enable, bit[11:4] refer to slot [7:0]. When one or more slot(s) is(are) disabled, the affected slot(s) is(are) set to disable state 
0: disable 
1: enable </description>
                <bitRange>[11:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>T_XN_CHSEL</name>
                <description>TXn_CHSEL TXn Channel (slot) number Select for each output 
0: 1 channel / slot ... 
7: 8 channels / slots </description>
                <bitRange>[2:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8 channels / slots</description>
                    <value>7</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>I2S_PCM_CHCFG</name>
          <description>I2S_PCM_CHCFG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x377</resetMask>
          <fields>
            <field>
              <name>TX_SLOT_HIZ</name>
              <description>0: normal mode for the last half cycle of BCLK in the slot 
1: turn to hi-z state for the last half cycle of BCLK in the slot </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal_mode</name>
                  <description>normal mode for the last half cycle of BCLK in the slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>turn</name>
                  <description>turn to hi-z state for the last half cycle of BCLK in the slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_XN_STATE</name>
              <description>TXn_STATE 
0: transfer level 0 when not transferring slot 
1: turn to hi-z state when not transferring slot </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>transfer_level</name>
                  <description>transfer level 0 when not transferring slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>turn</name>
                  <description>turn to hi-z state when not transferring slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_SLOT_NUM</name>
              <description>RX Channel/Slot Number which between CPU/DMA and FIFO 
0: 1 channel or slot ... 
7: 8 channels or slots </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_SLOT_NUM</name>
              <description>TX Channel/Slot Number which between CPU/DMA and FIFO 
0: 1 channel or slot ... 
7: 8 channels or slots </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CLKD</name>
          <description>I2S_PCM_CLKD</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>MCLKO_EN</name>
              <description>0: Disable MCLK Output 
1: Enable MCLK Output Notes: Whether in Slave or Master mode, when this bit is set to 1, MCLK should be output. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable MCLK Output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable MCLK Output Notes: Whether in Slave or Master mode, when this bit is set to 1, MCLK should be output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCLKDIV</name>
              <description>BCLK Divide Ratio from PLL2 
0: reserved 
1: Divide by 1 
2: Divide by 2 
3: Divide by 4 
4: Divide by 6 
5: Divide by 8 
6: Divide by 12 
7: Divide by 16 
8: Divide by 24 
9: Divide by 32 
10: Divide by 48 
11: Divide by 64 
12: Divide by 96 
13: Divide by 128 
14: Divide by 176 
15: Divide by 192 </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLKDIV</name>
              <description>MCLK Divide Ratio from PLL2 Output 
0: reserved 
1: Divide by 1 
2: Divide by 2 
3: Divide by 4 
4: Divide by 6 
5: Divide by 8 
6: Divide by 12 
7: Divide by 16 
8: Divide by 24 
9: Divide by 32 
10: Divide by 48 
11: Divide by 64 
12: Divide by 96 
13: Divide by 128 
14: Divide by 176 
15: Divide by 192 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>7</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>8</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>9</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>12</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>13</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>14</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>15</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CTL</name>
          <description>I2S_PCM_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x60000</resetValue>
          <resetMask>0x70F7F</resetMask>
          <fields>
            <field>
              <name>BCLK_OUT</name>
              <description>0: input  
1: output </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>input</name>
                  <description>input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>output</name>
                  <description>output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_OUT</name>
              <description>0: input  
1: output </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>input</name>
                  <description>input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>output</name>
                  <description>output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDO0_EN</name>
              <description>0: Disable, Hi-Z state 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, Hi-Z state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT</name>
              <description>Mute 
0: normal transfer 
1: force DOUT to output 0 </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>force</name>
                  <description>force DOUT to output 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE_SEL</name>
              <description>Mode Selection 
0: PCM mode (offset 0: DSP_B;  offset 1: DSP_A) 
1: Left mode (offset 0: LJ mode;  offset 1: I2S mode) 
2: Right-Justified mode 
3: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>right_Justified_mode</name>
                  <description>Right-Justified mode</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop back test 
0: Normal mode 
1: Loop back test When set `1`, connecting the SDO0 with the SDI  </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop back test When set `1`, connecting the SDO0 with the SDI</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmitter Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FCTL</name>
          <description>I2S_PCM_FCTL</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x400F0</resetValue>
          <resetMask>0x8307F3F7</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio hub enable 0:disable 1:enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TX FIFO, self clear to `0`. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRX</name>
              <description>Write `1` to flush RX FIFO, self clear to `0`. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO Empty Trigger Level Interrupt and DMA request trigger level for TXFIFO normal condition Trigger Level = TXTL </description>
              <bitRange>[18:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RX FIFO Trigger Level Interrupt and DMA request trigger level for RXFIFO normal condition Trigger Level = RXTL + 1 </description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TX FIFO Input Mode (Mode 0, 1) 
0: Valid data at the MSB of TXFIFO register 
1: Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I[31:0] = {APB_WDATA[31:12], 12`h0} Mode 1: FIFO_I[31:0] = {APB_WDATA[19:0], 12`h0} </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I[31:0] = {APB_WDATA[31:12], 12`h0} Mode 1: FIFO_I[31:0] = {APB_WDATA[19:0], 12`h0}</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RX FIFO Output Mode (Mode 0, 1, 2, 3) 
00: Expanding `0` at LSB of DA_RXFIFO register. 
01: Expanding received sample sign bit at MSB of DA_RXFIFO register. 
10: Truncating received samples at high half-word of DA_RXFIFO register and low half-word of DA_RXFIFO register is filled by `0`. 
11: Truncating received samples at low half-word of DA_RXFIFO register and high half-word of DA_RXFIFO register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: APB_RDATA[31:0] = {FIFO_O[31:12], 12`h0} Mode 1: APB_RDATA [31:0] = {12{FIFO_O[31]}, FIFO_O[31:12]} Mode 2: APB_RDATA [31:0] = {FIFO_O[31:16], 16`h0} Mode 3: APB_RDATA [31:0] = {16{FIFO_O[31], FIFO_O[31:16]} </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`_at_LSB_of</name>
                  <description>Expanding `0` at LSB of DA_RXFIFO register.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample_sign_bit</name>
                  <description>Expanding received sample sign bit at MSB of DA_RXFIFO register.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_high</name>
                  <description>Truncating received samples at high half-word of DA_RXFIFO register and low half-word of DA_RXFIFO register is filled by `0`.</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_low</name>
                  <description>Truncating received samples at low half-word of DA_RXFIFO register and high half-word of DA_RXFIFO register is expanded by its sign bit. Example for 20-bits received audio sample: Mode 0: APB_RDATA[31:0] = {FIFO_O[31:12], 12`h0} Mode 1: APB_RDATA [31:0] = {12{FIFO_O[31]}, FIFO_O[31:12]} Mode 2: APB_RDATA [31:0] = {FIFO_O[31:16], 16`h0} Mode 3: APB_RDATA [31:0] = {16{FIFO_O[31], FIFO_O[31:16]}</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FMT0</name>
          <description>I2S_PCM_FMT0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x33</resetValue>
          <resetMask>0xFFFBFFFF</resetMask>
          <fields>
            <field>
              <name>LRCK_WIDTH</name>
              <description>(only apply in PCM mode ) LRCK width   
0: LRCK = 1 BCLK width (short frame) 
1: LRCK = 2 BCLK width (long frame) </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LRCK__equals__1</name>
                  <description>LRCK = 1 BCLK width (short frame)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LRCK__equals__2</name>
                  <description>LRCK = 2 BCLK width (long frame)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_POLARITY/LRCKR_POLARITY</name>
              <description>When apply in I2S / Left-Justified / Right-Justified mode: 
0: Left channel when LRCK is low 
1: Left channel when LRCK is high When apply in PCM mode: 
0: PCM LRCK/LRCKR asserted at the negative edge 
1: PCM LRCK/LRCKR asserted at the positive edge </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>low</name>
                  <description>Left channel when LRCK is low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>Left channel when LRCK is high When apply in PCM mode:</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_slash_LRCKR_asserted_at_the_negative</name>
                  <description>PCM LRCK/LRCKR asserted at the negative edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_slash_LRCKR_asserted_at_the_positive</name>
                  <description>PCM LRCK/LRCKR asserted at the positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_PERIOD</name>
              <description>It is used to program the number of BCLKs per channel of sample frame. This value is interpreted as follow: PCM mode: Number of BCLKs within (Left + Right) channel width I2S / Left-Justified / Right-Justified mode: Number of BCLKs within each individual channel width (Left or Right)  N+1 For example: n = 7:   8 BCLK width ... n = 1023:   1024 BCLKs width </description>
              <bitRange>[17:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BCLK_POLARITY</name>
              <description>0: normal mode, negative edge drive and positive edge sample 
1: invert mode, positive edge drive and negative edge sample </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal mode, negative edge drive and positive edge sample</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert mode, positive edge drive and negative edge sample</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SR</name>
              <description>Sample Resolution 
0: Reserved 
1: 8-bit 
2: 12-bit 
3: 16-bit 
4: 20-bit 
5: 24-bit 
6: 28-bit 
7: 32-bit </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDGE_TRANSFER</name>
              <description>0: SDO drive data and SDI sample data at the different BCLK edge 
1: SDO drive data and SDI sample data at the same BCLK edge BCLK_POLARITY = 0, use negative edge BCLK_POLARITY = 1, use positive edge </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDO_drive_data_and_SDI_sample_data_at_the_different</name>
                  <description>SDO drive data and SDI sample data at the different BCLK edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDO_drive_data_and_SDI_sample_data_at_the_same</name>
                  <description>SDO drive data and SDI sample data at the same BCLK edge BCLK_POLARITY = 0, use negative edge BCLK_POLARITY = 1, use positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SW</name>
              <description>Slot Width Select 
0: Reserved 
1: 8-bit 
2: 12-bit 
3: 16-bit 
4: 20-bit 
5: 24-bit 
6: 28-bit 
7: 32-bit </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>4</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>5</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>6</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FMT1</name>
          <description>I2S_PCM_FMT1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x30</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RX</name>
              <description>MLS MSB / LSB First Select 
0: MSB First 
1: LSB First </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX</name>
              <description>MLS MSB / LSB First Select 
0: MSB First 
1: LSB First </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEXT</name>
              <description>Sign Extend in slot [sample resolution &lt; slot width] 
0: Zeros or audio gain padding at LSB position 
1: Sign extension at MSB position 
2: Reserved 
3: Transfer 0 after each sample in each slot </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer 0 after each sample in each slot</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PDM</name>
              <description>PCM Data Mode 
0: Linear PCM 
1: reserved 
2: 8-bits u-law 
3: 8-bits A-law </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bits_ulaw</name>
                  <description>8-bits u-law</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_Alaw</name>
                  <description>8-bits A-law</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_PDM</name>
              <description>PCM Data Mode 
0: Linear PCM 
1: reserved 
2: 8-bits u-law 
3: 8-bits A-law </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bits_ulaw</name>
                  <description>8-bits u-law</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits_Alaw</name>
                  <description>8-bits A-law</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FSTA</name>
          <description>I2S_PCM_FSTA</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x10800000</resetValue>
          <resetMask>0x10FF017F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TX FIFO Empty 
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO (&gt;= 1 word) </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word Counter </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RX FIFO Available 
0: No available data in RX FIFO 
1: More than one sample in RX FIFO (&gt;= 1 word) </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one sample in RX FIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RX FIFO Available Sample Word Counter </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_INT</name>
          <description>I2S_PCM_INT</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TX_DRQ</name>
              <description>TX FIFO Empty DRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable When set to `1`, an interrupt happens when writing new audio data if TX FIFO is full. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, an interrupt happens when writing new audio data if TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RX FIFO Data Available DRQ Enable 
0: Disable 
1: Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RX FIFO. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable When set to `1`, RXFIFO DMA Request line is asserted if Data is available in RX FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXUI_EN</name>
              <description>RX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RX FIFO Data Available Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_ISTA</name>
          <description>I2S_PCM_ISTA</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Under run Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Under run Pending Interrupt Write 1 to clear this interrupt </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Under run Pending Interrupt Write 1 to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No Pending Interrupt 
1: FIFO Overrun Pending Interrupt Write `1` to clear this interrupt </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt when data in TX FIFO are less than TX trigger level Write `1` to clear this interrupt or automatic clear if interrupt condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt when data in TX FIFO are less than TX trigger level Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXU_INT</name>
              <description>RX FIFO Under run Pending Interrupt 
0: No Pending Interrupt 1:FIFO Under run Pending Interrupt Write 1 to clear this interrupt </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt 1:FIFO Under run Pending Interrupt Write 1 to clear this interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RX FIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ  Write `1` to clear this interrupt </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ  Write `1` to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RX FIFO Data Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ when data in RX FIFO are more than RX trigger level Write `1` to clear this interrupt or automatic clear if interrupt condition fails. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ when data in RX FIFO are more than RX trigger level Write `1` to clear this interrupt or automatic clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHMAP</name>
          <description>I2S_PCM_RXCHMAP</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>RX_CH7_MAP</name>
              <description>RX Channel7 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH6_MAP</name>
              <description>RX Channel6 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH5_MAP</name>
              <description>RX Channel5 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH4_MAP</name>
              <description>RX Channel4 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH3_MAP</name>
              <description>RX Channel3 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH2_MAP</name>
              <description>RX Channel2 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH1_MAP</name>
              <description>TX Channel1 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH0_MAP</name>
              <description>RX Channel0 Mapping 
0: 1st sample ... 
7: 8th sample </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHSEL</name>
          <description>I2S_PCM_RXCHSEL</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3007</resetMask>
          <fields>
            <field>
              <name>RX_OFFSET</name>
              <description>RX offset tune, RX data offset to LRCK 
0: no offset n: data is offset by n BCLKs to LRCK </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_CHSEL</name>
              <description>RX Channel (slot) number Select for input 
0: 1 channel / slot ... 
7: 8 channels / slots </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels / slots</description>
                  <value>7</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCNT</name>
          <description>I2S_PCM_RXCNT</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample Counter The audio sample number of writing into RXFIFO. When one sample is written by Digital Audio Engine, the RX sample counter register increases by one. The RX sample counter register can be set to any initial valve at any time. After been updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXFIFO</name>
          <description>I2S_PCM_RXFIFO</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCNT</name>
          <description>I2S_PCM_TXCNT</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of sending into TXFIFO. When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial valve at any time. After been updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXFIFO</name>
          <description>I2S_PCM_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>TX Sample Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample. </description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM 0">
      <name>I2S/PCM 1</name>
      <description>I2S/PCM 1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM 0">
      <name>I2S/PCM 2</name>
      <description>I2S/PCM 2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>KEYADC</name>
      <description>KEYADC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>KEYADC_CTRL_REG</name>
          <description>KEYADC_CTRL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1000168</resetValue>
          <resetMask>0xFFCF3FFD</resetMask>
          <fields>
            <field>
              <name>FIRST_CONVERT_DLY</name>
              <description>FIRST_CONVERT_DLY. ADC First Convert Delay setting, ADC conversion is delayed by n samples </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTINUE_TIME_SELECT</name>
              <description>CONTINUE_TIME_SELECT. Continue Mode time select, one of 8*(N+1) sample as a valuable sample data </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY_MODE_SELECT</name>
              <description>KEY_MODE_SELECT. Key Mode Select: 
00: Normal Mode 
01: Single Mode 
10: Continue Mode </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single Mode</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Continue</name>
                  <description>Continue Mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEVELA_B_CNT</name>
              <description>LEVELA_B_CNT. Level A to Level B time threshold select, judge ADC convert value in level A to level B in n+1 samples </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYADC_HOLD_KEY_EN_KEYADC_HOLD</name>
              <description>KEYADC_HOLD_KEY_EN KEYADC Hold Key Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_HOLD_EN</name>
              <description>KEYADC_HOLD_EN. KEYADC Sample hold Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEVELB_VOL</name>
              <description>LEVELB_VOL. Level B Corresponding Data Value setting (the real voltage value) 
00: 0x3C (~1.9v) 
01: 0x39 (~1.8v) 
10: 0x36 (~1.7v) 
11: 0x33 (~1.6v) </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0x3C</name>
                  <description>0x3C (~1.9v)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x39</name>
                  <description>0x39 (~1.8v)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x36</name>
                  <description>0x36 (~1.7v)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x33</name>
                  <description>0x33 (~1.6v)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_SAMPLE_RATE</name>
              <description>KEYADC_SAMPLE_RATE. KEYADC Sample Rate 
00: 250 Hz 
01: 125 Hz 
10: 62.5 Hz 
11: 32.25 Hz </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_250</name>
                  <description>250 Hz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_125</name>
                  <description>125 Hz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_62_point_5</name>
                  <description>62.5 Hz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_25</name>
                  <description>32.25 Hz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_EN</name>
              <description>KEYADC_EN. KEYADC enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_DATA_REG</name>
          <description>KEYADC_DATA_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>KEYADC_DATA</name>
              <description>KEYADC Data</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_INTC_REG</name>
          <description>KEYADC_INTC_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>ADC_KEYUP_IRQ_EN</name>
              <description>ADC Key Up IRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_ALRDY_HOLD_IRQ_EN</name>
              <description>ADC Already Hold IRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_HOLD_IRQ_EN</name>
              <description>ADC Hold Key IRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_KEYDOWN_EN</name>
              <description>ADC Key Down Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_DATA_IRQ_EN</name>
              <description>ADC Data IRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_INTS_REG</name>
          <description>KEYADC_INTS_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>ADC_KEYUP_PENDING</name>
              <description>ADC Key up pending Bit When general key pull up, it the corresponding interrupt is enabled. 
0: No IRQ 
1: IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_ALRDY_HOLD_PENDING</name>
              <description>ADC Already Hold Pending Bit When hold key pull down and pull the general key down, if the corresponding interrupt is enabled. 
0: No IRQ 
1: IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_HOLDKEY_PENDING</name>
              <description>ADC Hold Key pending Bit When Hold key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt is enabled. 
0: NO IRQ 
1: IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_IRQ</name>
                  <description>NO IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_KEYDOWN_PENDING</name>
              <description>ADC Key Down IRQ Pending Bit When General key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt is enabled. 
0: No IRQ 
1: IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_DATA_PENDING</name>
              <description>ADC Data IRQ Pending Bit 
0: No IRQ 
1: IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending Notes: Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MSGBOX</name>
      <description>MSGBOX</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C17000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>MSGBOXM_FIFO_STATUS_REG</name>
            <description>MSGBOXM_FIFO_STATUS_REG</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>FIFO_FULL_FLAG</name>
                <description>0: The Message FIFO queue is not full (space is available), 
1: The Message FIFO queue is full.  This FIFO status register has the status related to the message queue. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>not_full</name>
                    <description>The Message FIFO queue is not full (space is available),</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>full</name>
                    <description>The Message FIFO queue is full.  This FIFO status register has the status related to the message queue.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXM_MSG_REG</name>
            <description>MSGBOXM_MSG_REG</description>
            <addressOffset>0x80</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>MESSAGE</name>
                <description>The message register stores the next to be read message of the message FIFO queue. Reads remove the message from the FIFO queue. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXM_MSG_STATUS_REG</name>
            <description>MSGBOXM_MSG_STATUS_REG</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>MSG_NUM</name>
                <description>Number of unread messages in the message queue. Here, limited to four messages per message queue. 
000: There is no message in the message FIFO queue. 
001: There is 1 message in the message FIFO queue. 
010: There are 2 messages in the message FIFO queue. 
011: There are 3 messages in the message FIFO queue. 
100: There are 4 messages in the message FIFO queue. 101~111:/ </description>
                <bitRange>[2:0]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>no_message</name>
                    <description>There is no message in the message FIFO queue.</description>
                    <value>0b000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>1</name>
                    <description>There is 1 message in the message FIFO queue.</description>
                    <value>0b001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_2</name>
                    <description>There are 2 messages in the message FIFO queue.</description>
                    <value>0b010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_3</name>
                    <description>There are 3 messages in the message FIFO queue.</description>
                    <value>0b011</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_4</name>
                    <description>There are 4 messages in the message FIFO queue. 101~111:/</description>
                    <value>0b100</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>2</dim>
          <dimIncrement>32</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x40</addressOffset>
          <register>
            <name>MSGBOXU_IRQ_EN_REG</name>
            <description>IRQ Enable For User N(N=0,1)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>TRANSMIT_MQ7_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 7 is not full.) </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 7 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ7_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 7 has received a new message.) </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 7 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ6_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will Notify user u by interrupt when Message Queue 6 is not full.) </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will Notify user u by interrupt when Message Queue 6 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ6_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 6 has received a new message.) </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 6 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ5_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 5 is not full.) </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 5 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ5_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 5 has received a new message.) </description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 5 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ4_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 4 is not full.) </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 4 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ4_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 4 has received a new message.) </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 4 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ3_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 3 is not full.) </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 3 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ3_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 3 has received a new message.) </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 3 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ2_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 2 is not full.) </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 2 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ2_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when   Message Queue 2 has received a new message.) </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when   Message Queue 2 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ1_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 1 is not full.) </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 1 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ1_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 1 has received a new message.) </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 1 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ0_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 0 is not full.) </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 0 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ0_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 0 has received a new message.) </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 0 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXU_IRQ_STATUS_REG</name>
            <description>IRQ Enable For User N(N=0,1)</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0xAAAA</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>TRANSMIT_MQ7_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 7 is not full. Set one to this bit will clear it. </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 7 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ7_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 7 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 7 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ6_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 6 is not full. Set one to this bit will clear it. </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 6 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ6_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 6 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 6 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ5_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 5 is not full. Set one to this bit will clear it. </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 5 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ5_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 5 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 5 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ4_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 4 is not full. Set one to this bit will clear it. </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 4 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ4_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 4 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 4 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ3_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 3 is not full. Set one to this bit will clear it. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 3 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ3_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 3 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 3 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ2_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 2 is not full. Set one to this bit will clear it. </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 2 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ2_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 2 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 2 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ1_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 1 is not full. Set one to this bit will clear it. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 1 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ1_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 1 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 1 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ0_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 0 is not full. Set one to this bit will clear it. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 0 is not full. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ0_IRQ_PEND</name>
                <description>0: No effect, 
1: Pending. This bit will be pending for user u when Message Queue 0 has received a new message. Set one to this bit will clear it. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 0 has received a new message. Set one to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>MSGBOX_CTRL_REG0</name>
          <description>Message Queue Attribute Control Register 0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10101010</resetValue>
          <resetMask>0x11111111</resetMask>
          <fields>
            <field>
              <name>TRANSMIT_MQ3</name>
              <description>Message Queue 3 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ3</name>
              <description>Message Queue 3 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ2</name>
              <description>Message Queue 2 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ2</name>
              <description>Message Queue 2 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ1</name>
              <description>Message Queue 1 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ1</name>
              <description>Message Queue 1 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ0</name>
              <description>Message Queue 0 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ0</name>
              <description>Message Queue 0 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MSGBOX_CTRL_REG1</name>
          <description>Message Queue Attribute Control Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x10101010</resetValue>
          <resetMask>0x11111111</resetMask>
          <fields>
            <field>
              <name>TRANSMIT_MQ7</name>
              <description>Message Queue 7 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ7</name>
              <description>Message Queue 7 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ6</name>
              <description>Message Queue 6 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ6</name>
              <description>Message Queue 6 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ5</name>
              <description>Message Queue 5 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ5</name>
              <description>Message Queue 5 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ4</name>
              <description>Message Queue 4 is a Transmitter of user u. 
0: user0 
1: user1 </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ4</name>
              <description>Message Queue 4 is a Receiver of user u. 
0: user0 
1: user1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>NDFC</name>
      <description>NDFC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C03000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>NDFC_ADDR_HIGH</name>
          <description>NDFC High Word Address Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA8</name>
              <description>NAND Flash 8th Cycle Address Data </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA7</name>
              <description>NAND Flash 7th Cycle Address Data </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA6</name>
              <description>NAND Flash 6th Cycle Address Data </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA5</name>
              <description>NAND Flash 5th Cycle Address Data </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ADDR_LOW</name>
          <description>NDFC Low Word Address Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA4</name>
              <description>NAND Flash 4th Cycle Address Data </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA3</name>
              <description>NAND Flash 3rd Cycle Address Data </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA2</name>
              <description>NAND Flash 2nd Cycle Address Data </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA1</name>
              <description>NAND Flash 1st Cycle Address Data </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD</name>
          <description>Set up NDFC commands Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_CMD_TYPE</name>
              <description>00: Common Command for normal operation 
01: Special Command for Flash Spare Field Operation 
10: Page Command for batch process operation 
11: Reserved </description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Common</name>
                  <description>Common Command for normal operation</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special Command for Flash Spare Field Operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page Command for batch process operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FOURTH_CMD</name>
              <description>0: Don`t send third set command 
1: Send it on the external memory`s bus Notes It is used for EF-NAND page read. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send third set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus Notes It is used for EF-NAND page read.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_THIRD_CMD</name>
              <description>0: Don`t send third set command 
1: Send it on the external memory`s bus Notes It is used for EF-NAND page read. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send third set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus Notes It is used for EF-NAND page read.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ROW_ADDR_AUTO</name>
              <description>Row Address Auto Increase for Page Command 
0: Normal operation 
1: Row address increasing automatically </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Row</name>
                  <description>Row address increasing automatically</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_METHOD</name>
              <description>Data swap method when the internal RAM and system memory It is only active for Common Command and Special Command. 
0: No action 
1: DMA transfer automatically It only is active when NDFC_RAM_METHOD is 1. If this bit is set to 1, NDFC should setup DRQ to fetching data before output to Flash or NDFC should setup DRQ to sending out to system memory after fetching data from Flash. If this bit is set to 0, NDFC output the data in internal RAM or do nothing after fetching data from Flash. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_action</name>
                  <description>No action</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA transfer automatically It only is active when NDFC_RAM_METHOD is 1. If this bit is set to 1, NDFC should setup DRQ to fetching data before output to Flash or NDFC should setup DRQ to sending out to system memory after fetching data from Flash. If this bit is set to 0, NDFC output the data in internal RAM or do nothing after fetching data from Flash.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEQ</name>
              <description>User data &amp; BCH check word position. It only is active for Page Command, don`t care about this bit for other two commands 
0: Interleave Method (on page spare area) 
1: Sequence Method (following data block) </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interleave</name>
                  <description>Interleave Method (on page spare area)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sequence</name>
                  <description>Sequence Method (following data block)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_SECOND_CMD</name>
              <description>0: Don`t send second set command 
1: Send it on the external memory`s bus </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send second set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_WAIT_FLAG</name>
              <description>0: NDFC can transfer data regardless of the internal NDFC_RB wire 
1: NDFC can transfer data when the internal NDFC_RB wire is READY; otherwise it can`t when the internal NDFC_RB wire is BUSY. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_regardless</name>
                  <description>NDFC can transfer data regardless of the internal NDFC_RB wire</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_when</name>
                  <description>NDFC can transfer data when the internal NDFC_RB wire is READY; otherwise it can`t when the internal NDFC_RB wire is BUSY.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FIRST_CMD</name>
              <description>0: Don`t send first set command 
1: Send it on the external memory`s bus </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send first set command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send it on the external memory`s bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_TRANS</name>
              <description>0: No data transfer on external memory bus 
1: Data transfer and direction is decided by the field NDFC_ACCESS_DIR </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data transfer on external memory bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data transfer and direction is decided by the field NDFC_ACCESS_DIR</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ACCESS_DIR</name>
              <description>0: Read NAND Flash  
1: Write NAND Flash  </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read NAND Flash</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write NAND Flash</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_ADR</name>
              <description>0: Don`t send ADDRESS 
1: Send N cycles ADDRESS, the number N is specified by NDFC_ADR_NUM field </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don`t</name>
                  <description>Don`t send ADDRESS</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send N cycles ADDRESS, the number N is specified by NDFC_ADR_NUM field</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ADR_NUM</name>
              <description>Address Cycles` Number  
000: 1 cycle address field 
001: 2 cycles address field 
010: 3 cycles address field 
011: 4 cycles address field 
100: 5 cycles address field 
101: 6 cycles address field 
110: 7 cycles address field 
111: 8 cycles address field </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_cycle</name>
                  <description>1 cycle address field</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_cycles</name>
                  <description>2 cycles address field</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_cycles</name>
                  <description>3 cycles address field</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_cycles</name>
                  <description>4 cycles address field</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5_cycles</name>
                  <description>5 cycles address field</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_cycles</name>
                  <description>6 cycles address field</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_cycles</name>
                  <description>7 cycles address field</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_cycles</name>
                  <description>8 cycles address field</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_HIGH_BYTE</name>
              <description>NDFC Command high byte data If 8-bit command is supported, the high byte should be zero for 16-bit bus width NAND Flash. For 8-bit bus width NAND Flash, high byte command is discarded. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_LOW_BYTE</name>
              <description>NDFC Command low byte data This command will be sent to external Flash by NDFC. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET0</name>
          <description>NDFC_CMD_SET0</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE00530</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_READ_CMD1</name>
              <description>Used for Batch Read Operation </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_READ_CMD0</name>
              <description>Used for Batch Read Operation </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD</name>
              <description>Used for Batch Read Operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET1</name>
          <description>NDFC_CMD_SET1</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x708510</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_CMD0</name>
              <description>Used for EF-NAND Page Read operation </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD1</name>
              <description>Used for EF-NAND Page Read operation </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_WRITE_CMD</name>
              <description>Used for Batch Write Operation </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_PROGRAM_CMD</name>
              <description>Used for Batch Write Operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CNT</name>
          <description>NDFC Data Counter for data transfer Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>NDFC_DATA_CNT</name>
              <description>Transfer Data Byte Counter The length can be set from 1 byte to 1024 bytes. However, 1024 bytes is set when it is zero. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CTL</name>
          <description>NDFC Configure and Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3FCF5F</resetMask>
          <fields>
            <field>
              <name>NDFC_CE_SEL</name>
              <description>Chip Select for 8 NAND Flash Chips 0 -7: NDFC Chip Select Signal 0-7 is selected 8-15: NDFC CS[7:0] not selected. GPIO pins can be used for CS. </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_DDR_RM</name>
              <description>DDR Repeat data mode 
0: Lower byte 
1: Higher byte </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Lower</name>
                  <description>Lower byte</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Higher</name>
                  <description>Higher byte</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DDR_REN</name>
              <description>DDR Repeat Enable 
0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NF_TYPE</name>
              <description>NAND Flash Type 
0x0: Normal SDR NAND 
0x1: Reserved 
0x2: ONFI DDR NAND  
0x3: Toggle DDR NAND </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal SDR NAND</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONFI</name>
                  <description>ONFI DDR NAND</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Toggle</name>
                  <description>Toggle DDR NAND</description>
                  <value>0x3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CLE_POL</name>
              <description>NDFC Command Latch Enable (CLE) Signal Polarity Select 
0: High active 
1: Low active </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ALE_POL</name>
              <description>NDFC Address Latch Enable (ALE) Signal Polarity Select 
0: High active 
1: Low active </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_TYPE</name>
              <description>0: Dedicated DMA 
1: Normal DMA </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dedicated</name>
                  <description>Dedicated DMA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RAM_METHOD</name>
              <description>Access internal RAM method 
0: Access internal RAM by AHB bus 
1: Access internal RAM by DMA bus </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_AHB</name>
                  <description>Access internal RAM by AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_DMA</name>
                  <description>Access internal RAM by DMA bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_PAGE_SIZE</name>
              <description>0x0: 1024 bytes 
0x1: 2048 bytes 
0x2: 4096 bytes 
0x3: 8192 bytes 
0x4: 16384 bytes Notes: The page size is for main field data. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1024</name>
                  <description>1024 bytes</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2048</name>
                  <description>2048 bytes</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4096</name>
                  <description>4096 bytes</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8192</name>
                  <description>8192 bytes</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16384</name>
                  <description>16384 bytes Notes: The page size is for main field data.</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CE_ACT</name>
              <description>Chip Select Signal CE# Control During NAND operation 
0: De-active Chip Select Signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatic control Chip Select Signals.  
1: Chip select signal NDFC_CE# is always active after NDFC is enabled </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deactive</name>
                  <description>De-active Chip Select Signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatic control Chip Select Signals.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chip</name>
                  <description>Chip select signal NDFC_CE# is always active after NDFC is enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_SEL</name>
              <description>NDFC external R/B Signal select The value 0-3 selects the external R/B signal. The same R/B signal can be used for multiple chip select flash. </description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_BUS_WIDTH</name>
              <description>0: 8-bit bus 
1: 16-bit bus </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RESET</name>
              <description>NDFC Reset Write 1 to reset NDFC and clear to 0 after reset </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_EN</name>
              <description>NDFC Enable Control 
0: Disable NDFC 
1: Enable NDFC </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable NDFC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable NDFC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DATA_BLOCK_NUM</name>
          <description>NDFC_DATA_BLOCK_NUM</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>DATA_BLOCK_NUM</name>
              <description>DATA BLOCK Number It is used for batch command procession.  
0: no data  
1: 1 data blocks 
2: 2 data blocks ... 
16: 16 data blocks Others: Reserved Notes: 1 data block = 512 or 1024 bytes main field data</description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_data</name>
                  <description>2 data blocks ...</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_data</name>
                  <description>16 data blocks Others: Reserved Notes: 1 data block = 512 or 1024 bytes main field data</description>
                  <value>16</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_CTL</name>
          <description>ECC Configure and Control Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x4A800008</resetValue>
          <resetMask>0x7FFFFE39</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_SEED</name>
              <description>The seed value for randomize engine. It is only active when NDFC_RANDOM_EN is set to `1`. </description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_ECC_MODE</name>
              <description>0x0: BCH-16 for one ECC Data Block 
0x1: BCH-24 for one ECC Data Block 0x2 : BCH-28 for one ECC Data Block 0x3 : BCH-32 for one ECC Data Block 0x4 : BCH-40 for one ECC Data Block 0x5 : BCH-48 for one ECC Data Block 0x6 : BCH-56 for one ECC Data Block 0x7 : BCH-60 for one ECC Data Block 0x8 : BCH-64 for one ECC Data Block Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BCH_minus_16</name>
                  <description>BCH-16 for one ECC Data Block</description>
                  <value>0x0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_24</name>
                  <description>BCH-24 for one ECC Data Block 0x2 : BCH-28 for one ECC Data Block 0x3 : BCH-32 for one ECC Data Block 0x4 : BCH-40 for one ECC Data Block 0x5 : BCH-48 for one ECC Data Block 0x6 : BCH-56 for one ECC Data Block 0x7 : BCH-60 for one ECC Data Block 0x8 : BCH-64 for one ECC Data Block Others: Reserved</description>
                  <value>0x1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_SIZE</name>
              <description>0: ECC block size 
1: Page size </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC block size</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page size</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_DIRECTION</name>
              <description>0: LSB first 
1: MSB first </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_EN</name>
              <description>0: Disable Data Randomize 
1: Enable Data Randomize </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Data Randomize</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Data Randomize</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_BLOCK_SIZE</name>
              <description>0: 1024 bytes of one ECC data block 
1: 512 bytes of one ECC data block </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1024</name>
                  <description>1024 bytes of one ECC data block</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512 bytes of one ECC data block</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EXCEPTION</name>
              <description>0: Normal ECC 
1: For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported. Notes: It only is active when ECC is ON </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal ECC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported. Notes: It only is active when ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_PIPELINE</name>
              <description>Pipeline function enable or disable for batch command 
0: Error Correction function no pipeline with next block operation 
1: Error Correction pipeline </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Error_Correction_function</name>
                  <description>Error Correction function no pipeline with next block operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_Correction_pipeline</name>
                  <description>Error Correction pipeline</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EN</name>
              <description>0: ECC is OFF 
1: ECC is ON </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>ECC is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_ST</name>
          <description>ECC Status and Operation information Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_PAT_FOUND</name>
              <description>Special pattern (all 0x00 or all x0ff) Found Flag for 16 Data Blocks 
0: No Found 
1: Special pattern is found When this field is `1`, this means that the special data is found for reading external NAND flash. The register of NDFC_PAT_ID would indicates which pattern is found. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NDFC_ECC_ERR</name>
              <description>Error information bit of 16 Data Blocks 
0: ECC can correct these error bits or there is no error bit 
1: Error bits number beyond of ECC correction capability and can`t correct them Notes: The LSB of this register is corresponding the 1st ECC data block. 1 ECC Data Block = 512 or 1024 bytes. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFNAND_STATUS</name>
          <description>NDFC_EFNAND_STATUS</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>EF_NAND_STATUS</name>
              <description>The Status Value for EF-NAND Page Read operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFR</name>
          <description>Enhanced Feature Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF7F</resetMask>
          <fields>
            <field>
              <name>NDFC_WP_CTRL</name>
              <description>NAND Flash Write Protect Control Bit 
0: Write Protect is active 
1: Write Protect is not active Notes: When this bit is `0`, WP signal line is low level and external NAND flash is on protected state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active</name>
                  <description>Write Protect is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_active</name>
                  <description>Write Protect is not active Notes: When this bit is `0`, WP signal line is low level and external NAND flash is on protected state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_DEBUG</name>
              <description>For the purpose of debugging ECC engine, special bits error are inserted before writing external Flash Memory. 
0: No error is inserted (ECC Normal Operation) n: N bits error are inserted </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT0</name>
          <description>Corrected Error Bit Counter Register 0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM_3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 0 to 3) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT1</name>
          <description>Corrected Error Bit Counter Register 1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_3</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_2</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_1</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_0</name>
              <description>ECC_COR_NUM ECC Corrected Bits Number for ECC Data Block[n] (n from 4 to 7) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT2</name>
          <description>NDFC_ERR_CNT2</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM_3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 8 to 11) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT3</name>
          <description>NDFC_ERR_CNT3</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM_3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ECC_COR_NUM_0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[n] (n from 12 to 15) 0: No corrected bits 1: 1 corrected bit 2: 2 corrected bits ... 64: 64 corrected bits Others: Reserved Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_INT</name>
          <description>NDFC Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>NDFC_DMA_INT_ENABLE</name>
              <description>Enable or disable interrupt when a pending DMA is completed. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC has finished the procession of a single command in Normal Command Work Mode or one Batch Command Work Mode. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_B2R_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC_RB# signal is transferring from BUSY state to READY state 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_IO_DATA</name>
          <description>Data Input/ Output Port Address Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_IO_DATA</name>
              <description>Read/Write data into internal RAM Access unit is 32-bit.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_ADDR</name>
          <description>MBUS DMA Address Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MDMA_ADDR</name>
              <description>MBUS DMA address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_CNT</name>
          <description>MBUS DMA Data Counter Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>MDMA_CNT</name>
              <description>MBUS DMA data counter</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_NDMA_MODE_CTL</name>
          <description>NDFC Normal DMA Mode Control Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0xA5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>NDMA_MODE_CTL</name>
              <description>0xEA:NDMA handshake mode Note: NDMA wait mode don't care this value. 0xA5 can be used in handshake mode, but 0xEA is better.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_PAT_ID</name>
          <description>Pattern ID Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PAT_ID_15</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_14</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_13</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_12</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_11</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_10</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_9</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_8</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_7</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_6</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_5</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_4</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_3</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_2</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_1</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID_0</name>
              <description>Special Pattern ID for 16 ECC data block 0: All 0x00 is found 1: All 0xFF is found Others: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_0</name>
          <description>Read Data Status Register 0</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_1</name>
              <description>The number of input bit 1 during current command. It will be cleared automatically when next command is executed. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_1</name>
          <description>Read Data Status Register 1</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_0</name>
              <description>The number of input bit 0 during current command. It will be cleared automatically when next command is executed.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_CTL</name>
          <description>Read Data Status Control Register</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x103FFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_EN</name>
              <description>0: Disable to count the number of bit 1 and bit 0 during current read operation;  
1: Enable to count the number of bit 1 and bit 0 during current read operation;  The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable to count the number of bit 1 and bit 0 during current read operation;</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable to count the number of bit 1 and bit 0 during current read operation;  The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_TH</name>
              <description>The threshold value to generate data status.  If the number of bit 1 during current read operation is less than or equal to threshold value, the bit 13 of NDFC_ST register will be set.  If the number of bit 0 during current read operation is less than or equal to threshold value, the bit 12 of NDFC_ST register will be set.  </description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_SPARE_AREA</name>
          <description>Spare Area Configure Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x400</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_SPARE_ADR</name>
              <description>This value indicates the spare area first byte address for NDFC interleave page operation.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ST</name>
          <description>NDFC Status Information Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F1F</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_0</name>
              <description>0: The number of bit 1 during current read operation is greater threshold value. 
1: The number of bit 1 during current read operation is less than or equal to threshold value. This field only is valid when  is 1. The threshold value is configured in .  </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>greater</name>
                  <description>The number of bit 1 during current read operation is greater threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 1 during current read operation is less than or equal to threshold value. This field only is valid when  is 1. The threshold value is configured in .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_1</name>
              <description>0: The number of bit 0 during current read operation is greater threshold value. 
1: The number of bit 0 during current read operation is less than or equal to than threshold value. This field only is valid when  is 1. The threshold value is configured in .  </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>greater</name>
                  <description>The number of bit 0 during current read operation is greater threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 0 during current read operation is less than or equal to than threshold value. This field only is valid when  is 1. The threshold value is configured in .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE3</name>
              <description>NAND Flash R/B 3 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE2</name>
              <description>NAND Flash R/B 2 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE1</name>
              <description>NAND Flash R/B 1 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE0</name>
              <description>NAND Flash R/B 0 Line State 
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_STA</name>
              <description>0: NDFC FSM in IDLE state  
1: NDFC FSM in BUSY state When NDFC_STA is 0, NDFC can accept new command and process command. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_FSM_in_IDLE</name>
                  <description>NDFC FSM in IDLE state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_FSM_in_BUSY</name>
                  <description>NDFC FSM in BUSY state When NDFC_STA is 0, NDFC can accept new command and process command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_FIFO_STATUS</name>
              <description>0: Command FIFO not full and can receive new command 
1: Full and waiting NDFC to process commands in FIFO Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command</name>
                  <description>Command FIFO not full and can receive new command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_and</name>
                  <description>Full and waiting NDFC to process commands in FIFO Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_INT_FLAG</name>
              <description>When it is 1, it means that a pending DMA is completed. It will be clear after writing 1 to this bit or it will be automatically clear before FSM processing an new command. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_INT_FLAG</name>
              <description>When it is 1, it means that NDFC has finished one Normal Command Mode or one Batch Command Work Mode. It will be clear after writing 1 to this bit or it will be automatically clear before FSM processing a new command. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RB_B2R</name>
              <description>When it is 1, it means that NDFC_R/B# signal is transferred from BUSY state to READY state. It will be clear after writing 1 to this bit.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CFG</name>
          <description>NDFC Timing Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x95</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>T_WC</name>
              <description>Write Cycle Time 
0: 1*2T 
1: 2*2T 
2: 3*2T 
3: 4*2T </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_3_times_2T</name>
                  <description>3*2T</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CCS</name>
              <description>Change Column Setup Time 
0: 16*2T 
1: 24*2T 
2: 32*2T 
3: 64*2T </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64_times_2T</name>
                  <description>64*2T</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CLHZ</name>
              <description>CLE High to Output Hi-z 
0: 2*2T 
1: 8*2T 
2: 16*2T 
3: 31*2T </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CS</name>
              <description>CE Setup Time 
0: 2*2T 
1: 8*2T 
2: 16*2T 
3: 31*2T </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R/W</name>
              <description>0 T_CDQSS DQS Setup Time for data input start 
0: 8*2T 
1: 24*2T </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CAD</name>
              <description>Command, Address, Data Delay 
000: 4*2T 
001: 8*2T 
010: 12*2T 
011: 16*2T 
100: 24*2T 
101: 32*2T 110/111: 64*2T </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T 110/111: 64*2T</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_RHW</name>
              <description>RE# high to WE# low cycle number 
00: 4*2T 
01: 8*2T 
10: 12*2T 
11: 20*2T </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_times_2T</name>
                  <description>20*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WHR</name>
              <description>WE# high to RE# low cycle number 
00: 8*2T 
01: 16*2T 
10: 24*2T 
11: 32*2T </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_ADL</name>
              <description>Address to Data Loading cycle number 
00: 0*2T 
01: 8*2T 
10: 16*2T 
11: 24*2T </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_times_2T</name>
                  <description>0*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WB</name>
              <description>WE# high to busy cycle number 00:14*2T 01:22*2T 
10: 30*2T 11:38*2T </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_30_times_2T</name>
                  <description>30*2T 11:38*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CTL</name>
          <description>NDFC Timing Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3F</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_PIPE</name>
              <description>In SDR mode: 
0: Normal 
1: EDO 
2: E-EDO Other : Reserved In DDR mode: 1~15 is valid.(These bits configure the number of clock when data is valid after RE#`s falling edge) </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>E_minus_EDO_Other</name>
                  <description>E-EDO Other : Reserved In DDR mode: 1~15 is valid.(These bits configure the number of clock when data is valid after RE#`s falling edge)</description>
                  <value>2</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DC_CTL</name>
              <description>NDFC Delay Chain Control. (These bits are only valid in DDR data interface, and configure the relative phase between DQS and DQ[0...7] ) </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>4</dimIncrement>
          <name>NDFC_USER_DATAn[%s]</name>
          <description>User Data Field Register n (n from 0 to 15)</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USER_DATA</name>
              <description>User Data for ECC Data Block[n] (n from 0 to 15) Notes: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>OWA</name>
      <description>OWA</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>OWA_CH_STA0</name>
          <description>OWA_CH_STA0</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>CGMS</name>
              <description>CGMS_A 
00: Copying is permitted without restriction 
01: One generation of copies may be made 
10: Condition not be used 
11: No copying is permitted </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copying</name>
                  <description>Copying is permitted without restriction</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One generation of copies may be made</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Condition</name>
                  <description>Condition not be used</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_copying</name>
                  <description>No copying is permitted</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ORIG_FREQ_ORIGINAL_SAMPLING_FREQUENCY</name>
              <description>ORIG_FREQ Original sampling frequency 
0000: not indicated 
0001: 192kHz 
0010: 12kHz 
0011: 176.4kHz 
0100: Reserved 
0101: 96kHz 
0110: 8kHz 
0111: 88.2kHz 
1000: 16kHz 
1001: 24kHz 
1010: 11.025kHz 
1011: 22.05kHz 
1100: 32kHz 
1101: 48kHz 
1110: Reserved 
1111: 44.1kHz </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_indicated</name>
                  <description>not indicated</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12kHz</name>
                  <description>12kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8kHz</name>
                  <description>8kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_88_point_2kHz</name>
                  <description>88.2kHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16kHz</name>
                  <description>16kHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025kHz</name>
                  <description>11.025kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WL_SAMPLE_WORD_LENGTH</name>
              <description>WL Sample word length For bit 0 = `0`: 
000: not indicated 
001: 16 bits 
010: 18 bits 
100: 19 bits 
101: 20 bits 
110: 17 bits 
111: Reserved For bit 0 = `1`: 
000: not indicated 
001: 20 bits 
010: 22 bits 
100: 23 bits 
101: 24 bits 
110: 21 bits 
111: Reserved </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MWL_MAX_WORD_LENGTH</name>
              <description>MWL Max Word length 
0: Maximum audio sample word length is 20 bits 
1: Maximum audio sample word length is 24 bits </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>20</name>
                  <description>Maximum audio sample word length is 20 bits</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24</name>
                  <description>Maximum audio sample word length is 24 bits</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_CTL</name>
          <description>OWA_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x3F3</resetMask>
          <fields>
            <field>
              <name>MCLK_DIV_RATIO</name>
              <description>Mclk divide Ratio Note: only support 2n divide ratio(n=1~31) </description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RST</name>
              <description>Reset 
0: Normal 
1: Reset </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FCTL</name>
          <description>OWA FIFO Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1078</resetValue>
          <resetMask>0x80031FFF</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio hub enable 0 : Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FTX</name>
              <description>Write `1` to flush TX FIFO, self clear to `0` </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRX</name>
              <description>Write `1` to flush RX FIFO, self clear to `0` </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO empty Trigger Level Interrupt and DMA request trigger level for TX FIFO normal condition Trigger Level = TXTL</description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RX FIFO Trigger Level Interrupt and DMA request trigger level for RX FIFO normal condition Trigger Level = RXTL + 1 </description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TX FIFO Input Mode(Mode0, 1) 
0: Valid data at the MSB of OWA_TXFIFO register 
1: Valid data at the LSB of OWA_TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I[23:0] = {TXFIFO[31:12], 4`h0} Mode 1: FIFO_I[23:0] = {TXFIFO[19:0], 4`h0} </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of OWA_TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of OWA_TXFIFO register Example for 20-bits transmitted audio sample: Mode 0: FIFO_I[23:0] = {TXFIFO[31:12], 4`h0} Mode 1: FIFO_I[23:0] = {TXFIFO[19:0], 4`h0}</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RX FIFO Output Mode(Mode 0,1,2,3) 
00:  Expanding `0` at LSB of SPDIP_RXFIFO register 
01: Expanding received sample sign bit at MSB of OWA_RXFIFO register 
10: Truncating received samples at high half-word of OWA_RXFIFO register and low half-word of AC_FIFO register is filled by `0` 
11: Truncating received samples at low half-word of OWA_RXFIFO register and high half-word of AC_FIFO register is expanded by its sigh bit Mode0: RXFIFO[31:0] = {FIFO_O[23:0], 8`h0} Mode 1: RXFIFO[31:0] = {8`FIFO_O[23], FIFO_O[23:0]} Mode 2: RXFIFO[31:0] = {FIFO_O[23:8], 16`h0} Mode 3: RXFIFO[31:0] = {16`FIFO_O[23], FIFO_O[23:8]} </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_`0`_at_LSB_of</name>
                  <description>Expanding `0` at LSB of SPDIP_RXFIFO register</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Expanding_received_sample_sign_bit</name>
                  <description>Expanding received sample sign bit at MSB of OWA_RXFIFO register</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_high</name>
                  <description>Truncating received samples at high half-word of OWA_RXFIFO register and low half-word of AC_FIFO register is filled by `0`</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_low</name>
                  <description>Truncating received samples at low half-word of OWA_RXFIFO register and high half-word of AC_FIFO register is expanded by its sigh bit Mode0: RXFIFO[31:0] = {FIFO_O[23:0], 8`h0} Mode 1: RXFIFO[31:0] = {8`FIFO_O[23], FIFO_O[23:0]} Mode 2: RXFIFO[31:0] = {FIFO_O[23:8], 16`h0} Mode 3: RXFIFO[31:0] = {16`FIFO_O[23], FIFO_O[23:8]}</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FSTA</name>
          <description>OWA FIFO Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x6000</resetValue>
          <resetMask>0x7F7F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TX FIFO Empty (indicate FIFO is not full) 
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO ( &gt;=1 word ) </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO ( &gt;=1 word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word counter </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RX FIFO Available 
0: No available data in RX FIFO 
1: More than one sample in RX FIFO ( &gt;=1 word ) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one sample in RX FIFO ( &gt;=1 word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RX FIFO Available Sample Word counter </description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_INT</name>
          <description>OWA Interrupt Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x700F7</resetMask>
          <fields>
            <field>
              <name>RX_LOCKI_EN</name>
              <description>RX LOCK Interrupt enable 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UNLOCKI_EN</name>
              <description>RX UNLOCK Interrupt enable 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PARERRI_EN</name>
              <description>RX PARITY ERORR Interrupt enable 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DRQ</name>
              <description>TX FIFO Empty DRQ Enable 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TX FIFO Under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RX FIFO Data Available DRQ Enable When set to `1`, RX FIFO DMA Request is asserted if Data is available in RX FIFO 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RX FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RX FIFO Data Available Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_ISTA</name>
          <description>OWA Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x70073</resetMask>
          <fields>
            <field>
              <name>RX_LOCK_INT</name>
              <description>0: No pending IRQ 
1: RX lock Pending Interrupt (RX_LOCK_FLAG 0&#8594;1)  </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX lock Pending Interrupt (RX_LOCK_FLAG 0&#8594;1)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UNLOCK_INT</name>
              <description>RX Unlock Pending Interrupt  
0: No pending IRQ 
1: RX Unlock Pending Interrupt (RX_LOCK_FLAG 1&#8594;0)  </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX Unlock Pending Interrupt (RX_LOCK_FLAG 1&#8594;0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PARERRI_INT</name>
              <description>RX Parity Error Pending Interrupt  
0: No pending IRQ 
1: RX Parity Error Pending Interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX</name>
                  <description>RX Parity Error Pending Interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Under run Pending Interrupt 
0: No pending IRQ 
1: FIFO Under run Pending Interrupt </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_pending</name>
                  <description>No pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Under run Pending Interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt 
0: No Pending IRQ 
1: FIFO Overrun Pending Interrupt </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt 
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RX FIFO Overrun Pending Interrupt 
0: FIFO Overrun Pending </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RX FIFO Available Pending Interrupt 
0: No Pending IRQ 
1: Data Available Pending IRQ </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RXFIFO</name>
          <description>OWA_RXFIFO</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>Host can get one sample by reading this register, the A channel data is first and then the B channel data </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RX_CFIG</name>
          <description>OWA RX Configuration Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1B</resetMask>
          <fields>
            <field>
              <name>RX_LOCK_FLAG</name>
              <description>0: unlock 
1: lock </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>unlock</name>
                  <description>unlock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>lock</name>
                  <description>lock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CHST_SRC</name>
              <description>0: RX_CH_STA Register holds status from Channel A 
1: RX_CH_STA Register holds status from Channel B </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_CH_STA_Register_holds_status_from_Channel_A</name>
                  <description>RX_CH_STA Register holds status from Channel A</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_CH_STA_Register_holds_status_from_Channel_B</name>
                  <description>RX_CH_STA Register holds status from Channel B</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHST_CP</name>
              <description>Channel status Capture 
0: Idle or capture end 
1: Capture Channel status start Notes: When set to `1`, the channel status information is capturing, the bit will clear to `0` after captured. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or capture end</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capture</name>
                  <description>Capture Channel status start Notes: When set to `1`, the channel status information is capturing, the bit will clear to `0` after captured.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>0: disabled 
1: enabled </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RX_CHSTA0</name>
          <description>OWA RX Channel Status Register0</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>CA</name>
              <description>Clock Accuracy 
00: Level 2 
01: Level 1 
10: Level 3 
11: not matched </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_matched</name>
                  <description>not matched</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Sampling frequency 
0000: 44.1kHz          1000: Reserved 
0001: not indicated       1001: 768kHz 
0010: 48kHz            1010: 96kHz 
0011: 32kHz            1011: Reserved 
0100: 22.05kHz          1100:176.4kHz 
0101: Reserved          1101: Reserved 
0110: 24kHz             1110: 192kHz 
0111: Reserved           1111: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_indicated</name>
                  <description>not indicated</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_768kHz</name>
                  <description>768kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CN</name>
              <description>Channel Number </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN</name>
              <description>Source Number </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Category code Indicates the kind of equipment that generates the digital audio interface signal. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Mode 
00: Default Mode 01~11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default Mode 01~11: Reserved</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMP</name>
              <description>Emphasis Additional format information For bit 1 =  `0`, Linear PCM audio mode: 
000: 2 audio channels without pre-emphasis 
001: 2 audio channels with 50 &#956;s / 15 &#956;s pre-emphasis 
010: Reserved (for 2 audio channels with pre-emphasis) 
011: Reserved (for 2 audio channels with pre-emphasis) 100~111: Reserved For bit 1 = `1`, other than Linear PCM applications: 
000: Default state 001~111: Reserved </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP</name>
              <description>Copyright 
0: copyright is asserted 
1: no copyright is asserted </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>copyright</name>
                  <description>copyright is asserted</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_copyright</name>
                  <description>no copyright is asserted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TYPE</name>
              <description>Audio Data Type 
0: Linear PCM Samples 
1: For none-linear PCM audio such as AC3, DTS, MPEG audio </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM Samples</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For none-linear PCM audio such as AC3, DTS, MPEG audio</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRO</name>
              <description>Application type 
0: Consumer Application 
1: Professional Application  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Consumer</name>
                  <description>Consumer Application</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Professional</name>
                  <description>Professional Application</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_RX_CNT</name>
          <description>OWA RX Counter Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample counter The audio sample number of writing into RX FIFO. When one sample is written by Codec, the RX sample counter register increases by one. The RX Counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TXFIFO</name>
          <description>OWA_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Transmitting A, B channel data should be written this register one by one. The  A channel data is first and then the B channel data. </description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CFIG</name>
          <description>OWA TX Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xF0</resetValue>
          <resetMask>0x800301FF</resetMask>
          <fields>
            <field>
              <name>TX_SINGLE_MODE</name>
              <description>Tx single channel mode 
0: Disable 
1: Eanble </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Eanble</name>
                  <description>Eanble</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASS</name>
              <description>Audio sample select with TX FIFO under run when 
0: sending 0 
1: sending the last audio </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>sending_0</name>
                  <description>sending 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>sending_the_last</name>
                  <description>sending the last audio</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_AUDIO</name>
              <description>TX data type 
0: Linear PCM (Valid bit of both sub-frame set to 0 ) 
1: Non-audio(Valid bit of both sub-frame set to 1) </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM (Valid bit of both sub-frame set to 0 )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_audio_openingparen_Valid_bit</name>
                  <description>Non-audio(Valid bit of both sub-frame set to 1)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_RATIO</name>
              <description>TX clock divide Ratio </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SF</name>
              <description>TX Sample format: 
00: 16bit 
01: 20bit 
10: 24bit 
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16bit</name>
                  <description>16bit</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20bit</name>
                  <description>20bit</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit</name>
                  <description>24bit</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CHM</name>
              <description>CHSTMODE 
0: Channel status A&amp;B set to 0 
1: Channel status A&amp;B generated form TX_CHSTA </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_set</name>
                  <description>Channel status A&amp;B set to 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_generated</name>
                  <description>Channel status A&amp;B generated form TX_CHSTA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>0: disabled 
1: enabled </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA0</name>
          <description>OWA TX Channel Status Register0</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30FFFFFF</resetMask>
          <fields>
            <field>
              <name>CA</name>
              <description>Clock Accuracy 
00: Level 2 
01: Level 1 
10: Level 3 
11: not matched </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_matched</name>
                  <description>not matched</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Sampling frequency 
0000: 44.1kHz          1000: Reserved 
0001: not indicated       1001: 768kHz 
0010: 48kHz            1010: 96kHz 
0011: 32kHz            1011: Reserved 
0100: 22.05kHz          1100:176.4kHz 
0101: Reserved          1101: Reserved 
0110: 24kHz             1110: 192kHz 
0111: Reserved           1111: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_indicated</name>
                  <description>not indicated</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_768kHz</name>
                  <description>768kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CN</name>
              <description>Channel Number </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN</name>
              <description>Source Number </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Category code Indicates the kind of equipment that generates the digital audio interface signal. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Mode 
00: Default Mode 01~11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default Mode 01~11: Reserved</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMP</name>
              <description>Emphasis Additional format information For bit 1 =  `0`, Linear PCM audio mode: 
000: 2 audio channels without pre-emphasis 
001: 2 audio channels with 50 &#956;s / 15 &#956;s pre-emphasis 
010: Reserved (for 2 audio channels with pre-emphasis) 
011: Reserved (for 2 audio channels with pre-emphasis) 100~111: Reserved For bit 1 = `1`, other than Linear PCM applications: 
000: Default state 001~111: Reserved </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP</name>
              <description>Copyright 
0: copyright is asserted 
1: no copyright is asserted </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>copyright</name>
                  <description>copyright is asserted</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_copyright</name>
                  <description>no copyright is asserted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TYPE</name>
              <description>Audio Data Type 
0: Linear PCM Samples 
1: For none-linear PCM audio such as AC3, DTS, MPEG audio </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM Samples</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For none-linear PCM audio such as AC3, DTS, MPEG audio</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRO</name>
              <description>Application type 
0: Consumer Application 
1: Professional Application  Note: This bit must be fixed to `0` </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Consumer</name>
                  <description>Consumer Application</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Professional</name>
                  <description>Professional Application  Note: This bit must be fixed to `0`</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA1</name>
          <description>OWA TX Channel Status Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>CGMS</name>
              <description>CGMS_A 
00: Copying is permitted without restriction 
01: One generation of copies may be made 
10: Condition not be used 
11: No copying is permitted </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copying</name>
                  <description>Copying is permitted without restriction</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One generation of copies may be made</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Condition</name>
                  <description>Condition not be used</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_copying</name>
                  <description>No copying is permitted</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ORIG_FREQ_ORIGINAL_SAMPLING_FREQUENCY</name>
              <description>ORIG_FREQ Original sampling frequency 
0000: not indicated 
0001: 192kHz 
0010: 12kHz 
0011: 176.4kHz 
0100: Reserved 
0101: 96kHz 
0110: 8kHz 
0111: 88.2kHz 
1000: 16kHz 
1001: 24kHz 
1010: 11.025kHz 
1011: 22.05kHz 
1100: 32kHz 
1101: 48kHz 
1110: Reserved 
1111: 44.1kHz </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_indicated</name>
                  <description>not indicated</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12kHz</name>
                  <description>12kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8kHz</name>
                  <description>8kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_88_point_2kHz</name>
                  <description>88.2kHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16kHz</name>
                  <description>16kHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025kHz</name>
                  <description>11.025kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WL_SAMPLE_WORD_LENGTH</name>
              <description>WL Sample word length For bit 0 = `0`: 
000: not indicated 
001: 16 bits 
010: 18 bits 
100: 19 bits 
101: 20 bits 
110: 17 bits 
111: Reserved  For bit 0 = `1`: 
000: not indicated 
001: 20 bits 
010: 22 bits 
100: 23 bits 
101: 24 bits 
110: 21 bits 
111: Reserved </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MWL_MAX_WORD_LENGTH</name>
              <description>MWL Max Word length 
0: Maximum audio sample word length is 20 bits 
1: Maximum audio sample word length is 24 bits </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>20</name>
                  <description>Maximum audio sample word length is 20 bits</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24</name>
                  <description>Maximum audio sample word length is 24 bits</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CNT</name>
          <description>OWA TX Counter Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample counter The audio sample number of writing into TX FIFO. When one sample is written by DMA or by host IO, the TX sample counter register increases by one. The TX Counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PIO</name>
      <description>PIO</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PB_CFG0_REG</name>
          <description>PB_CFG0_REG</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PB7_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF2_DIN              011: PCM0_DIN 
100: Reserved              101: SIM_DET 
110: PB_EINT7           111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2_DIN</name>
                  <description>AIF2_DIN</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM0_DIN</name>
                  <description>PCM0_DIN</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SIM_DET</name>
                  <description>SIM_DET</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT7</name>
                  <description>PB_EINT7</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB6_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF2_DOUT       011: PCM0_DOUT 
100: Reserved           101: SIM_RST 
110: PB_EINT6           111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2_DOUT</name>
                  <description>AIF2_DOUT</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM0_DOUT</name>
                  <description>PCM0_DOUT</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SIM_RST</name>
                  <description>SIM_RST</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT6</name>
                  <description>PB_EINT6</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB5_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF2_BCLK       011: PCM0_BCLK  
100: Reserved           101: SIM_DATA 
110: PB_EINT5           111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2_BCLK</name>
                  <description>AIF2_BCLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM0_BCLK</name>
                  <description>PCM0_BCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SIM_DATA</name>
                  <description>SIM_DATA</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT5</name>
                  <description>PB_EINT5</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB4_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF2_SYNC       011: PCM0_SYNC 
100: Reserved              101: SIM_CLK 
110: PB_EINT4           111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF2_SYNC</name>
                  <description>AIF2_SYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM0_SYNC</name>
                  <description>PCM0_SYNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SIM_CLK</name>
                  <description>SIM_CLK</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT4</name>
                  <description>PB_EINT4</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB3_SELECT</name>
              <description>000: Input     
001: Output 
010: UART2_CTS       011: I2S0_MCLK 
100: JTAG_DI0              101: SIM_VPPPP 
110: PB_EINT3           111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_CTS</name>
                  <description>UART2_CTS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>I2S0_MCLK</name>
                  <description>I2S0_MCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DI0</name>
                  <description>JTAG_DI0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SIM_VPPPP</name>
                  <description>SIM_VPPPP</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT3</name>
                  <description>PB_EINT3</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB2_SELECT</name>
              <description>000: Input     
001: Output 
010: UART2_RTS       011: Reserved 
100: JTAG_DO0          101: SIM_VPPEN 
110: PB_EINT2           111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_RTS</name>
                  <description>UART2_RTS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DO0</name>
                  <description>JTAG_DO0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SIM_VPPEN</name>
                  <description>SIM_VPPEN</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT2</name>
                  <description>PB_EINT2</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB1_SELECT</name>
              <description>000: Input     
001: Output 
010: UART2_RX       011: Reserved 
100: JTAG_CK0          101: SIM_PWREN 
110: PB_EINT1           111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_RX</name>
                  <description>UART2_RX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_CK0</name>
                  <description>JTAG_CK0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SIM_PWREN</name>
                  <description>SIM_PWREN</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT1</name>
                  <description>PB_EINT1</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB0_SELECT</name>
              <description>000: Input     
001: Output 
010: UART2_TX       011: Reserved 
100: JTAG_MS0          101: Reserved 
110: PB_EINT0           111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART2_TX</name>
                  <description>UART2_TX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_MS0</name>
                  <description>JTAG_MS0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT0</name>
                  <description>PB_EINT0</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_CFG1_REG</name>
          <description>PB_CFG1_REG</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x77</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>PB9_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved              011: Reserved 
100: UART0_RX          101: Reserved 
110: PB_EINT9           111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_RX</name>
                  <description>UART0_RX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT9</name>
                  <description>PB_EINT9</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PB8_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved           011: Reserved 
100: UART0_TX          101: Reserved 
110: PB_EINT8           111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_TX</name>
                  <description>UART0_TX</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PB_EINT8</name>
                  <description>PB_EINT8</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_CFG2_REG</name>
          <description>PB_CFG2_REG</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PB_CFG3_REG</name>
          <description>PB_CFG3_REG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PB_DATA_REG</name>
          <description>PB_DATA_REG</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>PB_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_DRV0_REG</name>
          <description>PB_DRV0_REG</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x55555</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>PB_DRV_9</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_8</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_7</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_6</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_5</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_4</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_3</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_2</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_1</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_DRV_0</name>
              <description>PB[n] Multi-Driving Select (n = 0~9) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_DRV1_REG</name>
          <description>PB_DRV1_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PB_EINT_CFG0_REG</name>
          <description>PB_EINT_CFG0_REG</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_EINT_CFG1_REG</name>
          <description>PB_EINT_CFG1_REG</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 8~9) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 8~9) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_EINT_CFG2_REG</name>
          <description>PB_EINT_CFG2_REG</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PB_EINT_CFG3_REG</name>
          <description>PB_EINT_CFG3_REG</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PB_EINT_CTL_REG</name>
          <description>PB_EINT_CTL_REG</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_9</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_8</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_7</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~9) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_EINT_DEB_REG</name>
          <description>PB_EINT_DEB_REG</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32Khz 
1: HOSC 24Mhz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32Khz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24Mhz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_EINT_STATUS_REG</name>
          <description>PB_EINT_STATUS_REG</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>EINT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~9) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_PULL0_REG</name>
          <description>PB_PULL0_REG</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>PB_PULL_9</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_8</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_7</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_6</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_5</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_4</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_3</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_2</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_1</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PB_PULL_0</name>
              <description>PB[n] Pull-up/down Select (n = 0~9) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PB_PULL1_REG</name>
          <description>PB_PULL1_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PC_CFG0_REG</name>
          <description>PC_CFG0_REG</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC7_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_RB1    
011: Reserved 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_RB1</name>
                  <description>NAND_RB1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC6_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_RB0    
011: SDC2_CMD 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_RB0</name>
                  <description>NAND_RB0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_CMD</name>
                  <description>SDC2_CMD</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC5_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_RE    
011: SDC2_CLK 
100: Reserved    
101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_RE</name>
                  <description>NAND_RE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_CLK</name>
                  <description>SDC2_CLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC4_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_CE0       011: Reserved 
100: Reserved    
101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_CE0</name>
                  <description>NAND_CE0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC3_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_CE1       011: Reserved 
100: SPI0_CS     
101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_CE1</name>
                  <description>NAND_CE1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_CS</name>
                  <description>SPI0_CS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC2_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_CLE    
011: Reserved 
100: SPI0_CLK        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_CLE</name>
                  <description>NAND_CLE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_CLK</name>
                  <description>SPI0_CLK</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC1_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_ALE       011: SDC2_DS 
100: SPI0_MISO       101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_ALE</name>
                  <description>NAND_ALE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC2_DS</name>
                  <description>SDC2_DS</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_MISO</name>
                  <description>SPI0_MISO</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PC0_SELECT</name>
              <description>000: Input     
001: Output 
010: NAND_WE          011: Reserved 
100: SPI0_MOSI       101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_WE</name>
                  <description>NAND_WE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI0_MOSI</name>
                  <description>SPI0_MOSI</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG1_REG</name>
          <description>PC_CFG1_REG</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC15_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ7        011:SDC2_D7 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC14_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ6        011:SDC2_D6 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC13_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ5         011:SDC2_D5 100:Reserved           101:Reserved 110:Reserved           111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC12_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ4        011:SDC2_D4 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC11_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ3        011:SDC2_D3 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC10_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ2        011:SDC2_D2 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC9_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ1        011:SDC2_D1 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC8_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ0        011:SDC2_D0 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG2_REG</name>
          <description>PC_CFG2_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x777</resetValue>
          <resetMask>0x777</resetMask>
          <fields>
            <field>
              <name>PC16_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQS        011:SDC2_RST 100:Reserved          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG3_REG</name>
          <description>PC_CFG3_REG</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PC_DATA_REG</name>
          <description>PC_DATA_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFFF</resetMask>
          <fields>
            <field>
              <name>PC_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[18:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV0_REG</name>
          <description>PC_DRV0_REG</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PC_DRV_15</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_14</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_13</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_12</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_11</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_10</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_9</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_8</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_7</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_6</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_5</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_4</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_3</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_2</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_1</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_0</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV1_REG</name>
          <description>PC_DRV1_REG</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x15</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>PC_DRV_2</name>
              <description>PC[n] Multi-Driving Select (n = 16~18) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_1</name>
              <description>PC[n] Multi-Driving Select (n = 16~18) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_0</name>
              <description>PC[n] Multi-Driving Select (n = 16~18) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_PULL0_REG</name>
          <description>PC_PULL0_REG</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PC_PULL1_REG</name>
          <description>PC_PULL1_REG</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PD_CFG0_REG</name>
          <description>PD_CFG0_REG</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD7_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D11       011: Reserved 
100: Reserved             101: CCIR_D3 
110: Reserved   
111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D11</name>
                  <description>LCD_D11</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_D3</name>
                  <description>CCIR_D3</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD6_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D10      
011: Reserved 
100: Reserved             101: CCIR_D2 
110: Reserved   
111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D10</name>
                  <description>LCD_D10</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_D2</name>
                  <description>CCIR_D2</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD5_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D7    
011: UART4_CTS 
100: Reserved   
101: CCIR_D1 
110: Reserved   
111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D7</name>
                  <description>LCD_D7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_CTS</name>
                  <description>UART4_CTS</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_D1</name>
                  <description>CCIR_D1</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD4_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D6       011: UART4_RTS 
100: Reserved   
101: CCIR_D0 
110: Reserved   
111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D6</name>
                  <description>LCD_D6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_RTS</name>
                  <description>UART4_RTS</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_D0</name>
                  <description>CCIR_D0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD3_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D5       011: UART4_RX 
100: SPI1_MISO      101: CCIR_VSYNC 
110: Reserved   
111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D5</name>
                  <description>LCD_D5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_RX</name>
                  <description>UART4_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_MISO</name>
                  <description>SPI1_MISO</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_VSYNC</name>
                  <description>CCIR_VSYNC</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD2_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D4       011: UART4_TX 
100: SPI1_MOSI      101: CCIR_HSYNC 
110: Reserved   
111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D4</name>
                  <description>LCD_D4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART4_TX</name>
                  <description>UART4_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_MOSI</name>
                  <description>SPI1_MOSI</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_HSYNC</name>
                  <description>CCIR_HSYNC</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD1_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D3       011: UART3_RX 
100: SPI1_CLK          101: CCIR_DE 
110: Reserved   
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D3</name>
                  <description>LCD_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_RX</name>
                  <description>UART3_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CLK</name>
                  <description>SPI1_CLK</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_DE</name>
                  <description>CCIR_DE</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD0_SELECT</name>
              <description>000: Input    
001: Output 
010: LCD_D2       011: UART3_TX 
100: SPI1_CS       101: CCIR_CLK 
110: Reserved   
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D2</name>
                  <description>LCD_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_TX</name>
                  <description>UART3_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI1_CS</name>
                  <description>SPI1_CS</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CCIR_CLK</name>
                  <description>CCIR_CLK</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG1_REG</name>
          <description>PD_CFG1_REG</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD15_SELECT</name>
              <description>000: Input          001: Output 
010: LCD_D21             011: LVDS_VN1 
100: RGMII_TXD3/MII_TXD3/RMII_NULL 101: CCIR_D6 
110: Reserved           111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D21</name>
                  <description>LCD_D21</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VN1</name>
                  <description>LVDS_VN1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_TXD3_slash_MII_TXD3_slash_RMII_NULL</name>
                  <description>RGMII_TXD3/MII_TXD3/RMII_NULL 101: CCIR_D6</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD14_SELECT</name>
              <description>000: Input           001: Output 
010: LCD_D20              011: LVDS_VP1 
100: RGMII_NULL/MII_RXERR/RMII_RXER 101: Reserved 
110: Reserved            111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D20</name>
                  <description>LCD_D20</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VP1</name>
                  <description>LVDS_VP1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_NULL_slash_MII_RXERR_slash_RMII_RXER</name>
                  <description>RGMII_NULL/MII_RXERR/RMII_RXER 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD13_SELECT</name>
              <description>000: Input             001: Output 
010: LCD_D19                011: LVDS_VN0 
100: RGMII_RXCTL / MII_RXDV/RMII_CRS_DV 101: Reserved 
110: Reserved             111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D19</name>
                  <description>LCD_D19</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VN0</name>
                  <description>LVDS_VN0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_RXCTL</name>
                  <description>RGMII_RXCTL / MII_RXDV/RMII_CRS_DV 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD12_SELECT</name>
              <description>000: Input          001: Output 
010: LCD_D18             011: LVDS_VP0 
100: RGMII_RXCK/MII_RXCK/RMII_NULL 101: Reserved 
110: Reserved          111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D18</name>
                  <description>LCD_D18</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VP0</name>
                  <description>LVDS_VP0</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_RXCK_slash_MII_RXCK_slash_RMII_NULL</name>
                  <description>RGMII_RXCK/MII_RXCK/RMII_NULL 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD11_SELECT</name>
              <description>000: Input           001: Output 
010: LCD_D15              011: Reserved 
100: RGMII_RXD0 / MII_RXD0/RMII_RXD0 101: Reserved 
110: Reserved           111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D15</name>
                  <description>LCD_D15</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_RXD0</name>
                  <description>RGMII_RXD0 / MII_RXD0/RMII_RXD0 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD10_SELECT</name>
              <description>000: Input           001: Output 
010: LCD_D14              011: Reserved 
100: RGMII_RXD1 / MII_RXD1/RMII_RXD1 101: Reserved 
110: Reserved           111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D14</name>
                  <description>LCD_D14</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_RXD1</name>
                  <description>RGMII_RXD1 / MII_RXD1/RMII_RXD1 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD9_SELECT</name>
              <description>000: Input          001: Output 
010: LCD_D13                011: Reserved 
100: RGMII_RXD2 / MII_RXD2/RMII_NULL 101: CCIR_D5 
110: Reserved           111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D13</name>
                  <description>LCD_D13</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_RXD2</name>
                  <description>RGMII_RXD2 / MII_RXD2/RMII_NULL 101: CCIR_D5</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD8_SELECT</name>
              <description>000: Input             001: Output 
010: LCD_D12                011: Reserved 
100: RGMII_RXD3 / MII_RXD3/RMII_NULL 101: CCIR_D4 
110: Reserved              111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D12</name>
                  <description>LCD_D12</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_RXD3</name>
                  <description>RGMII_RXD3 / MII_RXD3/RMII_NULL 101: CCIR_D4</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG2_REG</name>
          <description>PD_CFG2_REG</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD23_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved           011: Reserved 
100: MDIO                 101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MDIO</name>
                  <description>MDIO</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD22_SELECT</name>
              <description>000: Input     
001: Output 
010: PWM0           011: Reserved 
100: MDC                 101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PWM0</name>
                  <description>PWM0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MDC</name>
                  <description>MDC</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD21_SELECT</name>
              <description>000: Input          001: Output 
010: LCD_VSYNC            011: LVDS_VN3 
100: RGMII_CLKIN/MII_COL/RMII_NULL 101: Reserved 
110: Reserved          111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_VSYNC</name>
                  <description>LCD_VSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VN3</name>
                  <description>LVDS_VN3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_CLKIN_slash_MII_COL_slash_RMII_NULL</name>
                  <description>RGMII_CLKIN/MII_COL/RMII_NULL 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD20_SELECT</name>
              <description>000: Input           001: Output 
010: LCD_HSYNC             011: LVDS_VP3 
100: RGMII_TXCTL / MII_TXEN/RMII_TXEN 101: Reserved 
110: Reserved           111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_HSYNC</name>
                  <description>LCD_HSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VP3</name>
                  <description>LVDS_VP3</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_TXCTL</name>
                  <description>RGMII_TXCTL / MII_TXEN/RMII_TXEN 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD19_SELECT</name>
              <description>000: Input          001: Output 
010: LCD_DE                011: LVDS_VNC 
100: RGMII_TXCK/MII_TXCK/RMII_TXCK 101: Reserved 
110: Reserved          111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_DE</name>
                  <description>LCD_DE</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VNC</name>
                  <description>LVDS_VNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_TXCK_slash_MII_TXCK_slash_RMII_TXCK</name>
                  <description>RGMII_TXCK/MII_TXCK/RMII_TXCK 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD18_SELECT</name>
              <description>000: Input          001: Output 
010: LCD_CLK                011: LVDS_VPC 
100: RGMII_TXD0 / MII_TXD0/RMII_TXD0 101: Reserved 
110: Reserved           111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_CLK</name>
                  <description>LCD_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VPC</name>
                  <description>LVDS_VPC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_TXD0</name>
                  <description>RGMII_TXD0 / MII_TXD0/RMII_TXD0 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD17_SELECT</name>
              <description>000: Input         001: Output 
010: LCD_D23             011: LVDS_VN2 
100: RGMII_TXD1/MII_TXD1/RMII_TXD1 101: Reserved 
110: Reserved           111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D23</name>
                  <description>LCD_D23</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VN2</name>
                  <description>LVDS_VN2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_TXD1_slash_MII_TXD1_slash_RMII_TXD1</name>
                  <description>RGMII_TXD1/MII_TXD1/RMII_TXD1 101: Reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PD16_SELECT</name>
              <description>000: Input          001: Output 
010: LCD_D22             011: LVDS_VP2 
100: RGMII_TXD2/MII_TXD2/RMII_NULL 101: CCIR_D7 
110: Reserved           111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LCD_D22</name>
                  <description>LCD_D22</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVDS_VP2</name>
                  <description>LVDS_VP2</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII_TXD2_slash_MII_TXD2_slash_RMII_NULL</name>
                  <description>RGMII_TXD2/MII_TXD2/RMII_NULL 101: CCIR_D7</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG3_REG</name>
          <description>PD_CFG3_REG</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x7</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>PD24_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved       
011: Reserved 
100: Reserved                 101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DATA__REG</name>
          <description>PD_DATA__REG</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[24:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV0_REG</name>
          <description>PD_DRV0_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_DRV_15</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_14</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_13</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_12</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_11</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_10</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_9</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_8</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_7</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_6</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_5</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_4</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_3</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_2</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_1</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_0</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV1_REG</name>
          <description>PD_DRV1_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x15555</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PD_DRV_8</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_7</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_6</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_5</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_4</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_3</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_2</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_1</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_0</name>
              <description>PD[n] Multi-Driving Select (n = 16~24) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL0_REG</name>
          <description>PD_PULL0_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_PULL_15</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_14</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_13</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_12</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_11</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_10</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_9</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_8</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_7</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_6</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_5</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_4</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_3</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_2</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_1</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_0</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL1_REG</name>
          <description>PD_PULL1_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PD_PULL_8</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_7</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_6</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_5</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_4</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_3</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_2</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_1</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_0</name>
              <description>PD[n] Pull-up/down Select (n = 16~24) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG0_REG</name>
          <description>PE_CFG0_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PE7_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D3        011: Reserved 
100: TS_D3            101: Reserved 
110: Reserved       
111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D3</name>
                  <description>CSI_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D3</name>
                  <description>TS_D3</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE6_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D2        011: Reserved 
100: TS_D2         
101: Reserved 
110: Reserved      
111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D2</name>
                  <description>CSI_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D2</name>
                  <description>TS_D2</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE5_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D1        011: Reserved 
100: TS_D1        101: Reserved 
110: Reserved       
111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D1</name>
                  <description>CSI_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D1</name>
                  <description>TS_D1</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE4_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D0        011: Reserved 
100: TS_D0        
101: Reserved 
110: Reserved       
111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D0</name>
                  <description>CSI_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D0</name>
                  <description>TS_D0</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE3_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_VSYNC    
011: Reserved 
100: TS_DVLD              101: Reserved 
110: Reserved      
111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_VSYNC</name>
                  <description>CSI_VSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_DVLD</name>
                  <description>TS_DVLD</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE2_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_HSYNC    
011: Reserved 
100: TS_SYNC              101: Reserved 
110: Reserved      
111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_HSYNC</name>
                  <description>CSI_HSYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_SYNC</name>
                  <description>TS_SYNC</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE1_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_MCLK       011: Reserved 
100: TS_ERR        101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_MCLK</name>
                  <description>CSI_MCLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_ERR</name>
                  <description>TS_ERR</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE0_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_PCLK           011: Reserved 
100: TS_CLK        
101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_PCLK</name>
                  <description>CSI_PCLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_CLK</name>
                  <description>TS_CLK</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG1_REG</name>
          <description>PE_CFG1_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PE15_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved        011: TWI2_SDA 
100: Reserved         101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI2_SDA</name>
                  <description>TWI2_SDA</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE14_SELECT</name>
              <description>000: Input     
001: Output 
010: PLL_LOCK_DBG      011: TWI2_SCK 
100: Reserved     
101: Reserved 
110: Reserved        111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_LOCK_DBG</name>
                  <description>PLL_LOCK_DBG</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI2_SCK</name>
                  <description>TWI2_SCK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE13_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_SDA           011: Reserved 
100: Reserved        101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_SDA</name>
                  <description>CSI_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE12_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_SCK           011: Reserved 
100: Reserved      
101: Reserved 
110: Reserved       
111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_SCK</name>
                  <description>CSI_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE11_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D7        011: Reserved 
100: TS_D7        101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D7</name>
                  <description>CSI_D7</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D7</name>
                  <description>TS_D7</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE10_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D6        011: Reserved 
100: TS_D6           101: Reserved 
110: Reserved      
111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D6</name>
                  <description>CSI_D6</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D6</name>
                  <description>TS_D6</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE9_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D5           011: Reserved 
100: TS_D5        101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D5</name>
                  <description>CSI_D5</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D5</name>
                  <description>TS_D5</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE8_SELECT</name>
              <description>000: Input     
001: Output 
010: CSI_D4           011: Reserved 
100: TS_D4         
101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI_D4</name>
                  <description>CSI_D4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TS_D4</name>
                  <description>TS_D4</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG2_REG</name>
          <description>PE_CFG2_REG</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x77</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>PE17_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved              011: Reserved 
100: Reserved     
101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE16_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved              011: Reserved 
100: Reserved     
101: Reserved 
110: Reserved     
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG3_REG</name>
          <description>PE_CFG3_REG</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PE_DATA__REG</name>
          <description>PE_DATA__REG</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PE_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_DRV0_REG</name>
          <description>PE_DRV0_REG</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PE_DRV_15</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_14</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_13</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_12</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_11</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_10</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_9</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_8</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_7</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_6</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_5</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_4</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_3</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_2</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_1</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_0</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_DRV1_REG</name>
          <description>PE_DRV1_REG</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PE_DRV_1</name>
              <description>PE[n] Multi-Driving Select (n = 16~17) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_0</name>
              <description>PE[n] Multi-Driving Select (n = 16~17) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_PULL0_REG</name>
          <description>PE_PULL0_REG</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PE_PULL_15</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_14</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_13</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_12</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_11</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_10</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_9</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_8</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_7</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_6</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_5</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_4</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_3</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_2</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_1</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_0</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_PULL1_REG</name>
          <description>PE_PULL1_REG</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PE_PULL_1</name>
              <description>PE[n] Pull-up/down Select (n = 16~17) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_0</name>
              <description>PE[n] Pull-up/down Select (n = 16~17) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_CFG0_REG</name>
          <description>PF_CFG0_REG</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x7777777</resetValue>
          <resetMask>0x7777777</resetMask>
          <fields>
            <field>
              <name>PF6_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved       
011: Reserved 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF5_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC0_D2        011: JTAG_CK1 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D2</name>
                  <description>SDC0_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_CK1</name>
                  <description>JTAG_CK1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF4_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC0_D3        011: UART0_RX 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D3</name>
                  <description>SDC0_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_RX</name>
                  <description>UART0_RX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF3_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC0_CMD    
011: JTAG_DO1 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_CMD</name>
                  <description>SDC0_CMD</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DO1</name>
                  <description>JTAG_DO1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF2_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC0_CLK    
011: UART0_TX 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_CLK</name>
                  <description>SDC0_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART0_TX</name>
                  <description>UART0_TX</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF1_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC0_D0           011: JTAG_DI1 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D0</name>
                  <description>SDC0_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_DI1</name>
                  <description>JTAG_DI1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PF0_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC0_D1           011: JTAG_MS1 
100: Reserved        101: Reserved 
110: Reserved    
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC0_D1</name>
                  <description>SDC0_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JTAG_MS1</name>
                  <description>JTAG_MS1</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_CFG1_REG</name>
          <description>PF_CFG1_REG</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG2_REG</name>
          <description>PF_CFG2_REG</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG3_REG</name>
          <description>PF_CFG3_REG</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_DATA_REG</name>
          <description>PF_DATA_REG</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>PF_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV0_REG</name>
          <description>PF_DRV0_REG</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x1555</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PF_DRV_6</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_5</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_4</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_3</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_2</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_1</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_0</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV1_REG</name>
          <description>PF_DRV1_REG</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_PULL0_REG</name>
          <description>PF_PULL0_REG</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PF_PULL_6</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_5</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_4</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_3</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_2</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_1</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_0</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_PULL1_REG</name>
          <description>PF_PULL1_REG</description>
          <addressOffset>0xD4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG0_REG</name>
          <description>PG_CFG0_REG</description>
          <addressOffset>0xD8</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PG7_SELECT</name>
              <description>000: Input     
001: Output 
010: UART1_RX    
011: Reserved 
100: Reserved     
101: Reserved 
110: PG_EINT7       111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_RX</name>
                  <description>UART1_RX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT7</name>
                  <description>PG_EINT7</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG6_SELECT</name>
              <description>000: Input     
001: Output 
010: UART1_TX       011: Reserved 
100: Reserved     
101: Reserved 
110: PG_EINT6       111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_TX</name>
                  <description>UART1_TX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT6</name>
                  <description>PG_EINT6</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG5_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC1_D3        011: Reserved 
100: Reserved     
101: Reserved 
110: PG_EINT5       111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D3</name>
                  <description>SDC1_D3</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT5</name>
                  <description>PG_EINT5</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG4_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC1_D2        011: Reserved 
100: Reserved     
101: Reserved 
110: PG_EINT4       111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D2</name>
                  <description>SDC1_D2</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT4</name>
                  <description>PG_EINT4</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG3_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC1_D1        011: Reserved 
100: Reserved       
101: Reserved 
110: PG_EINT3        111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D1</name>
                  <description>SDC1_D1</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT3</name>
                  <description>PG_EINT3</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG2_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC1_D0        011: Reserved 
100: Reserved     
101: Reserved 
110: PG_EINT2        111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_D0</name>
                  <description>SDC1_D0</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT2</name>
                  <description>PG_EINT2</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG1_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC1_CMD        011: Reserved  
100: Reserved     
101: Reserved 
110: PG_EINT1       111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_CMD</name>
                  <description>SDC1_CMD</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT1</name>
                  <description>PG_EINT1</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG0_SELECT</name>
              <description>000: Input     
001: Output 
010: SDC1_CLK       011: Reserved 
100: Reserved     
101: Reserved 
110: PG_EINT0       111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SDC1_CLK</name>
                  <description>SDC1_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT0</name>
                  <description>PG_EINT0</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG1_REG</name>
          <description>PG_CFG1_REG</description>
          <addressOffset>0xDC</addressOffset>
          <resetValue>0x777777</resetValue>
          <resetMask>0x777777</resetMask>
          <fields>
            <field>
              <name>PG13_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF3_DIN     
011: PCM1_DIN 
100: Reserved     
101: Reserved 
110: PG_EINT13       111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF3_DIN</name>
                  <description>AIF3_DIN</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM1_DIN</name>
                  <description>PCM1_DIN</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT13</name>
                  <description>PG_EINT13</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG12_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF3_DOUT    
011: PCM1_DOUT 
100: Reserved     
101: Reserved 
110: PG_EINT12       111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF3_DOUT</name>
                  <description>AIF3_DOUT</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM1_DOUT</name>
                  <description>PCM1_DOUT</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT12</name>
                  <description>PG_EINT12</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG11_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF3_BCLK    
011: PCM1_BCLK 
100: Reserved     
101: Reserved 
110: PG_EINT11       111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF3_BCLK</name>
                  <description>AIF3_BCLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM1_BCLK</name>
                  <description>PCM1_BCLK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT11</name>
                  <description>PG_EINT11</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG10_SELECT</name>
              <description>000: Input     
001: Output 
010: AIF3_SYNC    
011: PCM1_SYNC 
100: Reserved     
101: Reserved 
110: PG_EINT10       111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AIF3_SYNC</name>
                  <description>AIF3_SYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM1_SYNC</name>
                  <description>PCM1_SYNC</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT10</name>
                  <description>PG_EINT10</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG9_SELECT</name>
              <description>000: Input     
001: Output 
010: UART1_CTS       011: Reserved  
100: Reserved     
101: Reserved 
110: PG_EINT9       111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_CTS</name>
                  <description>UART1_CTS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT9</name>
                  <description>PG_EINT9</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG8_SELECT</name>
              <description>000: Input     
001: Output 
010: UART1_RTS       011: Reserved 
100: Reserved        
101: Reserved 
110: PG_EINT8       111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART1_RTS</name>
                  <description>UART1_RTS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PG_EINT8</name>
                  <description>PG_EINT8</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG2_REG</name>
          <description>PG_CFG2_REG</description>
          <addressOffset>0xE0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG3_REG</name>
          <description>PG_CFG3_REG</description>
          <addressOffset>0xE4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_DATA_REG</name>
          <description>PG_DATA_REG</description>
          <addressOffset>0xE8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PG_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV0_REG</name>
          <description>PG_DRV0_REG</description>
          <addressOffset>0xEC</addressOffset>
          <resetValue>0x5555555</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PG_DRV_13</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_12</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_11</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_10</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_9</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_8</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_7</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_6</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_5</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_4</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_3</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_2</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_1</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_0</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV1_REG</name>
          <description>PG_DRV1_REG</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CFG0_REG</name>
          <description>PG_EINT_CFG0_REG</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_CFG1_REG</name>
          <description>PG_EINT_CFG1_REG</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 8~13) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 8~13) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 8~13) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 8~13) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 8~13) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 8~13) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_CFG2_REG</name>
          <description>PG_EINT_CFG2_REG</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CFG3_REG</name>
          <description>PG_EINT_CFG3_REG</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CTL_REG</name>
          <description>PG_EINT_CTL_REG</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_13</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_12</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_11</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_10</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_9</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_8</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_7</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_DEB_REG</name>
          <description>PG_EINT_DEB_REG</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32Khz 
1: HOSC 24Mhz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32Khz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24Mhz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_STATUS_REG</name>
          <description>PG_EINT_STATUS_REG</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>EINT_STATUS_13</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_12</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_11</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_10</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_PULL0_REG</name>
          <description>PG_PULL0_REG</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PF_PULL_13</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_12</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_11</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_10</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_9</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_8</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_7</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_6</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_5</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_4</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_3</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_2</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_1</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_0</name>
              <description>PF[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_PULL1_REG</name>
          <description>PG_PULL1_REG</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_CFG0_REG</name>
          <description>PH_CFG0_REG</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PH7_SELECT</name>
              <description>000: Input     
001: Output 
010: UART3_CTS    
011: Reserved 
100: Reserved            101: Reserved 
110: PH_EINT7       111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_CTS</name>
                  <description>UART3_CTS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT7</name>
                  <description>PH_EINT7</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH6_SELECT</name>
              <description>000: Input     
001: Output 
010: UART3_RTS       011: Reserved 
100: Reserved            101: Reserved 
110: PH_EINT6       111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_RTS</name>
                  <description>UART3_RTS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT6</name>
                  <description>PH_EINT6</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH5_SELECT</name>
              <description>000: Input     
001: Output 
010: UART3_RX    
011: Reserved 
100: Reserved            101: Reserved 
110: PH_EINT5       111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_RX</name>
                  <description>UART3_RX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT5</name>
                  <description>PH_EINT5</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH4_SELECT</name>
              <description>000: Input     
001: Output 
010: UART3_TX    
011: Reserved 
100: Reserved            101: Reserved 
110: PH_EINT4       111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UART3_TX</name>
                  <description>UART3_TX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT4</name>
                  <description>PH_EINT4</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH3_SELECT</name>
              <description>000: Input     
001: Output 
010: TWI1_SDA    
011: Reserved 
100: Reserved            101: Reserved 
110: PH_EINT3       111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI1_SDA</name>
                  <description>TWI1_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT3</name>
                  <description>PH_EINT3</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH2_SELECT</name>
              <description>000: Input     
001: Output 
010: TWI1_SCK          011: Reserved 
100: Reserved            101: Reserved 
110: PH_EINT2       111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI1_SCK</name>
                  <description>TWI1_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT2</name>
                  <description>PH_EINT2</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH1_SELECT</name>
              <description>000: Input     
001: Output 
010: TWI0_SDA             011: Reserved  
100: Reserved            101: Reserved 
110: PH_EINT1       111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI0_SDA</name>
                  <description>TWI0_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT1</name>
                  <description>PH_EINT1</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH0_SELECT</name>
              <description>000: Input     
001: Output 
010: TWI0_SCK         011: Reserved 
100: Reserved            101: Reserved 
110: PH_EINT0       111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI0_SCK</name>
                  <description>TWI0_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT0</name>
                  <description>PH_EINT0</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_CFG1_REG</name>
          <description>PH_CFG1_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x7777</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>PH11_SELECT</name>
              <description>000: Input     
001: Output 
010: MIC_DATA          011: Reserved  
100: Reserved              101: Reserved 
110: PH_EINT11       111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MIC_DATA</name>
                  <description>MIC_DATA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT11</name>
                  <description>PH_EINT11</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH10_SELECT</name>
              <description>000: Input     
001: Output 
010: MIC_CLK              011: Reserved  
100: Reserved              101: Reserved 
110: PH_EINT10       111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MIC_CLK</name>
                  <description>MIC_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT10</name>
                  <description>PH_EINT10</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH9_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved           011: Reserved  
100: Reserved              101: Reserved 
110: PH_EINT9       111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT9</name>
                  <description>PH_EINT9</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PH8_SELECT</name>
              <description>000: Input     
001: Output 
010: OWA_OUT            011: Reserved 
100: Reserved              101: Reserved 
110: PH_EINT8       111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OWA_OUT</name>
                  <description>OWA_OUT</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PH_EINT8</name>
                  <description>PH_EINT8</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_CFG2_REG</name>
          <description>PH_CFG2_REG</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_CFG3_REG</name>
          <description>PH_CFG3_REG</description>
          <addressOffset>0x108</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_DATA_REG</name>
          <description>PH_DATA_REG</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PH_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the correspondin</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_DRV0_REG</name>
          <description>PH_DRV0_REG</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x555555</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PH_DRV_11</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_10</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_9</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_8</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_7</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_6</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_5</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_4</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_3</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_2</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_1</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_DRV_0</name>
              <description>PH[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_DRV1_REG</name>
          <description>PH_DRV1_REG</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_EINT_CFG0_REG</name>
          <description>PH_EINT_CFG0_REG</description>
          <addressOffset>0x240</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_CFG1_REG</name>
          <description>PH_EINT_CFG1_REG</description>
          <addressOffset>0x244</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>ENT_CFG_3</name>
              <description>External INTn Mode (n = 8~11) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENT_CFG_2</name>
              <description>External INTn Mode (n = 8~11) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENT_CFG_1</name>
              <description>External INTn Mode (n = 8~11) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ENT_CFG_0</name>
              <description>External INTn Mode (n = 8~11) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_CFG2_REG</name>
          <description>PH_EINT_CFG2_REG</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_EINT_CFG3_REG</name>
          <description>PH_EINT_CFG3_REG</description>
          <addressOffset>0x24C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PH_EINT_CTL_REG</name>
          <description>PH_EINT_CTL_REG</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_11</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_10</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_9</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_8</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_7</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_DEB_REG</name>
          <description>PH_EINT_DEB_REG</description>
          <addressOffset>0x258</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32Khz 
1: HOSC 24Mhz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32Khz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24Mhz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_EINT_STATUS_REG</name>
          <description>PH_EINT_STATUS_REG</description>
          <addressOffset>0x254</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EINT_STATUS_11</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_10</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_PULL0_REG</name>
          <description>PH_PULL0_REG</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PH_PULL_11</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_10</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_9</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_8</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_7</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_6</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_5</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_4</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_3</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_2</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_1</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PH_PULL_0</name>
              <description>PH[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PH_PULL1_REG</name>
          <description>PH_PULL1_REG</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PIO</name>
      <description>PIO</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PL_CFG0_REG</name>
          <description>PL_CFG0_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PL7_SELECT</name>
              <description>000: Input     
001: Output 
010: S_JTAG_DI    
011: Reserved 
100: Reserved     
101: Reserved 
110: S_PL_EINT7    
111: IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_JTAG_DI</name>
                  <description>S_JTAG_DI</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT7</name>
                  <description>S_PL_EINT7</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL6_SELECT</name>
              <description>000: Input     
001: Output 
010: S_JTAG_DO    
011: Reserved 
100: Reserved        101: Reserved 
110: S_PL_EINT6    
111: IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_JTAG_DO</name>
                  <description>S_JTAG_DO</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT6</name>
                  <description>S_PL_EINT6</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL5_SELECT</name>
              <description>000: Input     
001: Output 
010: S_JTAG_CK    
011: Reserved 
100: Reserved        101: Reserved 
110: S_PL_EINT5    
111: IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_JTAG_CK</name>
                  <description>S_JTAG_CK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT5</name>
                  <description>S_PL_EINT5</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL4_SELECT</name>
              <description>000: Input     
001: Output 
010: S_JTAG_MS     
011: Reserved 
100: Reserved        101: Reserved 
110: S_PL_EINT4    
111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_JTAG_MS</name>
                  <description>S_JTAG_MS</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT4</name>
                  <description>S_PL_EINT4</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL3_SELECT</name>
              <description>000: Input     
001: Output 
010: S_UART_RX       011: Reserved 
100: Reserved        101: Reserved 
110: S_PL_EINT3    
111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_UART_RX</name>
                  <description>S_UART_RX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT3</name>
                  <description>S_PL_EINT3</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL2_SELECT</name>
              <description>000: Input     
001: Output 
010: S_UART_TX       011: Reserved 
100: Reserved        101: Reserved 
110: S_PL_EINT2    
111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_UART_TX</name>
                  <description>S_UART_TX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT2</name>
                  <description>S_PL_EINT2</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL1_SELECT</name>
              <description>000: Input     
001: Output 
010: S_RSB_SDA       011: S_TWI_SDA 
100: Reserved        101: Reserved 
110: S_PL_EINT1    
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_RSB_SDA</name>
                  <description>S_RSB_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_TWI_SDA</name>
                  <description>S_TWI_SDA</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT1</name>
                  <description>S_PL_EINT1</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL0_SELECT</name>
              <description>000: Input     
001: Output 
010: S_RSB_SCK       011: S_TWI_SCK 
100: Reserved        101: Reserved 
110: S_PL_EINT0    
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_RSB_SCK</name>
                  <description>S_RSB_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_TWI_SCK</name>
                  <description>S_TWI_SCK</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT0</name>
                  <description>S_PL_EINT0</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_CFG1_REG</name>
          <description>PL_CFG1_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x77777</resetValue>
          <resetMask>0x77777</resetMask>
          <fields>
            <field>
              <name>PL12_SELECT</name>
              <description>000: Input     
001: Output 
010: Reserved              011: Reserved 
100: Reserved         
101: Reserved 
110: S_PL_EINT12       111: IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT12</name>
                  <description>S_PL_EINT12</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL11_SELECT</name>
              <description>000: Input     
001: Output 
010: S_CIR_RX              011: Reserved 
100: Reserved         
101: Reserved 
110: S_PL_EINT11       111: IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_CIR_RX</name>
                  <description>S_CIR_RX</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT11</name>
                  <description>S_PL_EINT11</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL10_SELECT</name>
              <description>000: Input     
001: Output 
010: S_PWM        011: Reserved 
100: Reserved           101: Reserved 
110: S_PL_EINT10    
111: IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PWM</name>
                  <description>S_PWM</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT10</name>
                  <description>S_PL_EINT10</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL9_SELECT</name>
              <description>000: Input     
001: Output 
010: S_TWI_SDA    
011: Reserved 
100: Reserved        101: Reserved 
110: S_PL_EINT9    
111: IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_TWI_SDA</name>
                  <description>S_TWI_SDA</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT9</name>
                  <description>S_PL_EINT9</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PL8_SELECT</name>
              <description>000: Input     
001: Output 
010: S_TWI_SCK    
011: Reserved 
100: Reserved        101: Reserved 
110: S_PL_EINT8    
111: IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_TWI_SCK</name>
                  <description>S_TWI_SCK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>S_PL_EINT8</name>
                  <description>S_PL_EINT8</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IO</name>
                  <description>IO Disable</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_CFG2_REG</name>
          <description>PL_CFG2_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_CFG3_REG</name>
          <description>PL_CFG3_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_DATA_REG</name>
          <description>PL_DATA_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>PL_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_DRV0</name>
          <description>Port L Multi-Driving Register 0</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1555555</resetValue>
          <resetMask>0x3FFFFFF</resetMask>
          <fields>
            <field>
              <name>PL_DRV_12</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_11</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_10</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_9</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_8</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_7</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_6</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_5</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_4</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_3</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_2</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_1</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_0</name>
              <description>PL[n] Multi-Driving Select (n = 0~12) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_DRV1</name>
          <description>Port L Multi-Driving Register 1</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CFG0</name>
          <description>PL_EINT_CFG0</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_CFG1</name>
          <description>PL_EINT_CFG1</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 8~12) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 8~12) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 8~12) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 8~12) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 8~12) 0x0: Positive Edge 0x1: Negative Edge 0x2: High Level 0x3: Low Level 0x4: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_CFG2</name>
          <description>PL_EINT_CFG2</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CFG3</name>
          <description>PL_EINT_CFG3</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CTL</name>
          <description>PL_EINT_CTL</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_12</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_11</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_10</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_9</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_8</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_7</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~12) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_DEB</name>
          <description>PL_EINT_DEB</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select 
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_STATUS</name>
          <description>PL_EINT_STATUS</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>EINT_STATUS_12</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_11</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_10</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~12) 0: No IRQ pending 1: IRQ pending Write `1` to clear</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_PULL0</name>
          <description>PL_PULL0</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0x3FFFFFF</resetMask>
          <fields>
            <field>
              <name>PL_PULL_12</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_11</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_10</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_9</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_8</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_7</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_6</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_5</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_4</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_3</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_2</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_1</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_0</name>
              <description>PL[n] Pull-up/down Select (n = 0~12) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_PULL1</name>
          <description>PL_PULL1</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PWM</name>
      <description>PWM</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PWM_CH0_PERIOD</name>
          <description>PWM Channel 0 Period Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>PWM_CH0_ENTIRE_CYS</name>
              <description>Number of the entire cycles in the PWM clock. 0 = 1 cycle 1 = 2 cycles ... N = N+1 cycles If the register need to be modified dynamically, the PCLK should be faster than the PWM CLK (PWM CLK = 24MHz/pre-scale). </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_CH0_ENTIRE_ACT_CYS</name>
              <description>Number of the active cycles in the PWM clock. 0 = 0 cycle 1 = 1 cycles ... N = N cycles </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_CTRL_REG</name>
          <description>PWM_CTRL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x100003FF</resetMask>
          <fields>
            <field>
              <name>PWM0_RDY</name>
              <description>PWM0 period register ready. 
0: PWM0 period register is ready to write, 
1: PWM0 period register is busy. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ready</name>
                  <description>PWM0 period register is ready to write,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy</name>
                  <description>PWM0 period register is busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM0_BYPASS</name>
              <description>PWM CH0 bypass enable. If the bit is set to 1, PWM0`s output is OSC24MHz. 
0: disable, 
1: enable. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_PUL_START</name>
              <description>PWM Channel 0 pulse output start. 
0: no effect, 
1: output 1 pulse. The pulse width should be according to the period 0 register[15:0],and the pulse state should be according to the active state. After the pulse is finished,the bit will be cleared automatically. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_effect</name>
                  <description>no effect,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>output</name>
                  <description>output 1 pulse. The pulse width should be according to the period 0 register[15:0],and the pulse state should be according to the active state. After the pulse is finished,the bit will be cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CHANNEL0_MODE</name>
              <description>0: cycle mode,  
1: pulse mode. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>cycle</name>
                  <description>cycle mode,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>pulse</name>
                  <description>pulse mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_CH0_GATING</name>
              <description>Gating the Special Clock for PWM0(0: mask, 1: pass). </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_CH0_ACT_STA</name>
              <description>PWM Channel 0 Active State. 
0: Low Level,  
1: High Level. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low Level,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Level.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_EN</name>
              <description>PWM Channel 0 Enable. 
0: Disable,  
1: Enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_PRESCAL</name>
              <description>PWM Channel 0 Prescalar. These bits should be setting before the PWM Channel 0 clock gate on. 
0000: /120 
0001: /180 
0010: /240 
0011: /360 
0100: /480 
0101: / 
0110: / 
0111: / 
1000: /12k 
1001: /24k 
1010: /36k 
1011: /48k 
1100: /72k 
1101: / 
1110: / 
1111: /1 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_120</name>
                  <description>/120</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_180</name>
                  <description>/180</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_240</name>
                  <description>/240</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_360</name>
                  <description>/360</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_480</name>
                  <description>/480</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_12k</name>
                  <description>/12k</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_24k</name>
                  <description>/24k</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_36k</name>
                  <description>/36k</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_48k</name>
                  <description>/48k</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_72k</name>
                  <description>/72k</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TWD</name>
      <description>TWD</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F01800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>R_TWD_CTRL_REG</name>
          <description>R_TWD Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000303</resetMask>
          <fields>
            <field>
              <name>CNT64_CLK_SRC_SEL</name>
              <description>64-bit counter clock source select. 
0: LOSC. 
1: OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_TWD_RESET_EN</name>
              <description>R_TWD reset enable. 
0: Reset disable. 
1: Reset enable. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset_disable</name>
                  <description>Reset disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset_enable</name>
                  <description>Reset enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_TWD_INT_EN</name>
              <description>R_TWD Interrupt Enable. 
0: Interrupt disable. 
1: Interrupt enable. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_disable</name>
                  <description>Interrupt disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_enable</name>
                  <description>Interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_TWD_STOP_EN</name>
              <description>R_TWD stop enable. 
0: Resume rolling-over. 
1: Stop rolling-over. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Resume</name>
                  <description>Resume rolling-over.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop rolling-over.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R_TWD_CLR_EN</name>
              <description>R_TWD clear enable. 
0: No effect. 
1: To clear relevant registers and it will change to zero after the registers are cleared. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>To_clear</name>
                  <description>To clear relevant registers and it will change to zero after the registers are cleared.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>R_TWD_HIGH_CNT_CMP_REG</name>
          <description>R_TWD_HIGH_CNT_CMP_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_TWD_HIGH_CMP</name>
              <description>The TWD high 32-bit compare counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R_TWD_HIGH_CNT_REG</name>
          <description>R_TWD_HIGH_CNT_REG</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_TWD_HIGH_CNT</name>
              <description>The TWD high 32-bit counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R_TWD_INTV_VAL_REG</name>
          <description>R_TWD Interval Value Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_TWD_INTV_VAL</name>
              <description>The TWD interval value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R_TWD_LOW_CNT_CMP_REG</name>
          <description>R_TWD_LOW_CNT_CMP_REG</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_TWD_LOW_CMP</name>
              <description>The TWD low 32-bit compare counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R_TWD_LOW_CNT_REG</name>
          <description>R_TWD_LOW_CNT_REG</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>R_TWD_LOW_CNT</name>
              <description>The TWD low 32-bit counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>R_TWD_RESTART_REG</name>
          <description>R_TWD_RESTART_REG</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0001</resetMask>
          <fields>
            <field>
              <name>R_TWD_RESTART_KEYFILED</name>
              <description>Should be written at value 0xD14. Writing any other value in this field aborts the write operation. </description>
              <bitRange>[27:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>R_TWD_RESTART_EN</name>
              <description>If writing `1` in this bit, the value of would change.  
0: No effect. 
1: Restart enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Restart</name>
                  <description>Restart enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>R_TWD_STATUS_REG</name>
          <description>R_TWD_STATUS_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>R_TWD_PEND_FLAG</name>
              <description>Trusted watchdog timer`s interrupt pending. Set 1 to the bit will clear it. 
0: No effect 
1: Pending </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SST_NV_CNT_REG</name>
          <description>SST_NV_CNT_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SST_NV_CNT</name>
              <description>This counter protects the trusted world Secure Storage file from replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG0</name>
          <description>SYN_DATA_CNT_REG0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT0</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG1</name>
          <description>SYN_DATA_CNT_REG1</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT1</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG2</name>
          <description>SYN_DATA_CNT_REG2</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT2</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG3</name>
          <description>SYN_DATA_CNT_REG3</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT3</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SCR</name>
      <description>SCR</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2C400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SCR_CLKDIV</name>
          <description>SCR_CLKDIV</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BAUDDIV</name>
              <description>Baud Clock Divisor. This 16-bit register defines the divisor value used to generate the Baud Clock impulses from the system clock.  </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCCDIV</name>
              <description>Smart Card Clock Divisor. This 16-bit register defines the divisor value used to generate the Smart Card Clock from the system clock.   is the frequency of Smart Card Clock Signal.  is the frequency of APB Clock. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CSR</name>
          <description>Smart Card Reader Control and Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81FF0F07</resetMask>
          <fields>
            <field>
              <name>SCDET</name>
              <description>Smart Card Detected This bit is set to `1` when the  input is active at least for a debounce time. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCDETPOL</name>
              <description>Smart Card Detect Polarity This bit set polarity of signal. 
0: Low Active 
1: High Active </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low Active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROTOCOL</name>
              <description>Protocol Selection (PTLSEL)  0x0 : T=0. 0x1 : T=1, no character repeating and no guard time is used when T=1 protocol is selected. 0x2 : Reserved 0x3 : Reserved  </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRSTFLUSH</name>
              <description>ATR Start Flush FIFO When enabled, both FIFOs are flushed before the ATR is started. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSRXE</name>
              <description>TS Receive Enable When set to `1`, the TS character (the first ATR character) will be store in RXFIFO during card session. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTPPOL</name>
              <description>Clock Stop Polarity The value of the scclk output during the clock stop state. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PECRXE</name>
              <description>Parity Error Character Receive Enable Enables storage of the characters received with wrong parity in RX FIFO. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSBF</name>
              <description>MSB First When high, inverse bit ordering convention (msb to lsb) is used. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATAPOL</name>
              <description>Data Plorarity When high, inverse level convention is used (A=`1`, Z=`0`). </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEACT_DEACTIVATION</name>
              <description>DEACTDeactivation. Setting of this bit initializes the deactivation sequence. When the deactivation is finished, the DEACT bit is automatically cleared. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation. Setting of this bit initializes the activation sequence. When the activation is finished, the ACT bit is automatically cleared. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WARMRST</name>
              <description>Warm Reset Command. Writing `1` to this bit initializes Warm Reset of the Smart Card. This bit is always read as `0`. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOP</name>
              <description>Clock Stop. When this bit is asserted and the smart card I/O line is in `Z` state, the SCR core stops driving of the smart card clock signal after the CLKSTOPDELAY time expires. The smart card clock is restarted immediately after the CLKSTOP signal is deasserted. New character transmission can be started after CLKSTARTDELAY time. The expiration of both times is signaled by the CLKSTOPRUN bit in the interrupt registers. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GINTEN</name>
              <description>Global Interrupt Enable. When high, IRQ output assertion is enabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiving Enable. When enabled the characters sent by the Smart Card are received by the UART and stored in RX FIFO. Receiving is internally disabled while a transmission is in progress. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmission Enable. When enabled the characters are read from TX FIFO and transmitted through UART to the Smart Card. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CTIM</name>
          <description>Smart Card Reader Character Time Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF00FF</resetMask>
          <fields>
            <field>
              <name>CHARLIMIT</name>
              <description>Character Limit. This 16-bit register sets the maximum time between the leading edges of two consecutive characters. The value is ETUs. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GUARDTIME</name>
              <description>Character Guard time. This 8-bit register sets a delay at the end of each character transmitted from the Smart Card Reader to the Smart Card. The value is in ETUs. The parity error is besides signaled during the guard time.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FCSR</name>
          <description>Smart Card Reader FIFO Control and Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x101</resetValue>
          <resetMask>0x707</resetMask>
          <fields>
            <field>
              <name>RXFIFOFLUSH</name>
              <description>Flush RX FIFO. RX FIFO is flushed, when `1` is written to this bit. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFOEMPTY</name>
              <description>RX FIFO Empty. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOFLUSH</name>
              <description>Flush TX FIFO. TX FIFO is flushed, when `1` is written to this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOFULL</name>
              <description>TX FIFO Full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFO</name>
          <description>Smart Card Reader RX and TX FIFO Access Point</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFO_DATA</name>
              <description>This 8-bit register provides access to the RX and TX FIFO buffers. The TX FIFO is accessed during the APB write transfer. The RX FIFO is accessed during the APB read transfer.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFOCNT</name>
          <description>SCR_FIFOCNT</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFTH</name>
              <description>RX FIFO Threshold These bits set the interrupt threshold of RX FIFO. The interrupt is asserted when the number of bytes it receives is equal to, or exceeds the threshold. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTH</name>
              <description>TX FIFO Threshold These bits set the interrupt threshold of TX FIFO. The interrupt is asserted when the number of bytes in TX FIFO is equal to or less than the threshold. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFCNT</name>
              <description>RX FIFO Counter These bits provide the number of bytes stored in the RXFIFO. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFCNT</name>
              <description>TX FIFO Counter These bits provide the number of bytes stored in the TXFIFO. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTEN</name>
          <description>Smart Card Reader Interrupt Enable Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt Enable. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt Enable. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt Enable. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt Enable. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt Enable. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt Enable. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt Enable. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt Enable. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt Enable. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt Enable. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt Enable. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt Enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt Enable. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt Enable. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt Enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt Enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTST</name>
          <description>Smart Card Reader Interrupt Status Register 1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt. When enabled, this interrupt is asserted after the Smart Card deactivation sequence is complete. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt. When enabled, this interrupt is asserted after the Smart Card activation sequence is complete. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt. When enabled, this interrupt is asserted after the smart card insertion. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt. When enabled, this interrupt is asserted after the smart card removal. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt. When enabled, this interrupt is asserted after the ATR sequence is successfully completed. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt. When enabled, this interrupt is asserted if the ATR sequence fails. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt. When enabled, this interrupt is asserted if the time between two consecutive characters, transmitted between the Smart Card and the Reader in both directions, is equal the Two Characters Delay Limit described below. The C2CFULL interrupt is internally enabled from the ATR start to the deactivation or ATR restart initialization. It is recommended to use this counter to detect unresponsive Smart Cards. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt. When enabled, this interrupt is asserted in two cases: When the smart card clock is stopped. When the new character can be started after the clock restart. To distinguish between the two interrupt cases, we recommend reading the CLKSTOP bit in SCR_CTRL1 register.  </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt. When enabled, this interrupt is asserted after the character with wrong parity was received when the number of repeated receptions exceeds RXREPEAT value or T=1 protocol is used. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt. When enabled, this interrupt is asserted after a character was received from the Smart Card. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt. When enabled, this interrupt is asserted if the number of bytes in RX FIFO is equal or exceeds the RX FIFO threshold. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt. When enabled, this interrupt is asserted if the RX FIFO is filled up. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt. When enabled, this interrupt is asserted if the Smart Card signals wrong character parity during the guard time after the character transmission was repeated TXREPEAT times or T=1 protocol is used.  </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt. When enabled, this interrupt is asserted after one character was transmitted to the smart card. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt. When enabled, this interrupt is asserted if the number of bytes in TX FIFO is equal or less than the TX FIFO threshold. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt. When enabled, this interrupt is asserted if the TX FIFO is emptied out. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt. When enabled, this interrupt is asserted after all bytes from TX FIFO ware transferred to the Smart Card. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_LTIM</name>
          <description>Smart Card Reader Line Time Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATR</name>
              <description>ATR Start Limit. This 16-bit register defines the maximum time between the rising edge of the scrstn signal and the start of ATR response.  ATR Start Limit = 128* ATR* . </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RST</name>
              <description>Reset Duration. This 16-bit register sets the duration of the Smart Card reset sequence. This value is same for the cold and warm reset.  Cold/Warm Reset Duration = 128* RST* . </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation/Deactivation Time. This 16-bit register sets the duration of each part of the activation and deactivation sequence.  Activation/Deactivation Duration = 128* ACT * .  is the Smart Card Clock Cycle. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_PAD</name>
          <description>SCR_PAD</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DSCVPPPP</name>
              <description>Direct Smart Card Vpp Pause/Prog. It provides direct access to SCVPPPP output. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVPPEN</name>
              <description>Direct Smart Card Vpp Enable. It provides direct access to SCVPPEN output. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOADEAVPP</name>
              <description>Automatic Vpp Handling. When high, it enables automatic handling of DSVPPEN and DSVPPPP signals during activation and deactivation sequence. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVCC</name>
              <description>Direct Smart Card VCC. When DIRACCPADS=`1`, the DSCVCC bit provides direct access to SCVCC pad. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCRST</name>
              <description>Direct Smart Card Clock. When DIRACCPADS=`1`, the DSCRST bit provides direct access to SCRST pad. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCCLK</name>
              <description>Direct Smart Card Clock. When DIRACCPADS=`1`, the DSCCLK bit provides direct access to SCCLK pad. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCIO</name>
              <description>Direct Smart Card Input/Output. When DIRACCPADS=`1`, the DSCIO bit provides direct access to SCIO pad. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIRACCPADS</name>
              <description>Direct Access to Smart Card Pads. When high, it disables a serial interface functionality and enables direct control of the smart card pads using following 4 bits. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_REPEAT</name>
          <description>SCR_REPEAT</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RXRPT</name>
              <description>RX Repeat This is a 4-bit register that specifies the number of attempts to request character re-transmission after wrong parity was detected. The re-transmission of the character is requested using the error signal during the guard time. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRPT</name>
              <description>TX Repeat This is a 4-bit register that specifies the number of attempts to re-transmit the character after the Smart Card signals the wrong parity during the guard time. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPC</name>
      <description>SPC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C23400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SPC_DECPORT0_CLR_REG</name>
          <description>SPC Decode Port0 Clear Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT0_OUT</name>
              <description>Clears the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to secure. There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT0_SET_REG</name>
          <description>SPC Decode Port0 Set Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT0_OUT</name>
              <description>Sets the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to non-secure. There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT0_STA_REG</name>
          <description>SPC Decode Port0 Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT0_OUT</name>
              <description>Show the status of the decode protection output: 
0: = Decode region corresponding to the bit is secure 
1: = Decode region corresponding to the bit is non-secure. There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT1_CLR_REG</name>
          <description>SPC Decode Port1 Clear Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT1_OUT</name>
              <description>Clears the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to secure. There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT1_SET_REG</name>
          <description>SPC Decode Port1 Set Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT1_OUT</name>
              <description>Sets the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to non-secure. There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT1_STA_REG</name>
          <description>SPC Decode Port1 Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT1_OUT</name>
              <description>Show the status of the decode protection output: 
0: = Decode region corresponding to the bit is secure 
1: = Decode region corresponding to the bit is non-secure. There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT2_CLR_REG</name>
          <description>SPC Decode Port2 Clear Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT2_OUT</name>
              <description>Clears the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to secure. There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT2_SET_REG</name>
          <description>SPC Decode Port2 Set Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT2_OUT</name>
              <description>Sets the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to non-secure. There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT2_STA_REG</name>
          <description>SPC Decode Port2 Status Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT2_OUT</name>
              <description>Show the status of the decode protection output: 
0: = Decode region corresponding to the bit is secure 
1: = Decode region corresponding to the bit is non-secure. There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT3_CLR_REG</name>
          <description>SPC Decode Port3 Clear Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT3_OUT</name>
              <description>Clears the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to secure There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT3_SET_REG</name>
          <description>SPC Decode Port3 Set Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT3_OUT</name>
              <description>Sets the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to non-secure There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT3_STA_REG</name>
          <description>SPC Decode Port3 Status Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT3_OUT</name>
              <description>Show the status of the decode protection output: 
0: = Decode region corresponding to the bit is secure 
1: = Decode region corresponding to the bit is non-secure There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT4_CLR_REG</name>
          <description>SPC Decode Port4 Clear Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT4_OUT</name>
              <description>Clears the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to secure There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT4_SET_REG</name>
          <description>SPC Decode Port4 Set Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT4_OUT</name>
              <description>Sets the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to non-secure There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT4_STA_REG</name>
          <description>SPC Decode Port4 Status Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT4_OUT</name>
              <description>Show the status of the decode protection output: 
0: = Decode region corresponding to the bit is secure 
1: = Decode region corresponding to the bit is non-secure There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT5_CLR_REG</name>
          <description>SPC Decode Port5 Clear Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT5_OUT</name>
              <description>Clears the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to secure There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT5_SET_REG</name>
          <description>SPC Decode Port5 Set Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT5_OUT</name>
              <description>Sets the corresponding decode protection output: 
0: = No effect 
1: = Set decode region to non-secure There is one bit of the register for each protection output (See the SPC Configuration in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT5_STA_REG</name>
          <description>SPC Decode Port5 Status Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT5_OUT</name>
              <description>Show the status of the decode protection output: 
0: = Decode region corresponding to the bit is secure 
1: = Decode region corresponding to the bit is non-secure There is one bit of the register for each protection output (See the SPC Configuration  in detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPINLOCK</name>
      <description>SPINLOCK</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C18000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>SPINLOCKN_LOCK_REG[%s]</name>
          <description>SPINLOCKN_LOCK_REG[%s]</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TAKEN</name>
              <description>Lock State. Read 0x0: The lock was previously Not Taken (free).The requester is granted the lock. Write 0x0: Set the lock to Not Taken (free). Read 0x1: The lock was previously Taken. The requester is not granted the lock and must retry. Write 0x1: No update to the lock value. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPINLOCK_STATUS_REG</name>
          <description>Spinlock Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOCK_REG_STATUS__31</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__30</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__29</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__28</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__27</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__26</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__25</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__24</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__23</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__22</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__21</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__20</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__19</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__18</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__17</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__16</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__15</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__14</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__13</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__12</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__11</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__10</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__9</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__8</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__7</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__6</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__5</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__4</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__3</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__2</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__1</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__0</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free, 1: The Spinlock is taken.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPINLOCK_SYSTATUS_REG</name>
          <description>Spinlock System Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0x30000100</resetMask>
          <fields>
            <field>
              <name>LOCKS_NUM</name>
              <description>Number of lock registers implemented. 
0x1: This instance has 32 lock registers. 
0x2: This instance has 64 lock registers. 
0x3: This instance has 128 lock registers. 
0x4: This instance has 256 lock registers. </description>
              <bitRange>[29:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>This_instance_has_32</name>
                  <description>This instance has 32 lock registers.</description>
                  <value>0x1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_64</name>
                  <description>This instance has 64 lock registers.</description>
                  <value>0x2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_128</name>
                  <description>This instance has 128 lock registers.</description>
                  <value>0x3</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_256</name>
                  <description>This instance has 256 lock registers.</description>
                  <value>0x4</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IU0</name>
              <description>In-Use flag0, covering lock register0-31. 
0: All lock register 0-31 are in the Not Taken state. 
1: At least one of the lock register 0-31 is in the Taken state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>All</name>
                  <description>All lock register 0-31 are in the Not Taken state.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>At</name>
                  <description>At least one of the lock register 0-31 is in the Taken state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI0</name>
      <description>SPI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C68000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SPI_BC</name>
          <description>SPI_BC</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBC</name>
              <description>Master Burst Counter In master mode, this field specifies the total burst number. 
0: 0 burst 
1: 1 burst ... N: N bursts </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_BCC</name>
          <description>SPI Burst Control register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DRM</name>
              <description>Master Dual Mode RX Enable 
0: RX use single-bit mode 
1: RX use dual mode Note Can`t be written when XCH=1. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_use_single_bit</name>
                  <description>RX use single-bit mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_use_dual</name>
                  <description>RX use dual mode Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBC</name>
              <description>Master Dummy Burst Counter In master mode, this field specifies the burst number that should be sent before receive in dual SPI mode. The data is don`t care by the device. 
0: 0 burst 
1: 1 burst ... N: N bursts Note Can`t be written when XCH=1. </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STC</name>
              <description>Master Single Mode Transmit Counter In master mode, this field specifies the burst number that should be sent in single mode before automatically sending dummy burst. This is the first transmit counter in all bursts. 
0: 0 burst 
1: 1 burst ... N: N bursts Note Can`t be written when XCH=1. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_CCTL</name>
          <description>SPI_CCTL</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>DRS</name>
              <description>Divide Rate Select (Master Mode Only) 
0: Select Clock Divide Rate 1 
1: Select Clock Divide Rate 2 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_1</name>
                  <description>Select Clock Divide Rate 1</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_2</name>
                  <description>Select Clock Divide Rate 2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CDR1</name>
              <description>Clock Divide Rate 1 (Master Mode Only) The SPI_SCLK is determined according to the following equation: SPI_CLK = Source_CLK / 2^n. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CDR2</name>
              <description>Clock Divide Rate 2 (Master Mode Only) The SPI_SCLK is determined according to the following equation: SPI_CLK =  Source_CLK / (2*(n + 1)). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_CTL</name>
          <description>SPI_CTL</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x80000083</resetMask>
          <fields>
            <field>
              <name>SRST</name>
              <description>Soft reset Write `1` to this bit will clear the SPI controller, and auto clear to `0` when reset operation completes Write `0` has no effect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TP_EN</name>
              <description>Transmit Pause Enable In master mode, it is used to control transmit state machine to stop smart burst sending when RX FIFO is full. 1 - stop transmit data when RXFIFO full 0 - normal operation, ignore RXFIFO status Note: Can`t be written when XCH=1 </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>SPI Function Mode Select 
0: Slave Mode 
1: Master Mode Note: Can`t be written when XCH=1 </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Slave</name>
                  <description>Slave Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Master</name>
                  <description>Master Mode Note: Can`t be written when XCH=1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN</name>
              <description>SPI Module Enable Control 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FSR</name>
          <description>SPI FIFO Status register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TB_WR</name>
              <description>TX FIFO Write Buffer Write Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TB_CNT</name>
              <description>TX FIFO Write Buffer Counter These bits indicate the number of words in TX FIFO Write Buffer </description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TF_CNT</name>
              <description>TX FIFO Counter These bits indicate the number of words in TX FIFO 
0: 0 byte in TX FIFO 
1: 1 byte in TX FIFO ... 
64: 64 bytes in TX FIFO </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 bytes in TX FIFO</description>
                  <value>64</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RB_WR</name>
              <description>RX FIFO Read Buffer Write Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RB_CNT</name>
              <description>RX FIFO Read Buffer Counter These bits indicate the number of words in RX FIFO Read Buffer </description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RF_CNT</name>
              <description>RX FIFO Counter These bits indicate the number of words in RX FIFO 
0: 0 byte in RX FIFO 
1: 1 byte in RX FIFO ... 64:64 bytes in RX FIFO </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_IER</name>
          <description>SPI Interrupt Control register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SS_INT_EN</name>
              <description>SSI Interrupt Enable Chip Select Signal (SSx) from valid state to invalid state 
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TC_INT_EN</name>
              <description>Transfer Completed Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDR_INT_EN</name>
              <description>TXFIFO under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF_INT_EN</name>
              <description>TX FIFO Overflow Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_UDR_INT_EN</name>
              <description>RXFIFO under run Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_OVF_INT_EN</name>
              <description>RX FIFO Overflow Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_FUL_INT_EN</name>
              <description>TX FIFO Full Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP_INT_EN</name>
              <description>TX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_ERQ_INT_EN</name>
              <description>TX FIFO Empty Request Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_FUL_INT_EN</name>
              <description>RX FIFO Full Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP_INT_EN</name>
              <description>RX FIFO Empty Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_RDY_INT_EN</name>
              <description>RX FIFO Ready Request Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INTCTL</name>
          <description>SPI_INTCTL</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x87</resetValue>
          <resetMask>0x80007FFF</resetMask>
          <fields>
            <field>
              <name>XCH</name>
              <description>Exchange Burst In master mode it is used to start SPI burst 
0: Idle 
1: Initiates exchange. Write `1` to this bit will start the SPI burst, and will auto clear after finishing the bursts transfer specified by BC. Write `1` to SRST will also clear this bit. Write `0` to this bit has no effect. Note Can`t be written when XCH=1. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Initiates</name>
                  <description>Initiates exchange. Write `1` to this bit will start the SPI burst, and will auto clear after finishing the bursts transfer specified by BC. Write `1` to SRST will also clear this bit. Write `0` to this bit has no effect. Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDDM</name>
              <description>Sending Data Delay Mode 0:normal sending 1:delay sending Set the bit to"1" to make the data that should be sent with a delay of half cycle of SPI_CLK in dual io mode for SPI mode 0. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDM</name>
              <description>Master Sample Data Mode 0 - Delay Sample Mode 1 - Normal Sample Mode In Normal Sample Mode, SPI master samples the data at the correct edge for each SPI mode; In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the correct edge defined in respective SPI mode. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FBS</name>
              <description>First Transmit Bit Select 
0: MSB first 
1: LSB first Note Can`t be written when XCH=1. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDC</name>
              <description>Master Sample Data Control Set this bit to `1` to make the internal read sample point with a delay of half cycle of SPI_CLK. It is used in high speed read operation to reduce the error caused by the time delay of SPI_CLK propagating between master and slave. 0 - normal operation, do not delay internal read sample point 1 - delay internal read sample point Note Can`t be written when XCH=1. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RPSM</name>
              <description>Rapids mode select Select Rapids mode for high speed write. 
0: normal write mode 
1: rapids write mode Note Can`t be written when XCH=1. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal write mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>rapids</name>
                  <description>rapids write mode Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDB</name>
              <description>Dummy Burst Type 
0: The bit value of dummy SPI burst is zero 
1: The bit value of dummy SPI burst is one Note Can`t be written when XCH=1. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>zero</name>
                  <description>The bit value of dummy SPI burst is zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>one</name>
                  <description>The bit value of dummy SPI burst is one Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DHB</name>
              <description>Discard Hash Burst In master mode it controls whether discarding unused SPI bursts 
0: Receiving all SPI bursts in BC period 
1: Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC. Note Can`t be written when XCH=1. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiving</name>
                  <description>Receiving all SPI bursts in BC period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Discard</name>
                  <description>Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC. Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_LEVEL</name>
              <description>When control SS signal manually (SPI_CTRL_REG.SS_CTRL==1), set this bit to `1` or `0` to control the level of SS signal. 
0: set SS to low 
1: set SS to high Note Can`t be written when XCH=1. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>set_SS_to_low</name>
                  <description>set SS to low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>set_SS_to_high</name>
                  <description>set SS to high Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_OWNER</name>
              <description>SS Output Owner Select Usually, controller sends SS signal automatically with data together. When this bit is set to 1, software must manually write SPI_CTL_REG.SS_LEVEL to 1 or 0 to control the level of SS signal. 
0: SPI controller 
1: Software Note Can`t be written when XCH=1. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI</name>
                  <description>SPI controller</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Software</name>
                  <description>Software Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_SEL</name>
              <description>SPI Chip Select Select one of four external SPI Master/Slave Devices 
00: SPI_SS0 will be asserted 
01: SPI_SS1 will be asserted 
10: SPI_SS2 will be asserted 
11: SPI_SS3 will be asserted Note Can`t be written when XCH=1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SS0</name>
                  <description>SPI_SS0 will be asserted</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS1</name>
                  <description>SPI_SS1 will be asserted</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS2</name>
                  <description>SPI_SS2 will be asserted</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS3</name>
                  <description>SPI_SS3 will be asserted Note Can`t be written when XCH=1.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSCTL</name>
              <description>In master mode, this bit selects the output wave form for the SPI_SSx signal. Only valid when SS_OWNER = 0. 
0: SPI_SSx remains asserted between SPI bursts 
1: Negate SPI_SSx between SPI bursts Note Can`t be written when XCH=1. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SSx</name>
                  <description>SPI_SSx remains asserted between SPI bursts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negate</name>
                  <description>Negate SPI_SSx between SPI bursts Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL</name>
              <description>SPI Chip Select Signal Polarity Control 
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle) Note Can`t be written when XCH=1. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle) Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPOL</name>
              <description>SPI Clock Polarity Control 
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle) Note Can`t be written when XCH=1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle) Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPHA</name>
              <description>SPI Clock/Data Phase Control 
0: Phase 0 (Leading edge for sample data) 
1: Phase 1 (Leading edge for setup data) Note Can`t be written when XCH=1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Phase_0</name>
                  <description>Phase 0 (Leading edge for sample data)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Phase_1</name>
                  <description>Phase 1 (Leading edge for setup data) Note Can`t be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INT_STA</name>
          <description>SPI_INT_STA</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x22</resetValue>
          <resetMask>0x3F77</resetMask>
          <fields>
            <field>
              <name>SSI</name>
              <description>SS Invalid Interrupt When SSI is 1, it indicates that SS has changed from valid state to invalid state. Writing 1 to this bit clears it. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TC</name>
              <description>Transfer Completed In master mode, it indicates that all bursts specified by BC has been exchanged. In other condition, When set, this bit indicates that all the data in TXFIFO has been loaded in the Shift register, and the Shift register has shifted out all the bits. Writing 1 to this bit clears it.  
0: Busy 
1: Transfer Completed </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer Completed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDF</name>
              <description>TXFIFO Underrun This bit is set when if the TXFIFO is underrun. Writing 1 to this bit clears it. 
0: TXFIFO is not underrun 
1: TXFIFO is underrun </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_underrun</name>
                  <description>TXFIFO is not underrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underrun</name>
                  <description>TXFIFO is underrun</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF</name>
              <description>TXFIFO Overflow This bit is set when if the TXFIFO is overflow. Writing 1 to this bit clears it. 
0: TXFIFO is not overflow 
1: TXFIFO is overflowed </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>TXFIFO is not overflow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflowed</name>
                  <description>TXFIFO is overflowed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UDF</name>
              <description>RXFIFO Underrun When set, this bit indicates that RXFIFO has underrun. Writing 1 to this bit clears it. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_OVF</name>
              <description>RXFIFO Overflow When set, this bit indicates that RXFIFO has overflowed. Writing 1 to this bit clears it. 
0: RXFIFO is available. 
1: RXFIFO has overflowed. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>available</name>
                  <description>RXFIFO is available.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RXFIFO_has</name>
                  <description>RXFIFO has overflowed.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FULL</name>
              <description>TXFIFO Full This bit is set when if the TXFIFO is full . Writing 1 to this bit clears it. 
0: TXFIFO is not Full 
1: TXFIFO is Full </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_Full</name>
                  <description>TXFIFO is not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>TXFIFO is Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP</name>
              <description>TXFIFO Empty This bit is set if the TXFIFO is empty. Writing 1 to this bit clears it. 
0: TXFIFO contains one or more words. 
1: TXFIFO is empty </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_contains</name>
                  <description>TXFIFO contains one or more words.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>TXFIFO is empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_READY</name>
              <description>TXFIFO Ready 
0: TX_WL &gt; TX_TRIG_LEVEL 
1: TX_WL &lt;= TX_TRIG_LEVEL  This bit is set any time if TX_WL &lt;= TX_TRIG_LEVEL. Writing `1` to this bit clears it. Where TX_WL is the water level of RXFIFO </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_WL__gt_</name>
                  <description>TX_WL &gt; TX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_WL__lt__equals_</name>
                  <description>TX_WL &lt;= TX_TRIG_LEVEL  This bit is set any time if TX_WL &lt;= TX_TRIG_LEVEL. Writing `1` to this bit clears it. Where TX_WL is the water level of RXFIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FULL</name>
              <description>RXFIFO Full This bit is set when the RXFIFO is full . Writing 1 to this bit clears it. 
0: Not Full 
1: Full </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_Full</name>
                  <description>Not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP</name>
              <description>RXFIFO Empty This bit is set when the RXFIFO is empty . Writing 1 to this bit clears it. 
0: Not empty 
1: empty </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_empty</name>
                  <description>Not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RDY</name>
              <description>RXFIFO Ready 
0: RX_WL &lt; RX_TRIG_LEVEL 
1: RX_WL &gt;= RX_TRIG_LEVEL This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing `1` to this bit clears it. Where RX_WL is the water level of RXFIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_WL__lt_</name>
                  <description>RX_WL &lt; RX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_WL__gt__equals_</name>
                  <description>RX_WL &gt;= RX_TRIG_LEVEL This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing `1` to this bit clears it. Where RX_WL is the water level of RXFIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_NDMA_MODE_CTL</name>
          <description>SPI Normal DMA Mode Control Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xA5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>NDMA_MODE_CTL</name>
              <description>0xEA:NDMA handshake mode Note:NDMA wait mode don't care this value.0xA5 can be used in handshake mode, but 0xEA is better. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_RXD</name>
          <description>SPI RX Data register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RDATA</name>
              <description>Receive Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are data in RXFIFO, the top word is returned and the RXFIFO depth is decreased by 1. In half-word accessing method, two SPI bursts are returned and the RXFIFO depth is decrease by 2. In word accessing method, the four SPI bursts are returned and the RXFIFO depth is decreased by 4. Note: This address is read-only if RF_TEST is `0`, and if RF_TEST is set to `1`, this address is readable and writable to test the RX FIFO through the AHB bus. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TC</name>
          <description>SPI_TC</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MWTC</name>
              <description>Master Write Transmit Counter In master mode, this field specifies the burst number that should be sent to TXFIFO before automatically sending dummy burst. For saving bus bandwidth, the dummy burst (all zero bits or all one bits) is sent by SPI Controller automatically. 
0: 0 burst 
1: 1 burst ... N: N bursts </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXD</name>
          <description>SPI TX Data register</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TDATA</name>
              <description>Transmit Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are rooms in RXFIFO, one burst data is written to RXFIFO and the depth is increased by 1. In half-word accessing method, two SPI burst data are written and the TXFIFO depth is increase by 2. In word accessing method, four SPI burst data are written and the TXFIFO depth is increased by 4. Note: This address is writing-only if TF_TEST is `0`, and if TF_TEST is set to `1`, this address is readable and writable to test the TX FIFO through the AHB bus. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_WAIT</name>
          <description>SPI_WAIT</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>SWC</name>
              <description>Dual mode direction switch wait clock counter (for master mode only). 
0: No wait states inserted n: n SPI_SCLK wait states inserted Note: These bits control the number of wait states to be inserted before start dual data transfer in dual SPI mode. The SPI module counts SPI_SCLK by SWC for delaying next word data transfer. Note Can`t be written when XCH=1. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WCC</name>
              <description>Wait Clock Counter (In Master mode) These bits control the number of wait states to be inserted in data transfers. The SPI module counts SPI_SCLK by WCC for delaying next word data transfer. 
0: No wait states inserted N: N SPI_SCLK wait states inserted </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI__FCR</name>
          <description>SPI__FCR</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x400001</resetValue>
          <resetMask>0xC1FFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_RST</name>
              <description>TX FIFO Reset Write `1` to this bit will reset the control portion of the TX FIFO and auto clear to `0` when completing reset operation, write to `0` has no effect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TF_TEST_ENB</name>
              <description>TX Test Mode Enable 
0: disable 
1: enable Note: In normal mode, TX FIFO can only be read by SPI controller, write `1` to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable Note: In normal mode, TX FIFO can only be read by SPI controller, write `1` to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_DRQ_EN</name>
              <description>TX FIFO DMA Request Enable 
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TRIG_LEVEL</name>
              <description>TX FIFO Empty Request Trigger Level </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_RST</name>
              <description>RXFIFO Reset Write `1` to this bit will reset the control portion of the receiver FIFO, and auto clear to `0` when completing reset operation, write `0` to this bit has no effect.  </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_TEST</name>
              <description>RX Test Mode Enable 
0: Disable 
1: Enable Note: In normal mode, RX FIFO can only be written by SPI controller, write `1` to this bit will switch RX FIFO read and write function to AHB bus. This bit is used to test the RX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time.  </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Note: In normal mode, RX FIFO can only be written by SPI controller, write `1` to this bit will switch RX FIFO read and write function to AHB bus. This bit is used to test the RX FIFO, don`t set in normal operation and don`t set RF_TEST and TF_TEST at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DMA_MODE</name>
              <description>SPI RX DMA Mode Control 
0: Normal DMA mode 
1: Dedicate DMA mode </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal DMA mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dedicate</name>
                  <description>Dedicate DMA mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_DRQ_EN</name>
              <description>RX FIFO DMA Request Enable 
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TRIG_LEVEL</name>
              <description>RX FIFO Ready Request Trigger Level </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI1</name>
      <description>SPI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C69000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>TCON0</name>
      <description>TCON0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0C000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON0_CEU_COEF_ADD_REG</name>
            <description>TCON0_CEU_COEF_ADD_REG</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc </description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON0_CEU_COEF_RANGE_REG</name>
            <description>TCON0_CEU_COEF_RANGE_REG</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF</name>
                <description>_Range_Min unsigned 8bit value, range of [0,255] </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU</name>
                <description>Coef _Range_Max unsigned 8bit value, range of [0,255] </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON0_3D_FIFO_REG</name>
          <description>TCON0 3D fifo register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FF3</resetMask>
          <fields>
            <field>
              <name>3D_FIFO_BIST_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>3D_FIFO_HALF_LINE_SIZE</name>
              <description>Note: The number of data in half line=3D_FIFO_HALF_LINE_SIZE+1 only valid when 3D_FIFO_SETTING set as 2 </description>
              <bitRange>[13:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>3D_FIFO</name>
              <description>0: by pass 
1: used as normal FIFO 
2: used as 3D interlace FIFO 
3: reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC0_REG</name>
          <description>TCON0 basic timing register0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON0_X</name>
              <description>Panel width is X+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_Y</name>
              <description>Panel height is Y+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC1_REG</name>
          <description>TCON0 basic timing register1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9FFF0FFF</resetMask>
          <fields>
            <field>
              <name>RESERVD</name>
              <description>Reservd </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HT</name>
              <description>Thcycle = (HT+1) * Tdclk Computation 1) parallel:HT = X + BLANK Limitation: 1) parallel :HT &gt;=  (HBP +1) + (X+1) +2  2) serial 1: HT &gt;=  (HBP +1) + (X+1) *3+2  3) serial 2: HT &gt;=  (HBP +1) + (X+1) *3/2+2 </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch (in dclk) Thbp = (HBP +1) * Tdclk </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC2_REG</name>
          <description>TCON0 basic timing register2</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>TVT = (VT)/2 * Thsync Note: VT/2 &gt;=  (VBP+1 ) + (Y+1) +2 </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>Tvbp = (VBP +1) * Thsync </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC3_REG</name>
          <description>TCON0 basic timing register3</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>Thspw = (HSPW+1) * Tdclk Note: HT&gt;  (HSPW+1) </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>Tvspw = (VSPW+1) * Thsync Note: VT/2 &gt;  (VSPW+1) </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CEU_COEF_MUL_REG_0</name>
          <description>TCON0_CEU_COEF_MUL_REG_0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_MUL_REG_0">
          <name>TCON0_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON0_CEU_CTL_REG</name>
          <description>TCON0_CEU_CTL_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>CEU_en 
0: bypass 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CMAP_CTL_REG</name>
          <description>TCON0_CMAP_CTL_REG</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>COLOR_MAP_EN</name>
              <description>0: bypass 
1: enable This module only work when X is divided by 4 </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable This module only work when X is divided by 4</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_FORMAT</name>
              <description>0: 4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3 
1: 2 pixel output mode: Out0 -&gt; Out1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 pixel output mode: Out0 -&gt; Out1 -&gt; Out2 -&gt; Out3</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 pixel output mode: Out0 -&gt; Out1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CMAP_EVEN0_REG</name>
          <description>TCON0_CMAP_EVEN0_REG</description>
          <addressOffset>0x198</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN1</name>
              <description>Out_Even1 </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN0</name>
              <description>Out_Even0 </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CMAP_EVEN1_REG</name>
          <description>TCON0_CMAP_EVEN1_REG</description>
          <addressOffset>0x19C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_EVEN3</name>
              <description>Out_Even3 </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_EVEN2</name>
              <description>Out_Even2 </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CMAP_ODD0_REG</name>
          <description>TCON0_CMAP_ODD0_REG</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD1</name>
              <description>Out_Odd1 </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD0</name>
              <description>Out_Odd0 bit15-12: Reservd bit11-08: Out_Odd0[23:16] bit07-04: Out_Odd0[15:8] bit03-00: Out_Odd0[7:0] 
0x0: in_b0 
0x1: in_g0 
0x2: in_r0 
0x3: reservd 
0x4: in_b1 
0x5: in_g1 
0x6: in_r1 
0x7: reservd 
0x8: in_b2 
0x9: in_g2 0xa: in_r2 0xb: reservd 0xc: in_b3 0xd: in_g3 0xe: in_r3 0xf: reservd </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CMAP_ODD1_REG</name>
          <description>TCON0_CMAP_ODD1_REG</description>
          <addressOffset>0x194</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>OUT_ODD3</name>
              <description>Out_Odd3 </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OUT_ODD2</name>
              <description>Out_Odd2 </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_IF_REG</name>
          <description>TCON0 cpu panel interface register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF6C3003F</resetMask>
          <fields>
            <field>
              <name>CPU_MODE</name>
              <description>0000: 18bit/256K mode 
0010: 16bit mode0 
0100: 16bit mode1 
0110: 16bit mode2 
1000: 16bit mode3 
1010: 9bit mode 
1100: 8bit 256K mode 
1110: 8bit 65K mode 
xxx1: 24bit for DSI </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_18bit_slash_256K_mode</name>
                  <description>18bit/256K mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode0</name>
                  <description>16bit mode0</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode1</name>
                  <description>16bit mode1</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode2</name>
                  <description>16bit mode2</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16bit_mode3</name>
                  <description>16bit mode3</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_9bit_mode</name>
                  <description>9bit mode</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_256K_mode</name>
                  <description>8bit 256K mode</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_65K_mode</name>
                  <description>8bit 65K mode</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24bit_for</name>
                  <description>24bit for DSI</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA</name>
              <description>pin A1 value in 8080 mode auto/flash states </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CA</name>
              <description>pin A1 value in 8080 mode WR/RD execute </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WR_FLAG</name>
              <description>0:write operation is finishing 1:write operation is pending </description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RD_FLAG</name>
              <description>0:read operation is finishing 1:read operation is pending </description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>AUTO</name>
              <description>auto Transfer Mode: If it`s 1, all the valid data during this frame are write to panel. Note: This bit is sampled by Vsync </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FLUSH</name>
              <description>direct transfer mode: If it`s enabled, FIFO1 is regardless of the HV timing, pixels data keep being transferred unless the input FIFO was empty. Data output rate control by DCLK. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_FIFO_BIST_EN</name>
              <description>0: disable 
1: enable Entry addr is 0xFF8 </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable Entry addr is 0xFF8</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIGGER_FIFO_EN</name>
              <description>0:enable 1:disable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_START</name>
              <description>write `1` to start a frame flush, write`0` has no effect. this flag indicated frame flush is running sofeware must make sure write `1` only when this flag is `0`. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRIGGER_EN</name>
              <description>0: trigger mode disable 
1: trigger mode enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>trigger mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>trigger mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD0_REG</name>
          <description>TCON0 cpu panel read data register0</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>DATA_RD0</name>
              <description>Data_Rd0 data read on 8080 bus, launch a new read operation on 8080 bus </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_RD1_REG</name>
          <description>TCON0 cpu panel read data register1</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>DATA_RD1</name>
              <description>Data_Rd1 data read on 8080 bus, without a new read operation on 8080 bus </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI0_REG</name>
          <description>TCON0 cpu panel trigger register0</description>
          <addressOffset>0x160</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_SPACE</name>
              <description>should be set &gt;20*pixel_cycle </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BLOCK_SIZE</name>
              <description></description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI1_REG</name>
          <description>TCON0 cpu panel trigger register1</description>
          <addressOffset>0x164</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BLOCK_CURRENT_NUM</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BLOCK_NUM</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI2_REG</name>
          <description>TCON0 cpu panel trigger register2</description>
          <addressOffset>0x168</addressOffset>
          <resetValue>0x200000</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>START_DELAY</name>
              <description>Tdly = (Start_Delay +1) * be_clk*8 </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START_MODE</name>
              <description>0: ecc_fifo+tri_fifo 
1: tri_fifo </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ecc_fifo_plus_tri_fifo</name>
                  <description>ecc_fifo+tri_fifo</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>tri_fifo</name>
                  <description>tri_fifo</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SYNC_MODE</name>
              <description>0x: auto 
10: 0 
11: 1 </description>
              <bitRange>[14:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_START_SET</name>
              <description></description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI3_REG</name>
          <description>TCON0 cpu panel trigger register3</description>
          <addressOffset>0x16C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30FFFFFF</resetMask>
          <fields>
            <field>
              <name>TRI_INT_MODE</name>
              <description>00: disable 
01: counter mode  
10: te rising mode 
11: te falling mode when set as 01, Tri_Counter_Int occur in cycle of (Count_N+1) (Count_M+1) 4 dclk. when set as 10 or 11, io0 is map as TE input. </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_N</name>
              <description>Counter_N </description>
              <bitRange>[23:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>COUNTER_M</name>
              <description>Counter_M </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI4_REG</name>
          <description>TCON0 cpu panel trigger register4</description>
          <addressOffset>0x170</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x11FFFFFF</resetMask>
          <fields>
            <field>
              <name>PLUG_MODE_EN</name>
              <description>0: disable 1:enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable 1:enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>A1</name>
              <description>Valid in first Block </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in first Block </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_TRI5_REG</name>
          <description>TCON0 cpu panel trigger register5</description>
          <addressOffset>0x174</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>A1</name>
              <description>Valid in Block except first </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>D23_D0</name>
              <description>Valid in Block except first </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CPU_WR_REG</name>
          <description>TCON0 cpu panel write data register</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_WR</name>
              <description>data write on 8080 bus, launch a write operation on 8080 bus </description>
              <bitRange>[23:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CTL_REG</name>
          <description>TCON0 control register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x93A001F7</resetMask>
          <fields>
            <field>
              <name>TCON0_EN</name>
              <description>TCON0_En  
0: disable 
1: enable Note: It executes at the beginning of the first blank line of TCON0 timing. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable Note: It executes at the beginning of the first blank line of TCON0 timing.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_WORK_MODE</name>
              <description>TCON0_Work_Mode 
0: normal 
1: dynamic freq </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>dynamic</name>
                  <description>dynamic freq</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0</name>
              <description>TCON0_IF 
00: HV(Sync+DE) 
01: 8080 I/F 1x:reservd </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>HV_openingparen_Sync_plus_DE_closingparen_</name>
                  <description>HV(Sync+DE)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8080</name>
                  <description>8080 I/F 1x:reservd</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_RB_SWAP</name>
              <description>TCON0_RB_Swap 
0: default 
1: swap RED and BLUE data at FIFO1 </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>default</name>
                  <description>default</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>swap</name>
                  <description>swap RED and BLUE data at FIFO1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FIFO1_RST_WRITE_AND_THEN</name>
              <description>TCON0_FIFO1_Rst Write 1 and then 0 at this bit will reset FIFO 1 Note: 1 holding time must more than 1 DCLK </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_START_DELAY_STA_DELAY_NOTE</name>
              <description>TCON0_Start_Delay STA delay NOTE: valid only when TCON0_EN == 1 </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_SRC_SEL</name>
              <description>TCON0_SRC_SEL:  
000: DE0 
001: reserved 
010: reserved 
011: reserved 
100: Test Data all 0 
101: Test Data all 1 
11x: reserved  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_DCLK_REG</name>
          <description>TCON0 data clock register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000007F</resetMask>
          <fields>
            <field>
              <name>TCON0_DCLK_EN</name>
              <description>LCLK_EN[3:0] :TCON0 clock enable 4'h0, 'h4,4'h6,4'ha7:dclk_en=0;dclk1_en=0;dclk2_en=0;dclkm2_en=0;               4'h1: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 0;               4'h2: dclk_en = 1; dclk1_en = 0; dclk2_en = 0; dclkm2_en = 1;               4'h3: dclk_en = 1; dclk1_en = 1; dclk2_en = 0; dclkm2_en = 0;               4'h5: dclk_en = 1; dclk1_en = 0; dclk2_en = 1; dclkm2_en = 0;               4'h8,4'h9,4'ha,4'hb,4'hc,4'hd,4'he,4'hf:             dclk_en   = 1;             dclk1_en  = 1;             dclk2_en  = 1;             dclkm2_en = 1; </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_DCLK_DIV</name>
              <description>Tdclk = Tsclk * DCLKDIV Note:  1.if dclk1&amp;dclk2 used DCLKDIV &gt;=6 2.if dclk only DCLKDIV &gt;=1 </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_FRM_CTL_REG</name>
          <description>TCON FRM control register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000073</resetMask>
          <fields>
            <field>
              <name>TCON0_FRM_EN</name>
              <description>0:disable 1:enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_FRM_MODE_R</name>
              <description>0: 6bit frm output 
1: 5bit frm output </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_G</name>
              <description>0: 6bit frm output 
1: 5bit frm output </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_MODE_B</name>
              <description>0: 6bit frm output 
1: 5bit frm output </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_6bit</name>
                  <description>6bit frm output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5bit</name>
                  <description>5bit frm output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_FRM_TEST</name>
              <description>00: FRM 
01: half 5/6bit, half FRM 
10: half 8bit, half FRM 
11: half 8bit, half 5/6bit </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>6</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_SEED_REG[%s]</name>
          <description>TCON FRM seed register  (N=0,1,2,3,4,5)</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SEED_VALUE</name>
              <description>N=0: Pixel_Seed_R N=1: Pixel_Seed_G N=2: Pixel_Seed_B N=3: Line_Seed_R N=4: Line_Seed_G N=5: Line_Seed_B Note: avoid set it to 0 </description>
              <bitRange>[24:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>4</dim>
          <dimIncrement>4</dimIncrement>
          <name>TCON0_FRM_TAB_REG[%s]</name>
          <description>TCON FRM table register  (N=0,1,2,3)</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRM_TABLE_VALUE</name>
              <description></description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_GCTL_REG</name>
          <description>TCON0_GCTL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000001</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: disable 
1: enable When it`s disabled, the module will be reset to idle state. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO_MAP_SEL</name>
              <description>0: TCON0 
1: TCON1 Note: this bit determined which IO_INV/IO_TRI are valid </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TCON0</name>
                  <description>TCON0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCON1</name>
                  <description>TCON1 Note: this bit determined which IO_INV/IO_TRI are valid</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_GINT0_REG</name>
          <description>TCON0_GINT0_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFC00FE00</resetMask>
          <fields>
            <field>
              <name>TCON0_VB_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LINE_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_TRI_FINISH_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_TRI_COUNTER_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_LINE_INT_FLAG</name>
              <description>Trigger when SY0 match the current TCON0 scan line Write 0 to clear it. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line Write 0 to clear it. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_TRI_FINISH_INT_FLAG</name>
              <description>Trigger when cpu trigger mode finish Write 0 to clear it. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_TRI_COUNTER_INT_FLAG</name>
              <description>Trigger when tri counter reache this value Write 0 to clear it. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON0_TRI_UNDERFLOW_FLAG</name>
              <description>Only used in dsi video mode, tri when sync by dsi but not finish Write 0 to clear it. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_GINT1_REG</name>
          <description>TCON0_GINT1_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON0_LINE_INT_NUM</name>
              <description>scan line for TCON0 line trigger(including inactive lines) Setting it for the specified line for trigger0. Note: SY0 is writable only when LINE_TRG0 disable. </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_HV_IF_REG</name>
          <description>TCON0 hv panel interface register</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF80000</resetMask>
          <fields>
            <field>
              <name>HV_MODE</name>
              <description>0000: 24bit/1cycle parallel mode 
1000: 8bit/3cycle RGB serial mode(RGB888) 
1010: 8bit/4cycle Dummy RGB(DRGB) 
1011: 8bit/4cycle RGB Dummy(RGBD) 
1100: 8bit/2cycle YUV serial mode(CCIR656) </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24bit_slash_1cycle_parallel_mode</name>
                  <description>24bit/1cycle parallel mode</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_3cycle_RGB</name>
                  <description>8bit/3cycle RGB serial mode(RGB888)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_Dummy</name>
                  <description>8bit/4cycle Dummy RGB(DRGB)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_4cycle_RGB</name>
                  <description>8bit/4cycle RGB Dummy(RGBD)</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8bit_slash_2cycle_YUV</name>
                  <description>8bit/2cycle YUV serial mode(CCIR656)</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGB888_SM0</name>
              <description>serial RGB888 mode Output sequence at odd lines of the panel (line 1, 3, 5, 7...) 
00: R G B 
01: B R G 
10: G B R 
11: R G B </description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RGB888_SM1</name>
              <description>serial RGB888 mode Output sequence at even lines of the panel (line 2, 4, 6, 8...) 
00: R G B 
01: B R G 
10: G B R 
11: R G B </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>YUV_SM</name>
              <description>serial YUV mode Output sequence 2-pixel-pair of every scan line 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YUV</name>
              <description>EAV/SAV F line delay 0:F toggle right after active video line 1:delay 2 line(CCIR PAL) 2:delay 3 line(CCIR NTSC) 3:reserved </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCIR_CSC_DIS</name>
              <description>0: enable 
1: disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable Only valid when HV mode is `1100`, select `0` TCON convert source from RGB to YUV</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_POL_REG</name>
          <description>TCON0 IO polarity register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO_OUTPUT_SEL</name>
              <description>0: normal output 
1: register output when set as `1`, d[23:0], io0, io1,io3 sync to dclk </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>register</name>
                  <description>register output when set as `1`, d[23:0], io0, io1,io3 sync to dclk</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCLK_SEL</name>
              <description>000: used DCLK0(normal phase offset) 
001: used DCLK1(1/3 phase offset) 
010: used DCLK2(2/3 phase offset) 
101: DCLK0/2   phase 0 
100: DCLK0/2   phase 90 reserved </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>used_DCLK0_openingparen_normal_phase</name>
                  <description>used DCLK0(normal phase offset)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK1_openingparen_1_slash_3_phase</name>
                  <description>used DCLK1(1/3 phase offset)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>used_DCLK2_openingparen_2_slash_3_phase</name>
                  <description>used DCLK2(2/3 phase offset)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_0</name>
                  <description>DCLK0/2   phase 0</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DCLK0_slash_2_phase_90</name>
                  <description>DCLK0/2   phase 90 reserved</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON0 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_TRI_REG</name>
          <description>TCON0 IO trigger register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON0 output port D[23:0] output enable, with independent bit control: 1s: disable 0s: enable </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_LVDS_ANA0_REG</name>
          <description>TCON LVDS analog register0</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC1FFF333</resetMask>
          <fields>
            <field>
              <name>LVDS0_EN_MB</name>
              <description>lvds0_en_mb enable the bias circuit of the LVDS_Ana module </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_EN_LDO</name>
              <description>lvds0_en_ldo </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_EN_DRVC</name>
              <description>lvds0_en_drvc enable all circuits working when transmitting the data in channel clock of LVDS_tx0 </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_EN_DRV</name>
              <description>lvds0_en_drv enable all circuits working when transmitting the data in channel&lt;3:0&gt; of LVDS_tx0 </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_DRAM_TEST</name>
              <description>Lvds0_reg_dram_test 0:dram test clk disable 1:dram test clk enable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_C</name>
              <description>lvds0_reg_c adjust current flowing through Rload of Rx to change the differential signals amplitude 0:250mV       1:300mV 2:350mV       3:400mV </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_DENC</name>
              <description>lvds0_reg_denc choose data output or PLL test clock output in LVDS_tx  </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_DEN</name>
              <description>lvds0_reg_den choose data output or PLL test clock output in LVDS_tx </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_V</name>
              <description>lvds0_reg_v adjust common mode voltage of the differential signals in five channels single signal high level: 0:1.1V       1:1.19V 2:1.3V       3:1.43V </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_PD</name>
              <description>lvds0_reg_pd fine adjust the slew rate of output data </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_PWSLV</name>
              <description>lvds0_reg_pwslv adjust voltage amplitude of low power in LVDS_Ana </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LVDS0_REG_PWSMB</name>
              <description>lvds0_reg_pwsmb  adjust voltage amplitude of mbias voltage reference in LVDS_Ana </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_LVDS_IF_REG</name>
          <description>TCON0 lvds panel interface register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xBF90001F</resetMask>
          <fields>
            <field>
              <name>TCON0_LVDS_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_EVEN_ODD_DIR</name>
              <description>0: normal 
1: reverse </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>reverse</name>
                  <description>reverse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_DIR</name>
              <description>1: normal 
2: reverse NOTE: LVDS direction  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_MODE</name>
              <description>0: NS mode 
1: JEIDA mode  </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NS_mode</name>
                  <description>NS mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>JEIDA_mode</name>
                  <description>JEIDA mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_BITWIDTH</name>
              <description>0: 24bit 
1: 18bit </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_24bit</name>
                  <description>24bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_18bit</name>
                  <description>18bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_DEBUG_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_DEBUG_MODE</name>
              <description>0: mode0  RANDOM DATA 
1: mode1  output CLK period=7/2 LVDS CLK period </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mode0</name>
                  <description>mode0  RANDOM DATA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>mode1</name>
                  <description>mode1  output CLK period=7/2 LVDS CLK period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_CORRECT_MODE</name>
              <description>0: mode0 
1: mode1 </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>mode0</name>
                  <description>mode0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>mode1</name>
                  <description>mode1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_CLK_SEL</name>
              <description>0: MIPI PLL 
1: TCON0 CLK </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MIPI</name>
                  <description>MIPI PLL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TCON0</name>
                  <description>TCON0 CLK</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_CLK_POLARITY</name>
              <description>0: reverse 
1: normal </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>reverse</name>
                  <description>reverse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>normal</name>
                  <description>normal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_LVDS_DATA_POLARITY</name>
              <description>0: reverse 
1: normal </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_SAFE_PERIOD_REG</name>
          <description>TCON0_SAFE_PERIOD_REG</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>0: unsafe 
1: safe 
2: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
3: safe at 2 and safe at sync active 
4: safe at line </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON1</name>
      <description>TCON1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0D000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON1_CEU_COEF_ADD_REG</name>
            <description>TCON1_CEU_COEF_ADD_REG</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc </description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_CEU_COEF_RANG_REG</name>
            <description>TCON1_CEU_COEF_RANG_REG</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF</name>
                <description>_Range_Min unsigned 8bit value, range of [0,255] </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU</name>
                <description>Coef _Range_Max unsigned 8bit value, range of [0,255] </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_BEGIN_REG</name>
            <description>TCON1 fill data begin register  (N=0,1,2)</description>
            <addressOffset>0x1E8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_BEGIN</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_DATA_REG</name>
            <description>TCON1_FILL_DATA_REG</description>
            <addressOffset>0x1F0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_VALUE</name>
                <description>Fill_Value</description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_END_REG</name>
            <description>TCON1 fill data end register  (N=0,1,2)</description>
            <addressOffset>0x1EC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_END</name>
                <description>Fill_End</description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON1_BASIC0_REG</name>
          <description>TCON1 basic timing register0</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XI</name>
              <description>source width is X+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YI</name>
              <description>source height is Y+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC1_REG</name>
          <description>TCON1 basic timing register1</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>LS_XO</name>
              <description>width is LS_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS_YO</name>
              <description>width is LS_YO+1 NOTE: this version LS_YO =  TCON1_YI </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC2_REG</name>
          <description>TCON1 basic timing register2</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XO</name>
              <description>width is TCON1_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YO</name>
              <description>height is TCON1_YO+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC3_REG</name>
          <description>TCON1 basic timing register3</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>horizontal total time  Thcycle = (HT+1) * Thdclk  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>horizontal back porch  Thbp = (HBP +1) * Thdclk </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC4_REG</name>
          <description>TCON1 basic timing register4</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>horizontal total time (in HD line) Tvt = VT/2 * Th  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>horizontal back porch (in HD line) Tvbp = (VBP +1) * Th </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC5_REG</name>
          <description>TCON1 basic timing register5</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>horizontal Sync Pulse Width (in dclk) Thspw = (HSPW+1) * Tdclk Note: HT&gt;  (HSPW+1) </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>vertical Sync Pulse Width (in lines) Tvspw = (VSPW+1) * Th Note: VT/2 &gt;  (VSPW+1) </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CEU_COEF_MUL_REG_0</name>
          <description>TCON1_CEU_COEF_MUL_REG_0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON1_CEU_CTL_REG</name>
          <description>TCON1_CEU_CTL_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>CEU_en 
0: bypass 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CTL_REG</name>
          <description>TCON1 control register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800001F2</resetMask>
          <fields>
            <field>
              <name>TCON1_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>START_DELAY</name>
              <description>This is for DE1 and DE2 </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_SRC_SEL</name>
              <description>00: reserved 
01: BLUE data(FIFO2 disable,RGB = 0000FF) </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_FILL_CTL_REG</name>
          <description>TCON1 fill data control register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TCON1_FILL_EN</name>
              <description>0: bypass 
1: enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>bypass</name>
                  <description>bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_GCTL_REG</name>
          <description>TCON1_GCTL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: disable 
1: enable When it`s disabled, the module will be reset to idle state. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable When it`s disabled, the module will be reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_GINT0_REG</name>
          <description>TCON1_GINT0_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: disable 
1: enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>trigger when SY1 match the current TCON1 scan line Write 0 to clear it. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_GINT1_REG</name>
          <description>TCON1_GINT1_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_POL_REG</name>
          <description>TCON1 IO polarity register</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2</name>
              <description>Inv 
0: not invert 
1: invert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: not invert 
1: invert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_invert</name>
                  <description>not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>invert</name>
                  <description>invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON1 output port D[23:0] polarity control, with independent bit control: 0s: normal polarity 1s: invert the specify output </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_TRI_REG</name>
          <description>TCON1 IO trigger register</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>1: disable 
0: enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>disable</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>enable</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON1 output port D[23:0] output enable, with independent bit control: 1s: disable 0s: enable </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_PS_SYNC_REG</name>
          <description>TCON1 sync register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_X</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_Y</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_SAFE_PERIOD_REG</name>
          <description>TCON1_SAFE_PERIOD_REG</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFF7</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_LINE</name>
              <description></description>
              <bitRange>[15:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>0: unsafe 
1: safe 
2: safe at ecc_fifo_curr_num &gt; safe_period_fifo_num 
3: safe at 2 and safe at sync active 
4: safe at line </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TSC</name>
      <description>TSC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <name>TSC</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSC_CTLR</name>
            <description>TSC Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_OUTMUXR</name>
            <description>TSC Port Output Multiplex Control Register</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_PCTLR</name>
            <description>TSC Port Control Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>TS_IN_PORT0_CTRL</name>
                <description>TSInPort0Ctrl TS Input Port0 Control 0 - SPI 1 - SSI </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_PPARR</name>
            <description>TSC Port Parameter Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF</resetMask>
            <fields>
              <field>
                <name>TS_IN_PORT0_PAR</name>
                <description>TSInPort0Par TS Input Port0 Parameters Bit Definition 7:5 Reserved 4 SSI data order 
0: MSB first for one byte data 
1: LSB first for one byte data 3 CLOCK signal polarity 0 : Rise edge capturing 
1: Fall edge capturing  2 ERROR signal polarity 
0: High level active 
1: Low level active 1 DVALID signal polarity 
0: High level active 
1: Low level active 0 PSYNC signal polarity 
0: High level active 
1: Low level active       </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_STAR</name>
            <description>TSC Status Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_TSFMUXR</name>
            <description>TSC TSF Input Multiplex Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xF</resetMask>
            <fields>
              <field>
                <name>TSF0_INPUT_MUX_CTRL</name>
                <description>TSF0InputMuxCtrl TSF0 Input Multiplex Control 0x0 -Data from TSG 0x1 -Data from TS IN Port0 Others - Reserved   </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSD</name>
          <addressOffset>0x180</addressOffset>
          <register>
            <name>TSD_CTLR</name>
            <description>TSD Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3</resetMask>
            <fields>
              <field>
                <name>DESC_ARITH</name>
                <description>DescArith Descramble Arithmetic 
00: DVB CSA V1.1 Others: Reserved </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DVB</name>
                    <description>DVB CSA V1.1 Others: Reserved</description>
                    <value>0b00</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWIR</name>
            <description>TSD Control Word Index Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x73</resetMask>
            <fields>
              <field>
                <name>CWI</name>
                <description>Control Word Index This value is the Control index for Control word access.  Range is from 0x00 to 0x7. </description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CWII</name>
                <description>Control Word Internal Index 0 - Odd Control Word Low 32-bit, OCW[31:0]; 1 - Odd Control Word High 32-bit, OCW[63:32]; 2 - Even Control Word Low 32-bit, ECW[31:0]; 3 - Even Control Word High 32-bit, ECW[63:0];  </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWR</name>
            <description>TSD Control Word Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>CWD</name>
                <description>Content of Control Word corresponding to the TSD_CWIR value </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_STAR</name>
            <description>TSD Status Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
        </cluster>
        <cluster>
          <name>TSF0</name>
          <addressOffset>0x80</addressOffset>
          <register>
            <name>TSF_CBBAR</name>
            <description>TSF Channel Buffer Base Address Register</description>
            <addressOffset>0x50</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSF_BUF_B_ADDR</name>
                <description>TSFBufBAddr Data Buffer Base Address for Channel It is 4-word (16Bytes) align address. The LSB four bits should be zero.  </description>
                <bitRange>[27:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBRPR</name>
            <description>TSF Channel Buffer Read Pointer Register</description>
            <addressOffset>0x5C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFRDPTR</name>
                <description>BufRdPtr Data Buffer Read Pointer (in Bytes) This pointer should be changed by software after the data of buffer is read.  </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBSZR</name>
            <description>TSF Channel Buffer Size Register</description>
            <addressOffset>0x54</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x31FFFFF</resetMask>
            <fields>
              <field>
                <name>CHDMA_INT_THD</name>
                <description>CHDMAIntThd DMA Interrupt Threshold for Channel The unit is TS packet size. When received packet (has also stored in DRAM) size is beyond (&gt;=) threshold value, the corresponding channel interrupt is generated to CPU. TSC should count the new received packet again, when exceed the specified threshold value, one new interrupt is generated again. 
0: 1/2 data buffer packet size 
1: 1/4 data buffer packet size 
2: 1/8 data buffer packet size 
3: 1/16 data buffer packet size </description>
                <bitRange>[25:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1_slash_8_data</name>
                    <description>1/8 data buffer packet size</description>
                    <value>2</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_16_data</name>
                    <description>1/16 data buffer packet size</description>
                    <value>3</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CH_BUF_PKT_SZ</name>
                <description>CHBufPktSz Data Buffer Packet Size for Channel The exact buffer size of buffer is N+1 bytes.  The maximum buffer size is 2MB.  This size should be 4-word (16Bytes) aligned. The LSB four bits should be zero. </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBWPR</name>
            <description>TSF Channel Buffer Write Pointer Register</description>
            <addressOffset>0x58</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFWRPTR</name>
                <description>BufWrPtr Data Buffer Write Pointer (in Bytes) This value is changed by hardware, when data is filled into buffer, this pointer is increased.  And this pointer can be set by software, but it should not be changed by software during the corresponding channel is enable.  </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CCTLR</name>
            <description>TSF Channel Control Register</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_CCWIR</name>
            <description>TSF Channel CW Index Register</description>
            <addressOffset>0x48</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>CWIND</name>
                <description>Related Control Word Index Index to the control word used by this channel when Descramble Enable of this channel enable. This value is useless when the corresponding Descramble Enable is `0`.  </description>
                <bitRange>[2:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CDER</name>
            <description>TSF Channel Descramble Enable Register</description>
            <addressOffset>0x38</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DESCEN</name>
                <description>DescEn Descramble Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CENR</name>
            <description>TSF Channel Enable Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILTEREN_FILTER_ENABLE_FOR_CHANNEL</name>
                <description>FilterEn Filter Enable for Channel 0~31 
0: Disable 
1: Enable From Disable to Enable, internal status of the corresponding filter channel will be reset.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CINDR</name>
            <description>TSF Channel Index Register</description>
            <addressOffset>0x3C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1F</resetMask>
            <fields>
              <field>
                <name>CHIND</name>
                <description>Channel Index This value is the channel index for channel private registers access.  Range is from 0x00 to 0x1f. Address range of channel private registers is 0x40~0x7f.  </description>
                <bitRange>[4:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPER</name>
            <description>TSF Channel PES Enable Register</description>
            <addressOffset>0x34</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PESEN</name>
                <description>PESEn PES Packet Enable for Channel 0~31 
0: Disable 
1: Enable These bits should not be changed during the corresponding channel enable.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPIDR</name>
            <description>TSF Channel PID Register</description>
            <addressOffset>0x4C</addressOffset>
            <resetValue>0x1FFF0000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PIDMSK</name>
                <description>Filter PID Mask for Channel </description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PIDVAL</name>
                <description>Filter PID value for Channel  </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CSTAR</name>
            <description>TSF Channel Status Register</description>
            <addressOffset>0x44</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_DIER</name>
            <description>TSF DMA Interrupt Enable Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIE</name>
                <description>DMA Interrupt Enable DMA interrupt enable bits for channel 0~31.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_DISR</name>
            <description>TSF DMA Interrupt Status Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIS</name>
                <description>DMA Interrupt Status DMA interrupt Status bits for channel 0~31. Set by hardware, and can be cleared by software writing `1`. When both these bits and the corresponding DMA Interrupt Enable bits set, the TSF interrupt will generate.   </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OIER</name>
            <description>TSF Overlap Interrupt Enable Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIE</name>
                <description>Overlap Interrupt Enable Overlap interrupt enable bits for channel 0~31. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OISR</name>
            <description>TSF Overlap Interrupt Status Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIS</name>
                <description>Overlap Interrupt Status Overlap interrupt Status bits for channel 0~31. Set by hardware, and can be cleared by software writing `1`. When both these bits and the corresponding Overlap Interrupt Enable bits set, the TSF interrupt will generate.   </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRCR</name>
            <description>TSF PCR Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x11F01</resetMask>
            <fields>
              <field>
                <name>PCRDE</name>
                <description>PCR Detecting Enable 
0: Disable 
1: Enable </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PCRCIND</name>
                <description>Channel Index m for Detecting PCR packet (m from 0 to 31) </description>
                <bitRange>[12:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PCRLSB</name>
                <description>PCR Contest LSB 1 bit PCR[0] </description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRDR</name>
            <description>TSF PCR Data Register</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PCRMSB</name>
                <description>PCR Data High 32 bits PCR[33:1]  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PPR</name>
            <description>TSF Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFFFF0383</resetMask>
            <fields>
              <field>
                <name>LOST_SYNC_THD</name>
                <description>LostSyncThd Lost Sync Packet Threshold It is used for packet sync lost by checking the value of sync byte. </description>
                <bitRange>[31:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCTHD</name>
                <description>SyncThd Sync Packet Threshold It is used for packet sync by checking the value of sync byte. </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNC_BYTE_VAL</name>
                <description>SyncByteVal Sync Byte Value This is the value of sync byte used in the TS Packet. </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCMTHD</name>
                <description>SyncMthd Packet Sync Method 
0: By PSYNC signal 
1: By sync byte 
2: By both PSYNC and Sync Byte 
3: Reserved </description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>By_both</name>
                    <description>By both PSYNC and Sync Byte</description>
                    <value>2</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SYNC_BYTE_POS</name>
                <description>SyncBytePos Sync Byte Position 
0: the 1st byte position 
1: the 5th byte position Notes: This bit is only used for 192 bytes packet size. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>the 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>the 5th byte position Notes: This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>PktSize Packet Size Byte Size for one TS packet 
0: 188 bytes 
1: 192 bytes 
2: 204 bytes 
3: Reserved  </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_204</name>
                    <description>204 bytes</description>
                    <value>2</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSG</name>
          <addressOffset>0x40</addressOffset>
          <register>
            <name>TSG_BBAR</name>
            <description>TSG Buffer Base Address Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_BASE</name>
                <description>TSGBufBase Buffer Base Address This value is a start address of TSG buffer.  Note: This value should be 4-word (16Bytes) align, and the lowest 4-bit of this value should be zero. </description>
                <bitRange>[27:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BPR</name>
            <description>TSG Buffer Pointer Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_PTR</name>
                <description>TSGBufPtr Data Buffer Pointer for TS Generator Current TS generator data buffer read pointer (in byte unit)  </description>
                <bitRange>[23:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BSZR</name>
            <description>TSG Buffer Size Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_SIZE</name>
                <description>TSGBufSize Data Buffer Size for TS Generator It is in byte unit.  The size should be 4-word (16Bytes) align, and the lowest 4 bits should be zero. </description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_CCR</name>
            <description>TSG Clock Control Register</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSGCDF_N</name>
                <description>TSG Clock Divide Factor (N) The Numerator part of TSG Clock Divisor Factor.  </description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSGCDF_D</name>
                <description>TSG Clock Divide Factor (D) The Denominator part of TSG Clock Divisor Factor. Frequency of output clock: Fo = (Fi*(N+1))/(8*(D+1)). Fi is the input special clock of TSC, and D must not less than N.  </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_CTLR</name>
            <description>TSG Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3000307</resetMask>
            <fields>
              <field>
                <name>TSGSTS</name>
                <description>TSGSts Status for TS Generator 
0: IDLE state 
1: Running state 
2: PAUSE state Others: Reserved </description>
                <bitRange>[25:24]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>PAUSE</name>
                    <description>PAUSE state Others: Reserved</description>
                    <value>2</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TSGL_BUF_MODE</name>
                <description>TSGLBufMode Loop Buffer Mode When set to `1`, the TSG external buffer is in loop mode. </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSG_SYNC_BYTE_CHK_EN</name>
                <description>TSGSyncByteChkEn Sync Byte Check Enable Enable/ Disable check SYNC byte fro receiving new packet 
0: Disable 
1: Enable If enable check SYNC byte and an error SYNC byte is receiver, TS Generator would come into PAUSE state. If the correspond interrupt is enable, the interrupt would happen. </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable If enable check SYNC byte and an error SYNC byte is receiver, TS Generator would come into PAUSE state. If the correspond interrupt is enable, the interrupt would happen.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TSG_PAUSE_BIT</name>
                <description>TSGPauseBit Pause Bit for TS Generator Write `1` to pause TS Generator. TS Generator would stop fetch new data from DRAM. After finishing this operation, this bit will clear to zero by hardware. In PAUSE state, write `1` to resume this state. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSG_STOP_BIT</name>
                <description>TSGStopBit Stop Bit for TS Generator Write `1` to stop TS Generator. TS Generator would stop fetch new data from DRAM. The data already in its FIFO should be sent to TS filter. After finishing this operation, this bit will clear to zero by hardware.  </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSG_START_BIT</name>
                <description>TSGStartBit Start Bit for TS Generator Write `1` to start TS Generator. TS Generator would fetch data from DRAM and generate SPI stream to TS filter. This bit will clear to zero by hardware after TS Generator is running. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_PPR</name>
            <description>TSG Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFF0083</resetMask>
            <fields>
              <field>
                <name>SYNC_BYTE_VAL</name>
                <description>SyncByteVal Sync Byte Value This is the value of sync byte used in the TS Packet. </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNC_BYTE_POS</name>
                <description>SyncBytePos Sync Byte Position 
0: the 1st byte position 
1: the 5th byte position Notes: This bit is only used for 192 bytes packet size. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>the 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>the 5th byte position Notes: This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>PktSize Packet Size Byte Size for one TS packet 
0: 188 bytes Others: Reserved  </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TSF_CSR</name>
          <description>TSF_CSR</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x5</resetMask>
          <fields>
            <field>
              <name>TSF</name>
              <description>Enable 
0: Disable TSF Input 
1: Enable TSF Input </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable TSF Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable TSF Input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFGSR</name>
              <description>TSF Global Soft Reset A software writing `1` will reset all status and state machine of TSF. And it`s cleared by hardware after finish reset. A software writing `0` has no effect.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSF_IESR</name>
          <description>TSF_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSFFOIE</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFPPDIE</name>
              <description>TS PCR Packet Detect Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCOIE</name>
              <description>TS PID Filter (TSF) Channel Overlap Interrupt Global Enable 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCDIE</name>
              <description>TS PID Filter (TSF) Channel DMA Interrupt Global Enable 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFFOIS</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Status Write `1` to clear. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSFPPDIS</name>
              <description>TS PCR Packet Found Status When it is `1`, one TS PCR Packet is found. Write `1` to clear. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSFCOIS</name>
              <description>TS PID Filter (TSF) Channel Overlap Status It is global status for 16 channel. It would clear to zero after all channels status bits are clear. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSFCDIS</name>
              <description>TS PID Filter (TSF) Channel DMA status It is global status for 16 channel. It would clear to zero after all channels status bits are clear.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSG_IESR</name>
          <description>TSG_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSGENDIE</name>
              <description>TSGEndIE TS Generator (TSG) End Interrupt Enable 
0: Disable 
1: Enable If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGFFIE</name>
              <description>TS Generator (TSG) Full Finish Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGHFIE</name>
              <description>TS Generator (TSG) Half Finish Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_ERR_SYNC_BYTE_IE</name>
              <description>TSGErrSyncByteIE TS Generator (TSG) Error Sync Byte Interrupt Enable 
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_END_STS</name>
              <description>TSGEndSts TS Generator (TSG) End Status Write `1` to clear. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGFFSTS</name>
              <description>TSGFFSts TS Generator (TSG) Full Finish Status Write `1` to clear. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGHFSTS</name>
              <description>TSGHFSts TS Generator (TSG) Half Finish Status Write `1` to clear. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_ERR_SYNC_BYTE_STS</name>
              <description>TSGErrSyncByteSts TS Generator (TSG) Error Sync Byte Status Write `1` to clear.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>R_TWI</name>
      <description>R_TWI</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TWI_ADDR</name>
          <description>TWI Slave address</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLA</name>
              <description>Slave address 7-bit addressing SLA6, SLA5, SLA4, SLA3, SLA2, SLA1, SLA0 10-bit addressing 1, 1, 1, 1, 0, SLAX[9:8] </description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GCE</name>
              <description>General call address enable 
0: Disable 
1: Enable  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_CCR</name>
          <description>TWI Clock control register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>CLK_M</name>
              <description></description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_N</name>
              <description>The TWI bus is sampled by the TWI at the frequency defined by F0: Fsamp = F 0 = Fin / 2^CLK_N The TWI OSCL output frequency, in master mode, is F1 / 10: F1 = F0 / (CLK_M + 1) Foscl = F1 / 10 = Fin / (2^CLK_N * (CLK_M + 1)*10) For Example  Fin = 48Mhz (APB clock input) For 400kHz full speed 2Wire, CLK_N = 2, CLK_M=2 F0 = 48M/2^2=12Mhz, F1= F0/(10*(2+1)) = 0.4Mhz For 100Khz standard speed 2Wire, CLK_N=2, CLK_M=11 F0=48M/2^2=12Mhz, F1=F0/(10*(11+1)) = 0.1Mhz </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_DATA</name>
          <description>TWI Data byte</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TWI_DATA</name>
              <description>Data byte for transmitting or received </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_DVFSCR</name>
          <description>TWI_DVFSCR</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>MS_PRIORITY</name>
              <description>CPU and DVFS BUSY set priority select  
0: CPU has higher priority  
1: DVFS has higher priority </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CPU</name>
                  <description>CPU has higher priority</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DVFS</name>
                  <description>DVFS has higher priority</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU_BUSY_SET</name>
              <description>CPU Busy set </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DVFC_BUSY_SET</name>
              <description>DVFS Busy set </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_EFR</name>
          <description>TWI Enhance Feature register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>DBN</name>
              <description>Data Byte number follow Read Command Control 0- No Data Byte to be written after read command 1- Only 1 byte data to be written after read command 2- 2 bytes data can be written after read command 3- 3 bytes data can be written after read command </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_LCR</name>
          <description>TWI Line Control register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x3A</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>SCL_STATE</name>
              <description>Current state of TWI_SCL 0 - low 1 - high </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SDA_STATE</name>
              <description>Current state of TWI_SDA 0 - low 1 - high </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_CTL</name>
              <description>TWI_SCL line state control bit When line control mode is enabled (bit[2] set), value of this bit decide the output level of TWI_SCL 0 - output low level 1 - output high level </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_CTL_EN</name>
              <description>TWI_SCL line state control enable When this bit is set, the state of TWI_SCL is control by the value of bit[3]. 0-disable TWI_SCL line control mode 1-enable TWI_SCL line control mode </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_CTL</name>
              <description>TWI_SDA line state control bit When line control mode is enabled (bit[0] set), value of this bit decide the output level of TWI_SDA 0 - output low level 1 - output high level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_CTL_EN</name>
              <description>TWI_SDA line state control enable When this bit is set, the state of TWI_SDA is control by the value of bit[1]. 0-disable TWI_SDA line control mode 1-enable TWI_SDA line control mode </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_SRST</name>
          <description>TWI Software reset</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>SOFT_RST</name>
              <description>Soft Reset Write `1` to this bit to reset the TWI and clear to `0` when completing Soft Reset operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_STAT</name>
          <description>TWI Status register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0xF8</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA</name>
              <description>Status Information Byte Code Status 
0x00: Bus error 
0x08: START condition transmitted 
0x10: Repeated START condition transmitted 
0x18: Address + Write bit transmitted, ACK received 
0x20: Address + Write bit transmitted, ACK not received 
0x28: Data byte transmitted in master mode, ACK received 
0x30: Data byte transmitted in master mode, ACK not received 
0x38: Arbitration lost in address or data byte 
0x40: Address + Read bit transmitted, ACK received 
0x48: Address + Read bit transmitted, ACK not received 
0x50: Data byte received in master mode, ACK transmitted 
0x58: Data byte received in master mode, not ACK transmitted 
0x60: Slave address + Write bit received, ACK transmitted 
0x68: Arbitration lost in address as master, slave address + Write bit received, ACK transmitted 
0x70: General Call address received, ACK transmitted 
0x78: Arbitration lost in address as master, General Call address received, ACK transmitted 
0x80: Data byte received after slave address received, ACK transmitted 
0x88: Data byte received after slave address received, not ACK transmitted 
0x90: Data byte received after General Call received, ACK transmitted 
0x98: Data byte received after General Call received, not ACK transmitted 
0xA0: STOP or repeated START condition received in slave mode 
0xA8: Slave address + Read bit received, ACK transmitted 
0xB0: Arbitration lost in address as master, slave address + Read bit received, ACK transmitted 
0xB8: Data byte transmitted in slave mode, ACK received 
0xC0: Data byte transmitted in slave mode, ACK not received 
0xC8: Last byte transmitted in slave mode, ACK received 
0xD0: Second Address byte + Write bit transmitted, ACK received 
0xD8: Second Address byte + Write bit transmitted, ACK not received 
0xF8: No relevant status information, INT_FLAG=0 Others: Reserved </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_XADDR</name>
          <description>TWI Extended slave address</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLAX</name>
              <description>Extend Slave Address SLAX[7:0] </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI__CNTR</name>
          <description>TWI__CNTR</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>INT_EN</name>
              <description>Interrupt Enable 1`b0: The interrupt line always low 1`b1: The interrupt line will go high when  is set. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUS_EN</name>
              <description>TWI Bus Enable 1`b0: The TWI bus inputs ISDA/ISCL are ignored and the TWI Controller will not respond to any address on the bus 1`b1: The TWI will respond to calls to its slave address - and to the general call address if the  bit in the ADDR register is set. Notes: In master operation mode, this bit should be set to `1` </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_STA</name>
              <description>Master Mode Start When M_STA is set to `1`, TWI Controller enters master mode and will transmit a START condition on the bus when the bus is free. If the M_STA bit is set to `1` when the TWI Controller is already in master mode and one or more bytes have been transmitted, then a repeated START condition will be sent. If the M_STA bit is set to `1` when the TWI is being accessed in slave mode, the TWI will complete the data transfer in slave mode then enter master mode when the bus has been released. The M_STA bit is cleared automatically after a START condition has been sent,writing a `0` to this bit has no effect. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_STP</name>
              <description>Master Mode Stop If M_STP is set to `1` in master mode, a STOP condition is transmitted on the TWI bus. If the M_STP bit is set to `1` in slave mode, the TWI will behave as if a STOP condition has been received, but no STOP condition will be transmitted on the TWI bus. If both and  bits are set, the TWI will first transmit the STOP condition (if in master mode) then transmit the START condition. The M_STP bit is cleared automatically,writing a `0` to this bit has no effect. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_FLAG</name>
              <description>Interrupt Flag INT_FLAG is automatically set to `1` when any of 28 (out of the possible 29) states is entered (see `STAT Register` below). The only state that does not set INT_FLAG is state F8h. If the  bit is set, the interrupt line goes high when IFLG is set to `1`. If the TWI is operating in slave mode, data transfer is suspended when INT_FLAG is set and the low period of the TWI bus clock line (SCL) is stretched until `1` is written to INT_FLAG. The TWI clock line is then released and the interrupt line goes low. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A_ACK</name>
              <description>Assert Acknowledge When A_ACK is set to `1`, an Acknowledge (low level on SDA) will be sent during the acknowledge clock pulse on the TWI bus if: 1. Either the whole of a matching 7-bit slave address or the first or the second byte of a matching 10-bit slave address has been received. 2. The general call address has been received and the  bit in the ADDR register is set to `1`. 3. A data byte has been received in master or slave mode. When A_ACK is `0`, a Not Acknowledge (high level on SDA) will be sent when a data byte is received in master or slave mode. If A_ACK is cleared to `0` in slave transmitter mode, the byte in the DATA register is assumed to be the `last byte`. After this byte has been transmitted, the TWI will enter state C8h then return to the idle state (status code F8h) when  is cleared. The TWI will not respond as a slave unless A_ACK is set. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="R_TWI">
      <name>TWI0</name>
      <description>TWI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2AC00</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="R_TWI">
      <name>TWI1</name>
      <description>TWI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2B000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="R_TWI">
      <name>TWI2</name>
      <description>TWI2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2B400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>UART0</name>
      <description>UART0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the  is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration (except for the  bit) and baudrate register ( and ) when the UART is busy ( [0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( [0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select ( ) /  ( ) and ( ) 
1: Select ( ) and  ( ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen_</name>
                  <description>Select ( ) /  ( ) and ( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen__and</name>
                  <description>Select ( ) and  ( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by [4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( [6] set to one) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( [0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the [5] is to reverse the [4].  
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( [0 ] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 ( [1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.   If in UART mode(SIR_MODE=Disable),it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of  bits.  If in infrared mode(SIR_MODE=Enable),it is set whenever the serial input, sir_in,is continuously pulsed to logic `0` for longer than the sum of  bits.Abreak condition on serial input causes one and only one character,consisting of all zeros,to be received by the UART.  In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data.  In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error ( ) bit ( [3]) is set if a break interrupt has occurred, as indicated by  (BI) bit ( [4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the  (PEN) bit ( [3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the  (PE) bit ( [2]) is set if a break interrupt has occurred, as indicated by (BI) bit ( [4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 0:IrDA SIR Mode disable 1:IrDA SIR Mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( [5] set to zero), the rts_n signal is set low by programming [1] ( ) to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( [5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when [1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0 dtr_n de-asserted (logic 1) 1 dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in ( [4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port . The data in this register is valid only if the  (DR) bit in the  ( ) is set.  If in FIFO mode and FIFOs are enabled ( [0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART_RFL</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port . Data should only be written to the THR when the THR Empty ( ) bit ( [5]) is set.  If in FIFO mode and FIFOs are enabled ( [0] = 1) and  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART1</name>
      <description>UART1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the  is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration (except for the  bit) and baudrate register ( and ) when the UART is busy ( [0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( [0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select ( ) /  ( ) and ( ) 
1: Select ( ) and  ( ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen_</name>
                  <description>Select ( ) /  ( ) and ( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen__and</name>
                  <description>Select ( ) and  ( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by [4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( [6] set to one) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( [0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the [5] is to reverse the [4].  
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( [0 ] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 ( [1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.   If in UART mode(SIR_MODE=Disable),it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of  bits.  If in infrared mode(SIR_MODE=Enable),it is set whenever the serial input, sir_in,is continuously pulsed to logic `0` for longer than the sum of  bits.Abreak condition on serial input causes one and only one character,consisting of all zeros,to be received by the UART.  In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data.  In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error ( ) bit ( [3]) is set if a break interrupt has occurred, as indicated by  (BI) bit ( [4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the  (PEN) bit ( [3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the  (PE) bit ( [2]) is set if a break interrupt has occurred, as indicated by (BI) bit ( [4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 0:IrDA SIR Mode disable 1:IrDA SIR Mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( [5] set to zero), the rts_n signal is set low by programming [1] ( ) to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( [5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when [1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0 dtr_n de-asserted (logic 1) 1 dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in ( [4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port . The data in this register is valid only if the  (DR) bit in the  ( ) is set.  If in FIFO mode and FIFOs are enabled ( [0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART_RFL</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port . Data should only be written to the THR when the THR Empty ( ) bit ( [5]) is set.  If in FIFO mode and FIFOs are enabled ( [0] = 1) and  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART2</name>
      <description>UART2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the  is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration (except for the  bit) and baudrate register ( and ) when the UART is busy ( [0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( [0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select ( ) /  ( ) and ( ) 
1: Select ( ) and  ( ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen_</name>
                  <description>Select ( ) /  ( ) and ( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen__and</name>
                  <description>Select ( ) and  ( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by [4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( [6] set to one) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( [0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the [5] is to reverse the [4].  
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( [0 ] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 ( [1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.   If in UART mode(SIR_MODE=Disable),it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of  bits.  If in infrared mode(SIR_MODE=Enable),it is set whenever the serial input, sir_in,is continuously pulsed to logic `0` for longer than the sum of  bits.Abreak condition on serial input causes one and only one character,consisting of all zeros,to be received by the UART.  In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data.  In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error ( ) bit ( [3]) is set if a break interrupt has occurred, as indicated by  (BI) bit ( [4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the  (PEN) bit ( [3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the  (PE) bit ( [2]) is set if a break interrupt has occurred, as indicated by (BI) bit ( [4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 0:IrDA SIR Mode disable 1:IrDA SIR Mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( [5] set to zero), the rts_n signal is set low by programming [1] ( ) to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( [5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when [1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0 dtr_n de-asserted (logic 1) 1 dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in ( [4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port . The data in this register is valid only if the  (DR) bit in the  ( ) is set.  If in FIFO mode and FIFOs are enabled ( [0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART_RFL</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port . Data should only be written to the THR when the THR Empty ( ) bit ( [5]) is set.  If in FIFO mode and FIFOs are enabled ( [0] = 1) and  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART3</name>
      <description>UART3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the  is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration (except for the  bit) and baudrate register ( and ) when the UART is busy ( [0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( [0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select ( ) /  ( ) and ( ) 
1: Select ( ) and  ( ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen_</name>
                  <description>Select ( ) /  ( ) and ( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen__and</name>
                  <description>Select ( ) and  ( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by [4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( [6] set to one) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( [0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the [5] is to reverse the [4].  
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( [0 ] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 ( [1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.   If in UART mode(SIR_MODE=Disable),it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of  bits.  If in infrared mode(SIR_MODE=Enable),it is set whenever the serial input, sir_in,is continuously pulsed to logic `0` for longer than the sum of  bits.Abreak condition on serial input causes one and only one character,consisting of all zeros,to be received by the UART.  In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data.  In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error ( ) bit ( [3]) is set if a break interrupt has occurred, as indicated by  (BI) bit ( [4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the  (PEN) bit ( [3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the  (PE) bit ( [2]) is set if a break interrupt has occurred, as indicated by (BI) bit ( [4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 0:IrDA SIR Mode disable 1:IrDA SIR Mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( [5] set to zero), the rts_n signal is set low by programming [1] ( ) to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( [5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when [1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0 dtr_n de-asserted (logic 1) 1 dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in ( [4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port . The data in this register is valid only if the  (DR) bit in the  ( ) is set.  If in FIFO mode and FIFOs are enabled ( [0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART_RFL</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port . Data should only be written to the THR when the THR Empty ( ) bit ( [5]) is set.  If in FIFO mode and FIFOs are enabled ( [0] = 1) and  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART4</name>
      <description>UART4</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C29000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the  is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration (except for the  bit) and baudrate register ( and ) when the UART is busy ( [0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( [0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select ( ) /  ( ) and ( ) 
1: Select ( ) and  ( ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen_</name>
                  <description>Select ( ) /  ( ) and ( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen__and</name>
                  <description>Select ( ) and  ( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by [4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( [6] set to one) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( [0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the [5] is to reverse the [4].  
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( [0 ] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 ( [1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.   If in UART mode(SIR_MODE=Disable),it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of  bits.  If in infrared mode(SIR_MODE=Enable),it is set whenever the serial input, sir_in,is continuously pulsed to logic `0` for longer than the sum of  bits.Abreak condition on serial input causes one and only one character,consisting of all zeros,to be received by the UART.  In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data.  In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error ( ) bit ( [3]) is set if a break interrupt has occurred, as indicated by  (BI) bit ( [4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the  (PEN) bit ( [3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the  (PE) bit ( [2]) is set if a break interrupt has occurred, as indicated by (BI) bit ( [4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 0:IrDA SIR Mode disable 1:IrDA SIR Mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( [5] set to zero), the rts_n signal is set low by programming [1] ( ) to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( [5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when [1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0 dtr_n de-asserted (logic 1) 1 dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in ( [4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port . The data in this register is valid only if the  (DR) bit in the  ( ) is set.  If in FIFO mode and FIFOs are enabled ( [0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART_RFL</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port . Data should only be written to the THR when the THR Empty ( ) bit ( [5]) is set.  If in FIFO mode and FIFOs are enabled ( [0] = 1) and  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>R-UART</name>
      <description>R-UART</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High Upper 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low Lower 8 bits of a 16-bit, read/write, Divisor Latch register that contains the baud rate divisor for the UART. This register may only be accessed when the  bit ( [7]) is set and the UART is not busy ( [0] is zero). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows: baud rate = (serial clock freq) / (16 * divisor). Note that with the Divisor Latch Registers ( and ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the  is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation. 
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation. 
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode 
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert 
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert 
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user using HALT[1] to change the baudrate or LCR configuration, write 1 to update the configuration and waiting this bit self clear to 0 to finish update process. Write 0 to this bit has no effect. 
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change LCR register configuration (except for the  bit) and baudrate register ( and ) when the UART is busy ( [0] is 1). 
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is use to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled. 0 : Halt TX disabled 1 : Halt TX enabled Note: If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts. 
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled. 
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types: 
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writeable only when UART is not busy ( [0] is zero) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( and ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers. 
0: Select ( ) /  ( ) and ( ) 
1: Select ( ) and  ( ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen_</name>
                  <description>Select ( ) /  ( ) and ( )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select__openingparen___closingparen__and</name>
                  <description>Select ( ) and  ( )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in , as determined by [4], the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( [6] set to one) the sir_out_n line is continuously pulsed. When in , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writeable only when UART is not busy ( [0] is zero) and always writable readable. This is used to select between even and odd parity, when parity is enabled (PEN set to one). Setting the [5] is to reverse the [4].  
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writeable only when UART is not busy ( [0 ] is zero) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively. 
0: parity disabled 
1: parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>parity_disabled</name>
                  <description>parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity_enabled</name>
                  <description>parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If set to zero, one stop bit is transmitted in the serial data. If set to one and the data bits are set to 5 ( [1:0] set to zero) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit. 
0: 1 stop bit 
1: 1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when  ( [1:0]) is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writeable only when UART is not busy ( [0] is zero) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected areas follows: 
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the LSR register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register. If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.   If in UART mode(SIR_MODE=Disable),it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of  bits.  If in infrared mode(SIR_MODE=Enable),it is set whenever the serial input, sir_in,is continuously pulsed to logic `0` for longer than the sum of  bits.Abreak condition on serial input causes one and only one character,consisting of all zeros,to be received by the UART.  In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI bit. In the non-FIFO mode, the BI indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data.  In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the Framing Error ( ) bit ( [3]) is set if a break interrupt has occurred, as indicated by  (BI) bit ( [4]). 
0: no framing error 1:framing error Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_framing</name>
                  <description>no framing error 1:framing error Reading the LSR clears the FE bit.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the  (PEN) bit ( [3]) is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the  (PE) bit ( [2]) is set if a break interrupt has occurred, as indicated by (BI) bit ( [4]). 
0: no parity error 
1: parity error Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_parity</name>
                  <description>no parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>parity</name>
                  <description>parity error Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE bit is set when a new character arrives in the receiver before the previous character was read from the RBR. When this happens, the data in the RBR is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost. 
0: no overrun error 
1: overrun error Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_overrun</name>
                  <description>no overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overrun</name>
                  <description>overrun error Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the RBR or the receiver FIFO. 
0: no data ready 
1: data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_data</name>
                  <description>no data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>data</name>
                  <description>data ready This bit is cleared when the RBR is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable 0:IrDA SIR Mode disable 1:IrDA SIR Mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable (AFCE) bit is set, Auto Flow Control features are enabled. 
0: Auto Flow Control Mode disabled 
1: Auto Flow Control Mode enabled </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Auto Flow Control Mode disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Auto Flow Control Mode enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode 
0: Normal Mode 
1: Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, [6] set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, [6] set to one), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( [5] set to zero), the rts_n signal is set low by programming [1] ( ) to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( [5] set to one) and FIFOs enable (FCR[0] set to one), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when [1] is set low. 
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0) Note that in  ( [4] set to one), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the Data Terminal Ready (dtr_n) output. The value written to this location is inverted and driven out on dtr_n. 0 dtr_n de-asserted (logic 1) 1 dtr_n asserted (logic 0) The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in ( [4] set to one), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set. 
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set. 
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART. 
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0) In  ( [4] set to one), DSR is the same as [0] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear to Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART. 
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0) In  ( [4] = 1), CTS is the same as  [1] ( ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read. 
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR Reading the MSR clears the DDCD bit. Note: Ff the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read. 
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read. 
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR Reading the MSR clears the DDSR bit. In  ( [4] = 1), DDSR reflects changes on [0] ( ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read. 
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR Reading the MSR clears the DCTS bit. In  ( [4] = 1), DCTS reflects changes on [1] ( ). Note: If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset isremoved if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port . The data in this register is valid only if the  (DR) bit in the  ( ) is set.  If in FIFO mode and FIFOs are enabled ( [0] set to one), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART_RFL</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port . Data should only be written to the THR when the THR Empty ( ) bit ( [5]) is set.  If in FIFO mode and FIFOs are enabled ( [0] = 1) and  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any attempt to write data when the FIFO is full results in the write data being lost. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full. 
0: Receive FIFO not full 
1: Receive FIFO Full This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries. 
0: Receive FIFO is empty 
1: Receive FIFO is not empty This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty. 
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full. 
0: Transmit FIFO is full 
1: Transmit FIFO is not full This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit 
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
